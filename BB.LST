TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .file   "bb.asm"
       3                            .width  132
       4                            .option b,d,l,t
       5                            .mnolist
       6                    
       7                    
       8                            .include        "mproc.equ"             ;Mproc equates
       9                            .include        "disp.equ"              ;Display proc equates
      10                            .include        "gsp.equ"               ;Gsp asm equates
      11                            .include        "sys.equ"
      12                            .include        "imgtbl.glo"
      13                            .include        "imgtblp.glo"
      14                            .include        "imgpalp.asm"
      15                            .include        "game.equ"
      16                            .include        "audit.equ"
      17                            .include        "shawn.hdr"             ;Macros
      18                            .include        "court.tbl"
      19                            .include        "crowd.tbl"
      20                            .asg            0,SEQT
      21                            .include        "plyr.equ"
      22                    
      23                    
      24                    
      25                            .ref    snd_update
      26                            .ref    SOUNDSUP
      27                            .ref    QSNDRST
      28                    
      29 00000000     f9fe  tip_snd         .word   0f9feH,175,0818dH,0     ;Here's the tip
      30 00000040     f3ff  tuneq1_snd      .word   0f3ffH,08H,08002H,0     ;Quarter 1 tune
      31 00000080     f31f  eat_snd         .word   0f31fH,010H,080a7H,0    ;Suck up credit snd
      32 000000c0     f3ff  organ1_snd      .word   0f3ffH,08H,080aeH,0
      33 00000100     f3ff  organ2_snd      .word   0f3ffH,08H,080afH,0
      34                    
      35                    
      36                    
      37                            .ref    plyr_tourn
      38                            .ref    EB_H,JTO_H                      ;RA_H
      39                            .ref    original_names
      40                            .ref    fire_flags
      41                            .ref    pal_set
      42                            .ref    pal_find
      43                            .ref    RNDPER
      44                            .ref    TWOPLAYERS
      45                    
      46                            .ref    team1_control
      47                            .ref    team2_control
      48                            .ref    BTIME
      49                            .ref    plyrnumonfire
      50                            .ref    next_call                       ;# baskets before next score call
      51                            .ref    last_name_time
      52                            .ref    player_names
      53                            .ref    CYCLE_TABLE
      54                            .ref    pleasewt
      55                            .ref    prt_credits
      56                            .ref    clock_speed
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    2

      57                            .ref    _4plyrsingame
      58                            .ref    snd_play1ovr
      59                            .ref    winningteam
      60                            .ref    winner_stays_on
      61                    
      62                            .ref    plyrbighead
      63                            .ref    idiot_bits
      64                            .ref    cntl_team,cntl_team_last,idiot_box
      65                            .ref    bracket_drw
      66                            .ref    sc_proc
      67                            .ref    ballpnumlast
      68                            .ref    ballprcv_p
      69                            .ref    inbound
      70                            .ref    ballsclastp
      71                            .ref    LED_00,LED_MAX
      72                            .ref    process_dispatch,cntrs_delay
      73                            .ref    gmqrtr,refill_turbo
      74                            .ref    plyr_lost
      75                            .ref    tm1set,tm2set
      76                    
      77                            .ref    CCOIN,RCOIN,SERVICE,SLAM_SW,XCOIN,LCOIN,DIAG
      78                    
      79                            .ref    CR_STRTP,CR_CONTP,P_START,P_CONT,GET_ADJ
      80                            .ref    dpageflip
      81                            .ref    conttimers
      82                            .ref    WIPEOUT,cr_cntrs_update
      83                            .ref    ENTERON
      84                    
      85                            .ref    LOWZ,BAKBITS
      86                            .ref    FONT7A,PALFRAM
      87                            .ref    UNIT_CLR
      88                            .ref    initials_entry
      89                            .ref    ISHSTD,INITIALS
      90                            .ref    hisclong
      91                    
      92                            .ref    gndstat,gndpos_t
      93                            .ref    STRCNRM
      94                            .ref    WDOGRAM
      95                            .ref    BAKMODS
      96                            .ref    STRLNRMO,HEXTOASC,WRLD,STRCNRMO,RD15FONT
      97                            .ref    FLASHME,RD7FONT
      98                            .ref    RNDRNG0
      99                            .ref    INIT_TAB
     100                            .ref    IRQSKYE
     101                            .ref    init_all,GET_AUD
     102                            .ref    READ_DIP
     103                            .ref    POWERTST
     104                            .ref    FRANIM,FRANIMQ
     105                            .ref    OBJOFF,OBJON,pal_getf
     106                            .ref    GETCPNT,BGND_UD1
     107                            .ref    AUD,AUD1,aud_addnumplyrs
     108                            .ref    prt_cr_timers
     109                    
     110                            .ref    PSTATUS
     111                            .ref    P1DATA,P2DATA,P3DATA,P4DATA
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    3

     112                            .ref    plyrobj_t,plyrproc_t
     113                    
     114                            .ref    scores,game_time,prt_top_scores
     115                            .ref    shot_clock,clock_strt,score_add,score_showtvpanel
     116                            .ref    update_scorebrd
     117                            .ref    clear_player_stats,inc_player_stat
     118                            .ref    winner_stays_box
     119                    
     120                            .ref    plyr_start
     121                            .ref    joy_read
     122                            .ref    ball_main
     123                            .ref    gndx
     124                            .ref    team1,team2
     125                            .ref    oteam1
     126                            .ref    game_purchased
     127                            .ref    security_chk
     128                            .ref    assist_delay,assist_plyr
     129                    
     130                            .ref    CKDIAG,POWERCMOS,amode_start
     131                            .ref    dirqtimer
     132                    
     133                            .ref    system_restoregame,io_init
     134                    
     135                    
     136                    
     137                            .def    init_t1a,init_t2a,init_t3a,init_t4a
     138                            .def    timertcnt,PSTATUS2,COLRPRC
     139                            .def    OWINDOW,CWINDOW
     140                            .def    mainlp, swstacktop, swstack_p, PCMOSRET
     141                            .DEF    COURT
     142                    
     143                    
     144                    
     145                            .if     DEBUG
     146                            BSSX    SLDEBUG         ,16     ;Shawn's debug
     147                            BSSX    slowmotion      ,16     ;!0=Frames of delay for slow motion
     148                            .endif
     149                    
     150 00000140                   BSSX    PCNT            ,16     ;Main loop cnt
     151                    
     152 00000140                   BSSX    swstack_p       ,32     ;*Stack position
     153 00000140                   BSSX    swstackbot      ,16*64  ;Bottom of stack
     154 00000430                   .bss    swstacktop      ,0      ;Top of stack
     155                    
     156 00000140                   BSSX    COLRTEMP        ,16*16  ;RAM COPY OF CYCLING COLORS
     157                    
     158 00000140                   BSSX    GAMSTATE        ,16     ;Game state: See game.equ
     159                    
     160 00000140                   BSSX    HALT            ,16     ;FREEZE ALL OBJECTS (NO VEL UPDATE)
     161 00000140                   BSSX    NO_START        ,16     ;FLAG 0=OKAY, 1=NOT RIGHT NOW.
     162                    
     163 00000140                   BSSX    PSTATUS2        ,16     ;Player has started game bits (0-3)
     164                                                            ;used to decide if this player must
     165                                                            ;pay 2 credits or just 1 credit to
     166                                                            ;start!
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    4

     167                    
     168 00000140                   BSSX    WSPEED          ,16
     169 00000140                   BSSX    WFLG            ,16     ;0=NOT ON, 1=YES IT IS ON
     170 00000590                   .bss    WNDWFLG         ,16     ;0=WINDOW SHOULD CLOSE, 1=NO WINDOW
     171 00000140                   BSSX    OBJPTR          ,32     ;PNTR FOR WINDOW OBJECT
     172                    
     173                    
     174 000005c0                   .bss    PALTMP          ,13*16*2 ;ALLOCATE 2 X COLOR AREA IN RAM
     175                    
     176 00000760                   .bss    bigcrwd1_ptr,32 ;Big background crowd lft side
     177 00000780                   .bss    bigcrwd2_ptr,32 ;Big background crowd middle
     178 000007a0                   .bss    bigcrwd3_ptr,32 ;Big background crowd rgt side
     179 000007c0                   .bss    rimlf,32        ;rim/net left front img pntr for animation
     180 000007e0                   .bss    rimlb,32        ;rim/net left back
     181 00000800                   .bss    rimrf,32        ;rim/net rgt front
     182 00000820                   .bss    rimrb,32        ;rim/net rgt back
     183 00000840                   .bss    crwd1_ptr,32    ;lower left crowd ptr at top of court
     184 00000860                   .bss    crwd2_ptr,32    ;lower row rgt side
     185 00000880                   .bss    crwd3_ptr,32    ;2nd row, left side
     186 000008a0                   .bss    crwd4_ptr,32    ;2nd row, rgt side
     187 000008c0                   .bss    crwd5_ptr,32    ;3nd row, left side
     188 000008e0                   .bss    crwd6_ptr,32    ;3nd row, rgt side
     189 00000900                   .bss    sl1_ptr,32      ;side left botm
     190 00000920                   .bss    sl2_ptr,32      ;side left
     191 00000940                   .bss    sl3_ptr,32      ;side left
     192 00000960                   .bss    sl4_ptr,32      ;side left
     193 00000980                   .bss    sl5_ptr,32      ;side left
     194 000009a0                   .bss    sl6_ptr,32      ;side left
     195 000009c0                   .bss    sl7_ptr,32      ;side left
     196 000009e0                   .bss    sl8_ptr,32      ;side left top
     197                    
     198 00000a00                   .bss    sr1_ptr,32      ;side rgt botm
     199 00000a20                   .bss    sr2_ptr,32      ;side rgt
     200 00000a40                   .bss    sr3_ptr,32      ;side rgt
     201 00000a60                   .bss    sr4_ptr,32      ;side rgt
     202 00000a80                   .bss    sr5_ptr,32      ;side rgt
     203 00000aa0                   .bss    sr6_ptr,32      ;side rgt
     204 00000ac0                   .bss    sr7_ptr,32      ;side rgt
     205 00000ae0                   .bss    sr8_ptr,32      ;side rgt top
     206                    
     207                    
     208 00000b00                   .bss    ad1_ptr,32   
     209 00000b20                   .bss    ad1ref_ptr,32
     210 00000b40                   .bss    ad2_ptr,32   
     211 00000b60                   .bss    ad2ref_ptr,32
     212                    
     213 00000b80                   .bss    cheer1_ptr,32
     214 00000ba0                   .bss    cheer2_ptr,32
     215                    
     216                            
     217 00000140                   BSSX    crplate_ptr     ,32     ;credit plate ptr
     218 00000140                   BSSX    msg_ram         ,32*4   ;temp ram for flopping message/meters
     219 00000140                   BSSX    name_cnt        ,16     ;Cntr for flopping to player names
     220 00000140                   BSSX    name_flop       ,16     ;Flop name/buyin message 0 or 1
     221 00000140                   BSSX    names           ,32*4   ;pntrs to player imgs
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    5

     222                    
     223 00000140                   BSSX    crt_colors      ,32     ;Random pal for court - NDSP1.ASM
     224 00000140                   BSSX    steals_off      ,16     ;!0=ticks until steals can happen
     225 00000140                   BSSX    pushing_delay   ,16     ;!0=keep ball if pushed
     226 00000140                   BSSX    pass_off        ,16     ;!0=Don't allow passing
     227 00000140                   BSSX    rebound_delay   ,16     ;!0=Give rebound stat
     228 00000140                   BSSX    crowd_animate   ,16     ;!0=Allow crowd animations
     229                    
     230                    
     231 00000140                   BSSX    timertcnt       ,16     ;Tick count
     232                    
     233 00000140                   BSSX    qtr_purchased   ,16*4   ;# game qtrs credit each player has
     234                    
     235 00000140                   BSSX    newptr          ,32
     236 00000140                   BSSX    newplyrs        ,32*5
     237                    
     238                    
     239                    
     240                    
     241              004c  GND_Y           .equ    116-40  ;Master in NDSP1
     242                    
     243                    
     244 00000140                   .text
     245                    
     246                    
     247                    
     248 00000140            SUBR   init_prog
     249                    
     250 00000140     0360          dint
     251 00000150     0570          setf    16,1,0                  ;Field0 = Word sign extend
     252 00000160     0740          setf    32,0,1                  ;Field1 = Long word
     253 00000170     09ef          movi    STCKST,sp               ;Top of stack
         00000180 010ffff0  
     254                    
     255                            .if     DEBUG
     256                            move    a0,@01e00000H           ;Clr FPGA rom protect
     257                            .endif
     258                    
     259                                                            ;>Manual sound board reset
     260 000001a0     09e0          movi    0fe00h,a0               ;Hit reset bit
         000001b0 0000fe00  
     261 000001d0     0580          move    a0,@SOUND
         000001e0 01d01030  
     262 00000200     09c0          movi    100,a0                  ;Wait for it to catch
         00000210     0064  
     263 00000220     0d80          dsj     a0,$
         00000230     fffe  
     264 00000240     09e0          movi    0ff00h,a0               ;Let it go
         00000250 0000ff00  
     265 00000270     0580          move    a0,@SOUND
         00000280 01d01030  
     266                    
     267 000002a0     07a0          move    @WDOGRAM,a0,L
         000002b0 00000000! 
     268 000002d0     0b60          cmpi    WDOGNUM,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    6

         000002e0 e5d4c3b2  
     269 00000300     cb18          jrne    initp50                 ;Powerup?
     270                    
     271                    
     272                    
     273 00000310     05a0          move    @dirqtimer,a0
         00000320 00000000! 
     274 00000340     0b40          cmpi    400,a0
         00000350     fe6f  
     275 00000360     c907          jrhs    tglnlockup                      ;Main loop died?
     276                    
     277                    
     278                            .if     TUNIT
     279 00000370     05a0          move    @TALKPORT,a0            ;Check if watchdog was real
         00000380 01d00000  
     280 000003a0     1f60          btst    B_WDOG,a0               ;Bit should be low if dog fired
     281 000003b0     cb07          jrnz    tglncont                        ;No watchdog?
     282                            .endif
     283                    
     284 000003c0     1b80          movk    AUDLOCK,a0              ;Watchdog
     285 000003d0     c002          jruc    tglnaud
     286                    
     287 000003e0           tglnlockup
     288                    
     289 000003e0     09c0          movi    AUD_LOCKUP,a0           ;Main loop lockup
         000003f0     005c  
     290 00000400     0d5f  tglnaud calla   AUD1
         00000410 00000000! 
     291                    
     292 00000430           tglncont
     293                    
     294                    
     295 00000430     1b00          movk    AUDSTAT,a0
     296 00000440     0d5f          calla   GET_AUD                 ;0=AMode, 1=Game
         00000450 00000000! 
     297 00000470     4c21          move    a1,a1
     298 00000480     ca08          jrz     WARMSET                 ;Attract mode glitch?
     299                    
     300 00000490           initp50
     301 00000490     0d5f          calla   READ_DIP                ;skip if UJ2 bit 6 set
         000004a0 00000000! 
     302 000004c0     1f20          btst    6,a0
     303 000004d0     cb03          jrnz    tglnnopt
     304 000004e0     c080          jauc    POWERTST                ;board test etc...
         000004f0 00000000! 
     305 00000510           tglnnopt
     306                    
     307                    
     308 00000510            SUBR   WARMSET
     309                    
     310 00000510     0360          dint
     311 00000520     0570          setf    16,1,0                  ;Field0 = Word sign extend
     312 00000530     0740          setf    32,0,1                  ;Field1 = Long word
     313 00000540     09ef          movi    STCKST,sp               ;Top of stack
         00000550 010ffff0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    7

     314                    
     315 00000570     c080          jauc    POWERCMOS
         00000580 00000000! 
     316 000005a0           PCMOSRET
     317                    
     318 000005a0     0d5f          calla   init_all                ;Initialize hardware
         000005b0 00000000! 
     319 000005d0     0d5f          calla   INIT_TAB                ;Reset todays high score table
         000005e0 00000000! 
     320                    
     321                    
     322                            .if     DEBUG
     323                            callr   testcode
     324                            .endif
     325                    
     326                    
     327 00000600     0d5f          calla   CKDIAG
         00000610 00000000! 
     328 00000630     ca09          jrz     main_go                 ;No diag switches closed?
     329                    
     330 00000640                   CREATE  DIAG_PID,DIAG           ;Fire off the diag process
     331 000006c0     c007          jruc    mainlp
     332 000006d0           main_go
     333 000006d0                   CREATE0 amode_start             ;Fire up the attract mode
     334                    
     335                    
     336                    
     337 00000740           mainlp
     338 00000740     0d5f          calla   process_dispatch
         00000750 00000000! 
     339                    
     340 00000770     4dad          move    a13,a13
     341 00000780     ca0b          jrz     mainpok
     342                            .if     DEBUG
     343                            LOCKUP
     344                            eint
     345                            .else
     346 00000790                   CALLERR 10,0
     347                            .endif
     348 00000840           mainpok
     349                    
     350 00000840     07a1          move    @RAND,a1,L              ;>Randomize
         00000850 00000000! 
     351 00000870     6821          rl      a1,a1
     352 00000880     05ae          move    @HCOUNT,a14
         00000890 c00001c0  
     353 000008b0     69c1          rl      a14,a1
     354 000008c0     41e1          add     sp,a1
     355 000008d0     0781          move    a1,@RAND,L
         000008e0 00000000! 
     356                    
     357 00000900     0d5f          calla   cr_cntrs_update         ;And blink the top messages
         00000910 00000000! 
     358 00000930     0d3f          callr   switch_unstack
         00000940     005a  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    8

     359 00000950     0d5f          calla   snd_update              ;Update the sound calls
         00000960 00000000! 
     360 00000980     0d5f          calla   joy_read
         00000990 00000000! 
     361                    
     362                    
     363 000009b0     05a0          move    @steals_off,a0
         000009c0 00000d20- 
     364 000009e0     c604          jrle    tglnok
     365 000009f0     1420          subk    1,a0
     366 00000a00     0580          move    a0,@steals_off
         00000a10 00000d20- 
     367 00000a30           tglnok
     368 00000a30     05a0          move    @pushing_delay,a0
         00000a40 00000d30- 
     369 00000a60     c604          jrle    tglnok2
     370 00000a70     1420          subk    1,a0
     371 00000a80     0580          move    a0,@pushing_delay
         00000a90 00000d30- 
     372 00000ab0           tglnok2
     373 00000ab0     05a0          move    @pass_off,a0
         00000ac0 00000d40- 
     374 00000ae0     c604          jrle    tglnok3
     375 00000af0     1420          subk    1,a0
     376 00000b00     0580          move    a0,@pass_off
         00000b10 00000d40- 
     377 00000b30           tglnok3
     378                    
     379 00000b30     05a0          move    @assist_delay,a0
         00000b40 00000000! 
     380 00000b60     c609          jrle    tglnok4
     381 00000b70     1420          subk    1,a0
     382 00000b80     0580          move    a0,@assist_delay
         00000b90 00000000! 
     383 00000bb0     cb04          jrnz    tglnok4
     384 00000bc0     5621          clr     a1
     385 00000bd0     0581          move    a1,@assist_plyr
         00000be0 00000000! 
     386 00000c00           tglnok4
     387 00000c00     05a0          move    @rebound_delay,a0
         00000c10 00000d50- 
     388 00000c30     c609          jrle    tglnok5
     389 00000c40     1420          subk    1,a0
     390 00000c50     0580          move    a0,@rebound_delay
         00000c60 00000d50- 
     391 00000c80     cb04          jrnz    tglnok5
     392 00000c90     5621          clr     a1
     393 00000ca0     0581          move    a1,@rebound_delay
         00000cb0 00000d50- 
     394 00000cd0           tglnok5
     395                    
     396                    
     397                    
     398                            .if     DEBUG
     399                            callr   cputime_calcfree
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE    9

     400                            .endif
     401                    
     402 00000cd0     05a0          move    @HALT,a0
         00000ce0 00000540- 
     403 00000d00     cb07          jrnz    tglnskipit
     404 00000d10     05a0          move    @last_name_time,a0
         00000d20 00000000! 
     405 00000d40     1020          inc     a0
     406 00000d50     0580          move    a0,@last_name_time      ;# ticks since player name called
         00000d60 00000000! 
     407 00000d80           tglnskipit
     408                    
     409 00000d80     05a0          move    @PCNT,a0
         00000d90 00000000- 
     410 00000db0     1020          addk    1,a0
     411 00000dc0     0580          move    a0,@PCNT
         00000dd0 00000000- 
     412                    
     413 00000df0     07e0          movb    @DIPSWITCH-7,a0
         00000e00 01600029  
     414 00000e20     ce91          jrn     mainlp
     415                    
     416 00000e30     09ed          movi    ACTIVE,a13              ;*Proc list
         00000e40 00000000! 
     417 00000e60                   CREATE  DIAG_PID,DIAG
     418 00000ee0     c085          jruc    mainlp
     419                    
     420                    
     421                    
     422                    
     423                    
     424 00000ef0            SUBRP  switch_unstack
     425                    
     426                            .if     0                       ;DEBUG!!
     427                    
     428                            clr     a4
     429                    
     430                    dlxtlp  move    @swstack_p,a3,L
     431                            cmpi    swstacktop,a3           ;Stack at start?
     432                            jreq    dlxtx                   ;Empty?
     433                            move    @FREE,a0,L
     434                            jrz     dlxtx                   ;No processes left?
     435                    
     436                            move    *a3+,a0                 ;Get entry
     437                            move    a3,@swstack_p,L         ;Update stack
     438                            sll     32-5,a0                 ;Max switch # 31
     439                            srl     32-5-4,a0               ;*16
     440                            move    a0,a2
     441                            add     a0,a2
     442                            add     a0,a2                   ;*3
     443                            addi    switch_t,a2
     444                            move    *a2+,a1
     445                            jrz     dlxtlp                  ;No PID?
     446                            move    *a2+,a7,L               ;*Code
     447                            movi    ACTIVE,a13              ;*Proc list
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   10

     448                            calla   GETPRC
     449                            addk    1,a4
     450                            jruc    dlxtlp
     451                    
     452                    dlxtx
     453                            subk    1,a4
     454                            jrle    dlxtxx
     455                            LOCKUP
     456                    
     457                    dlxtxx  rets
     458                    
     459                            .else
     460                    
     461                    
     462 00000ef0     07a3  dlxtlp  move    @swstack_p,a3,L
         00000f00 00000010- 
     463 00000f20     0b63          cmpi    swstacktop,a3           ;Stack at start?
         00000f30 fffffbcf- 
     464 00000f50     ca1a          jreq    dlxtx                   ;Empty?
     465 00000f60     07a0          move    @FREE,a0,L
         00000f70 00000000! 
     466 00000f90     ca16          jrz     dlxtx                   ;No processes left?
     467                    
     468 00000fa0     9460          move    *a3+,a0                 ;Get entry
     469 00000fb0     0783          move    a3,@swstack_p,L         ;Update stack
         00000fc0 00000010- 
     470 00000fe0     2760          sll     32-5,a0                 ;Max switch # 31
     471 00000ff0     2d20          srl     32-5-4,a0               ;*16
     472 00001000     4c02          move    a0,a2
     473 00001010     4002          add     a0,a2
     474 00001020     4002          add     a0,a2                   ;*3
     475 00001030     0b22          addi    switch_t,a2
         00001040 00001110' 
     476 00001060     9441          move    *a2+,a1
     477 00001070     cae7          jrz     dlxtlp                  ;No PID?
     478 00001080     9647          move    *a2+,a7,L               ;*Code
     479 00001090     09ed          movi    ACTIVE,a13              ;*Proc list
         000010a0 00000000! 
     480 000010c0     0d5f          calla   GETPRC
         000010d0 00000000! 
     481 000010f0     c0df          jruc    dlxtlp
     482                    
     483 00001100     0960  dlxtx   rets
     484                    
     485                            .endif
     486                    
     487 00001110           switch_t        ;(Process ID or 0, *Routine)    ;Put in audit??
     488                    
     489                    
     490                            .if     TUNIT
     491 00001110                   WL      0,0                     ;S0
     492 00001140                   WL      0,0                     ;S1
     493 00001170                   WL      0,0                     ;S2
     494 000011a0                   WL      0,0                     ;S3
     495 000011d0                   WL      0,0                     ;S4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   11

     496 00001200                   WL      0,0                     ;S5
     497 00001230                   WL      0,0                     ;S6
     498 00001260                   WL      0,0                     ;S7
     499 00001290                   WL      0,0                     ;S8
     500 000012c0                   WL      0,0                     ;S9
     501 000012f0                   WL      0,0                     ;S10
     502 00001320                   WL      0,0                     ;S11
     503 00001350                   WL      0,0                     ;S12
     504 00001380                   WL      0,0                     ;S13
     505 000013b0                   WL      0,0                     ;S14
     506 000013e0                   WL      0,0                     ;S15
     507                    
     508 00001410                   WL      LC_PID,LCOIN            ;S16 - LEFT COIN (1)
     509 00001440                   WL      RC_PID,RCOIN            ;S17 - RIGHT COIN (2)
     510 00001470                   WL      PSWPID,plyr_strtb1      ;S18 - START 1
     511 000014a0                   WL      SLAM_PID,SLAM_SW        ;S19 - SLAM TILT
     512 000014d0                   WL      DIAG_PID,DIAG           ;S20 - TEST
     513 00001500                   WL      PSWPID,plyr_strtb2      ;S21 - START 2
     514 00001530                   WL      DIAG_PID,SERVICE        ;S22 - SERVICE CREDIT
     515 00001560                   WL      CC_PID,CCOIN            ;S23 - CENTER COIN (3)
     516 00001590                   WL      CC_PID,XCOIN            ;S24 - COIN 4
     517 000015c0                   WL      PSWPID,plyr_strtb3      ;S25 - START 3
     518 000015f0                   WL      PSWPID,plyr_strtb4      ;S26 - START 4
     519 00001620                   WL      0,0                     ;S27
     520 00001650                   WL      0,0                     ;S28
     521 00001680                   WL      0,0                     ;S29
     522 000016b0                   WL      0,0                     ;S30
     523 000016e0                   WL      0,0                     ;S31
     524                    
     525                            .else
     526                    
     527                    
     528                    
     529                            WL      PSWPID,plyr_strtb4      ;S7 IO20 - START 4
     530                            WL      0,0                     ;S1
     531                            WL      0,0                     ;S2
     532                            WL      0,0                     ;S3
     533                            WL      0,0                     ;S4
     534                            WL      0,0                     ;S5
     535                            WL      0,0                     ;S6
     536                            WL      PSWPID,plyr_strtb3      ;S7 - START 3
     537                            WL      0,0                     ;S8
     538                            WL      0,0                     ;S9
     539                            WL      0,0                     ;S10
     540                            WL      0,0                     ;S11
     541                            WL      0,0                     ;S12
     542                            WL      0,0                     ;S13
     543                            WL      0,0                     ;S14
     544                            WL      CC_PID,XCOIN            ;S15 - COIN 4
     545                    
     546                            WL      LC_PID,LCOIN            ;S16 - LEFT COIN (1)
     547                            WL      RC_PID,RCOIN            ;S17 - RIGHT COIN (2)
     548                            WL      PSWPID,plyr_strtb1      ;S18 - START 1
     549                            WL      SLAM_PID,SLAM_SW        ;S19 - SLAM TILT
     550                            WL      DIAG_PID,DIAG           ;S20 - TEST
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   12

     551                            WL      PSWPID,plyr_strtb2      ;S21 - START 2
     552                            WL      DIAG_PID,SERVICE        ;S22 - SERVICE CREDIT
     553                            WL      CC_PID,CCOIN            ;S23 - CENTER COIN (3)
     554                            WL      0,0                     ;S24
     555                            WL      0,0                     ;S25
     556                            WL      0,0                     ;S26
     557                            WL      0,0                     ;S27
     558                            WL      0,0                     ;S28
     559                            WL      0,0                     ;S29
     560                            WL      0,0                     ;S30 - Snd IRQ
     561                            WL      0,0                     ;S31
     562                            .endif
     563                    
     564                    
     565                    
     566 00001710            SUBR   plyr_strtb1
     567                    
     568 00001710     05a0          move    @TWOPLAYERS,a0          ;0 = NO, 1 = YES 2 players
         00001720 00000000! 
     569 00001740     cb09          jrnz    dlxtstrtb2
     570                    
     571 00001750     5708          clr     a8                      ;A8=Player #
     572 00001760     09eb          movi    P1DATA,a11              ;A11=*plyr data
         00001770 00000000! 
     573 00001790     c01c          jruc    plyr_strtbut
     574                    
     575 000017a0            SUBR   plyr_strtb2
     576                    
     577 000017a0     05a0          move    @TWOPLAYERS,a0          ;0 = NO, 1 = YES 2 players
         000017b0 00000000! 
     578 000017d0     cb0a          jrnz    dlxtstrtb3
     579 000017e0           dlxtstrtb2
     580 000017e0     1828          movk    1,a8
     581 000017f0     09eb          movi    P2DATA,a11
         00001800 00000000! 
     582 00001820     c013          jruc    plyr_strtbut
     583                    
     584 00001830            SUBR   plyr_strtb3
     585                    
     586 00001830     05a0          move    @TWOPLAYERS,a0          ;0 = NO, 1 = YES 2 players
         00001840 00000000! 
     587 00001860     cb00          jrnz    psbx
         00001870     01e3  
     588 00001880           dlxtstrtb3
     589 00001880     1848          movk    2,a8
     590 00001890     09eb          movi    P3DATA,a11
         000018a0 00000000! 
     591 000018c0     c009          jruc    plyr_strtbut
     592                    
     593 000018d0            SUBR   plyr_strtb4
     594                    
     595 000018d0     05a0          move    @TWOPLAYERS,a0          ;0 = NO, 1 = YES 2 players
         000018e0 00000000! 
     596 00001900     cb00          jrnz    psbx
         00001910     01d9  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   13

     597 00001920     1868          movk    3,a8
     598 00001930     09eb          movi    P4DATA,a11
         00001940 00000000! 
     599                    
     600                    
     601 00001960           plyr_strtbut
     602                    
     603 00001960     1820          movk    1,a0
     604 00001970     0580          move    a0,@BTIME
         00001980 00000000! 
     605                    
     606 000019a0     05a0          move    @GAMSTATE,a0
         000019b0 00000530- 
     607                    
     608 000019d0     0b40          cmpi    INPLYRINFO,a0
         000019e0     fffb  
     609 000019f0     ca00          jreq    psbx
         00001a00     01ca  
     610                    
     611 00001a10     05a0          move    @WFLG,a0
         00001a20 00000580- 
     612 00001a40     cb00          jrnz    psbx                    ;Window growing?
         00001a50     01c5  
     613 00001a60     05a0          move    @ENTERON,a0
         00001a70 00000000! 
     614 00001a90     cb00          jrnz    psbx                    ;Initials being entered?
         00001aa0     01c0  
     615                    
     616                    
     617 00001ab0     05a0          move    @pleasewt,a0            ;Plyr start bits 0-3
         00001ac0 00000000! 
     618 00001ae0     4b00          btst    a8,a0
     619 00001af0     cb00          jrnz    psbx
         00001b00     01ba  
     620                    
     621 00001b10     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         00001b20 00000000! 
     622 00001b40     4b00          btst    a8,a0
     623 00001b50     ca41          jrz     dlxtstartplyr           ;Player not started?
     624                    
     625                    
     626 00001b60           dlxtok
     627 00001b60     05a0          move    @game_purchased,a0
         00001b70 00000000! 
     628 00001b90     4b00          btst    a8,a0
     629 00001ba0     ca03          jrz     no_drw_max
     630                    
     631 00001bb0           dlxtshowmax
     632 00001bb0           dlxtdie DIE
     633                    
     634 00001be0           no_drw_max
     635                    
     636                    
     637 00001be0     05a1          move    @GAMSTATE,a1
         00001bf0 00000530- 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   14

     638 00001c10     0b41          cmpi    INGAME,a1
         00001c20     fffc  
     639 00001c30     ca00          jrz     psbx
         00001c40     01a6  
     640                    
     641 00001c50     0d5f          calla   CR_CONTP                ;Credits to continue
         00001c60 00000000! 
     642 00001c80     c800          jrlo    conttimers_cnt          ;No?
         00001c90     0271  
     643 00001ca0     0d5f          calla   P_CONT                  ;Take credits
         00001cb0 00000000! 
     644 00001cd0                   SOUND1  eat_snd
     645                    
     646 00001d30     1a00          movk    AUD1CONT,a0             ;Continue
     647 00001d40     0d5f          calla   AUD1
         00001d50 00000000! 
     648                    
     649 00001d70     09c0          movi    100,a0                  ;units to add
         00001d80     0064  
     650 00001d90     0d3f          callr   add_plyr_time           ;add time to this players play time
         00001da0     0234  
     651                    
     652                    
     653                    
     654 00001db0     1980          movk    ADJCCONT,a0             ;credits required to start
     655 00001dc0     0d5f          calla   GET_ADJ                 ;returns 1,2
         00001dd0 00000000! 
     656                    
     657                    
     658 00001df0     0d3f          callr   paidcreds_add
         00001e00     01cd  
     659 00001e10     0d5f          calla   update_scorebrd
         00001e20 00000000! 
     660 00001e40     c000          jruc    psbx
         00001e50     0185  
     661                    
     662                    
     663 00001e60           dlxtnot_pd
     664 00001e60     2488          sll     4,a8
     665 00001e70     0b28          addi    sticklst,a8
         00001e80 000038e0' 
     666 00001ea0     8500          move    *a8,a0
     667 00001eb0     0d5f          calla   KIL1C                   ;kill stick on me procs for this plyr
         00001ec0 00000000! 
     668 00001ee0     8500          move    *a8,a0
     669 00001ef0     0d5f          calla   obj_del1c
         00001f00 00000000! 
     670                    
     671                    
     672 00001f20     0d3f          callr   plyr_setmsgsingame
         00001f30     01fb  
     673 00001f40                   DIE
     674                    
     675                    
     676 00001f70           dlxtstartplyr
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   15

     677 00001f70     05a1          move    @GAMSTATE,a1
         00001f80 00000530- 
     678 00001fa0     ce00          jrn     psbx                    ;Diagnostics?
         00001fb0     016f  
     679 00001fc0     0b41          cmpi    INGAMEOV,a1
         00001fd0     fff7  
     680 00001fe0     ca00          jreq    psbx                    ;Game over?
         00001ff0     016b  
     681                    
     682 00002000     0b41          cmpi    INAMODE,a1
         00002010     fffe  
     683 00002020     ca00          jreq    game_start              ;New start from amode?
         00002030     0241  
     684                    
     685 00002040     0b41          cmpi    INFREEPRICE,a1
         00002050     fff9  
     686 00002060     ca00          jreq    game_start2             ;New start from winners half price scr?
         00002070     0236  
     687 00002080     0b41          cmpi    ININTRO,a1
         00002090     fffd  
     688 000020a0     ca2d          jrz     dlxtskiptmck
     689                    
     690 000020b0     07ae          move    @game_time,a14,L
         000020c0 00000000! 
     691 000020e0     ca29          jrz     dlxtskiptmck
     692 000020f0     0b6e          cmpi    [202h,0],a14
         00002100 fdfdffff  
     693 00002120     c525          jrge    dlxtskiptmck
     694                    
     695                    
     696                    
     697 00002130     1a40          MOVK    ADJFREPL,A0             ;ARE WE IN FREE PLAY?
     698 00002140     0d5f          CALLA   GET_ADJ
         00002150 00000000! 
     699 00002170     cb20          JRNZ    dlxtskiptmck
     700                    
     701 00002180     05a0          move    @PSTATUS2,a0            ;Plyr already started bits 0-3
         00002190 00000560- 
     702 000021b0     4b00          btst    a8,a0
     703 000021c0     ca07          jrz     dlxtpsb101                      ;Player never started?
     704                    
     705 000021d0     0d5f          calla   CR_CONTP                ;Credits to continue
         000021e0 00000000! 
     706 00002200     c880          jalo    SUCIDE                  ;No?
         00002210 00000000! 
     707 00002230     c006          jruc    dlxtpsb300
     708                    
     709                    
     710 00002240     0d5f  dlxtpsb101      calla   CR_STRTP                ;Credits to start
         00002250 00000000! 
     711 00002270     c880          jalo    SUCIDE                  ;No?
         00002280 00000000! 
     712                    
     713 000022a0           dlxtpsb300
     714 000022a0     1820          movk    1,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   16

     715 000022b0     6300          sll     a8,a0
     716                    
     717 000022c0     05a1          move    @pleasewt,a1
         000022d0 00000000! 
     718 000022f0     5401          or      a0,a1
     719 00002300     0581          move    a1,@pleasewt
         00002310 00000000! 
     720                    
     721 00002330     0d3f          callr   plyr_setmsgsingame
         00002340     01ba  
     722 00002350                   DIE
     723                    
     724                    
     725 00002380           dlxtskiptmck
     726                    
     727 00002380     4d0e          move    a8,a14
     728 00002390     2fee          srl     1,a14
     729 000023a0     05a0          move    @winningteam,a0
         000023b0 00000000! 
     730 000023d0     49c0          cmp     a14,a0
     731 000023e0     ca13          jrz     dlxtskp1
     732                    
     733 000023f0     05a0          move    @PSTATUS2,a0            ;Plyr already started bits 0-3
         00002400 00000560- 
     734 00002420     4b00          btst    a8,a0
     735 00002430     ca17          jrz     psb101                  ;Player never started?
     736                    
     737 00002440     0d5f          calla   CR_CONTP                ;Credits to continue
         00002450 00000000! 
     738 00002470     c800          jrlo    conttimers_cnt          ;No?
         00002480     01f2  
     739 00002490     0d5f          calla   P_CONT                  ;Take credits
         000024a0 00000000! 
     740 000024c0                   SOUND1  eat_snd
     741                    
     742 00002520           dlxtskp1
     743 00002520     09c0          movi    100,a0                  ;units to add
         00002530     0064  
     744 00002540     0d3f          callr   add_plyr_time           ;add time to this players play time
         00002550     01b9  
     745                    
     746 00002560     1a00          movk    AUD1CONT,a0             ;Continue
     747 00002570     0d5f          calla   AUD1
         00002580 00000000! 
     748 000025a0     c022          jruc    psb300
     749                    
     750                    
     751 000025b0     0d5f  psb101  calla   CR_STRTP                ;Credits to start
         000025c0 00000000! 
     752 000025e0     c800          jrlo    conttimers_cnt          ;No?
         000025f0     01db  
     753 00002600     0d5f          calla   P_START                 ;Take credits
         00002610 00000000! 
     754                    
     755 00002630                   SOUND1  eat_snd
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   17

     756                    
     757 00002690     09c7          movi    100,a7
         000026a0     0064  
     758 000026b0     1960          movk    ADJCSTRT,a0             ;credits required to start
     759 000026c0     0d5f          calla   GET_ADJ                 ;returns 1,2
         000026d0 00000000! 
     760 000026f0     1420          subk    1,a0
     761 00002700     0300          jrz     dlxtag
     762 00002710     4ce0  dlxtag  move    a7,a0
     763 00002720     0d3f          callr   add_plyr_time           ;add time to this players play time
         00002730     019b  
     764                    
     765 00002740     05a0          move    @GAMSTATE,a0
         00002750 00000530- 
     766 00002770     1440          subk    ININTRO,a0              ;If in intro, the regular start up
     767 00002780     ca04          jreq    psb300
     768                    
     769 00002790     19c0          movk    AUD1STRT,a0             ;Mid game start
     770 000027a0     0d5f          calla   AUD1
         000027b0 00000000! 
     771                    
     772 000027d0           psb300
     773 000027d0     1820          movk    1,a0
     774 000027e0     6300          sll     a8,a0
     775                    
     776 000027f0                   PUSH    A0
     777 00002800     1a40          MOVK    ADJFREPL,A0             ;ARE WE IN FREE PLAY?
     778 00002810     0d5f          CALLA   GET_ADJ
         00002820 00000000! 
     779 00002840     4c0e          move    a0,a14
     780 00002850                   PULL    A0
     781 00002860     4dce          move    a14,a14
     782 00002870     cb36          JRNZ    dlxtfre
     783                    
     784 00002880     05ae          move    @GAMSTATE,a14
         00002890 00000530- 
     785 000028b0     144e          subk    ININTRO,a14             ;If in intro, the regular start up
     786 000028c0     cb57          jrne    dlxtnot
     787                    
     788 000028d0           dlxtnot1
     789                    
     790                    
     791                    
     792 000028d0                   PUSH    a0
     793 000028e0     05a1          move    @PSTATUS2,a1
         000028f0 00000560- 
     794 00002910     4a01          btst    a0,a1
     795 00002920     ca05          jrz     dlxtfrmstrt
     796                            
     797 00002930     1980          movk    ADJCCONT,a0             ;credits required to start
     798 00002940     0d5f          calla   GET_ADJ                 ;returns 1,2
         00002950 00000000! 
     799 00002970     c004          jruc    dlxtfix1
     800 00002980           dlxtfrmstrt
     801 00002980     1960          movk    ADJCSTRT,a0             ;credits required to start
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   18

     802 00002990     0d5f          calla   GET_ADJ                 ;returns 1,2
         000029a0 00000000! 
     803 000029c0           dlxtfix1
     804                    
     805                    
     806 000029c0     0d3f          callr   paidcreds_add
         000029d0     0110  
     807                    
     808 000029e0                   PULL    a0
     809                    
     810                    
     811                    
     812                    
     813 000029f0     05a1          move    @PSTATUS,a1
         00002a00 00000000! 
     814 00002a20     5401          or      a0,a1                   ;Set bit
     815 00002a30     0581          move    a1,@PSTATUS
         00002a40 00000000! 
     816                    
     817 00002a60     05a1          move    @PSTATUS2,a1
         00002a70 00000560- 
     818 00002a90     5401          or      a0,a1                   ;Set bit saying this guy has started
     819 00002aa0     0581          move    a1,@PSTATUS2            ;and 50 cent buyin has happened!
         00002ab0 00000560- 
     820                    
     821                    
     822 00002ad0     05a0          move    @gmqrtr,a0
         00002ae0 00000000! 
     823 00002b00     ca00          jrz     dlxtinintro
         00002b10     00b9  
     824                    
     825 00002b20     07a0          move    @newptr,a0,L
         00002b30 00000dc0- 
     826 00002b50     9360          move    a11,*a0+,L
     827 00002b60     9100          move    a8,*a0+
     828 00002b70     5621          clr     a1
     829 00002b80     8220          move    a1,*a0,L
     830 00002b90     0780          move    a0,@newptr,L
         00002ba0 00000dc0- 
     831                    
     832 00002bc0     c000          jruc    dlxtinintro
         00002bd0     00ad  
     833                    
     834 00002be0           dlxtfre
     835 00002be0     05ae          move    @GAMSTATE,a14
         00002bf0 00000530- 
     836 00002c10     144e          subk    ININTRO,a14             ;If in intro, the regular start up
     837 00002c20     caca          jrz     dlxtnot1
     838                    
     839 00002c30           dlxtfreeply
     840                    
     841                    
     842                    
     843 00002c30                   PUSH    a0
     844 00002c40     05a1          move    @PSTATUS2,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   19

         00002c50 00000560- 
     845 00002c70     4a01          btst    a0,a1
     846 00002c80     ca05          jrz     dlxtfrmstrt2
     847                            
     848 00002c90     1980          movk    ADJCCONT,a0             ;credits required to start
     849 00002ca0     0d5f          calla   GET_ADJ                 ;returns 1,2
         00002cb0 00000000! 
     850 00002cd0     c004          jruc    dlxtfix12
     851 00002ce0           dlxtfrmstrt2
     852 00002ce0     1960          movk    ADJCSTRT,a0             ;credits required to start
     853 00002cf0     0d5f          calla   GET_ADJ                 ;returns 1,2
         00002d00 00000000! 
     854 00002d20           dlxtfix12
     855                    
     856                    
     857 00002d20     0d3f          callr   paidcreds_add
         00002d30     00da  
     858                    
     859 00002d40                   PULL    a0
     860                    
     861                    
     862                    
     863                    
     864                    
     865 00002d50     05a1          move    @PSTATUS,a1
         00002d60 00000000! 
     866 00002d80     5401          or      a0,a1                   ;Set bit
     867 00002d90     0581          move    a1,@PSTATUS
         00002da0 00000000! 
     868                    
     869 00002dc0     05a1          move    @PSTATUS2,a1
         00002dd0 00000560- 
     870 00002df0     5401          or      a0,a1                   ;Set bit saying this guy has started
     871 00002e00     0581          move    a1,@PSTATUS2            ;and 50 cent buyin has happened!
         00002e10 00000560- 
     872                    
     873                    
     874                    
     875                    
     876 00002e30     c025          jruc    dlxtfrepl
     877                    
     878 00002e40           dlxtnot
     879 00002e40     07ae          move    @game_time,a14,L
         00002e50 00000000! 
     880 00002e70     0b6e          cmpi    [202h,0],a14
         00002e80 fdfdffff  
     881 00002ea0     c7d8          jrgt    dlxtfreeply
     882                    
     883                    
     884 00002eb0     05a1          move    @PSTATUS2,a1
         00002ec0 00000560- 
     885 00002ee0     4b01          btst    a8,a1
     886 00002ef0     ca05          jrz     dlxtfrmstrt3
     887                            
     888 00002f00     1980          movk    ADJCCONT,a0             ;credits required to start
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   20

     889 00002f10     0d5f          calla   GET_ADJ                 ;returns 1,2
         00002f20 00000000! 
     890 00002f40     c004          jruc    dlxtfix13
     891 00002f50           dlxtfrmstrt3
     892 00002f50     1960          movk    ADJCSTRT,a0             ;credits required to start
     893 00002f60     0d5f          calla   GET_ADJ                 ;returns 1,2
         00002f70 00000000! 
     894 00002f90           dlxtfix13
     895                    
     896                    
     897 00002f90     0d3f          callr   paidcreds_add
         00002fa0     00b3  
     898                    
     899                    
     900                    
     901                    
     902 00002fb0           dlxtnot_inintro
     903 00002fb0     1820          movk    1,a0
     904 00002fc0     6300          sll     a8,a0
     905                    
     906 00002fd0     05a1          move    @pleasewt,a1
         00002fe0 00000000! 
     907 00003000     5401          or      a0,a1
     908 00003010     0581          move    a1,@pleasewt
         00003020 00000000! 
     909                    
     910 00003040     0d3f          callr   plyr_setmsgsingame
         00003050     00e9  
     911 00003060                   DIE
     912                    
     913 00003090           dlxtfrepl
     914 00003090     1820          movk    1,a0
     915 000030a0     0580          move    a0,@name_cnt
         000030b0 00000c60- 
     916 000030d0     5600          clr     a0
     917 000030e0     0580          move    a0,@name_flop
         000030f0 00000c70- 
     918                     
     919 00003110     05ae          move    @GAMSTATE,a14
         00003120 00000530- 
     920 00003140     144e          subk    ININTRO,a14             ;If in intro, the regular start up
     921 00003150     ca08          jrz     dlxtskp1a
     922                    
     923                     
     924 00003160     09c0          movi    CLSDEAD|creditid,a0
         00003170     2089  
     925 00003180     0d5f          calla   obj_del1c               ;kill credit/qrtr imgs
         00003190 00000000! 
     926 000031b0     0d5f          calla   prt_credits
         000031c0 00000000! 
     927                    
     928 000031e0           dlxtskp1a
     929 000031e0     b760          move    *a11(ply_messages),a0,L
         000031f0     0000  
     930 00003200     ca4a          jrz     dlxtimgson
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   21

     931 00003210     0d5f          calla   DELOBJ
         00003220 00000000! 
     932 00003240     5600          clr     a0
     933 00003250     b20b          move    a0,*a11(ply_messages),L
         00003260     0000  
     934                    
     935                    
     936 00003270                   PUSH    a6,a8,a11
     937                    
     938 00003290     4d69          move    a11,a9
     939 000032a0     0b09          addi    ply_meter_imgs,a9       ;where to stuff img pntrs
         000032b0     0080  
     940                    
     941 000032c0     9720          move    *a9+,a0,L
     942 000032d0     0d5f          calla   DELOBJ
         000032e0 00000000! 
     943 00003300     9720          move    *a9+,a0,L
     944 00003310     ca03          jrz     dlxtcv
     945 00003320     0d5f          calla   DELOBJ
         00003330 00000000! 
     946 00003350     8720  dlxtcv  move    *a9,a0,L
     947 00003360     0d5f          calla   DELOBJ
         00003370 00000000! 
     948 00003390     0be9          subi    64,a9
         000033a0     ffbf  
     949                    
     950 000033b0     4d00          move    a8,a0
     951 000033c0     24a0          sll     5,a0
     952                            
     953 000033d0     0b20          addi    cr_box,a0
         000033e0 000036e0' 
     954                    
     955 00003400     05ae          move    @TWOPLAYERS,a14         ;0 = NO, 1 = YES 2 players
         00003410 00000000! 
     956 00003430     ca02          jrz     dlxt4_plyrs
     957 00003440     0b00          addi    8*32,a0
         00003450     0100  
     958 00003460           dlxt4_plyrs
     959                            
     960                    
     961                    
     962                    
     963 00003460     4c0b          move    a0,a11
     964 00003470     0b0b          addi    4*32,a11
         00003480     0080  
     965 00003490     876b          move    *a11,a11,L
     966 000034a0                   PUSHP   A11
     967                    
     968 000034b0     860b          move    *a0,a11,L
     969 000034c0     0d3f          callr   prt_status
         000034d0     1061  
     970                    
     971                    
     972 000034e0                   PULLP   A11
     973 000034f0     0d5f          calla   refill_turbo
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   22

         00003500 00000000! 
     974                    
     975 00003520                   PULL    a6,a8,a11
     976                    
     977 00003540     09e0          movi    scorep,a0
         00003550 00000000! 
     978 00003570     0d5f          calla   pal_getf
         00003580 00000000! 
     979 000035a0     4c05          move    a0,a5
     980                    
     981 000035b0     4d00          move    a8,a0
     982 000035c0     24a0          sll     5,a0
     983 000035d0     0b20          addi    names,a0
         000035e0 00000c80- 
     984 00003600     8600          move    *a0,a0,L
     985 00003610     b768          move    *a11(ply_meter_imgs),a8,L       ;change box to name
         00003620     0080  
     986 00003630     b0a8          move    a5,*a8(OPAL)
         00003640     0150  
     987 00003650     09e1          movi    MSGOCTRL,a1
         00003660 0000e002  
     988 00003680     0d5f          calla   obj_aniq_cnoff
         00003690 00000000! 
     989                    
     990                    
     991                    
     992 000036b0           dlxtimgson
     993                    
     994                    
     995 000036b0           dlxtinintro
     996                    
     997 000036b0           psbx    DIE
     998                    
     999 000036e0 00013ba0' cr_box  .long   init_t1,init_t2,init_t3,init_t4
    1000 00003760 00000000!         .long   P1DATA,P2DATA,P3DATA,P4DATA
    1001                    
    1002 000037e0 00013ba0'         .long   init_t1,init_t2kit,init_t3kit,init_t4
    1003 00003860 00000000!         .long   P1DATA,P2DATA,P3DATA,P4DATA
    1004                    
    1005 000038e0           sticklst
    1006 000038e0     008d          .word   p1stickid,p2stickid,p3stickid,p4stickid
    1007                    
    1008                    
    1009 00003920            SUBR   start_msgs
    1010                    
    1011 00003920     09ea          movi    newplyrs,a10
         00003930 00000de0- 
    1012 00003950     078a          move    a10,@newptr,L
         00003960 00000dc0- 
    1013 00003980     4d42          move    a10,a2
    1014                    
    1015 00003990     18a9          movk    5,a9
    1016 000039a0           start1
    1017 000039a0     1429          dec     a9
    1018 000039b0     ca0b          jrz     dlxtdone
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   23

    1019 000039c0     974b          move    *a10+,a11,L
    1020 000039d0     ca09          jrz     dlxtdone
    1021 000039e0     9548          move    *a10+,a8
    1022 000039f0                   CREATE0 dlxtfrepl
    1023 00003a60     c0f3          jruc    start1
    1024 00003a70           dlxtdone
    1025 00003a70     5600          clr     a0
    1026 00003a80     18ae          movk    5,a14
    1027 00003a90     9202  dlxtclp move    a0,*a2+,L
    1028 00003aa0     3c4e          dsj     a14,dlxtclp
    1029                    
    1030 00003ab0                   DIE
    1031                    
    1032                    
    1033 00003ae0           paidcreds_add
    1034                    
    1035 00003ae0                   PUSH    a2
    1036                    
    1037 00003af0     4d01          move    a8,a1
    1038 00003b00     24a1          sll     5,a1
    1039 00003b10     0b21          addi    paid_t,a1
         00003b20 00004ef0' 
    1040 00003b40     8621          move    *a1,a1,L
    1041                    
    1042 00003b50     4d0e          move    a8,a14
    1043 00003b60     2fee          srl     1,a14
    1044 00003b70     05a2          move    @winningteam,a2
         00003b80 00000000! 
    1045 00003ba0     49c2          cmp     a14,a2
    1046 00003bb0     cb01          jrnz    dlxtnothalf
    1047 00003bc0     2460          sll     3,a0                    ;Double paid credits
    1048                    
    1049 00003bd0           dlxtnothalf
    1050 00003bd0     8422          move    *a1,a2
    1051 00003be0     4002          add     a0,a2
    1052 00003bf0     8041          move    a2,*a1
    1053                    
    1054 00003c00     4d01          move    a8,a1
    1055 00003c10     2481          sll     4,a1                    ;x 16 bits
    1056 00003c20     0b21          addi    qtr_purchased,a1
         00003c30 00000d80- 
    1057 00003c50     842e          move    *a1,a14
    1058 00003c60     102e          inc     a14
    1059 00003c70     81c1          move    a14,*a1
    1060                    
    1061 00003c80     05a1          move    @gmqrtr,a1
         00003c90 00000000! 
    1062 00003cb0     0b41          cmpi    3,a1
         00003cc0     fffc  
    1063 00003cd0     c512          jrge    dlxtfull
    1064 00003ce0     1882          movk    4,a2
    1065 00003cf0     4422          sub     a1,a2
    1066 00003d00     484e          cmp     a2,a14
    1067 00003d10     c41b          jrlt    dlxtno
    1068                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   24

    1069                    
    1070                    
    1071                    
    1072                    
    1073 00003d20     05a0          move    @GAMSTATE,a0
         00003d30 00000530- 
    1074 00003d50     0b40          cmpi    INAMODE,a0
         00003d60     fffe  
    1075 00003d70     ca15          jreq    dlxtno
    1076 00003d80     05ae          move    @gmqrtr,a14
         00003d90 00000000! 
    1077 00003db0     cb04          jrnz    dlxtfull
    1078                            .ref    inmatchup
    1079 00003dc0     05a0          move    @inmatchup,a0
         00003dd0 00000000! 
    1080 00003df0     ca0d          jrz     dlxtno
    1081                    
    1082 00003e00           dlxtfull
    1083 00003e00     05a0          move    @game_purchased,a0      ;set purchased bit
         00003e10 00000000! 
    1084 00003e30     4d0e          move    a8,a14
    1085 00003e40     248e          sll     4,a14
    1086 00003e50     0b2e          addi    or_t,a14
         00003e60 00004370' 
    1087 00003e80     85ce          move    *a14,a14
    1088 00003e90     55c0          or      a14,a0                  ;for player
    1089 00003ea0     0580          move    a0,@game_purchased
         00003eb0 00000000! 
    1090                    
    1091 00003ed0           dlxtno
    1092 00003ed0                   PULL    a2
    1093 00003ee0     0960          rets
    1094                    
    1095                    
    1096                    
    1097              b002  LEDOCTRL        .equ    DMAWNZ|03000H   ;3 bits per pixel (In BB.asm)
    1098              e002  MSGOCTRL        .equ    DMAWNZ|06000H
    1099                    
    1100 00003ef0            SUBRP  plyr_setmsgsingame
    1101                    
    1102 00003ef0                   PUSH    a8
    1103                    
    1104 00003f00     b768          move    *a11(ply_messages),a8,L
         00003f10     0000  
    1105 00003f20     09e0          movi    please,a0
         00003f30 00000000! 
    1106 00003f50     09e1          movi    MSGOCTRL,a1
         00003f60 0000e002  
    1107 00003f80     0d5f          calla   obj_aniq_cnoff
         00003f90 00000000! 
    1108 00003fb0     0d5f          calla   update_scorebrd
         00003fc0 00000000! 
    1109                    
    1110 00003fe0     b760          move    *a11(ply_meter_imgs),a0,L
         00003ff0     0080  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   25

    1111 00004000     0d5f          calla   OBJOFF
         00004010 00000000! 
    1112 00004030     b760          move    *a11(ply_meter_imgs+20h),a0,L
         00004040     00a0  
    1113 00004050     0d5f          calla   OBJOFF
         00004060 00000000! 
    1114 00004080     b760          move    *a11(ply_meter_imgs+40h),a0,L
         00004090     00c0  
    1115 000040a0     0d5f          calla   OBJOFF
         000040b0 00000000! 
    1116                    
    1117 000040d0                   PULL    a8
    1118 000040e0     0960          rets
    1119                    
    1120                    
    1121                    
    1122                    
    1123                    
    1124 000040f0           add_plyr_time
    1125                    
    1126                    
    1127 000040f0     4d0e          move    a8,a14
    1128 00004100     2fee          srl     1,a14
    1129 00004110     05a1          move    @winningteam,a1
         00004120 00000000! 
    1130 00004140     49c1          cmp     a14,a1
    1131 00004150     cb01          jrnz    tgsbnothalf
    1132                    
    1133 00004160     2460          sll     3,a0                    ;Double credit time
    1134                    
    1135 00004170           tgsbnothalf
    1136                            
    1137 00004170     09c1          movi    3500,a1
         00004180     0dac  
    1138 00004190     b02b          move    a1,*a11(ply_time)
         000041a0     0060  
    1139                    
    1140                    
    1141 000041b0     09c0          movi    110,a0                  ;Shorter time for player names message
         000041c0     006e  
    1142 000041d0     0580          move    a0,@name_cnt
         000041e0 00000c60- 
    1143                    
    1144                    
    1145 00004200     05a0          move    @GAMSTATE,a0
         00004210 00000530- 
    1146 00004230     1440          subk    ININTRO,a0
    1147 00004240     ca11          jreq    rx
    1148 00004250     b760          move    *a11(ply_meter_imgs),a0,L
         00004260     0080  
    1149 00004270     ca0b          jrz     tgsbnxt
    1150                    
    1151 00004280     b760          move    *a11(ply_meter_imgs+020H),a0,L
         00004290     00a0  
    1152 000042a0     b601          move    *a0(OIMG),a1,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   26

         000042b0     0170  
    1153 000042c0     0b61          cmpi    start,a1
         000042d0 ffffffff! 
    1154 000042f0     cb03          jrnz    tgsbnxt
    1155 00004300     1921          movk    9,a1
    1156 00004310     b020          move    a1,*a0(OYPOS)
         00004320     00b0  
    1157                    
    1158 00004330     c080  tgsbnxt jauc    prt_cr_timers
         00004340 00000000! 
    1159                    
    1160 00004360     0960  rx      rets
    1161                    
    1162 00004370     0001  or_t    .word   1,2,4,8
    1163                    
    1164                    
    1165                    
    1166 000043b0            SUBRP  conttimers_cnt
    1167                    
    1168 000043b0                   DIE
    1169                    
    1170                    
    1171 000043e0           game_start2
    1172 000043e0     4d0e          move    a8,a14
    1173 000043f0     2fee          srl     1,a14
    1174 00004400     05a0          move    @winningteam,a0
         00004410 00000000! 
    1175 00004430     49c0          cmp     a14,a0
    1176 00004440     ca0c          jrz     gs2
    1177                    
    1178                    
    1179 00004450            SUBRP  game_start
    1180                    
    1181 00004450     0d5f          calla   CR_STRTP
         00004460 00000000! 
    1182 00004480     c880          jalo    SUCIDE                  ;Not enough credits?
         00004490 00000000! 
    1183 000044b0     0d5f          calla   P_START                 ;Take credits
         000044c0 00000000! 
    1184                    
    1185 000044e0     0d5f          calla   QSNDRST
         000044f0 00000000! 
    1186                            
    1187                    
    1188 00004510           gs2
    1189 00004510     09c7          movi    100,a7
         00004520     0064  
    1190 00004530     1960          movk    ADJCSTRT,a0             ;credits required to start
    1191 00004540     0d5f          calla   GET_ADJ                 ;returns 1,2
         00004550 00000000! 
    1192 00004570     1420          subk    1,a0
    1193 00004580     ca02          jrz     qtjytag
    1194                    
    1195                    
    1196 00004590     09c7          movi    100,a7                  ;units to add ;150
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   27

         000045a0     0064  
    1197 000045b0           qtjytag
    1198                    
    1199                    
    1200 000045b0     5600          clr     a0
    1201 000045c0     09e1          movi    P1DATA,a1
         000045d0 00000000! 
    1202 000045f0     09c2          movi    PDSIZE*4/16,A2
         00004600     004c  
    1203 00004610     9001  qtjyzlp move    a0,*a1+
    1204 00004620     3c42          dsj     a2,qtjyzlp
    1205                    
    1206 00004630     5600          clr     a0
    1207 00004640     0580          move    a0,@gmqrtr
         00004650 00000000! 
    1208 00004670     0780          move    a0,@qtr_purchased,L     ;clr 4x16
         00004680 00000d80- 
    1209 000046a0     0780          move    a0,@qtr_purchased+20h,L
         000046b0 00000da0- 
    1210 000046d0     0580          move    a0,@plyrbighead
         000046e0 00000000! 
    1211 00004700     0580          move    a0,@inmatchup
         00004710 00000000! 
    1212                    
    1213 00004730     4ce0          move    a7,a0
    1214 00004740     0d3f          callr   add_plyr_time           ;add time to this players play time
         00004750     ff99  
    1215                    
    1216                    
    1217 00004760     09c0          movi    AUDBONE,a0              ;+1 games started from amode
         00004770     001b  
    1218 00004780     0d5f          calla   AUD1
         00004790 00000000! 
    1219                    
    1220 000047b0     09c0          movi    AUD_TOTPLYS,a0
         000047c0     0020  
    1221 000047d0     0d5f          calla   AUD1
         000047e0 00000000! 
    1222                    
    1223 00004800     1820          movk    1,a0
    1224 00004810     6300          sll     a8,a0
    1225 00004820     0580          move    a0,@PSTATUS
         00004830 00000000! 
    1226 00004850     0580          move    a0,@PSTATUS2            ;Player has started bit flags
         00004860 00000560- 
    1227                    
    1228                    
    1229 00004880     1960          movk    ADJCSTRT,a0             ;credits required to start
    1230 00004890     0d5f          calla   GET_ADJ                 ;returns 1,2
         000048a0 00000000! 
    1231                    
    1232 000048c0     0d3f          callr   paidcreds_add
         000048d0     ff20  
    1233                    
    1234                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   28

    1235 000048e0     09c0          movi    INTRO_PID,a0            ;>Intro state
         000048f0     0300  
    1236 00004900     b00d          move    a0,*a13(PROCID)
         00004910     0020  
    1237 00004920     1840          movk    ININTRO,a0
    1238 00004930     0580          move    a0,@GAMSTATE
         00004940 00000530- 
    1239                    
    1240 00004960     0d5f          calla   display_blank
         00004970 00000000! 
    1241 00004990     0d5f          calla   WIPEOUT
         000049a0 00000000! 
    1242                    
    1243                    
    1244                    
    1245 000049c0     09c0          movi    10*60,a0
         000049d0     0258  
    1246 000049e0     0580          move    a0,@cntrs_delay
         000049f0 00000000! 
    1247                    
    1248 00004a10                   SLEEPK  1
    1249                    
    1250 00004a50     5600          clr     a0
    1251 00004a60     0580          move    a0,@team1
         00004a70 00000000! 
    1252 00004a90     0580          move    a0,@team2
         00004aa0 00000000! 
    1253 00004ac0     0580          move    a0,@SOUNDSUP
         00004ad0 00000000! 
    1254 00004af0     0580          move    a0,@plyr_tourn
         00004b00 00000000! 
    1255                    
    1256                    
    1257                            .ref    special_heads
    1258                    
    1259 00004b20     09c0          movi    -1,a0
         00004b30     ffff  
    1260 00004b40     0780          move    a0,@special_heads,L
         00004b50 00000000! 
    1261 00004b70     0780          move    a0,@special_heads+20h,L
         00004b80 00000020! 
    1262                    
    1263                            .ref    dtype
    1264                    
    1265 00004ba0     5600          clr     a0
    1266 00004bb0     0580          move    a0,@dtype
         00004bc0 00000000! 
    1267                    
    1268                            .ref    monitor_fullgame
    1269 00004be0                   CREATE0 monitor_fullgame
    1270                    
    1271 00004c50     05a1          move    @winningteam,a1
         00004c60 00000000! 
    1272 00004c80     cf13          jrnn    qtjyskip
    1273                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   29

    1274 00004c90     1820          movk    1,a0
    1275 00004ca0     0580          move    a0,@HALT
         00004cb0 00000540- 
    1276                            
    1277                    
    1278 00004cd0     5600          clr     a0
    1279 00004ce0     0580          move    a0,@HALT
         00004cf0 00000540- 
    1280 00004d10     0580          move    a0,@gmqrtr
         00004d20 00000000! 
    1281                    
    1282 00004d40     1820          movk    1,a0
    1283 00004d50     0580          move    a0,@team1
         00004d60 00000000! 
    1284 00004d80     1840          movk    2,a0
    1285 00004d90     0580          move    a0,@team2
         00004da0 00000000! 
    1286                    
    1287 00004dc0           qtjyskip
    1288 00004dc0                   JSRP    initials_entry
    1289                    
    1290 00004e30     05a0          move    @team1,a0
         00004e40 00000000! 
    1291 00004e60     05a1          move    @team2,a1
         00004e70 00000000! 
    1292 00004e90     5001          and     a0,a1
    1293 00004ea0     4c21          move    a1,a1
    1294 00004eb0     cf0b          jrnn    qtjybomb_out            ;restart attract mode etc...
    1295                    
    1296 00004ec0     c080          jauc    amode_start             ;Start attract mode
         00004ed0 00000000! 
    1297                    
    1298 00004ef0 000000f0! paid_t  .long   P1DATA+crds_paid,P2DATA+crds_paid,P3DATA+crds_paid
    1299 00004f50 000000f0!         .long   P4DATA+crds_paid
    1300                    
    1301 00004f70           qtjybomb_out
    1302                    
    1303                    
    1304                    
    1305                    
    1306 00004f70     5600          clr     a0
    1307 00004f80     0580          move    a0,@cntrs_delay
         00004f90 00000000! 
    1308 00004fb0     09e0          movi    tuneq1_snd,a0
         00004fc0 00000040' 
    1309 00004fe0     0d5f          calla   snd_play1
         00004ff0 00000000! 
    1310                    
    1311 00005010                   JSRP    scrn_scaleout
    1312                    
    1313                    
    1314 00005080                   JSRP    scrn_scaleininit
    1315                    
    1316 000050f0     0d5f          calla   WIPEOUT                 ;CLEAN SYSTEM OUT
         00005100 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   30

    1317                    
    1318                    
    1319                    
    1320 00005120            SUBR   demogame_start                  ;Demo mode entry
    1321                    
    1322                    
    1323 00005120                   JSRP    scrn_scaleininit        ;Hide display
    1324                    
    1325 00005190     09e8          movi    security_chk-01df60H,a8
         000051a0 fffe20a0! 
    1326                    
    1327 000051c0     1820          movk    1,a0
    1328 000051d0     0580          move    a0,@dpageflip           ;ON
         000051e0 00000000! 
    1329 00005200     0580          move    a0,@dtype               ;3D
         00005210 00000000! 
    1330                    
    1331 00005230     0d5f          calla   COLRPRC                 ;Init fixed pal 0
         00005240 00014320' 
    1332                    
    1333                    
    1334                    
    1335 00005260     09e0          movi    [WRLDMID-200,0],a0
         00005270 1f380000  
    1336 00005290     0780          move    a0,@WORLDTLX,L
         000052a0 00000000! 
    1337 000052c0     5600          clr     a0
    1338 000052d0     0780          move    a0,@WORLDTLY,L
         000052e0 00000000! 
    1339                    
    1340 00005300                   SLEEPK  2
    1341                    
    1342                    
    1343 00005340     1820          movk    1,a0                    ;delay start of a second plyr flag
    1344 00005350     0580          move    a0,@NO_START
         00005360 00000550- 
    1345                    
    1346 00005380     09e0          movi    QRTRTIME,a0             ;3 minutes, 0 secs, 0 tenths
         00005390 03000000  
    1347 000053b0     0780          move    a0,@game_time,L
         000053c0 00000000! 
    1348 000053e0     5600          clr     a0
    1349 000053f0     0580          move    a0,@clock_speed
         00005400 00000000! 
    1350                                     
    1351                    
    1352 00005420           seccall1
    1353 00005420     4d01          move    a8,a1                   ;0CHheck security
    1354 00005430     0b21          addi    01df60H,a1
         00005440 0001df60  
    1355 00005460     0147          getpc   a7
    1356 00005470     0b07          addi    040H,a7
         00005480     0040  
    1357 00005490     a2ef          move    a7,-*sp,L
    1358 000054a0     0161          jump    a1                      ;Rets: A0=0 if OK!
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   31

    1359 000054b0           seccall1end
    1360                    
    1361                    
    1362 000054b0     0580          move    a0,@BTIME
         000054c0 00000000! 
    1363 000054e0     0580          move    a0,@idiot_bits
         000054f0 00000000! 
    1364 00005510     0580          move    a0,@HALT
         00005520 00000540- 
    1365 00005540     0580          move    a0,@_4plyrsingame
         00005550 00000000! 
    1366 00005570     09e1          movi    scores,a1
         00005580 00000000! 
    1367 000055a0     9201          move    a0,*a1+,L               ;Team 1
    1368 000055b0     9201          move    a0,*a1+,L               ;Team 2
    1369 000055c0     0580          move    a0,@timertcnt
         000055d0 00000d70- 
    1370 000055f0     0780          move    a0,@sc_proc,L
         00005600 00000000! 
    1371 00005620     0580          move    a0,@steals_off
         00005630 00000d20- 
    1372 00005650     0580          move    a0,@pass_off
         00005660 00000d40- 
    1373 00005680     0780          move    a0,@ballprcv_p,L
         00005690 00000000! 
    1374 000056b0     0580          move    a0,@crowd_animate
         000056c0 00000d60- 
    1375 000056e0     0580          move    a0,@name_flop
         000056f0 00000c70- 
    1376 00005710     0580          move    a0,@gmqrtr
         00005720 00000000! 
    1377 00005740     0580          move    a0,@fire_flags
         00005750 00000000! 
    1378                    
    1379                    
    1380 00005770     09c0          movi    1 ,a0
         00005780     0001  
    1381 00005790     0580          move    a0,@name_cnt
         000057a0 00000c60- 
    1382                    
    1383                    
    1384                    
    1385 000057c0     09c0          movi    -1,a0
         000057d0     ffff  
    1386 000057e0     0580          move    a0,@winningteam
         000057f0 00000000! 
    1387 00005810     0580          move    a0,@ballpnumlast        ;last player who had ball
         00005820 00000000! 
    1388 00005840     0580          move    a0,@inbound
         00005850 00000000! 
    1389 00005870     0580          move    a0,@cntl_team
         00005880 00000000! 
    1390 000058a0     0580          move    a0,@cntl_team_last
         000058b0 00000000! 
    1391 000058d0     0580          move    a0,@plyrnumonfire
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   32

         000058e0 00000000! 
    1392                    
    1393                    
    1394 00005900     1900          movk    8,a0
    1395 00005910     0580          move    a0,@ballsclastp
         00005920 00000000! 
    1396                    
    1397 00005940     18c0          movk    6,a0
    1398 00005950     0580          move    a0,@next_call
         00005960 00000000! 
    1399                    
    1400                    
    1401                    
    1402 00005980     05a0          move    @team1,a0
         00005990 00000000! 
    1403 000059b0     24a0          sll     5,a0
    1404 000059c0     0b20          addi    crt_pals,a0
         000059d0 00006a60' 
    1405 000059f0     8600  qtjynx  move    *a0,a0,L
    1406 00005a00     0780          move    a0,@crt_colors,L
         00005a10 00000d00- 
    1407                    
    1408                    
    1409                            .ref    special_heads
    1410                            .ref    our_names
    1411                    
    1412                    
    1413 00005a30     0d3f          callr   set_names
         00005a40     0f99  
    1414                    
    1415 00005a50     07a0          move    @names,a0,L
         00005a60 00000c80- 
    1416 00005a80     0780          move    a0,@original_names,L
         00005a90 00000000! 
    1417 00005ab0     07a0          move    @names+32,a0,L
         00005ac0 00000ca0- 
    1418 00005ae0     0780          move    a0,@original_names+32,L
         00005af0 00000020! 
    1419 00005b10     07a0          move    @names+64,a0,L
         00005b20 00000cc0- 
    1420 00005b40     0780          move    a0,@original_names+64,L
         00005b50 00000040! 
    1421 00005b70     07a0          move    @names+96,a0,L
         00005b80 00000ce0- 
    1422 00005ba0     0780          move    a0,@original_names+96,L
         00005bb0 00000060! 
    1423                    
    1424                    
    1425                    
    1426                            .ref    setup_speech
    1427 00005bd0     0d5f          calla   setup_speech
         00005be0 00000000! 
    1428                    
    1429 00005c00     1820          movk    1,a0
    1430 00005c10     0580          move    a0,@gndstat             ;On
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   33

         00005c20 00000000! 
    1431                    
    1432                    
    1433                    
    1434                    
    1435 00005c40     05a0          move    @GAMSTATE,a0
         00005c50 00000530- 
    1436 00005c70     1420          subk    INAMODE,a0
    1437 00005c80     ca04          jreq    qtjydemo
    1438                    
    1439 00005c90     1860          movk    INGAME,a0
    1440 00005ca0     0580          move    a0,@GAMSTATE
         00005cb0 00000530- 
    1441                    
    1442 00005cd0           qtjydemo
    1443 00005cd0     5600          clr     a0
    1444 00005ce0     0580          move    a0,@NO_START
         00005cf0 00000550- 
    1445 00005d10     0580          move    a0,@inmatchup
         00005d20 00000000! 
    1446                    
    1447                    
    1448 00005d40                   CREATE  STAT_PID,status_display
    1449                    
    1450                    
    1451                            .if     IMGVIEW
    1452                            .ref    anipts_debug
    1453                            clr     a8
    1454                            CREATE0 anipts_debug
    1455                            movk    3,a8
    1456                            CREATE0 anipts_debug
    1457                            .endif
    1458                    
    1459 00005dc0     0d3f          callr   game_initobjs
         00005dd0     02ff  
    1460                    
    1461                    
    1462 00005de0                   CREATE0 ball_main
    1463 00005e50                   CREATE  gclockid,clock_strt     ;start clock
    1464 00005ed0                   CREATE0 bracket_drw
    1465                    
    1466                    
    1467 00005f40                   CREATE0 close
    1468                    
    1469 00005fb0     0d5f          calla   clear_player_stats
         00005fc0 00000000! 
    1470                    
    1471                    
    1472                            .ref    sound_watchdog
    1473 00005fe0                   CREATE0 sound_watchdog
    1474                    
    1475                    
    1476                            .ref    name_call
    1477 00006050                   CREATE0 name_call
    1478                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   34

    1479 000060c0                   CREATE0 scream_snd
    1480 00006130                   CREATE0 check_idiot
    1481                    
    1482                            .ref    doflshs
    1483 000061a0                   CREATE0 doflshs
    1484                    
    1485 00006210     09e8          MOVI    [62,1],A8               ;START AT COLOR 60, CYCLE 1 COLOR
         00006220 003e0001  
    1486 00006240     09e9          MOVI    scorep,A9               ;PAL NAME
         00006250 00000000! 
    1487 00006270     09ea          MOVI    COLTAB_RNBW,A10         ;TABLE TO CYCLE WITH
         00006280 000065d0' 
    1488 000062a0     186b          MOVK    3,A11                   ;RATE OF CYCLE IN TICKS
    1489 000062b0                   CREATE  CYCPID,CYCLE_TABLE      ;START PROCESS TO DO CYCLE
    1490                    
    1491 00006330     0d3f          callr   start_arws
         00006340     00e1  
    1492                    
    1493                    
    1494                    
    1495                    
    1496 00006350     c080          jauc    plyr_start
         00006360 00000000! 
    1497                    
    1498 00006380            SUBR   join_cyc
    1499 00006380     09e8          MOVI    [29,1],A8               ;START AT COLOR 60, CYCLE 1 COLOR
         00006390 001d0001  
    1500 000063b0     09e9          MOVI    timers_b,A9             ;PAL NAME
         000063c0 00000000! 
    1501 000063e0     09ea          MOVI    COLTAB_RNBW,A10         ;TABLE TO CYCLE WITH
         000063f0 000065d0' 
    1502 00006410     186b          MOVK    3,A11                   ;RATE OF CYCLE IN TICKS
    1503 00006420                   CREATE  CYCPID,CYCLE_TABLE      ;START PROCESS TO DO CYCLE
    1504                    
    1505 000064a0     09e8          MOVI    [29,1],A8               ;START AT COLOR 60, CYCLE 1 COLOR
         000064b0 001d0001  
    1506 000064d0     09e9          MOVI    timers_r,A9             ;PAL NAME
         000064e0 00000000! 
    1507 00006500     09ea          MOVI    COLTAB_RNBW,A10         ;TABLE TO CYCLE WITH
         00006510 000065d0' 
    1508 00006530     186b          MOVK    3,A11                   ;RATE OF CYCLE IN TICKS
    1509 00006540                   CREATE  CYCPID,CYCLE_TABLE      ;START PROCESS TO DO CYCLE
    1510 000065c0     0960          rets
    1511                    
    1512                    
    1513                            .DEF    COLTAB_RNBW
    1514                    
    1515 000065d0           COLTAB_RNBW
    1516 000065d0     0380          .WORD   0380H,1380H,2380H,3380H,4380H,5380H,6380H,7380H,7300H
    1517 00006660     7280          .WORD   7280H,7200H,7180H,7080H,7008H,7008H,7010H,7010H,701CH
    1518 000066f0     701c          .WORD   701CH,601CH,501CH,409CH,309CH,209CH,219CH,029CH,039CH
    1519 00006780     139c          .WORD   139CH,239CH,339CH,539CH,739CH,7390H,7380H,6380H,4380H
    1520 00006810     0380          .WORD   0380H,1380H,2380H,3380H,4380H,5380H,6380H,7380H,7300H
    1521 000068a0     7280          .WORD   7280H,7200H,7180H,7080H,7008H,7008H,7010H,7010H,701CH
    1522 00006930     701c          .WORD   701CH,601CH,501CH,409CH,309CH,209CH,219CH,029CH,039CH
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   35

    1523 000069c0     139c          .WORD   139CH,239CH,339CH,539CH,739CH,7390H,7380H,6380H,4380H
    1524 00006a50     ffff          .word   -1
    1525                    
    1526                    
    1527 00006a60           crt_pals
    1528 00006a60 00000000!         .long   CRT_ATL_P,CRT_BOS_P,CRT_CHA_P,CRT_CHI2P
    1529 00006ae0 00000000!         .long   CRT_CLE_P,CRT_MIN_P,CRT_DEN_P,CRT_DET_P,crtblupur,CRT_HOU_P
    1530 00006ba0 00000000!         .long   CRT_IND_P,CRT_CLP_P,CRT_LAK_P,CRT_MIA_P,CRT_MIL_P,CRT_ORL2P
    1531 00006c60 00000000!         .long   CRT_NEJ_P,CRT_NEY_P,CRT_ORL_P
    1532 00006cc0 00000000!         .long   CRT_PHI_P,CRT_PHO_P,CRT_POR_P,CRT_SAC_P
    1533 00006d40 00000000!         .long   CRT_SAN_P,crtgrnyel,CRT_UTA_P
    1534 00006da0 00000000!         .long   CRT_WAS_P,crtblupur
    1535                    
    1536 00006de0           crt_pals_z
    1537 00006de0 00021bd0"         .long   CRD_ATL_P+32,CRD_BOS_P+32,CRD_CHA_P+32,CRD_CHI2P+32
    1538 00006e60 00021f40"         .long   CRD_CLE_P+32,CRD_MIN_P+32,CRD_DEN_P+32,CRD_DET_P+32,CRD_DET_P+32,CRD_HOU_P+32
    1539 00006f20 00022410"         .long   CRD_IND_P+32,CRD_CLP_P+32,CRD_LAK_P+32,CRD_MIA_P+32,CRD_MIL_P+32,CRD_ORL2P+32
    1540 00006fe0 00022780"         .long   CRD_NEJ_P+32,CRD_NEY_P+32,CRD_ORL_P+32
    1541 00007040 00022200"         .long   CRD_DET_P+32,CRD_PHO_P+32,CRD_POR_P+32,CRD_SAC_P+32
    1542 000070c0 00022c50"         .long   CRD_SAN_P+32,CRD_SEA_P+32,CRD_UTA_P+32
    1543 00007120 00022f10"         .long   CRD_WAS_P+32,CRD_DET_P+32
    1544                    
    1545                    
    1546                    
    1547 00007160            SUBR   start_arws
    1548                    
    1549                    
    1550 00007160     1868          movk    3,a8                    ;0DHo init stuff for humans
    1551 00007170           qtjypsilp
    1552 00007170     09cb          movi    PDSIZE,a11
         00007180     0130  
    1553 00007190     5f0b          mpyu    a8,a11
    1554 000071a0     0b2b          addi    P1DATA,a11
         000071b0 00000000! 
    1555 000071d0                   CREATE  ARWPID,plyr_lost                ;Pass A8 (0-3)
    1556 00007250     1428  qtjynoplyr      subk    1,a8
    1557 00007260     c5f0          jrge    qtjypsilp
    1558                    
    1559                            .ref    stick_numbers
    1560 00007270     09ea          movi    P1DATA,a10
         00007280 00000000! 
    1561 000072a0                   CREATE  ARWPID,stick_numbers
    1562 00007320     09ea          movi    P2DATA,a10
         00007330 00000000! 
    1563 00007350                   CREATE  ARWPID,stick_numbers
    1564 000073d0     09ea          movi    P3DATA,a10
         000073e0 00000000! 
    1565 00007400                   CREATE  ARWPID,stick_numbers
    1566 00007480     09ea          movi    P4DATA,a10
         00007490 00000000! 
    1567 000074b0                   CREATE  ARWPID,stick_numbers
    1568                    
    1569                            .ref    stick_cpu
    1570 00007530     576b          clr     a11
    1571 00007540     09ea          movi    P1DATA,a10
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   36

         00007550 00000000! 
    1572 00007570                   CREATE  ARWPID,stick_cpu
    1573 000075f0     182b          movk    1,a11
    1574 00007600     09ea          movi    P2DATA,a10
         00007610 00000000! 
    1575 00007630                   CREATE  ARWPID,stick_cpu
    1576 000076b0     184b          movk    2,a11
    1577 000076c0     09ea          movi    P3DATA,a10
         000076d0 00000000! 
    1578 000076f0                   CREATE  ARWPID,stick_cpu
    1579 00007770     186b          movk    3,a11
    1580 00007780     09ea          movi    P4DATA,a10
         00007790 00000000! 
    1581 000077b0                   CREATE  ARWPID,stick_cpu
    1582                    
    1583                    
    1584 00007830                   CREATE0 delay_sparks
    1585                    
    1586 000078a0     0960          rets
    1587                    
    1588                    
    1589 000078b0           delay_sparks
    1590                            .ref    stick_spark
    1591                            .ref    stick_spark2
    1592 000078b0                   SLEEPK  10
    1593 000078f0     07a0          move    @plyrproc_t,a0,L
         00007900 00000000! 
    1594 00007920     b600          move    *a0(plyr_attrib_p),a0,L
         00007930     0150  
    1595 00007940     b600          move    *a0(PAT_HEADT_p),a0,L
         00007950     0120  
    1596 00007960     0b60          cmpi    EB_H,a0
         00007970 ffffffff! 
    1597 00007990     ca04          jrz     qtjydoit1
    1598 000079a0     0b60          cmpi    JTO_H,a0
         000079b0 ffffffff! 
    1599 000079d0     cb18          jrnz    qtjyck2
    1600                    
    1601                    
    1602 000079e0     576b  qtjydoit1       clr     a11
    1603 000079f0     09ea          movi    P1DATA,a10
         00007a00 00000000! 
    1604 00007a20                   CREATE  ARWPID,stick_spark
    1605 00007aa0     576b          clr     a11
    1606 00007ab0     09ea          movi    P1DATA,a10
         00007ac0 00000000! 
    1607 00007ae0                   CREATE  ARWPID,stick_spark2
    1608 00007b60           qtjyck2
    1609 00007b60     07a0          move    @plyrproc_t+32,a0,L
         00007b70 00000020! 
    1610 00007b90     b600          move    *a0(plyr_attrib_p),a0,L
         00007ba0     0150  
    1611 00007bb0     b600          move    *a0(PAT_HEADT_p),a0,L
         00007bc0     0120  
    1612 00007bd0     0b60          cmpi    EB_H,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   37

         00007be0 ffffffff! 
    1613 00007c00     ca04          jrz     qtjydoit2
    1614 00007c10     0b60          cmpi    JTO_H,a0
         00007c20 ffffffff! 
    1615 00007c40     cb18          jrnz    qtjyck3
    1616                    
    1617                    
    1618 00007c50     182b  qtjydoit2       movk    1,a11
    1619 00007c60     09ea          movi    P2DATA,a10
         00007c70 00000000! 
    1620 00007c90                   CREATE  ARWPID,stick_spark
    1621 00007d10     182b          movk    1,a11
    1622 00007d20     09ea          movi    P2DATA,a10
         00007d30 00000000! 
    1623 00007d50                   CREATE  ARWPID,stick_spark2
    1624 00007dd0           qtjyck3
    1625 00007dd0     07a0          move    @plyrproc_t+64,a0,L
         00007de0 00000040! 
    1626 00007e00     b600          move    *a0(plyr_attrib_p),a0,L
         00007e10     0150  
    1627 00007e20     b600          move    *a0(PAT_HEADT_p),a0,L
         00007e30     0120  
    1628 00007e40     0b60          cmpi    EB_H,a0
         00007e50 ffffffff! 
    1629 00007e70     ca04          jrz     qtjydoit3
    1630 00007e80     0b60          cmpi    JTO_H,a0
         00007e90 ffffffff! 
    1631 00007eb0     cb18          jrnz    qtjyck4
    1632                    
    1633                    
    1634 00007ec0     184b  qtjydoit3       movk    2,a11
    1635 00007ed0     09ea          movi    P3DATA,a10
         00007ee0 00000000! 
    1636 00007f00                   CREATE  ARWPID,stick_spark
    1637 00007f80     184b          movk    2,a11
    1638 00007f90     09ea          movi    P3DATA,a10
         00007fa0 00000000! 
    1639 00007fc0                   CREATE  ARWPID,stick_spark2
    1640 00008040           qtjyck4
    1641 00008040     07a0          move    @plyrproc_t+96,a0,L
         00008050 00000060! 
    1642 00008070     b600          move    *a0(plyr_attrib_p),a0,L
         00008080     0150  
    1643 00008090     b600          move    *a0(PAT_HEADT_p),a0,L
         000080a0     0120  
    1644 000080b0     0b60          cmpi    EB_H,a0
         000080c0 ffffffff! 
    1645 000080e0     ca04          jrz     qtjydoit4
    1646 000080f0     0b60          cmpi    JTO_H,a0
         00008100 ffffffff! 
    1647 00008120     cb18          jrnz    qtjyck5
    1648                    
    1649                    
    1650 00008130     186b  qtjydoit4       movk    3,a11
    1651 00008140     09ea          movi    P4DATA,a10
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   38

         00008150 00000000! 
    1652 00008170                   CREATE  ARWPID,stick_spark
    1653 000081f0     186b          movk    3,a11
    1654 00008200     09ea          movi    P4DATA,a10
         00008210 00000000! 
    1655 00008230                   CREATE  ARWPID,stick_spark2
    1656 000082b0           qtjyck5
    1657 000082b0                   DIE
    1658                    
    1659                    
    1660 000082e0           check_idiot
    1661                    
    1662 000082e0     09ca          movi    60,a10
         000082f0     003c  
    1663                    
    1664 00008300           nybnc1  SLEEP   TSEC
    1665 00008350     05a0          move    @HALT,a0
         00008360 00000540- 
    1666 00008380     cbf7           jrnz   nybnc1
    1667                    
    1668 00008390     3d4a          dsj     a10,nybnc1
    1669                    
    1670 000083a0     09c2          movi    30,a2
         000083b0     001e  
    1671                    
    1672 000083c0     05a0          move    @P1DATA+ply_idiot_use,a0
         000083d0 00000120! 
    1673 000083f0     4840          cmp     a2,a0
    1674 00008400     c703          jrgt    nybnck2
    1675 00008410     5621          clr     a1
    1676 00008420     0d3f          callr   try_ib
         00008430     002e  
    1677 00008440           nybnck2
    1678 00008440     05a0          move    @P2DATA+ply_idiot_use,a0
         00008450 00000120! 
    1679 00008470     4840          cmp     a2,a0
    1680 00008480     c703          jrgt    nybnck3
    1681 00008490     1821          movk    1,a1
    1682 000084a0     0d3f          callr   try_ib
         000084b0     0026  
    1683 000084c0           nybnck3
    1684 000084c0     05a0          move    @P3DATA+ply_idiot_use,a0
         000084d0 00000120! 
    1685 000084f0     4840          cmp     a2,a0
    1686 00008500     c703          jrgt    nybnck4
    1687 00008510     1841          movk    2,a1
    1688 00008520     0d3f          callr   try_ib
         00008530     001e  
    1689 00008540           nybnck4
    1690 00008540     05a0          move    @P4DATA+ply_idiot_use,a0
         00008550 00000120! 
    1691 00008570     4840          cmp     a2,a0
    1692 00008580     c703          jrgt    nybnckx
    1693 00008590     1861          movk    3,a1
    1694 000085a0     0d3f          callr   try_ib
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   39

         000085b0     0016  
    1695                    
    1696 000085c0           nybnckx SLEEP   6*60
    1697                    
    1698 00008610     09e0          movi    organ1_snd,a0
         00008620 000000c0' 
    1699 00008640     05a1          move    @HCOUNT,a1
         00008650 c00001c0  
    1700 00008670     1fc1          btst    1,a1
    1701 00008680     cb03          jrnz    nybnckk
    1702 00008690     09e0          movi    organ2_snd,a0
         000086a0 00000100' 
    1703 000086c0           nybnckk
    1704 000086c0     0d5f          calla   snd_play1ovr
         000086d0 00000000! 
    1705                    
    1706 000086f0                   DIE
    1707                            
    1708                    
    1709 00008720           try_ib
    1710 00008720     18e0          movk    7,a0                    ;Use turbo to run
    1711 00008730     c080          jauc    idiot_box
         00008740 00000000! 
    1712                    
    1713                    
    1714                    
    1715 00008760           close   
    1716 00008760                   SLEEPK  5
    1717                    
    1718                    
    1719                    
    1720 000087a0                   JSRP    scrn_scalein
    1721                    
    1722                    
    1723 00008810     5600          clr     a0
    1724 00008820     0580          move    a0,@IRQSKYE
         00008830 00000000! 
    1725                    
    1726                    
    1727 00008850     1820          movk    1,a0
    1728 00008860     0580          move    a0,@HALT
         00008870 00000540- 
    1729                    
    1730                    
    1731                            .ref    instructions
    1732 00008890                   JSRP    instructions
    1733                    
    1734 00008900     5600          clr     a0
    1735 00008910     0580          move    a0,@HALT
         00008920 00000540- 
    1736 00008940     0580          move    a0,@cntrs_delay
         00008950 00000000! 
    1737                    
    1738 00008970     09e0          movi    tip_snd,a0
         00008980 00000000' 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   40

    1739 000089a0     0d5f          calla   snd_play1ovr
         000089b0 00000000! 
    1740                    
    1741                    
    1742                    
    1743 000089d0                   DIE
    1744                    
    1745                    
    1746 00008a00           scream_snd
    1747 00008a00     09e0          movi    scrm1_snd,a0
         00008a10 00008cd0' 
    1748 00008a30     0d5f          calla   snd_play1
         00008a40 00000000! 
    1749 00008a60                   SLEEP   85
    1750 00008ab0     09e0          movi    scrm2_snd,a0
         00008ac0 00008d10' 
    1751 00008ae0     0d5f          calla   snd_play1
         00008af0 00000000! 
    1752 00008b10                   SLEEP   85
    1753 00008b60     09e0          movi    scrm3_snd,a0
         00008b70 00008d50' 
    1754 00008b90     0d5f          calla   snd_play1
         00008ba0 00000000! 
    1755 00008bc0                   SLEEP   85
    1756 00008c10     09e0          movi    scrm4_snd,a0
         00008c20 00008d90' 
    1757 00008c40     0d5f          calla   snd_play1
         00008c50 00000000! 
    1758 00008c70                   SLEEP   85
    1759 00008cc0     c0d3          jruc    scream_snd
    1760                    
    1761                            .def    scrm1_snd,scrm2_snd,scrm3_snd,scrm4_snd
    1762                    
    1763 00008cd0     f540  scrm1_snd       .word   0f540H,10,0813dH,0
    1764 00008d10     f040  scrm2_snd       .word   0f040H,10,0814bH,0
    1765 00008d50     f440  scrm3_snd       .word   0f440H,10,0815eH,0
    1766 00008d90     f540  scrm4_snd       .word   0f540H,10,0815fH,0      ;<--- check channel on this
    1767                    
    1768                    
    1769 00008dd0            SUBRP  game_initobjs
    1770                    
    1771                    
    1772 00008dd0     09eb          movi    mxrzinit_t,a11          ;>Setup crowd, hoops, side crowd
         00008de0 000094d0' 
    1773 00008e00     c05f          jruc    mxrznext
    1774 00008e10           mxrzlp
    1775 00008e10     0b40          cmpi    4001,a0                 ;>Start process
         00008e20     f05e  
    1776 00008e30     cb06          jrne    mxrzsvptr
    1777 00008e40     5621          clr     a1
    1778 00008e50     9767          move    *a11+,a7,L              ;*Code
    1779 00008e60     0d5f          calla   GETPRC                  ;Pass last obj in A8
         00008e70 00000000! 
    1780 00008e90     c056          jruc    mxrznext
    1781                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   41

    1782 00008ea0     0b40  mxrzsvptr       cmpi    4002,a0                 ;>Save variable
         00008eb0     f05d  
    1783 00008ec0     cb03          jrne    mxrzobj
    1784 00008ed0     9761          move    *a11+,a1,L              ;*Var
    1785 00008ee0     8301          move    a8,*a1,L
    1786 00008ef0     c050          jruc    mxrznext
    1787                    
    1788 00008f00     9561  mxrzobj move    *a11+,a1                ;Y
    1789 00008f10     2600          sll     16,a0
    1790 00008f20     2601          sll     16,a1
    1791 00008f30     9563          move    *a11+,a3                ;Z
    1792 00008f40     9569          move    *a11+,a9                ;Z offset
    1793 00008f50     9564          move    *a11+,a4
    1794 00008f60     0ba4          ori     DMAWNZ|M_NOCOLL,a4
         00008f70 00008802  
    1795 00008f90     9762          move    *a11+,a2,L
    1796 00008fa0     09c5          movi    CLSDEAD,a5
         00008fb0     2000  
    1797 00008fc0     56c6          clr     a6
    1798 00008fd0     56e7          clr     a7
    1799 00008fe0     0d5f          calla   BEGINOBJ
         00008ff0 00000000! 
    1800                    
    1801 00009010     b128          move    a9,*a8(OMISC)
         00009020     0210  
    1802 00009030     8440          move    *a2,a0                  ;Width
    1803 00009040     25e0          sll     15,a0
    1804 00009050     b208          move    a0,*a8(OXANI),L         ;Save anipt
         00009060     01e0  
    1805                    
    1806                    
    1807 00009070     1f24          btst    B_3DQ,a4
    1808 00009080     ca37          jrz     mxrznext
    1809                                                            ;0CHonvert 3D to 3DQ
    1810 00009090     4123          add     a9,a3
    1811 000090a0     0be3          subi    GZBASE,a3
         000090b0     fc81  
    1812 000090c0     4c66          move    a3,a6
    1813 000090d0     2503          sll     8,a3                    ;*256
    1814 000090e0     09c1          movi    725,a1
         000090f0     02d5  
    1815 00009100     5a23          divu    a1,a3
    1816 00009110     2483          sll     4,a3                    ;*16
    1817 00009120     0b23          addi    gndpos_t,a3
         00009130 00000000! 
    1818 00009150     b268          move    a3,*a8(ODATA_p),L
         00009160     01c0  
    1819                    
    1820 00009170     4cc3          move    a6,a3
    1821 00009180     2be6          sra     1,a6                    ;Z/2
    1822 00009190     2ba3          sra     3,a3                    ;Z/8
    1823 000091a0     4466          sub     a3,a6                   ;=Z/2.667
    1824                    
    1825 000091b0     0b06          addi    GND_Y,a6
         000091c0     004c  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   42

    1826 000091d0     b500          move    *a8(OYPOS),a0
         000091e0     00b0  
    1827 000091f0     40c0          add     a6,a0
    1828 00009200     b008          move    a0,*a8(OYPOS)
         00009210     00b0  
    1829                    
    1830                    
    1831 00009220     b707          move    *a8(OXVAL),a7,L         ;X
         00009230     0080  
    1832 00009240     0d07          subi    [02000H,0],a7
         00009250 dfffffff  
    1833 00009270     b705          move    *a8(OXANI),a5,L
         00009280     01e0  
    1834 00009290     40a7          add     a5,a7
    1835 000092a0     2aa7          sra     16-5,a7                 ;/2048 (leave 5 bits frac)
    1836                    
    1837 000092b0     b502          move    *a8(OZPOS),a2           ;894 to 1379 (Z range 486)
         000092c0     00d0  
    1838 000092d0     b503          move    *a8(OMISC),a3           ;Z offset
         000092e0     0210  
    1839 000092f0     4062          add     a3,a2
    1840 00009300     4c46          move    a2,a6
    1841                    
    1842 00009310     0b02          addi    (819-GZBASE),a2         ;768 to ?
         00009320     ffb5  
    1843 00009330     5c47          mpys    a2,a7
    1844 00009340     4ce3          move    a7,a3
    1845 00009350     2bc3          sra     2,a3                    ;/4
    1846 00009360     4467          sub     a3,a7
    1847 00009370     2be3          sra     1,a3                    ;/2
    1848 00009380     4467          sub     a3,a7
    1849 00009390     2a47          sra     14,a7                   ;/16k
    1850 000093a0     0b07          addi    200,a7
         000093b0     00c8  
    1851 000093c0     2a05          sra     16,a5
    1852 000093d0     44a7          sub     a5,a7                   ;-X anipt
    1853                    
    1854 000093e0     b0e8          move    a7,*a8(OXPOS)
         000093f0     0090  
    1855                    
    1856                    
    1857 00009400     9560  mxrznext        move    *a11+,a0                ;X
    1858 00009410     0b40          cmpi    4000,a0
         00009420     f05f  
    1859 00009430     cb9d          jrne    mxrzlp                  ;!End?
    1860                    
    1861 00009440     05a0          move    @team1,a0
         00009450 00000000! 
    1862 00009470     0580          move    a0,@oteam1
         00009480 00000000! 
    1863 000094a0     0d3f          callr   random_ads
         000094b0     0663  
    1864 000094c0     0960          rets
    1865                    
    1866                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   43

    1867                    
    1868                            .asg    M_3DQ|M_NOSCALE,F
    1869                            .asg    M_3DQ|M_NOSCALE|M_FLIPH,FF
    1870                    
    1871                            .asg    8,Y
    1872                            .asg    CZMID,Z
    1873                    
    1874 000094d0           mxrzinit_t
    1875 000094d0     ff4d          .word   0ff4aH+3,0ff49H+Y-5,Z-18,18,F
    1876 00009520 00000000!         .long   hooptop
    1877 00009540     ff5b          .word   0ff58H+3,0ff46H-7+Y,Z+1,0,F
    1878 00009590 00000000!         .long   hoopbot
    1879 000095b0     ff2a          .word   0ff27H+3,0ff4bH+2+Y,Z-17,17,F
    1880 00009600 00000000!         .long   back2
    1881 00009620                   WL      4001,backboard_ani
    1882 00009650     ff78          .word   0ff75H+3,0ff7aH+2+Y-1,Z,0,F
    1883 000096a0 00000000!         .long   rimbase
    1884 000096c0     ff7b          .word   0ff78H+3,0ff7dH+2+Y,Z-10,0,F
    1885 00009710 00000000!         .long   rim1b
    1886 00009730                   WL      4002,rimlb
    1887 00009760     ff7d          .word   0ff7aH+3,0ff7aH+2+Y,Z+10,0,F
    1888 000097b0 00000000!         .long   rim1f
    1889 000097d0                   WL      4002,rimlf
    1890                    
    1891                            .asg    2,X
    1892                    
    1893 00009800     0243          .word   X+0241H,0ff49H+Y-5,Z-18,18,FF
    1894 00009850 00000000!         .long   hooptop
    1895 00009870     0236          .word   X+0234H,0ff46H-7+Y,Z,0,FF
    1896 000098c0 00000000!         .long   hoopbot
    1897 000098e0     0269          .word   X+0267H,0ff4bH+2+Y,Z-17,17,FF
    1898 00009930 00000000!         .long   back2
    1899 00009950                   WL      4001,backboard_svrptr
    1900 00009980     0219          .word   X+0215H+2,0ff7aH+2+Y-1,Z,0,FF
    1901 000099d0 00000000!         .long   rimbase
    1902 000099f0     0214          .word   X+0212H,0ff7dH+2+Y,Z-10,0,FF
    1903 00009a40 00000000!         .long   rim1b
    1904 00009a60                   WL      4002,rimrb
    1905 00009a90     0212          .word   X+0210H,0ff7aH+2+Y,Z+10,0,FF
    1906 00009ae0 00000000!         .long   rim1f
    1907 00009b00                   WL      4002,rimrf
    1908                    
    1909 00009b30     ff92          .word   200-310,1,599,500,F
    1910 00009b80 000256c0"         .long   reflc2
    1911 00009ba0                   WL      4001,get_proper_pal
    1912 00009bd0     ff9a          .word   200-302,3,720,500,F
    1913 00009c20 00025630"         .long   reflc1
    1914 00009c40                   WL      4001,get_proper_pal
    1915 00009c70     002c          .word   200-156,0,590,500,F
    1916 00009cc0 00025750"         .long   reflc3
    1917 00009ce0                   WL      4001,get_proper_pal
    1918 00009d10     0036          .word   200-146,0,718,500,F
    1919 00009d60 000257e0"         .long   reflc4
    1920                    
    1921                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   44

    1922 00009d80                   WL      4001,get_proper_pal
    1923 00009db0     0154          .word   200+140,0,590,500,F
    1924 00009e00 00025750"         .long   reflc3
    1925 00009e20                   WL      4001,get_proper_pal
    1926 00009e50     014c          .word   200+132,0,718,500,F
    1927 00009ea0 000257e0"         .long   reflc4
    1928 00009ec0                   WL      4001,get_proper_pal
    1929 00009ef0     0200          .word   200+312,1,599,500,FF
    1930 00009f40 000256c0"         .long   reflc2
    1931 00009f60                   WL      4001,get_proper_pal
    1932 00009f90     01f6          .word   200+302,3,720,500,FF
    1933 00009fe0 00025630"         .long   reflc1
    1934 0000a000                   WL      4001,get_proper_pal
    1935                    
    1936                            .asg    100,X
    1937                            .asg    -12,Y
    1938                    
    1939 0000a030     fec8          .word   0fec8H,Y-95,200,0,0
    1940 0000a080 00025870"         .long   topcrwd
    1941 0000a0a0     fec8          .word   0fec8H,Y,200,0,0
    1942 0000a0f0 00026e60"         .long   crowd40
    1943 0000a110                   WL      4002,bigcrwd1_ptr
    1944 0000a140     0054          .word   054H,Y-95,200,0,0
    1945 0000a190 00025870"         .long   topcrwd
    1946 0000a1b0     0054          .word   054H,Y,200,0,0
    1947 0000a200 00026e60"         .long   crowd40
    1948 0000a220                   WL      4002,bigcrwd2_ptr
    1949 0000a250     036a          .word   036aH,Y-95,200,0,M_FLIPH
    1950 0000a2a0 00025870"         .long   topcrwd
    1951 0000a2c0     036a          .word   036aH,Y,200,0,M_FLIPH
    1952 0000a310 00026e60"         .long   crowd40
    1953 0000a330                   WL      4002,bigcrwd3_ptr
    1954                    
    1955                    
    1956                            .asg    200-56,X
    1957                            .asg    -43,Y
    1958                            .asg    919,Z
    1959 0000a360     ff9b          .word   X-245,Y,Z,0,F
    1960 0000a3b0 000263b0"         .long   crowd3
    1961 0000a3d0                   WL      4002,crwd5_ptr
    1962 0000a400     002a          .word   02aH,Y,Z,0,F
    1963 0000a450 00025fc0"         .long   newtbl3
    1964 0000a470     01ef          .word   01efH,Y,Z,0,FF
    1965 0000a4c0 000263b0"         .long   crowd3
    1966 0000a4e0                   WL      4002,crwd6_ptr
    1967                    
    1968                            .asg    200-63,X
    1969                            .asg    -48,Y
    1970                            .asg    947,Z
    1971 0000a510     fed9          .word   0fed9H,0ffccH,Z+8,0,F
    1972 0000a560 00025d80"         .long   usher
    1973 0000a580     ff9c          .word   0ffa4H+12-20,0ffc0H,Z,0,F
    1974 0000a5d0 00025d80"         .long   usher
    1975 0000a5f0     0035          .word   035H,0ffc6H,Z,0,FF
    1976 0000a640 00025d80"         .long   usher
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   45

    1977 0000a660     016a          .word   016aH,0ffd6H-12,Z,0,FF
    1978 0000a6b0 00025d80"         .long   usher
    1979 0000a6d0     01ef          .word   01efH,0ffc0H-0,Z,0,FF
    1980 0000a720 00025d80"         .long   usher
    1981 0000a740     02b4          .word   02b4H,0ffcfH,Z+5,0,FF
    1982 0000a790 00025d80"         .long   usher
    1983 0000a7b0     fed9          .word   X-256-177+1,Y+2,Z,0,F
    1984 0000a800 00026320"         .long   crowd2b
    1985                    
    1986 0000a820     ff85          .word   0ff85H,0ffd0H,Z,0,F
    1987 0000a870 00026290"         .long   crowd2a
    1988 0000a890                   WL      4002,crwd3_ptr
    1989                    
    1990 0000a8c0     ff83          .word   0ff83H,0ffcfH,Z,0,F
    1991 0000a910 00025ab0"         .long   newtbl2
    1992                    
    1993 0000a930     007f          .word   07fH,0ffcfH,Z,0,F
    1994 0000a980 00025900"         .long   table2
    1995 0000a9a0     0203          .word   0203H,0ffd0H,Z,0,FF
    1996 0000a9f0 00026290"         .long   crowd2a
    1997 0000aa10                   WL      4002,crwd4_ptr
    1998                    
    1999 0000aa40     02b3          .word   X+87+257+216-6,Y+2,Z,0,FF
    2000 0000aa90 00026320"         .long   crowd2b
    2001                    
    2002                            .asg    200-53,X
    2003                            .asg    -40,Y
    2004                            .asg    985,Z
    2005 0000aab0     fedd          .word   X-438,Y-3,Z,0,F
    2006 0000ab00 00026200"         .long   crowd1b
    2007 0000ab20     ffb0          .word   0ffb0H,0ffd9H,Z,0,F
    2008 0000ab70 00026170"         .long   crowd1a
    2009 0000ab90                   WL      4002,crwd1_ptr
    2010 0000abc0     ff98          .word   0ff98H,0ffd9H,Z,0,F
    2011 0000ac10 00025a20"         .long   newtbl1
    2012                    
    2013                    
    2014                    
    2015                    
    2016 0000ac30     ffa5          .word   0ffa5H,0ffd9H,Z,0,F
    2017 0000ac80 00024c10"         .long   ad1                             ;ad at left
    2018 0000aca0                   WL      4002,ad1_ptr
    2019                    
    2020 0000acd0     00dd          .word   0ddH,0ffd3H,Z,0,F
    2021 0000ad20 00024d30"         .long   ad2                             ;ad at left
    2022 0000ad40                   WL      4002,ad2_ptr
    2023                    
    2024 0000ad70     0039          .word   200-144+2-1,6,Z-50,50,F
    2025 0000adc0 00024ca0"         .long   ad1ref                          ;left reflection
    2026 0000ade0                   WL      4002,ad1ref_ptr
    2027 0000ae10     00f1          .word   200+41+0,6,Z-50,50,F
    2028 0000ae60 00024dc0"         .long   ad2ref                          ;rgt reflection
    2029 0000ae80                   WL      4002,ad2ref_ptr
    2030                    
    2031                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   46

    2032                    
    2033                    
    2034 0000aeb0     01db          .word   01dbH,0ffd9H,Z,0,FF             ;for animating top crowd
    2035 0000af00 00026170"         .long   crowd1a
    2036 0000af20                   WL      4002,crwd2_ptr
    2037                    
    2038 0000af50     02ae          .word   X+68+241+230,Y-3,Z,0,FF
    2039 0000afa0 00026200"         .long   crowd1b
    2040                    
    2041 0000afc0     0000          .word   200-200,7,Z-50,50,F
    2042 0000b010 00025990"         .long   cdre0
    2043                    
    2044                    
    2045 0000b030     018b          .word   018bH,7,Z-50,50,FF      ;flipped camera guy reflections
    2046 0000b080 00025990"         .long   cdre0
    2047                    
    2048                    
    2049                            .asg    200-450,X
    2050                            .asg    985,Z
    2051                    
    2052                    
    2053                    
    2054 0000b0a0     ff00          .word   0Ff00H,0FFDEH,Z,0,F
    2055 0000b0f0 000268c0"         .long   sdcrwd8
    2056 0000b110                   WL      4002,sl8_ptr
    2057 0000b140     fefa          .word   0FEFaH,0FFDBH,Z+28,0,F
    2058 0000b190 00026830"         .long   sdcrwd7
    2059 0000b1b0                   WL      4002,sl7_ptr
    2060 0000b1e0     fef8          .word   0FEF8H,0FFD4H,Z+70,0,F
    2061 0000b230 000267a0"         .long   sdcrwd6
    2062 0000b250                   WL      4002,sl6_ptr
    2063 0000b280     feed          .word   0FEEDH,0FFCEH,Z+98,0,F
    2064 0000b2d0 00026710"         .long   sdcrwd5
    2065 0000b2f0                   WL      4002,sl5_ptr
    2066                    
    2067                    
    2068                    
    2069                    
    2070                    
    2071 0000b320     ff54          .word   0Ff54H,0FFe9H,03efH,42h,F
    2072 0000b370 000280f0"         .long   cheer1
    2073 0000b390                   WL      4002,cheer1_ptr
    2074 0000b3c0     ff5b          .word   0Ff5bH,0FFe7H,03e0H,39h,F
    2075 0000b410 00028570"         .long   cary1
    2076 0000b430                   WL      4002,cheer2_ptr
    2077                    
    2078                    
    2079                    
    2080                    
    2081                    
    2082 0000b460     feeb          .word   0FEECH-1,0FFB0H,Z+152,0,F
    2083 0000b4b0 00026680"         .long   sdcrwd4
    2084 0000b4d0                   WL      4002,sl4_ptr
    2085 0000b500     ff00          .word   0FF00H,0FFB7H,Z+240,0,F
    2086 0000b550 000265f0"         .long   sdcrwd3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   47

    2087 0000b570                   WL      4002,sl3_ptr
    2088 0000b5a0     ff06          .word   0FF06H,0FFC3H,Z+284,0,F
    2089 0000b5f0 00026560"         .long   sdcrwd2
    2090 0000b610                   WL      4002,sl2_ptr
    2091 0000b640     fef8          .word   0FF00H-8,0FFB0H,Z+379,0,F
    2092 0000b690 000264d0"         .long   sdcrwd1
    2093 0000b6b0                   WL      4002,sl1_ptr
    2094                    
    2095                            .asg    200+450,X
    2096                    
    2097 0000b6e0     0292          .word   0292H,0ffdbH,Z,0,FF
    2098 0000b730 000268c0"         .long   sdcrwd8
    2099 0000b750                   WL      4002,sr8_ptr
    2100 0000b780     029d          .word   0297H+6,0ffd8H,Z+28,0,FF
    2101 0000b7d0 00026830"         .long   sdcrwd7
    2102 0000b7f0                   WL      4002,sr7_ptr
    2103 0000b820     0299          .word   0299H,0ffd1H,Z+70,0,FF
    2104 0000b870 000267a0"         .long   sdcrwd6
    2105 0000b890                   WL      4002,sr6_ptr
    2106 0000b8c0     02a6          .word   02a6H,0ffccH,Z+98,0,FF
    2107 0000b910 00026710"         .long   sdcrwd5
    2108 0000b930                   WL      4002,sr5_ptr
    2109 0000b960     0244          .word   0244H,0ffaaH,Z+152,0,F
    2110 0000b9b0 00026a70"         .long   nsdcrwd4a
    2111 0000b9d0                   WL      4002,sr4_ptr
    2112 0000ba00     0240          .word   0240H,0ffb3H,Z+240,0,F
    2113 0000ba50 00026dd0"         .long   nsdcrwd3a
    2114 0000ba70                   WL      4002,sr3_ptr
    2115 0000baa0     0242          .word   0242H,0ffb2H,Z+284,0,F
    2116 0000baf0 000269e0"         .long   nsdcrwd2a
    2117 0000bb10                   WL      4002,sr2_ptr
    2118 0000bb40     0242          .word   023dH+5,0ffa7H+2,Z+379,0,F
    2119 0000bb90 00026950"         .long   nsdcrwd1a
    2120 0000bbb0                   WL      4002,sr1_ptr
    2121                    
    2122 0000bbe0     0fa0          .word   4000            ;End
    2123                    
    2124                    
    2125                    
    2126 0000bbf0            SUBRP  get_proper_pal
    2127                    
    2128 0000bbf0                   SLEEPK  3
    2129 0000bc30     07a0          move    @crt_colors,a0,L
         0000bc40 00000d00- 
    2130 0000bc60     0d5f          calla   pal_getf
         0000bc70 00000000! 
    2131 0000bc90     b008          move    a0,*a8(OPAL)
         0000bca0     0150  
    2132 0000bcb0                   DIE
    2133                    
    2134                    
    2135                    
    2136                            .ref    bbshatter
    2137                    
    2138 00000e80                   .bss    bbrgt_p ,32     ;*Rgt bboard
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   48

    2139                    
    2140 0000bce0            SUBRP  backboard_ani
    2141                    
    2142 0000bce0                   SLEEPK  30
    2143                    
    2144 0000bd20     07a9          move    @bbrgt_p,a9,L
         0000bd30 00000e80- 
    2145 0000bd50     09ea          movi    bbshatter,a10
         0000bd60 00000000! 
    2146 0000bd80     09eb          movi    gndx+16,a11
         0000bd90 00000010! 
    2147 0000bdb0           wttmlp
    2148 0000bdb0     4d06          move    a8,a6
    2149 0000bdc0     8560          move    *a11,a0
    2150 0000bdd0     ce01          jrn     wttmlft
    2151 0000bde0     4d26          move    a9,a6
    2152 0000bdf0           wttmlft
    2153 0000bdf0     0380          abs     a0
    2154 0000be00     0be0          subi    190,a0
         0000be10     ff41  
    2155 0000be20     ce17          jrn     wttmfixbb
    2156                    
    2157 0000be30     2f80          srl     4,a0                    ;/16
    2158 0000be40     24a0          sll     5,a0                    ;*32
    2159 0000be50     0b20          addi    wttmani_t,a0
         0000be60 0000bfd0' 
    2160 0000be80     854e          move    *a10,a14
    2161 0000be90     ca02          jrz     wttmbok
    2162 0000bea0     0b00          addi    wttmsani_t-wttmani_t,a0,W
         0000beb0     0120  
    2163 0000bec0           wttmbok
    2164 0000bec0     8601          move    *a0,a1,L
    2165 0000bed0     b226          move    a1,*a6(OIMG),L
         0000bee0     0170  
    2166 0000bef0     8622          move    *a1,a2,L
    2167 0000bf00     b246          move    a2,*a6(OSIZE),L
         0000bf10     0130  
    2168 0000bf20     ba26          move    *a1(ISAG),*a6(OSAG),L
         0000bf30     0040  
         0000bf40     0110  
    2169                    
    2170 0000bf50           wttmslp SLEEPK  1
    2171 0000bf90     c0e1          jruc    wttmlp
    2172                    
    2173 0000bfa0     5600  wttmfixbb       clr     a0
    2174 0000bfb0     800a          move    a0,*a10                 ;Fix board
    2175 0000bfc0     c0f8          jruc    wttmslp
    2176                    
    2177                    
    2178 0000bfd0 00000000! wttmani_t       .long   back2,back3,back4,back5,back6,back6,back6,back6,back6
    2179 0000c0f0 00000000! wttmsani_t      .long   bturn_5,bturn_4,bturn_3,bturn_2,bturn_1,bbord_10
    2180 0000c1b0 00000000!         .long   bbord_10,bbord_10,bbord_10,bbord_10
    2181                    
    2182                    
    2183                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   49

    2184 0000c230            SUBRP  backboard_svrptr
    2185                    
    2186 0000c230     0788          move    a8,@bbrgt_p,L
         0000c240 00000e80- 
    2187 0000c260                   DIE
    2188                    
    2189                    
    2190                    
    2191                    
    2192 0000c290            SUBRP  lftcrowd_ani
    2193                    
    2194                    
    2195 0000c290     07a8          move    @bigcrwd1_ptr,a8,L
         0000c2a0 00000760- 
    2196 0000c2c0     09ea          movi    bigcrwd_lst,a10
         0000c2d0 0000e480' 
    2197 0000c2f0                   CREATE0 crwd_ani
    2198 0000c360     b300          move    a8,*a0(PDATA),L
         0000c370     0100  
    2199 0000c380     b340          move    a10,*a0(PDATA+32),L
         0000c390     0120  
    2200                    
    2201 0000c3a0     07a8          move    @bigcrwd2_ptr,a8,L
         0000c3b0 00000780- 
    2202 0000c3d0     09ea          movi    bigcrwd_lst,a10
         0000c3e0 0000e480' 
    2203 0000c400                   CREATE0 crwd_ani
    2204 0000c470     b300          move    a8,*a0(PDATA),L
         0000c480     0100  
    2205 0000c490     b340          move    a10,*a0(PDATA+32),L
         0000c4a0     0120  
    2206                    
    2207 0000c4b0     07a8          move    @crwd1_ptr,a8,L
         0000c4c0 00000840- 
    2208 0000c4e0     09ea          movi    crwd1_lst,a10
         0000c4f0 0000e560' 
    2209 0000c510                   CREATE0 crwd_ani
    2210 0000c580     b300          move    a8,*a0(PDATA),L
         0000c590     0100  
    2211 0000c5a0     b340          move    a10,*a0(PDATA+32),L
         0000c5b0     0120  
    2212                    
    2213 0000c5c0     07a8          move    @crwd3_ptr,a8,L
         0000c5d0 00000880- 
    2214 0000c5f0     09ea          movi    crwd3_lst,a10
         0000c600 0000e700' 
    2215 0000c620                   CREATE0 crwd_ani
    2216 0000c690     b300          move    a8,*a0(PDATA),L
         0000c6a0     0100  
    2217 0000c6b0     b340          move    a10,*a0(PDATA+32),L
         0000c6c0     0120  
    2218                    
    2219 0000c6d0     07a8          move    @crwd5_ptr,a8,L
         0000c6e0 000008c0- 
    2220 0000c700     09ea          movi    crwd5_lst,a10
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   50

         0000c710 0000e870' 
    2221 0000c730                   CREATE0 crwd_ani
    2222 0000c7a0     b300          move    a8,*a0(PDATA),L
         0000c7b0     0100  
    2223 0000c7c0     b340          move    a10,*a0(PDATA+32),L
         0000c7d0     0120  
    2224                    
    2225                    
    2226 0000c7e0     07a8          move    @sl1_ptr,a8,L
         0000c7f0 00000900- 
    2227 0000c810     09ea          movi    s1_lst,a10
         0000c820 0000e9b0' 
    2228 0000c840                   CREATE0 crwd_ani
    2229 0000c8b0     b300          move    a8,*a0(PDATA),L
         0000c8c0     0100  
    2230 0000c8d0     b340          move    a10,*a0(PDATA+32),L
         0000c8e0     0120  
    2231                    
    2232 0000c8f0     07a8          move    @sl2_ptr,a8,L
         0000c900 00000920- 
    2233 0000c920     09ea          movi    s2_lst,a10
         0000c930 0000ea90' 
    2234 0000c950                   CREATE0 crwd_ani
    2235 0000c9c0     b300          move    a8,*a0(PDATA),L
         0000c9d0     0100  
    2236 0000c9e0     b340          move    a10,*a0(PDATA+32),L
         0000c9f0     0120  
    2237                    
    2238 0000ca00     07a8          move    @sl3_ptr,a8,L
         0000ca10 00000940- 
    2239 0000ca30     09ea          movi    s3_lst,a10
         0000ca40 0000eb70' 
    2240 0000ca60                   CREATE0 crwd_ani
    2241 0000cad0     b300          move    a8,*a0(PDATA),L
         0000cae0     0100  
    2242 0000caf0     b340          move    a10,*a0(PDATA+32),L
         0000cb00     0120  
    2243                    
    2244 0000cb10     07a8          move    @sl4_ptr,a8,L
         0000cb20 00000960- 
    2245 0000cb40     09ea          movi    s4_lst,a10
         0000cb50 0000ec50' 
    2246 0000cb70                   CREATE0 crwd_ani
    2247 0000cbe0     b300          move    a8,*a0(PDATA),L
         0000cbf0     0100  
    2248 0000cc00     b340          move    a10,*a0(PDATA+32),L
         0000cc10     0120  
    2249                    
    2250 0000cc20     07a8          move    @sl5_ptr,a8,L
         0000cc30 00000980- 
    2251 0000cc50     09ea          movi    s5_lst,a10
         0000cc60 0000ed30' 
    2252 0000cc80                   CREATE0 crwd_ani
    2253 0000ccf0     b300          move    a8,*a0(PDATA),L
         0000cd00     0100  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   51

    2254 0000cd10     b340          move    a10,*a0(PDATA+32),L
         0000cd20     0120  
    2255                    
    2256 0000cd30     07a8          move    @sl6_ptr,a8,L
         0000cd40 000009a0- 
    2257 0000cd60     09ea          movi    s6_lst,a10
         0000cd70 0000ee10' 
    2258 0000cd90                   CREATE0 crwd_ani
    2259 0000ce00     b300          move    a8,*a0(PDATA),L
         0000ce10     0100  
    2260 0000ce20     b340          move    a10,*a0(PDATA+32),L
         0000ce30     0120  
    2261                    
    2262 0000ce40     07a8          move    @sl7_ptr,a8,L
         0000ce50 000009c0- 
    2263 0000ce70     09ea          movi    s7_lst,a10
         0000ce80 0000eef0' 
    2264 0000cea0                   CREATE0 crwd_ani
    2265 0000cf10     b300          move    a8,*a0(PDATA),L
         0000cf20     0100  
    2266 0000cf30     b340          move    a10,*a0(PDATA+32),L
         0000cf40     0120  
    2267                    
    2268 0000cf50     07a8          move    @sl8_ptr,a8,L
         0000cf60 000009e0- 
    2269 0000cf80     09ea          movi    s8_lst,a10
         0000cf90 0000f080' 
    2270 0000cfb0                   CREATE0 crwd_ani
    2271 0000d020     b300          move    a8,*a0(PDATA),L
         0000d030     0100  
    2272 0000d040     b340          move    a10,*a0(PDATA+32),L
         0000d050     0120  
    2273                    
    2274                    
    2275                    
    2276                    
    2277                    
    2278                    
    2279 0000d060     07a8          move    @cheer1_ptr,a8,L
         0000d070 00000b80- 
    2280 0000d090     09ea          movi    cheer1_lst,a10
         0000d0a0 0000f4e0' 
    2281 0000d0c0                   CREATE0 crwd_ani
    2282 0000d130     b300          move    a8,*a0(PDATA),L
         0000d140     0100  
    2283 0000d150     b340          move    a10,*a0(PDATA+32),L
         0000d160     0120  
    2284                    
    2285 0000d170     07a8          move    @cheer2_ptr,a8,L
         0000d180 00000ba0- 
    2286 0000d1a0     09ea          movi    cheer2_lst,a10
         0000d1b0 0000f860' 
    2287 0000d1d0                   CREATE0 crwd_ani
    2288 0000d240     b300          move    a8,*a0(PDATA),L
         0000d250     0100  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   52

    2289 0000d260     b340          move    a10,*a0(PDATA+32),L
         0000d270     0120  
    2290                    
    2291                    
    2292                    
    2293                    
    2294 0000d280     07a8          move    @bigcrwd3_ptr,a8,L
         0000d290 000007a0- 
    2295 0000d2b0     09ea          movi    bigcrwd_lst,a10
         0000d2c0 0000e480' 
    2296 0000d2e0                   CREATE0 crwd_ani
    2297 0000d350     b300          move    a8,*a0(PDATA),L
         0000d360     0100  
    2298 0000d370     b340          move    a10,*a0(PDATA+32),L
         0000d380     0120  
    2299                    
    2300 0000d390     07a8          move    @bigcrwd2_ptr,a8,L
         0000d3a0 00000780- 
    2301 0000d3c0     09ea          movi    bigcrwd_lst,a10
         0000d3d0 0000e480' 
    2302 0000d3f0                   CREATE0 crwd_ani
    2303 0000d460     b300          move    a8,*a0(PDATA),L
         0000d470     0100  
    2304 0000d480     b340          move    a10,*a0(PDATA+32),L
         0000d490     0120  
    2305                    
    2306 0000d4a0     07a8          move    @crwd2_ptr,a8,L
         0000d4b0 00000860- 
    2307 0000d4d0     09ea          movi    crwd1_lst,a10
         0000d4e0 0000e560' 
    2308 0000d500                   CREATE0 crwd_ani
    2309 0000d570     b300          move    a8,*a0(PDATA),L
         0000d580     0100  
    2310 0000d590     b340          move    a10,*a0(PDATA+32),L
         0000d5a0     0120  
    2311                    
    2312 0000d5b0     07a8          move    @crwd4_ptr,a8,L
         0000d5c0 000008a0- 
    2313 0000d5e0     09ea          movi    crwd3_lst,a10
         0000d5f0 0000e700' 
    2314 0000d610                   CREATE0 crwd_ani
    2315 0000d680     b300          move    a8,*a0(PDATA),L
         0000d690     0100  
    2316 0000d6a0     b340          move    a10,*a0(PDATA+32),L
         0000d6b0     0120  
    2317                    
    2318 0000d6c0     07a8          move    @crwd6_ptr,a8,L
         0000d6d0 000008e0- 
    2319 0000d6f0     09ea          movi    crwd5_lst,a10
         0000d700 0000e870' 
    2320 0000d720                   CREATE0 crwd_ani
    2321 0000d790     b300          move    a8,*a0(PDATA),L
         0000d7a0     0100  
    2322 0000d7b0     b340          move    a10,*a0(PDATA+32),L
         0000d7c0     0120  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   53

    2323                    
    2324                    
    2325 0000d7d0     07a8          move    @sr1_ptr,a8,L
         0000d7e0 00000a00- 
    2326 0000d800     09ea          movi    sr1_lst,a10
         0000d810 0000f160' 
    2327 0000d830                   CREATE0 crwd_ani
    2328 0000d8a0     b300          move    a8,*a0(PDATA),L
         0000d8b0     0100  
    2329 0000d8c0     b340          move    a10,*a0(PDATA+32),L
         0000d8d0     0120  
    2330                    
    2331 0000d8e0     07a8          move    @sr2_ptr,a8,L
         0000d8f0 00000a20- 
    2332 0000d910     09ea          movi    sr2_lst,a10
         0000d920 0000f240' 
    2333 0000d940                   CREATE0 crwd_ani
    2334 0000d9b0     b300          move    a8,*a0(PDATA),L
         0000d9c0     0100  
    2335 0000d9d0     b340          move    a10,*a0(PDATA+32),L
         0000d9e0     0120  
    2336                    
    2337 0000d9f0     07a8          move    @sr3_ptr,a8,L
         0000da00 00000a40- 
    2338 0000da20     09ea          movi    sr3_lst,a10
         0000da30 0000f320' 
    2339 0000da50                   CREATE0 crwd_ani
    2340 0000dac0     b300          move    a8,*a0(PDATA),L
         0000dad0     0100  
    2341 0000dae0     b340          move    a10,*a0(PDATA+32),L
         0000daf0     0120  
    2342                    
    2343 0000db00     07a8          move    @sr4_ptr,a8,L
         0000db10 00000a60- 
    2344 0000db30     09ea          movi    sr4_lst,a10
         0000db40 0000f400' 
    2345 0000db60                   CREATE0 crwd_ani
    2346 0000dbd0     b300          move    a8,*a0(PDATA),L
         0000dbe0     0100  
    2347 0000dbf0     b340          move    a10,*a0(PDATA+32),L
         0000dc00     0120  
    2348                    
    2349 0000dc10     07a8          move    @sr5_ptr,a8,L
         0000dc20 00000a80- 
    2350 0000dc40     09ea          movi    s5_lst,a10
         0000dc50 0000ed30' 
    2351 0000dc70                   CREATE0 crwd_ani
    2352 0000dce0     b300          move    a8,*a0(PDATA),L
         0000dcf0     0100  
    2353 0000dd00     b340          move    a10,*a0(PDATA+32),L
         0000dd10     0120  
    2354                    
    2355 0000dd20     07a8          move    @sr6_ptr,a8,L
         0000dd30 00000aa0- 
    2356 0000dd50     09ea          movi    s6_lst,a10
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   54

         0000dd60 0000ee10' 
    2357 0000dd80                   CREATE0 crwd_ani
    2358 0000ddf0     b300          move    a8,*a0(PDATA),L
         0000de00     0100  
    2359 0000de10     b340          move    a10,*a0(PDATA+32),L
         0000de20     0120  
    2360                    
    2361 0000de30     07a8          move    @sr7_ptr,a8,L
         0000de40 00000ac0- 
    2362 0000de60     09ea          movi    s72_lst,a10
         0000de70 0000efd0' 
    2363 0000de90                   CREATE0 crwd_ani
    2364 0000df00     b300          move    a8,*a0(PDATA),L
         0000df10     0100  
    2365 0000df20     b340          move    a10,*a0(PDATA+32),L
         0000df30     0120  
    2366                    
    2367 0000df40     07a8          move    @sr8_ptr,a8,L
         0000df50 00000ae0- 
    2368 0000df70     09ea          movi    s8_lst,a10
         0000df80 0000f080' 
    2369 0000dfa0                   CREATE0 crwd_ani
    2370 0000e010     b300          move    a8,*a0(PDATA),L
         0000e020     0100  
    2371 0000e030     b340          move    a10,*a0(PDATA+32),L
         0000e040     0120  
    2372                    
    2373                    
    2374 0000e050     0960          rets
    2375                    
    2376                    
    2377                    
    2378 0000e060            SUBR   start_animate
    2379                    
    2380 0000e060     1820          movk    1,a0
    2381 0000e070     0580          move    a0,@crowd_animate
         0000e080 00000d60- 
    2382 0000e0a0                   SLEEP   4*60
    2383 0000e0f0     5600          clr     a0
    2384 0000e100     0580          move    a0,@crowd_animate
         0000e110 00000d60- 
    2385 0000e130                   DIE
    2386                    
    2387 0000e160           crwd_ani
    2388 0000e160                   SLEEPK  10
    2389 0000e1a0     05a0          move    @crowd_animate,a0
         0000e1b0 00000d60- 
    2390 0000e1d0     caf8          jrz     crwd_ani
    2391                    
    2392                    
    2393 0000e1e0     b7a8          move    *a13(PDATA),a8,L
         0000e1f0     0100  
    2394 0000e200     b7aa          move    *a13(PDATA+32),a10,L
         0000e210     0120  
    2395 0000e220           nrnjlp
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   55

    2396 0000e220     9741          move    *a10+,a1,L
    2397 0000e230     cb01          jrnz    nrnjcrwd
    2398 0000e240     caf1          jrz     crwd_ani
    2399                    
    2400                    
    2401 0000e250           nrnjcrwd
    2402 0000e250     b703          move    *a8(OIMG),a3,L          ;>Set new img
         0000e260     0170  
    2403                    
    2404 0000e270     b228          move    a1,*a8(OIMG),L
         0000e280     0170  
    2405 0000e290     8622          move    *a1,a2,L
    2406 0000e2a0     b248          move    a2,*a8(OSIZE),L
         0000e2b0     0130  
    2407 0000e2c0     ba28          move    *a1(ISAG),*a8(OSAG),L
         0000e2d0     0040  
         0000e2e0     0110  
    2408                    
    2409 0000e2f0     b46e          move    *a3(IANIOFFY),a14
         0000e300     0030  
    2410 0000e310     b420          move    *a1(IANIOFFY),a0
         0000e320     0030  
    2411 0000e330     45c0          sub     a14,a0                  ;Newaniy-Oldaniy
    2412 0000e340     b50e          move    *a8(OYPOS),a14
         0000e350     00b0  
    2413 0000e360     440e          sub     a0,a14
    2414 0000e370     b1c8          move    a14,*a8(OYPOS)
         0000e380     00b0  
    2415                    
    2416 0000e390     b46e          move    *a3(IANIOFFX),a14
         0000e3a0     0020  
    2417 0000e3b0     b420          move    *a1(IANIOFFX),a0
         0000e3c0     0020  
    2418 0000e3d0     45c0          sub     a14,a0                  ;Newanix-Oldanix
    2419 0000e3e0     b50e          move    *a8(OXPOS),a14
         0000e3f0     0090  
    2420 0000e400     440e          sub     a0,a14
    2421 0000e410     b1c8          move    a14,*a8(OXPOS)
         0000e420     0090  
    2422                    
    2423 0000e430     9540          move    *a10+,a0
    2424 0000e440     0d5f          calla   PRCSLP
         0000e450 00000000! 
    2425 0000e470     c0da          jruc    nrnjlp
    2426                    
    2427                    
    2428 0000e480           bigcrwd_lst
    2429 0000e480                   LW      crowd401,5
    2430 0000e4b0                   LW      crowd402,30
    2431 0000e4e0                   LW      crowd401,5
    2432 0000e510                   LWL0    crowd40,40
    2433                    
    2434 0000e560           crwd1_lst
    2435 0000e560                   LW      crowd1a2,4
    2436 0000e590                   LW      crowd1a3,4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   56

    2437 0000e5c0                   LW      crowd1a4,4
    2438 0000e5f0                   LW      crowd1a5,55
    2439 0000e620                   LW      crowd1a4,4
    2440 0000e650                   LW      crowd1a3,4
    2441 0000e680                   LW      crowd1a2,4
    2442 0000e6b0                   LWL0    crowd1a,60
    2443                    
    2444 0000e700           crwd3_lst
    2445 0000e700                   LW      crowd2a,10
    2446 0000e730                   LW      crowd2a2,5
    2447 0000e760                   LW      crowd2a3,5
    2448 0000e790                   LW      crowd2a4,55
    2449 0000e7c0                   LW      crowd2a3,5
    2450 0000e7f0                   LW      crowd2a2,5
    2451 0000e820                   LWL0    crowd2a,60
    2452                    
    2453 0000e870           crwd5_lst
    2454 0000e870                   LW      crowd3a2,6
    2455 0000e8a0                   LW      crowd3a3,6
    2456 0000e8d0                   LW      crowd3a4,16
    2457 0000e900                   LW      crowd3a3,8
    2458 0000e930                   LW      crowd3a2,8
    2459 0000e960                   LWL0    crowd3,18
    2460                    
    2461 0000e9b0           s1_lst
    2462 0000e9b0                   LW      sdcrwd1b,6
    2463 0000e9e0                   LW      sdcrwd1c,6
    2464 0000ea10                   LW      sdcrwd1b,6
    2465 0000ea40                   LWL0    sdcrwd1,6
    2466                    
    2467 0000ea90           s2_lst
    2468 0000ea90                   LW      sdcrwd2b,6
    2469 0000eac0                   LW      sdcrwd2c,6
    2470 0000eaf0                   LW      sdcrwd2b,6
    2471 0000eb20                   LWL0    sdcrwd2,6
    2472                    
    2473 0000eb70           s3_lst
    2474 0000eb70                   LW      sdcrwd3b,6
    2475 0000eba0                   LW      sdcrwd3c,6
    2476 0000ebd0                   LW      sdcrwd3b,6
    2477 0000ec00                   LWL0    sdcrwd3,6
    2478                    
    2479 0000ec50           s4_lst
    2480 0000ec50                   LW      sdcrwd4b,6
    2481 0000ec80                   LW      sdcrwd4c,6
    2482 0000ecb0                   LW      sdcrwd4b,6
    2483 0000ece0                   LWL0    sdcrwd4,6
    2484                    
    2485 0000ed30           s5_lst
    2486 0000ed30                   LW      sdcrwd5b,6
    2487 0000ed60                   LW      sdcrwd5c,6
    2488 0000ed90                   LW      sdcrwd5b,6
    2489 0000edc0                   LWL0    sdcrwd5,6
    2490                    
    2491 0000ee10           s6_lst
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   57

    2492 0000ee10                   LW      sdcrwd6b,6
    2493 0000ee40                   LW      sdcrwd6c,6
    2494 0000ee70                   LW      sdcrwd6b,6
    2495 0000eea0                   LWL0    sdcrwd6,6
    2496                    
    2497 0000eef0           s7_lst
    2498 0000eef0                   LW      sdcrwd7b,6
    2499 0000ef20                   LW      sdcrwd7c,6
    2500 0000ef50                   LW      sdcrwd7b,6
    2501 0000ef80                   LWL0    sdcrwd7,60
    2502                    
    2503 0000efd0           s72_lst
    2504 0000efd0                   LW      sdcrwd7b,6
    2505 0000f000                   LW      sdcrwd7c,6
    2506 0000f030                   LWL0    sdcrwd7b,60
    2507                    
    2508 0000f080           s8_lst
    2509 0000f080                   LW      sdcrwd8b,6
    2510 0000f0b0                   LW      sdcrwd8c,6
    2511 0000f0e0                   LW      sdcrwd8b,6
    2512 0000f110                   LWL0    sdcrwd8,6
    2513                    
    2514 0000f160           sr1_lst
    2515 0000f160                   LW      nsdcrwd1b,6
    2516 0000f190                   LW      nsdcrwd1c,50
    2517 0000f1c0                   LW      nsdcrwd1b,6
    2518 0000f1f0                   LWL0    nsdcrwd1a,6
    2519                    
    2520 0000f240           sr2_lst
    2521 0000f240                   LW      nsdcrwd2b,40
    2522 0000f270                   LW      nsdcrwd2c,80
    2523 0000f2a0                   LW      nsdcrwd2b,10
    2524 0000f2d0                   LWL0    nsdcrwd2a,30
    2525                    
    2526 0000f320           sr3_lst
    2527 0000f320                   LW      nsdcrwd3b,5
    2528 0000f350                   LW      nsdcrwd3c,5
    2529 0000f380                   LW      nsdcrwd3b,5
    2530 0000f3b0                   LWL0    nsdcrwd3a,5
    2531                    
    2532 0000f400           sr4_lst
    2533 0000f400                   LW      nsdcrwd4b,6
    2534 0000f430                   LW      nsdcrwd4c,6
    2535 0000f460                   LW      nsdcrwd4b,6
    2536 0000f490                   LWL0    nsdcrwd4a,6
    2537                    
    2538 0000f4e0           cheer1_lst
    2539 0000f4e0                   LW      cheer1,6
    2540 0000f510                   LW      cheer2,6
    2541 0000f540                   LW      cheer3,6
    2542 0000f570                   LW      cheer4,6
    2543 0000f5a0                   LW      cheer5,6
    2544 0000f5d0                   LW      cheer6,6
    2545 0000f600                   LW      cheer7,6
    2546 0000f630                   LW      cheer6,6
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   58

    2547 0000f660                   LW      cheer5,6
    2548 0000f690                   LW      cheer6,6
    2549 0000f6c0                   LW      cheer7,6
    2550 0000f6f0                   LW      cheer6,6
    2551 0000f720                   LW      cheer5,6
    2552 0000f750                   LW      cheer6,6
    2553 0000f780                   LW      cheer7,6
    2554 0000f7b0                   LW      cheer3,6
    2555 0000f7e0                   LW      cheer2a,6
    2556 0000f810                   LWL0    cheer2,4*60
    2557                    
    2558 0000f860           cheer2_lst
    2559 0000f860                   LW      cary1,20
    2560 0000f890                   LW      cary2,6
    2561 0000f8c0                   LW      cary3,6
    2562 0000f8f0                   LW      cary4,6
    2563 0000f920                   LW      cary5,6
    2564 0000f950                   LW      cary6,6
    2565 0000f980                   LW      cary5,6
    2566 0000f9b0                   LW      cary6,30
    2567 0000f9e0                   LW      cary5,6
    2568 0000fa10                   LW      cary4,6
    2569 0000fa40                   LW      cary3,6
    2570 0000fa70                   LW      cary2,6
    2571 0000faa0                   LWL0    cary1,4*60
    2572                    
    2573                    
    2574                            .def    random_ads
    2575                    
    2576 0000faf0           random_ads
    2577 0000faf0     09c0          movi    adpid,a0
         0000fb00     0093  
    2578 0000fb10     0d5f          calla   KIL1C
         0000fb20 00000000! 
    2579                    
    2580                    
    2581 0000fb40     1940          movk    10,a0                   ;10
    2582 0000fb50     0d5f          calla   RNDRNG0
         0000fb60 00000000! 
    2583 0000fb80     24a0          sll     5,a0
    2584                    
    2585 0000fb90     09e1          movi    ad1_t,a1
         0000fba0 00010320' 
    2586 0000fbc0     4001          add     a0,a1
    2587 0000fbd0     8621          move    *a1,a1,L
    2588                    
    2589 0000fbe0     0b20          addi    ad1ref_t,a0
         0000fbf0 00010480' 
    2590 0000fc10     8603          move    *a0,a3,L
    2591                    
    2592 0000fc20     07a8          move    @ad1_ptr,a8,L
         0000fc30 00000b00- 
    2593 0000fc50     b228          move    a1,*a8(OIMG),L
         0000fc60     0170  
    2594 0000fc70     8622          move    *a1,a2,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   59

    2595 0000fc80     b248          move    a2,*a8(OSIZE),L
         0000fc90     0130  
    2596 0000fca0     ba28          move    *a1(ISAG),*a8(OSAG),L
         0000fcb0     0040  
         0000fcc0     0110  
    2597                    
    2598                    
    2599 0000fcd0     07a8          move    @ad1ref_ptr,a8,L
         0000fce0 00000b20- 
    2600 0000fd00     b268          move    a3,*a8(OIMG),L
         0000fd10     0170  
    2601 0000fd20     8662          move    *a3,a2,L
    2602 0000fd30     b248          move    a2,*a8(OSIZE),L
         0000fd40     0130  
    2603 0000fd50     ba68          move    *a3(ISAG),*a8(OSAG),L
         0000fd60     0040  
         0000fd70     0110  
    2604                    
    2605 0000fd80     b700          move    *a8(OIMG),a0,L
         0000fd90     0170  
    2606 0000fda0     0b60          cmpi    RF_KOM1_L,a0
         0000fdb0 fffdb98f" 
    2607 0000fdd0     cb09          jrnz    ejghnoani0
    2608 0000fde0                   CREATE  adpid,MK3_ad
    2609 0000fe60     c00c          jruc    ejghnoani
    2610 0000fe70           ejghnoani0
    2611 0000fe70     0b60          cmpi    RF_CHAL_L,a0
         0000fe80 fffdbcef" 
    2612 0000fea0     cb08          jrnz    ejghnoani
    2613 0000feb0                   CREATE  adpid,wwf_ad
    2614 0000ff30           ejghnoani
    2615                    
    2616 0000ff30     1900          movk    8,a0            ;8
    2617 0000ff40     0d5f          calla   RNDRNG0
         0000ff50 00000000! 
    2618 0000ff70     24a0          sll     5,a0
    2619                    
    2620 0000ff80     09e1          movi    ad2_t,a1
         0000ff90 000105e0' 
    2621 0000ffb0     4001          add     a0,a1
    2622 0000ffc0     8621          move    *a1,a1,L
    2623                    
    2624 0000ffd0     0b20          addi    ad2ref_t,a0
         0000ffe0 00010700' 
    2625 00010000     8603          move    *a0,a3,L
    2626                    
    2627 00010010     07a8          move    @ad2_ptr,a8,L
         00010020 00000b40- 
    2628 00010040     b228          move    a1,*a8(OIMG),L
         00010050     0170  
    2629 00010060     8622          move    *a1,a2,L
    2630 00010070     b248          move    a2,*a8(OSIZE),L
         00010080     0130  
    2631 00010090     ba28          move    *a1(ISAG),*a8(OSAG),L
         000100a0     0040  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   60

         000100b0     0110  
    2632                    
    2633                    
    2634 000100c0     07a8          move    @ad2ref_ptr,a8,L
         000100d0 00000b60- 
    2635 000100f0     b268          move    a3,*a8(OIMG),L
         00010100     0170  
    2636 00010110     8662          move    *a3,a2,L
    2637 00010120     b248          move    a2,*a8(OSIZE),L
         00010130     0130  
    2638 00010140     ba68          move    *a3(ISAG),*a8(OSAG),L
         00010150     0040  
         00010160     0110  
    2639                    
    2640                    
    2641                    
    2642 00010170            SUBR   fix_floorclr
    2643                    
    2644 00010170     05a2          move    @oteam1,a2
         00010180 00000000! 
    2645                    
    2646                    
    2647 000101a0     24a2          sll     5,a2
    2648 000101b0     0b22          addi    crt_pals_z,a2
         000101c0 00006de0' 
    2649 000101e0     864b  ejghnx  move    *a2,a11,L
    2650                    
    2651 000101f0     09e0          movi    CROWD_p,a0
         00010200 00000000! 
    2652 00010220     0d5f          calla   pal_find                ;Put in PDATA??!!!!
         00010230 00000000! 
    2653                    
    2654 00010250     0b80          andi    0ff00h,a0
         00010260 ffff00ff  
    2655                    
    2656 00010280     4c01          move    a0,a1                   ;dest pal
    2657 00010290     0ba1          ori     236,a1
         000102a0 000000ec  
    2658 000102c0     4d60          move    a11,a0
    2659                    
    2660 000102d0     1922          movk    9,a2                    ;9 colors
    2661 000102e0     0d5f          calla   pal_set
         000102f0 00000000! 
    2662 00010310     0960          rets
    2663                    
    2664                    
    2665                    
    2666                    
    2667                    
    2668 00010320 00024c10" ad1_t   .long   ad1,adjet
    2669 00010360 00024820"         .long   adhot,AD_CHAL_L,AD_KOM1_L,AD_PEK_L
    2670 000103e0 00023ce0"         .long   AD_III_L,AD_KANO_L,AD_KOM1_L,AD_KOM1_L,AD_CHAL_L
    2671 00010480           ad1ref_t
    2672 00010480 00024ca0"         .long   ad1ref,jetref
    2673 000104c0 00024a60"         .long   hotref,RF_CHAL_L,RF_KOM1_L,RF_PEK_L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   61

    2674 00010540 00023d70"         .long   RF_III_L,RF_KANO_L,RF_KOM1_L,RF_KOM1_L,RF_CHAL_L
    2675                    
    2676 000105e0 00024d30" ad2_t   .long   ad2,adnba2,adjam2
    2677 00010640 00024790"         .long   adrecy2,admid2,adblue2,AD_REV_R,AD_SMO_R,AD_MUS_R
    2678 00010700           ad2ref_t
    2679 00010700 00024dc0"         .long   ad2ref,nbaref,jamref
    2680 00010760 00024b80"         .long   recycref,midref,blueref,RF_REV_R,RF_SMO_R,RF_MUS_R
    2681                    
    2682                    
    2683                    
    2684 00010820 00024280" wwf_t   .long   AD_CHAL_L,RF_CHAL_L
    2685 00010860 000243a0"         .long   AD_WWF_L,RF_WWF_L
    2686 000108a0 00000000          .long   0
    2687                    
    2688 000108c0 000245e0" MK3_t   .long   AD_KOM1_L,5*60
    2689 00010900 00024700"         .long   AD_KOM2_L,4
    2690 00010940 000245e0"         .long   AD_KOM1_L,4
    2691 00010980 00024700"         .long   AD_KOM2_L,4
    2692 000109c0 000245e0"         .long   AD_KOM1_L,30
    2693 00010a00 00024700"         .long   AD_KOM2_L,5
    2694 00010a40 000245e0"         .long   AD_KOM1_L,5
    2695 00010a80 00024700"         .long   AD_KOM2_L,5
    2696 00010ac0 000245e0"         .long   AD_KOM1_L,5
    2697 00010b00 00024700"         .long   AD_KOM2_L,5
    2698 00010b40 00000000          .long   0
    2699                    
    2700 00010b60     09e9  wwf_ad  movi    wwf_t,a9
         00010b70 00010820' 
    2701 00010b90           wwf_lp
    2702 00010b90     9720          move    *a9+,a0,L
    2703 00010ba0     cafb          jrz     wwf_ad
    2704 00010bb0     9721          move    *a9+,a1,L
    2705                    
    2706 00010bc0     07a8          move    @ad1_ptr,a8,L
         00010bd0 00000b00- 
    2707 00010bf0     b208          move    a0,*a8(OIMG),L
         00010c00     0170  
    2708 00010c10     8602          move    *a0,a2,L
    2709 00010c20     b248          move    a2,*a8(OSIZE),L
         00010c30     0130  
    2710 00010c40     ba08          move    *a0(ISAG),*a8(OSAG),L
         00010c50     0040  
         00010c60     0110  
    2711                    
    2712 00010c70     07a8          move    @ad1ref_ptr,a8,L
         00010c80 00000b20- 
    2713 00010ca0     b228          move    a1,*a8(OIMG),L
         00010cb0     0170  
    2714 00010cc0     8622          move    *a1,a2,L
    2715 00010cd0     b248          move    a2,*a8(OSIZE),L
         00010ce0     0130  
    2716 00010cf0     ba28          move    *a1(ISAG),*a8(OSAG),L
         00010d00     0040  
         00010d10     0110  
    2717                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   62

    2718 00010d20                   SLEEP   120
    2719 00010d70     c0e1          jruc    wwf_lp
    2720                    
    2721 00010d80     09e9  MK3_ad  movi    MK3_t,a9
         00010d90 000108c0' 
    2722 00010db0           mk3_lp
    2723 00010db0     9720          move    *a9+,a0,L
    2724 00010dc0     cafb          jrz     MK3_ad
    2725                    
    2726 00010dd0     07a8          move    @ad1_ptr,a8,L
         00010de0 00000b00- 
    2727 00010e00     b208          move    a0,*a8(OIMG),L
         00010e10     0170  
    2728 00010e20     8602          move    *a0,a2,L
    2729 00010e30     b248          move    a2,*a8(OSIZE),L
         00010e40     0130  
    2730 00010e50     ba08          move    *a0(ISAG),*a8(OSAG),L
         00010e60     0040  
         00010e70     0110  
    2731                    
    2732                    
    2733                    
    2734 00010e80     9720          move    *a9+,a0,L
    2735 00010e90     0d5f          calla   PRCSLP
         00010ea0 00000000! 
    2736 00010ec0     c0ee          jruc    mk3_lp
    2737                    
    2738                    
    2739 00010ed0            SUBR   net_ani
    2740                    
    2741 00010ed0                   PUSH    a7,a8,a9,a10
    2742                    
    2743 00010ef0     4c00          move    a0,a0
    2744 00010f00     ca07          jrz     hfvqlft
    2745 00010f10     07a8          move    @rimrf,a8,L             ;*Right hoop objs
         00010f20 00000800- 
    2746 00010f40     07a9          move    @rimrb,a9,L
         00010f50 00000820- 
    2747 00010f70     c006          jruc    hfvqtag
    2748                    
    2749 00010f80           hfvqlft
    2750 00010f80     07a8          move    @rimlf,a8,L             ;Left ^
         00010f90 000007c0- 
    2751 00010fb0     07a9          move    @rimlb,a9,L
         00010fc0 000007e0- 
    2752 00010fe0           hfvqtag
    2753 00010fe0     24a1          sll     5,a1                    ;*32
    2754 00010ff0     0b21          addi    hfvqnet_t,a1
         00011000 000110e0' 
    2755 00011020     862a          move    *a1,a10,L
    2756 00011030                   CREATE  HOOP_PID,do_net_ani
    2757 000110b0                   PULL    a7,a8,a9,a10
    2758 000110d0     0960          rets
    2759                    
    2760                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   63

    2761 000110e0 00011330' hfvqnet_t       .long   net0_l  ;Shot swish/bank in
    2762 00011100 00011590'         .long   net1_l  ;Dunk/bend rim
    2763 00011120 000117f0'         .long   net2_l  ;Soft ball roll in
    2764 00011140 00011910'         .long   net3_l  ;Long shot swish
    2765 00011160 00011b30'         .long   net4_l  ;Missed shot bend rim
    2766 00011180 00011bd0'         .long   net5_l  ;Shatter backboard
    2767 000111a0 00012070'         .long   net6_l  ;Burn net
    2768                    
    2769                    
    2770                    
    2771 000111c0           do_net_ani
    2772                    
    2773 000111c0     9740  hfvqlp  move    *a10+,a0,L
    2774 000111d0     ca80          jaz     SUCIDE
         000111e0 00000000! 
    2775                    
    2776                    
    2777 00011200     b501          move    *a8(OFLAGS),a1
         00011210     00e0  
    2778 00011220     0d5f          calla   obj_aniq
         00011230 00000000! 
    2779                    
    2780 00011250     9740          move    *a10+,a0,L
    2781 00011260     4d02          move    a8,a2
    2782 00011270     4d28          move    a9,a8
    2783 00011280     b501          move    *a8(OFLAGS),a1
         00011290     00e0  
    2784 000112a0     0d5f          calla   obj_aniq
         000112b0 00000000! 
    2785 000112d0     4c48          move    a2,a8
    2786                    
    2787 000112e0                   SLEEPK  4
    2788 00011320     c0e9          jruc    hfvqlp
    2789                    
    2790                    
    2791 00011330           net0_l
    2792 00011330 00000000!         .long   swish1f,swish1b
    2793 00011370 00000000!         .long   swish2f,swish2b
    2794 000113b0 00000000!         .long   swish3f,swish3b
    2795 000113f0 00000000!         .long   swish4f,swish4b
    2796 00011430 00000000!         .long   swish5f,swish5b
    2797 00011470 00000000!         .long   swish3f,swish3b
    2798 000114b0 00000000!         .long   swish2f,swish2b
    2799 000114f0 00000000!         .long   swish1f,swish1b
    2800 00011530 00000000!         .long   rim1f,rim1b,0
    2801 00011590           net1_l
    2802 00011590 00000000!         .long   rim2f,rim2b
    2803 000115d0 00000000!         .long   rim3f,rim3b
    2804 00011610 00000000!         .long   rim4f,rim4b
    2805 00011650 00000000!         .long   swish4f,swish4b
    2806 00011690 00000000!         .long   swish5f,swish5b
    2807 000116d0 00000000!         .long   swish3f,swish3b
    2808 00011710 00000000!         .long   swish2f,swish2b
    2809 00011750 00000000!         .long   swish1f,swish1b
    2810 00011790 00000000!         .long   rim1f,rim1b,0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   64

    2811 000117f0           net2_l
    2812 000117f0 00000000!         .long   swish1f,swish1b
    2813 00011830 00000000!         .long   swish2f,swish2b
    2814 00011870 00000000!         .long   swish1f,swish1b
    2815 000118b0 00000000!         .long   rim1f,rim1b,0
    2816 00011910           net3_l
    2817 00011910 00000000!         .long   farshot1f,farshot1b
    2818 00011950 00000000!         .long   farshot2f,farshot2b
    2819 00011990 00000000!         .long   farshot3f,farshot3b
    2820 000119d0 00000000!         .long   farshot4f,farshot4b
    2821 00011a10 00000000!         .long   farshot3f,farshot3b
    2822 00011a50 00000000!         .long   farshot2f,farshot2b
    2823 00011a90 00000000!         .long   farshot1f,farshot1b
    2824 00011ad0 00000000!         .long   rim1f,rim1b,0
    2825 00011b30           net4_l
    2826 00011b30 00000000!         .long   rim3f,rim3b
    2827 00011b70 00000000!         .long   rim1f,rim1b,0
    2828 00011bd0           net5_l
    2829 00011bd0 00000000!         .long   rimbndF_1,rimbndB_1
    2830 00011c10 00000000!         .long   rimbndF_2,rimbndB_2
    2831 00011c50 00000000!         .long   rimbndF_3,rimbndB_3
    2832 00011c90 00000000!         .long   rimbndF_4,rimbndB_4
    2833 00011cd0 00000000!         .long   rimbndF_5,rimbndB_5
    2834 00011d10 00000000!         .long   rimbndF_6,rimbndB_6
    2835 00011d50 00000000!         .long   rimbndF_7,rimbndB_7
    2836 00011d90 00000000!         .long   rimbndF_8,rimbndB_8
    2837 00011dd0 00000000!         .long   rimbndF_9,rimbndB_9
    2838 00011e10 00000000!         .long   rimbndF_10,rimbndB_10
    2839 00011e50 00000000!         .long   rimbndF_11,rimbndB_11
    2840 00011e90 00000000!         .long   rimbndF_12,rimbndB_12
    2841 00011ed0 00000000!         .long   rimbndF_13,rimbndB_13
    2842 00011f10 00000000!         .long   rimbndF_14,rimbndB_14
    2843 00011f50 00000000!         .long   rimbndF_15,rimbndB_15
    2844 00011f90 00000000!         .long   rimbndF_16,rimbndB_16
    2845 00011fd0 00000000!         .long   rimbndF_17,rimbndB_17
    2846 00012010 00000000!         .long   rim1f,rim1b,0
    2847 00012070           net6_l
    2848 00012070 00000000!         .long   firimF_1,firimB_1
    2849 000120b0 00000000!         .long   firimF_2,firimB_2
    2850 000120f0 00000000!         .long   firimF_3,firimB_3
    2851 00012130 00000000!         .long   firimF_4,firimB_4
    2852 00012170 00000000!         .long   firimF_5,firimB_5
    2853 000121b0 00000000!         .long   firimF_6,firimB_6
    2854 000121f0 00000000!         .long   firimF_7,firimB_7
    2855 00012230 00000000!         .long   firimF_8,firimB_8
    2856 00012270 00000000!         .long   firimF_9,firimB_9
    2857 000122b0 00000000!         .long   firimF_10,firimB_10
    2858 000122f0 00000000!         .long   firimF_12,firimB_11
    2859 00012330 00000000!         .long   firimF_13,firimB_11
    2860 00012370 00000000!         .long   firimF_14,firimB_11
    2861 000123b0 00000000!         .long   firimF_15,firimB_11
    2862 000123f0 00000000!         .long   firimF_16,firimB_11
    2863 00012430 00000000!         .long   firimF_17,firimB_11
    2864 00012470 00000000!         .long   firimF_11,firimB_11,0
    2865                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   65

    2866                    
    2867                    
    2868                    
    2869 000124d0            SUBRP  status_display
    2870                    
    2871 000124d0     5600          clr     a0
    2872 000124e0     0780          move    a0,@P1DATA+ply_messages,L       ;zero player message img pntr
         000124f0 00000000! 
    2873 00012510     0780          move    a0,@P2DATA+ply_messages,L
         00012520 00000000! 
    2874 00012540     0780          move    a0,@P3DATA+ply_messages,L
         00012550 00000000! 
    2875 00012570     0780          move    a0,@P4DATA+ply_messages,L
         00012580 00000000! 
    2876                    
    2877 000125a0     0580          move    a0,@P1DATA+ply_idiot_use
         000125b0 00000120! 
    2878 000125d0     0580          move    a0,@P2DATA+ply_idiot_use
         000125e0 00000120! 
    2879 00012600     0580          move    a0,@P3DATA+ply_idiot_use
         00012610 00000120! 
    2880 00012630     0580          move    a0,@P4DATA+ply_idiot_use
         00012640 00000120! 
    2881                    
    2882 00012660     09eb          movi    tgedinit_t,a11          ;>Setup status images
         00012670 00013b40' 
    2883 00012690     09e9          movi    msg_ram,a9              ;keep crplate pntr for % printout
         000126a0 00000be0- 
    2884 000126c0     0d3f          callr   prt_status
         000126d0     0141  
    2885                    
    2886 000126e0     07a0          move    @msg_ram,a0,L
         000126f0 00000be0- 
    2887 00012710     0780          move    a0,@crplate_ptr,L
         00012720 00000bc0- 
    2888                    
    2889 00012740     05a0          move    @PSTATUS,a0
         00012750 00000000! 
    2890 00012770     1fe0          btst    0,a0
    2891 00012780     ca09          jrz     tgedtag
    2892                    
    2893 00012790     09eb          movi    init_t1,a11
         000127a0 00013ba0' 
    2894 000127c0     09e9          movi    P1DATA+ply_meter_imgs,a9
         000127d0 00000080! 
    2895 000127f0     0d3f          callr   prt_status
         00012800     012e  
    2896                    
    2897                    
    2898 00012810     c022          jruc    tgedtag1
    2899                    
    2900 00012820           tgedtag
    2901 00012820     09eb          movi    init_t1a,a11
         00012830 00013ca0' 
    2902 00012850     09e9          movi    P1DATA+ply_messages,a9
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   66

         00012860 00000000! 
    2903 00012880     0d3f          callr   prt_status
         00012890     0125  
    2904 000128a0     09eb          movi    init_t1,a11
         000128b0 00013ba0' 
    2905 000128d0     09e9          movi    P1DATA+ply_meter_imgs,a9
         000128e0 00000080! 
    2906                    
    2907 00012900     0d3f          callr   prt_status
         00012910     011d  
    2908                    
    2909 00012920     07a0          move    @P1DATA+ply_meter_imgs,a0,L
         00012930 00000080! 
    2910 00012950     0d5f          calla   OBJOFF
         00012960 00000000! 
    2911                    
    2912 00012980     07a0          move    @P1DATA+ply_meter_imgs+20h,a0,L
         00012990 000000a0! 
    2913 000129b0     0d5f          calla   OBJOFF
         000129c0 00000000! 
    2914 000129e0     07a0          move    @P1DATA+ply_meter_imgs+40h,a0,L
         000129f0 000000c0! 
    2915 00012a10     0d5f          calla   OBJOFF
         00012a20 00000000! 
    2916                    
    2917 00012a40           tgedtag1
    2918 00012a40     09eb          movi    P1DATA,a11              ;A11=*plyr data
         00012a50 00000000! 
    2919 00012a70     0d5f          calla   refill_turbo
         00012a80 00000000! 
    2920                    
    2921 00012aa0     05a0          move    @PSTATUS,a0
         00012ab0 00000000! 
    2922 00012ad0     1fc0          btst    1,a0
    2923 00012ae0     ca10          jrz     tgedtag2
    2924                    
    2925 00012af0     09eb          movi    init_t2kit,a11
         00012b00 00013e00' 
    2926                    
    2927 00012b20     05ae          move    @TWOPLAYERS,a14         ;0 = NO, 1 = YES 2 players
         00012b30 00000000! 
    2928 00012b50     cb03          jrnz    tged2_plyrs
    2929                    
    2930 00012b60     09eb          movi    init_t2,a11
         00012b70 00013d00' 
    2931 00012b90           tged2_plyrs
    2932                    
    2933                    
    2934 00012b90     09e9          movi    P2DATA+ply_meter_imgs,a9
         00012ba0 00000080! 
    2935 00012bc0     0d3f          callr   prt_status
         00012bd0     00f1  
    2936                    
    2937                    
    2938 00012be0     c029          jruc    tgedtag3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   67

    2939 00012bf0           tgedtag2
    2940 00012bf0     09eb          movi    init_t2a,a11
         00012c00 00013f00' 
    2941 00012c20     09e9          movi    P2DATA+ply_messages,a9
         00012c30 00000000! 
    2942 00012c50     0d3f          callr   prt_status
         00012c60     00e8  
    2943                    
    2944                    
    2945 00012c70     09eb          movi    init_t2kit,a11
         00012c80 00013e00' 
    2946                    
    2947 00012ca0     05ae          move    @TWOPLAYERS,a14         ;0 = NO, 1 = YES 2 players
         00012cb0 00000000! 
    2948 00012cd0     cb03          jrnz    tged2_plyrsa
    2949                    
    2950 00012ce0     09eb          movi    init_t2,a11
         00012cf0 00013d00' 
    2951 00012d10           tged2_plyrsa
    2952                    
    2953 00012d10     09e9          movi    P2DATA+ply_meter_imgs,a9
         00012d20 00000080! 
    2954                    
    2955 00012d40     0d3f          callr   prt_status
         00012d50     00d9  
    2956                    
    2957                    
    2958                    
    2959 00012d60     07a0          move    @P2DATA+ply_meter_imgs,a0,L
         00012d70 00000080! 
    2960 00012d90     0d5f          calla   OBJOFF
         00012da0 00000000! 
    2961                    
    2962 00012dc0     07a0          move    @P2DATA+ply_meter_imgs+20h,a0,L
         00012dd0 000000a0! 
    2963 00012df0     0d5f          calla   OBJOFF
         00012e00 00000000! 
    2964 00012e20     07a0          move    @P2DATA+ply_meter_imgs+40h,a0,L
         00012e30 000000c0! 
    2965 00012e50     0d5f          calla   OBJOFF
         00012e60 00000000! 
    2966                    
    2967 00012e80           tgedtag3
    2968 00012e80     09eb          movi    P2DATA,a11              ;A11=*plyr data
         00012e90 00000000! 
    2969 00012eb0     0d5f          calla   refill_turbo
         00012ec0 00000000! 
    2970                    
    2971 00012ee0     05a0          move    @PSTATUS,a0
         00012ef0 00000000! 
    2972 00012f10     1fa0          btst    2,a0
    2973 00012f20     ca10          jrz     tgedtag4
    2974                    
    2975 00012f30     09eb          movi    init_t3kit,a11
         00012f40 00014060' 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   68

    2976                    
    2977 00012f60     05ae          move    @TWOPLAYERS,a14         ;0 = NO, 1 = YES 2 players
         00012f70 00000000! 
    2978 00012f90     cb03          jrnz    tged2_plyrsb
    2979                    
    2980 00012fa0     09eb          movi    init_t3,a11
         00012fb0 00013f60' 
    2981 00012fd0           tged2_plyrsb
    2982                    
    2983                    
    2984 00012fd0     09e9          movi    P3DATA+ply_meter_imgs,a9
         00012fe0 00000080! 
    2985 00013000     0d3f          callr   prt_status
         00013010     00ad  
    2986                    
    2987                    
    2988 00013020     c029          jruc    tgedtag5
    2989 00013030           tgedtag4
    2990 00013030     09eb          movi    init_t3a,a11
         00013040 00014160' 
    2991 00013060     09e9          movi    P3DATA+ply_messages,a9
         00013070 00000000! 
    2992 00013090     0d3f          callr   prt_status
         000130a0     00a4  
    2993                    
    2994                    
    2995                    
    2996 000130b0     09eb          movi    init_t3kit,a11
         000130c0 00014060' 
    2997                    
    2998 000130e0     05ae          move    @TWOPLAYERS,a14         ;0 = NO, 1 = YES 2 players
         000130f0 00000000! 
    2999 00013110     cb03          jrnz    tged2_plyrsc
    3000                    
    3001 00013120     09eb          movi    init_t3,a11
         00013130 00013f60' 
    3002 00013150           tged2_plyrsc
    3003                    
    3004                    
    3005                    
    3006                    
    3007                    
    3008 00013150     09e9          movi    P3DATA+ply_meter_imgs,a9
         00013160 00000080! 
    3009 00013180     0d3f          callr   prt_status
         00013190     0095  
    3010 000131a0     07a0          move    @P3DATA+ply_meter_imgs,a0,L
         000131b0 00000080! 
    3011 000131d0     0d5f          calla   OBJOFF
         000131e0 00000000! 
    3012 00013200     07a0          move    @P3DATA+ply_meter_imgs+20h,a0,L
         00013210 000000a0! 
    3013 00013230     0d5f          calla   OBJOFF
         00013240 00000000! 
    3014 00013260     07a0          move    @P3DATA+ply_meter_imgs+40h,a0,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   69

         00013270 000000c0! 
    3015 00013290     0d5f          calla   OBJOFF
         000132a0 00000000! 
    3016                    
    3017 000132c0           tgedtag5
    3018 000132c0     09eb          movi    P3DATA,a11              ;A11=*plyr data
         000132d0 00000000! 
    3019 000132f0     0d5f          calla   refill_turbo
         00013300 00000000! 
    3020                    
    3021 00013320     05a0          move    @PSTATUS,a0
         00013330 00000000! 
    3022 00013350     1f80          btst    3,a0
    3023 00013360     ca09          jrz     tgedtag6
    3024                    
    3025 00013370     09eb          movi    init_t4,a11
         00013380 000141c0' 
    3026 000133a0     09e9          movi    P4DATA+ply_meter_imgs,a9
         000133b0 00000080! 
    3027 000133d0     0d3f          callr   prt_status
         000133e0     0070  
    3028                    
    3029                    
    3030 000133f0     c022          jruc    tgedtag7
    3031 00013400           tgedtag6
    3032 00013400     09eb          movi    init_t4a,a11
         00013410 000142c0' 
    3033 00013430     09e9          movi    P4DATA+ply_messages,a9
         00013440 00000000! 
    3034 00013460     0d3f          callr   prt_status
         00013470     0067  
    3035 00013480     09eb          movi    init_t4,a11
         00013490 000141c0' 
    3036 000134b0     09e9          movi    P4DATA+ply_meter_imgs,a9
         000134c0 00000080! 
    3037 000134e0     0d3f          callr   prt_status
         000134f0     005f  
    3038 00013500     07a0          move    @P4DATA+ply_meter_imgs,a0,L
         00013510 00000080! 
    3039 00013530     0d5f          calla   OBJOFF
         00013540 00000000! 
    3040 00013560     07a0          move    @P4DATA+ply_meter_imgs+20h,a0,L
         00013570 000000a0! 
    3041 00013590     0d5f          calla   OBJOFF
         000135a0 00000000! 
    3042 000135c0     07a0          move    @P4DATA+ply_meter_imgs+40h,a0,L
         000135d0 000000c0! 
    3043 000135f0     0d5f          calla   OBJOFF
         00013600 00000000! 
    3044 00013620           tgedtag7
    3045 00013620     09eb          movi    P4DATA,a11              ;A11=*plyr data
         00013630 00000000! 
    3046 00013650     0d5f          calla   refill_turbo
         00013660 00000000! 
    3047                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   70

    3048 00013680     0d5f          calla   prt_top_scores          ;Update scores at scrn top
         00013690 00000000! 
    3049 000136b0     0d5f          calla   prt_cr_timers
         000136c0 00000000! 
    3050                    
    3051                    
    3052                    
    3053 000136e0     09e0          movi    seccall1+03df2H,a0      ;0CHhksum security call code
         000136f0 00009212' 
    3054 00013710     1930          movk    (seccall1end-seccall1)/16,b0
    3055 00013720     09e8          movi    -0259e0dH-2,a8          ;1st value
         00013730 ffda61f1  
    3056 00013750     b401  tgedcsumlp      move    *a0(-03df2H),a1
         00013760     c20e  
    3057 00013770     4028          add     a1,a8
    3058 00013780     1200          addk    16,a0
    3059 00013790     3cb0          dsj     b0,tgedcsumlp
    3060                                                            ;0CHhksum security_chk code
    3061 000137a0     09e0          movi    security_chk+04bbbH,a0
         000137b0 00004bbb! 
    3062 000137d0     09d0          movi    68+128*2,b0             ;tgedWords
         000137e0     0144  
    3063 000137f0     b401  tgedcsmlp       move    *a0(-04bbbH),a1
         00013800     b445  
    3064 00013810     4028          add     a1,a8
    3065 00013820     1200          addk    16,a0
    3066 00013830     3cb0          dsj     b0,tgedcsmlp
    3067                    
    3068                    
    3069                    
    3070 00013840                   SLEEPK  5
    3071 00013880     0d5f          calla   update_scorebrd
         00013890 00000000! 
    3072                    
    3073 000138b0     5600          clr     a0
    3074 000138c0     1881          movk    4,a1
    3075 000138d0     0d3f          callr   net_ani                 ;Ani both nets to fix alignment
         000138e0     fd5e  
    3076 000138f0     1820          movk    1,a0
    3077 00013900     1881          movk    4,a1
    3078 00013910     0d3f          callr   net_ani
         00013920     fd5a  
    3079                    
    3080 00013930                   CREATE0 security_trashstuff     ;Pass A8
    3081                    
    3082 000139a0     0d3f          callr   lftcrowd_ani
         000139b0     f88d  
    3083 000139c0                   DIE
    3084                    
    3085 000139f0           tgedlp
    3086 000139f0     9561          move    *a11+,a1                ;Y
    3087 00013a00     2600          sll     16,a0
    3088 00013a10     2601          sll     16,a1
    3089 00013a20     9563          move    *a11+,a3                ;Z
    3090 00013a30     09e4          movi    DMAWNZ|M_NOCOLL|M_SCRNREL,a4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   71

         00013a40 0000a802  
    3091 00013a60     9762          move    *a11+,a2,L
    3092 00013a70     09c5          movi    CLSDEAD,a5
         00013a80     2000  
    3093 00013a90     56c6          clr     a6
    3094 00013aa0     56e7          clr     a7
    3095 00013ab0     0d5f          calla   BEGINOBJ2
         00013ac0 00000000! 
    3096 00013ae0     9309          move    a8,*a9+,L               ;keep led img pntr
    3097                    
    3098 00013af0            SUBR   prt_status
    3099                    
    3100 00013af0     9560          move    *a11+,a0                ;X
    3101 00013b00     0b40          cmpi    4000,a0
         00013b10     f05f  
    3102 00013b20     cbec          jrne    tgedlp                  ;!End?
    3103 00013b30     0960          rets
    3104                    
    3105              0013  tgedx   .equ    15+4
    3106              00f6  tgedx2  .equ    236+10
    3107              0002  tgedy   .equ    2
    3108              012c  tgedz   .equ    300
    3109                    
    3110 00013b40           tgedinit_t
    3111 00013b40     00af          .word   0afH,tgedy-2,948
    3112 00013b70 00000000!         .long   crplate                 ;top credit plate
    3113                    
    3114 00013b90     0fa0          .word   4000
    3115                    
    3116 00013ba0           init_t1
    3117 00013ba0     002e          .word   tgedx+27,tgedy-2+8,tgedz
    3118 00013bd0 00000000!         .long   LED_00                  ;timebox
    3119 00013bf0           init_t1b
    3120 00013bf0     002f          .word   tgedx+28,tgedy-2+12,tgedz
    3121 00013c20 00000000!         .long   METERb
    3122 00013c40     0011          .word   tgedx-2,tgedy-2,tgedz+1
    3123 00013c70 00000000!         .long   LITUPb
    3124                    
    3125 00013c90     0fa0          .word   4000
    3126                    
    3127 00013ca0           init_t1a                                ;not in game, insert coin
    3128 00013ca0     0031          .word   tgedx+30,tgedy-2+8,tgedz
    3129 00013cd0 00000000!         .long   insert
    3130                    
    3131 00013cf0     0fa0          .word   4000
    3132                    
    3133 00013d00           init_t2
    3134 00013d00     007e          .word   tgedx+90-10+27,tgedy-2+8,tgedz
    3135 00013d30 00000000!         .long   LED_00                  ;timebox
    3136 00013d50           init_t2b
    3137 00013d50     007f          .word   tgedx+90-10+28,tgedy-2+12,tgedz
    3138 00013d80 00000000!         .long   METERg
    3139 00013da0     0061          .word   tgedx+90-10-2,tgedy-2,tgedz+1
    3140 00013dd0 00000000!         .long   LITUPg
    3141                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   72

    3142 00013df0     0fa0          .word   4000
    3143 00013e00           init_t2kit
    3144 00013e00     007e          .word   tgedx+90-10+27,tgedy-2+8,tgedz
    3145 00013e30 00000000!         .long   LED_00                  ;timebox
    3146 00013e50           init_t2bkit
    3147 00013e50     007f          .word   tgedx+90-10+28,tgedy-2+12,tgedz
    3148 00013e80 00000000!         .long   METERb
    3149 00013ea0     0061          .word   tgedx+90-10-2,tgedy-2,tgedz+1
    3150 00013ed0 00000000!         .long   LITUPb
    3151                    
    3152 00013ef0     0fa0          .word   4000
    3153                    
    3154 00013f00           init_t2a                                ;not in game, insert coin
    3155 00013f00     0081          .word   tgedx+90-10+30,tgedy-2+8,tgedz
    3156 00013f30 00000000!         .long   insert
    3157                    
    3158 00013f50     0fa0          .word   4000
    3159                    
    3160 00013f60           init_t3
    3161 00013f60     0111          .word   tgedx2+27,tgedy-2+8,tgedz
    3162 00013f90 00000000!         .long   LED_00                  ;timebox
    3163 00013fb0           init_t3b
    3164 00013fb0     0112          .word   tgedx2+28,tgedy-2+12,tgedz
    3165 00013fe0 00000000!         .long   METERy
    3166 00014000     00f4          .word   tgedx2-2,tgedy-2,tgedz+1
    3167 00014030 00000000!         .long   LITUPy
    3168                    
    3169 00014050     0fa0          .word   4000
    3170 00014060           init_t3kit
    3171 00014060     0111          .word   tgedx2+27,tgedy-2+8,tgedz
    3172 00014090 00000000!         .long   LED_00                  ;timebox
    3173 000140b0           init_t3bkit
    3174 000140b0     0112          .word   tgedx2+28,tgedy-2+12,tgedz
    3175 000140e0 00000000!         .long   METERr
    3176 00014100     00f4          .word   tgedx2-2,tgedy-2,tgedz+1
    3177 00014130 00000000!         .long   LITUPr
    3178                    
    3179 00014150     0fa0          .word   4000
    3180                    
    3181 00014160           init_t3a                                ;not in game, insert coin
    3182 00014160     0114          .word   tgedx2+30,tgedy-2+8,tgedz
    3183 00014190 00000000!         .long   insert
    3184                    
    3185 000141b0     0fa0          .word   4000
    3186                    
    3187 000141c0           init_t4
    3188 000141c0     015e          .word   tgedx2+87-10+27,tgedy-2+8,tgedz
    3189 000141f0 00000000!         .long   LED_00                  ;timebox
    3190 00014210           init_t4b
    3191 00014210     015f          .word   tgedx2+87-10+28,tgedy-2+12,tgedz
    3192 00014240 00000000!         .long   METERr
    3193 00014260     0141          .word   tgedx2+87-10-2,tgedy-2,tgedz+1
    3194 00014290 00000000!         .long   LITUPr
    3195                    
    3196 000142b0     0fa0          .word   4000
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   73

    3197                    
    3198 000142c0           init_t4a                                ;not in game, insert coin
    3199 000142c0     0161          .word   tgedx2+87-10+30,tgedy-2+8,tgedz
    3200 000142f0 00000000!         .long   insert
    3201                    
    3202 00014310     0fa0          .word   4000
    3203                    
    3204                    
    3205                    
    3206 00014320           COLRPRC
    3207 00014320     09c0          movi    COLRPID,a0
         00014330     0078  
    3208 00014340     0d5f          calla   KIL1C           ;KILL ALL COLOR UPDATE PROCESSES
         00014350 00000000! 
    3209 00014370     5600          clr     a0
    3210 00014380     0780          move    a0,@PALFRAM,L
         00014390 00000000! 
    3211 000143b0     09e0          movi    scorep,a0       ;Score area palette
         000143c0 00000000! 
    3212 000143e0     c080          jauc    pal_getf
         000143f0 00000000! 
    3213                    
    3214                    
    3215                    
    3216                    
    3217                    
    3218 00014410            SUBRP  security_trashstuff
    3219                    
    3220                    ;       addk    2,a8
    3221                    ;       jrz     dhcex           ;OK?
    3222                    ;       movi    TSEC*60*5+1,a0
    3223                    ;       calla   RNDRNG0
    3224                    ;       addi    TSEC*60*4-3,a0
    3225                    ;       calla   PRCSLP          ;Sleep 5-9 minutes
    3226                    ;       movi    OFREE,a1
    3227                    ;       movk    10,a2
    3228                    ;dhcelp move    *a1,a1,L
    3229                    ;       dsj     a2,dhcelp
    3230                    ;       move    a0,*a1,L        ;Trash 10th free objs *next (-1)
    3231                    
    3232 00014410           dhcex   DIE
    3233                    
    3234                    
    3235                    
    3236                    
    3237                    
    3238                    
    3239                    
    3240                    
    3241                    
    3242                    
    3243                    
    3244 00014440            SUBR   WNDWON
    3245                    
    3246 00014440                   PUSHP   a8
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   74

    3247 00014450     1828          movk    1,a8
    3248 00014460     0588          MOVE    A8,@WFLG
         00014470 00000580- 
    3249 00014490     09e8          MOVI    [254,400],A8
         000144a0 00fe0190  
    3250 000144c0     09ea          MOVI    SCRNMID,A10
         000144d0 008000c8  
    3251 000144f0                   JSRP    OWINDOW
    3252 00014560     0788          MOVE    A8,@OBJPTR,L
         00014570 000005a0- 
    3253 00014590                   PULLP   a8
    3254 000145a0                   RETP
    3255                    
    3256                    
    3257 000145d0            SUBR   WNDWOFF
    3258                    
    3259 000145d0                   PUSHP   a8
    3260 000145e0     07a8          MOVE    @OBJPTR,A8,L
         000145f0 000005a0- 
    3261 00014610                   JSRP    CWINDOW
    3262 00014680     5600          CLR     A0
    3263 00014690     0580          MOVE    A0,@WFLG
         000146a0 00000580- 
    3264 000146c0                   PULLP   a8
    3265 000146d0                   RETP
    3266                    
    3267                    
    3268                    
    3269                    
    3270 00014700           OWINDOW
    3271 00014700     4d0b          move    a8,a11
    3272                    
    3273 00014710     4d40          move    a10,a0
    3274 00014720     2600          sll     16,a0
    3275 00014730     5621          clr     a1
    3276 00014740     ef41          movy    a10,a1
    3277 00014750     09e2          movi    FONT7A,a2
         00014760 00000000! 
    3278 00014780     09c3          movi    20001,a3                ;Z
         00014790     4e21  
    3279 000147a0     09e4          movi    DMACAL,a4
         000147b0 0000800c  
    3280 000147d0     09c5          movi    CLSNEUT|TYPTEXT|SUBWNDW,a5
         000147e0     0705  
    3281 000147f0     56c6          clr     a6
    3282 00014800     56e7          clr     a7
    3283 00014810     0d5f          calla   BEGINOBJ
         00014820 00000000! 
    3284                    
    3285 00014840     b50a          move    *a8(OXPOS),a10
         00014850     0090  
    3286 00014860     b700          move    *a8(OYVAL),a0,L
         00014870     00a0  
    3287 00014880     ee0a          movy    a0,a10                  ;Get new world coords
    3288 00014890     4d40          move    a10,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   75

    3289                    
    3290 000148a0     2feb          srl     1,a11                   ;XY/2
    3291 000148b0     0b8b          andi    07fff7fffH,a11
         000148c0 80008000  
    3292                    
    3293 000148e0     e36a          subxy   a11,a10
    3294 000148f0     e00b          addxy   a0,a11
    3295                    
    3296 00014900     05a0          move    @WSPEED,a0              ;Window speed
         00014910 00000570- 
    3297 00014930                   JSRP    OBJEXP32
    3298                    
    3299 000149a0     09c0          movi    OWSPD,a0
         000149b0     0012  
    3300 000149c0     0580          move    a0,@WSPEED
         000149d0 00000570- 
    3301                    
    3302 000149f0                   RETP
    3303                    
    3304                    
    3305                    
    3306 00014a20           CWINDOW
    3307 00014a20     b50a          MOVE    *A8(OXPOS),A10
         00014a30     0090  
    3308 00014a40     b70b          MOVE    *A8(OYVAL),A11,L
         00014a50     00a0  
    3309 00014a60     ef6a          MOVY    A11,A10
    3310 00014a70     b70b          MOVE    *A8(OSIZE),A11,L
         00014a80     0130  
    3311 00014a90     ef61          MOVY    A11,A1
    3312 00014aa0     2de1          SRL     17,A1
    3313 00014ab0     2601          SLL     16,A1
    3314 00014ac0     260b          SLL     16,A11
    3315 00014ad0     2deb          SRL     17,A11
    3316 00014ae0     ee2b          MOVY    A1,A11
    3317 00014af0     e16a          ADDXY   A11,A10
    3318 00014b00     4d4b          MOVE    A10,A11                 ;CALCULATED CENTER OF OBJECT
    3319 00014b10     09c0          MOVI    CWSPD,A0                        ;WINDOW SPEED
         00014b20     0028  
    3320 00014b30                   JSRP    OBJEXP32
    3321 00014ba0     0d5f          CALLA   DELOBJA8
         00014bb0 00000000! 
    3322 00014bd0                   RETP
    3323                    
    3324 00014c00           DELWNDW
    3325 00014c00     07a0          MOVE    @OBJPTR,A0,L
         00014c10 000005a0- 
    3326 00014c30     4c08          MOVE    A0,A8
    3327 00014c40     c080          jauc    DELOBJ
         00014c50 00000000! 
    3328                    
    3329                    
    3330                    
    3331 00014c70           OBJEXP32
    3332 00014c70     2700          sll     32-8,a0                 ;0-255
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   76

    3333 00014c80     2d00          srl     32-8,a0
    3334 00014c90     0ba0          ori     1,a0
         00014ca0 00000001  
    3335                    
    3336 00014cc0     b501          MOVE    *A8(OXPOS),A1
         00014cd0     0090  
    3337 00014ce0     b70e          MOVE    *A8(OYVAL),A14,L
         00014cf0     00a0  
    3338 00014d00     ec2e          MOVX    A1,A14                  ;A14 = OBJECT UL
    3339                    
    3340 00014d10     2601          SLL     16,A1
    3341 00014d20     5642          CLR     A2
    3342 00014d30     efc2          MOVY    A14,A2
    3343 00014d40     e34e          SUBXY   A10,A14
    3344 00014d50     edc5          MOVX    A14,A5
    3345 00014d60     2605          SLL     16,A5
    3346 00014d70     5805          DIVS    A0,A5
    3347 00014d80     03a5          NEG     A5
    3348 00014d90     4ca6          MOVE    A5,A6
    3349 00014da0     56a5          CLR     A5
    3350 00014db0     efc5          MOVY    A14,A5
    3351 00014dc0     5805          DIVS    A0,A5
    3352 00014dd0     03a5          NEG     A5
    3353 00014de0     4ca7          MOVE    A5,A7
    3354                    
    3355 00014df0     b503          MOVE    *A8(OXPOS),A3
         00014e00     0090  
    3356 00014e10     b70e          MOVE    *A8(OYVAL),A14,L
         00014e20     00a0  
    3357 00014e30     ec6e          MOVX    A3,A14
    3358 00014e40     b703          MOVE    *A8(OSIZE),A3,L
         00014e50     0130  
    3359 00014e60     e06e          ADDXY   A3,A14                  ;A14 = OBJECT LR
    3360                    
    3361 00014e70                   PUSH    A8
    3362 00014e80     edc3          MOVX    A14,A3
    3363 00014e90     2603          SLL     16,A3
    3364 00014ea0     5684          CLR     A4
    3365 00014eb0     efc4          MOVY    A14,A4
    3366 00014ec0     e36e          SUBXY   A11,A14
    3367 00014ed0     edc5          MOVX    A14,A5
    3368 00014ee0     2605          SLL     16,A5
    3369 00014ef0     5805          DIVS    A0,A5
    3370 00014f00     03a5          NEG     A5
    3371 00014f10     4ca8          MOVE    A5,A8
    3372 00014f20     56a5          CLR     A5
    3373 00014f30     efc5          MOVY    A14,A5
    3374 00014f40     5805          DIVS    A0,A5
    3375 00014f50     03a5          NEG     A5
    3376 00014f60     4ca9          MOVE    A5,A9
    3377 00014f70     4c05          MOVE    A0,A5
    3378 00014f80                   PULL    A14
    3379 00014f90           OBJTIMLP
    3380 00014f90     40c1          ADD     A6,A1                   ;ADD THE TLX INCREMENT
    3381 00014fa0     40e2          ADD     A7,A2                   ;ADD THE TLY INCREMENT
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   77

    3382 00014fb0     4103          ADD     A8,A3                   ;ADD THE LRX INCREMENT
    3383 00014fc0     4124          ADD     A9,A4                   ;ADD THE LRY INCREMENT
    3384 00014fd0     098c          MMTM    A12,A1,A2,A3,A4,A5,A6,A7,A14
         00014fe0     7f02  
    3385 00014ff0     b22e          MOVE    A1,*A14(OXVAL),L
         00015000     0080  
    3386 00015010     b24e          MOVE    A2,*A14(OYVAL),L
         00015020     00a0  
    3387 00015030     4423          SUB     A1,A3
    3388 00015040     4444          SUB     A2,A4                   ;GET A SIZE FOR THE WINDOW
    3389 00015050     2e03          SRL     16,A3
    3390 00015060     ee83          MOVY    A4,A3
    3391 00015070     0d3f          callr   fixa3xy
         00015080     001b  
    3392 00015090     b26e          MOVE    A3,*A14(OSIZE),L
         000150a0     0130  
    3393 000150b0                   SLEEPK  1
    3394 000150f0     09ac          MMFM    A12,A1,A2,A3,A4,A5,A6,A7,A14
         00015100     40fe  
    3395 00015110     3f25          DSJS    A5,OBJTIMLP
    3396                    
    3397 00015120     b14e          MOVE    A10,*A14(OXPOS)
         00015130     0090  
    3398 00015140     ef41          MOVY    A10,A1
    3399 00015150     2e01          SRL     16,A1
    3400 00015160     b02e          MOVE    A1,*A14(OYPOS)
         00015170     00b0  
    3401 00015180     4d69          MOVE    A11,A9
    3402 00015190     e34b          SUBXY   A10,A11
    3403 000151a0     4d63          MOVE    A11,A3
    3404 000151b0     0d3f          callr   fixa3xy
         000151c0     0007  
    3405 000151d0     b26e          MOVE    A3,*A14(OSIZE),L        ;MATCH WHAT THE CALLER WANTED
         000151e0     0130  
    3406 000151f0     4d2b          MOVE    A9,A11                  ;PRESERVE FOR YUKS
    3407 00015200     4dc8          MOVE    A14,A8
    3408 00015210                   RETP
    3409                    
    3410                    
    3411                    
    3412 00015240           fixa3xy
    3413 00015240     4c63          move    a3,a3
    3414 00015250     c703          jrgt    dhceyok
    3415 00015260     1820          movk    1,a0
    3416 00015270     2600          sll     16,a0
    3417 00015280     ee03          movy    a0,a3
    3418 00015290           dhceyok
    3419 00015290     ec60          movx    a3,a0
    3420 000152a0     0500          sext    a0
    3421 000152b0     c702          jrgt    dhcexok
    3422 000152c0     1820          movk    1,a0
    3423 000152d0     ec03          movx    a0,a3
    3424 000152e0           dhcexok
    3425 000152e0     0960          rets
    3426                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   78

    3427                    
    3428                    
    3429 000152f0            SUBRP  rnd
    3430                    
    3431 000152f0     07a1          move    @RAND,a1,L
         00015300 00000000! 
    3432 00015320     6821          rl      a1,a1
    3433 00015330     05ae          move    @HCOUNT,a14
         00015340 c00001c0  
    3434 00015360     69c1          rl      a14,a1
    3435 00015370     41e1          add     sp,a1
    3436 00015380     0781          move    a1,@RAND,L
         00015390 00000000! 
    3437                    
    3438 000153b0     5020          and     a1,a0
    3439 000153c0     0960          rets
    3440                    
    3441                    
    3442                    
    3443                    
    3444                            .if     DEBUG
    3445                    
    3446                            .ref    dirqtimer
    3447                    
    3448                            BSSX    CPUAVG          ,16
    3449                            BSSX    CPULEFT         ,16
    3450                    
    3451                    
    3452                     SUBRP  cputime_calcfree
    3453                    
    3454                            move    @dirqtimer,a0
    3455                            subk    1,a0
    3456                            jrle    nobog
    3457                            clr     a0
    3458                            jruc    gottime
    3459                    nobog
    3460                            move    @vcount,a0
    3461                            subi    EOSINT,a0
    3462                            jrnn    skinccnt
    3463                            addi    256,a0
    3464                    skinccnt
    3465                            sll     2,a0
    3466                            neg     a0
    3467                            addi    1024,a0
    3468                    gottime
    3469                            move    a0,@CPULEFT
    3470                    
    3471                            srl     4,a0
    3472                            move    @CPUAVG,a1
    3473                            move    a1,a2
    3474                            srl     4,a2                    ;/16
    3475                            sub     a2,a1
    3476                            add     a0,a1
    3477                            move    a1,@CPUAVG
    3478                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   79

    3479                            rets
    3480                    
    3481                    
    3482                            .endif
    3483                    
    3484                    
    3485                    
    3486 000153d0            SUBRP  testcode
    3487                    
    3488                    
    3489                    
    3490                    
    3491                            NOTINUSE
    3492                    
    3493                            dint
    3494                    
    3495                            clr     a0
    3496                            move    a0,@DMACTRL
    3497                            move    a0,@DMACTRL
    3498                    
    3499                            clr     a1                      ;0CHlr screen mem
    3500                            movi    0200000H/32,b0
    3501                    aknuclrscr      move    a0,*a1+,L
    3502                            dsj     b0,aknuclrscr
    3503                    
    3504                            clr     a0
    3505                            move    a0,@DMATEST
    3506                    
    3507                            movi    0,a0
    3508                            move    a0,@DMAOFFST
    3509                    
    3510                            movk    010H,a1
    3511                            move    a1,@DMACONF
    3512                            movi    [350+56,50+56],a1       ;L/R
    3513                            move    a1,@DMAWINDOW,L
    3514                    
    3515                            movi    030H,a1
    3516                            move    a1,@DMACONF             ;Top/Bottom
    3517                            movi    [200,50],a1
    3518                            move    a1,@DMAWINDOW,L
    3519                    
    3520                    
    3521                            movi    [0100H,0100H],a3                ;Y:X scale
    3522                            clr     a4
    3523                            movi    [100,100+56],a8         ;Y:X
    3524                            movi    [100,200],a7            ;V:H size
    3525                            movi    02000000H,a10           ;SAG
    3526                            movi    0900c0000H,a11          ;CTRL:OFSET
    3527                    
    3528                            movi    20000,b2
    3529                    aknulp  rl      16,a4
    3530                    
    3531                            movi    DMAREGS,a14
    3532                    
    3533                    aknudwt move    @DMACTRL,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   80

    3534                            jrn     aknudwt
    3535                    
    3536                            mmtm    a14,a3,a4,a7,a8,a10,a11
    3537                    
    3538                            rl      16,a4
    3539                    
    3540                    aknuxok addk    1,a4                    ;Color+1
    3541                            andi    0ffH,a4
    3542                            move    a4,a0
    3543                            sll     8,a0
    3544                            or      a0,a4
    3545                    
    3546                            dsj     b2,aknulp
    3547                    
    3548                            eint
    3549                    
    3550                            .endif
    3551                    
    3552                    
    3553                    
    3554                    
    3555                    
    3556                    
    3557                            NOTINUSE
    3558                    
    3559                            dint
    3560                    
    3561                            clr     a0
    3562                            move    a0,@DMACTRL
    3563                            move    a0,@DMACTRL
    3564                    
    3565                            clr     a1                      ;0CHlr screen mem
    3566                            movi    0200000H/32,b0
    3567                    bjsyclrscr      move    a0,*a1+,L
    3568                            dsj     b0,bjsyclrscr
    3569                    
    3570                            clr     a0
    3571                            move    a0,@DMATEST
    3572                    
    3573                            movi    0,a0
    3574                            move    a0,@DMAOFFST
    3575                    
    3576                            movk    010H,a1
    3577                            move    a1,@DMACONF
    3578                            movi    [350,50],a1             ;L/R
    3579                            movi    [399,0],a1              ;L/R
    3580                            move    a1,@DMAWINDOW,L
    3581                    
    3582                            movi    030H,a1
    3583                            move    a1,@DMACONF             ;Top/Bottom
    3584                            movi    [200,50],a1
    3585                            movi    [253,0],a1
    3586                            move    a1,@DMAWINDOW,L
    3587                    
    3588                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   81

    3589                            movi    [0100H,0100H],a3                ;Y:X scale
    3590                            clr     a4
    3591                            clr     a8                      ;Y:X
    3592                            movi    010001H,a7              ;V:H size
    3593                            movi    02000000H,a10           ;SAG
    3594                            movi    0900c0000H,a11          ;CTRL:OFSET
    3595                    
    3596                    bjsylp  rl      16,a4
    3597                    
    3598                            movi    DMAREGS,a14
    3599                    
    3600                    bjsydwt move    @DMACTRL,a0
    3601                            jrn     bjsydwt
    3602                    
    3603                            mmtm    a14,a3,a4,a7,a8,a10,a11
    3604                    
    3605                            rl      16,a4
    3606                    
    3607                            addk    1,a8
    3608                            btst    9,a8
    3609                            jrz     bjsyxok
    3610                            addi    010000H,a8              ;+1 Y
    3611                            btst    8+16,a8
    3612                            jrz     bjsyyok
    3613                            addk    4,a4
    3614                    bjsyyok andi    0ff01ffH,a8
    3615                    
    3616                    bjsyxok addk    1,a4
    3617                            andi    0ffH,a4
    3618                            move    a4,a0
    3619                            sll     8,a0
    3620                            or      a0,a4
    3621                    
    3622                            addk    1,a10                   ;SAG+1
    3623                    
    3624                            jruc    bjsylp
    3625                    
    3626                            eint
    3627                    
    3628                            .endif
    3629                    
    3630                    
    3631                    
    3632                    
    3633                            NOTINUSE
    3634                    
    3635                            dint
    3636                            movi    02cH,a0                 ;Enable cache
    3637                            movi    0802cH,a0               ;Disable cache
    3638                            move    a0,@CONTROL
    3639                            movi    0f010H,a0
    3640                            move    a0,@DPYCTL
    3641                            move    @HSTCTLH,a0
    3642                            andi    0bfffH,a0
    3643                            move    a0,@HSTCTLH
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   82

    3644                    
    3645                    
    3646                            movi    CPULEFT,a1
    3647                    
    3648                    
    3649                    
    3650                    aipxnxt
    3651                            movi    VCOUNT,a7
    3652                            clr     a6
    3653                            movi    SCRATCH,a2
    3654                    
    3655                    aipxlp  move    *a7,a0
    3656                            jrnz    aipxlp
    3657                    aipxlp2 move    *a7,a0
    3658                            jrz     aipxlp2
    3659                    
    3660                    aipxlp3
    3661                            movi    SCRATCH+01000H,a0
    3662                            movi    SCRATCH+01000H,a1
    3663                            mmfm    a0,a1,a2,a3,a4,a5,a14
    3664                            mmtm    a0,a1,a2,a3,a4,a5,a14
    3665                    
    3666                            addk    1,a6                    ;1,4
    3667                            move    *a7,a0                  ;3,6
    3668                            jrnz    aipxlp3                 ;2,5
    3669                    
    3670                            movi    16*50000000/8/62,a1
    3671                            divu    a6,a1
    3672                            addk    18,a1                   ;+Fudge
    3673                            subi    15*16,a1                ;-Overhead cycles
    3674                            move    a1,a0                   ;Round off
    3675                            addk    8,a0
    3676                            srl     4,a0
    3677                    
    3678                            trap    29
    3679                            jruc    aipxnxt
    3680                    
    3681                    
    3682                            movi    COLRAM,a8
    3683                    aipxlp5 move    *a7,a0
    3684                    aipxlp6 move    *a7,a1
    3685                            cmp     a1,a0
    3686                            jreq    aipxlp6
    3687                    
    3688                            movi    90,a2
    3689                            movk    5,a0
    3690                    aipxlp8 move    a0,*a8          ;1+(1),5
    3691                            addk    2,a0            ;1,4
    3692                            dsj     a2,aipxlp8              ;2,5
    3693                            jruc    aipxlp5
    3694                    
    3695                            eint
    3696                    
    3697                            .endif
    3698                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   83

    3699                    
    3700 000153d0     0960          rets
    3701                    
    3702 000153e0            SUBR   set_names
    3703                    
    3704 000153e0     09ea          movi    player_names,a10
         000153f0 00000000! 
    3705 00015410     05a2          move    @team1,a2
         00015420 00000000! 
    3706                    
    3707                    
    3708                    
    3709 00015440     0b42  aipxlp  cmpi    0,a2
         00015450     ffff  
    3710 00015460     ca04          jrz     aipxout
    3711 00015470     0b0a          addi    20*64,a10
         00015480     0500  
    3712 00015490     1422          dec     a2
    3713 000154a0     c0f9          jruc    aipxlp  
    3714 000154b0           aipxout
    3715 000154b0     05a0          move    @team1,a0
         000154c0 00000000! 
    3716 000154e0     2480          sll     4,a0
    3717 000154f0     0b20          addi    tm1set,a0
         00015500 00000000! 
    3718 00015520     840e          move    *a0,a14
    3719 00015530     24ce          sll     6,a14
    3720 00015540     41ca          add     a14,a10
    3721                    
    3722 00015550     8741          move    *a10,a1,L               ;image addr
    3723 00015560     b742          move    *a10(20h),a2,L          ;image addr
         00015570     0020  
    3724                    
    3725                    
    3726                    
    3727 00015580     05ae          move    @special_heads,a14
         00015590 00000000! 
    3728 000155b0     ce05          jrn     aipxnot_spec1
    3729 000155c0     24ae          sll     5,a14                           ;x 32 bits
    3730 000155d0     0b2e          addi    our_names,a14
         000155e0 00000000! 
    3731 00015600     87c1          move    *a14,a1,L
    3732 00015610           aipxnot_spec1
    3733 00015610     0781          move    a1,@names,L
         00015620 00000c80- 
    3734                    
    3735                    
    3736 00015640     05ae          move    @special_heads+10h,a14
         00015650 00000010! 
    3737 00015670     ce05          jrn     aipxnot_spec2
    3738 00015680     24ae          sll     5,a14                           ;x 32 bits
    3739 00015690     0b2e          addi    our_names,a14
         000156a0 00000000! 
    3740 000156c0     87c2          move    *a14,a2,L
    3741 000156d0           aipxnot_spec2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   84

    3742 000156d0     0782          move    a2,@names+32,L
         000156e0 00000ca0- 
    3743                    
    3744                    
    3745 00015700     09ea          movi    player_names,a10
         00015710 00000000! 
    3746 00015730     05a2          move    @team2,a2
         00015740 00000000! 
    3747 00015760     0b42  aipxlp2 cmpi    0,a2
         00015770     ffff  
    3748 00015780     ca04          jrz     aipxout2
    3749 00015790     0b0a          addi    20*64,a10
         000157a0     0500  
    3750 000157b0     1422          dec     a2
    3751 000157c0     c0f9          jruc    aipxlp2
    3752 000157d0           aipxout2
    3753 000157d0     05a0          move    @team2,a0
         000157e0 00000000! 
    3754 00015800     2480          sll     4,a0
    3755 00015810     0b20          addi    tm2set,a0
         00015820 00000000! 
    3756 00015840     840e          move    *a0,a14
    3757 00015850     24ce          sll     6,a14
    3758 00015860     41ca          add     a14,a10
    3759                    
    3760 00015870     8741          move    *a10,a1,L               ;image addr
    3761 00015880     b742          move    *a10(20h),a2,L          ;image addr
         00015890     0020  
    3762                    
    3763 000158a0     05ae          move    @special_heads+20h,a14
         000158b0 00000020! 
    3764 000158d0     ce05          jrn     aipxnot_spec3
    3765 000158e0     24ae          sll     5,a14                           ;x 32 bits
    3766 000158f0     0b2e          addi    our_names,a14
         00015900 00000000! 
    3767 00015920     87c1          move    *a14,a1,L
    3768 00015930           aipxnot_spec3
    3769 00015930     0781          move    a1,@names+64,L
         00015940 00000cc0- 
    3770                    
    3771                    
    3772 00015960     05ae          move    @special_heads+30h,a14
         00015970 00000030! 
    3773 00015990     ce05          jrn     aipxnot_spec4
    3774 000159a0     24ae          sll     5,a14                           ;x 32 bits
    3775 000159b0     0b2e          addi    our_names,a14
         000159c0 00000000! 
    3776 000159e0     87c2          move    *a14,a2,L
    3777 000159f0           aipxnot_spec4
    3778 000159f0     0782          move    a2,@names+96,L
         00015a00 00000ce0- 
    3779                    
    3780 00015a20     0960          rets
    3781                    
    3782                            .end
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:00 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

NBA JAM Basketball game program                                      PAGE   85


 No Errors,  No Warnings
