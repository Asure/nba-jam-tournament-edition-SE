TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .file   "plyr2.asm"
       3                            .width  132
       4                            .option b,d,l,t
       5                            .mnolist
       6                    
       7                    
       8                            .include        "mproc.equ"             ;Mproc equates
       9                            .include        "disp.equ"              ;Display proc equates
      10                            .include        "gsp.equ"               ;Gsp asm equates
      11                            .include        "sys.equ"
      12                            .include        "audit.equ"
      13                            .include        "imgtbl.glo"
      14                            .include        "game.equ"
      15                            .include        "shawn.hdr"             ;Macros
      16                            .asg            0,SEQT
      17                            .include        "plyr.equ"
      18                            .include        "ball.tbl"
      19                    
      20                    
      21                    
      22                            .ref    snd_play1ovr
      23                            .ref    snd_play1ovrp
      24                    
      25                    
      26 00000000     f990  facial_snd      .word   0f990H,93,081eeH,0      ;Delivers the
      27 00000040     f981  ohmy            .word   0f981H,98,081eaH,0      ;oh my!
      28 00000080     f990  stealsb         .word   0f990H,80,081f3H,0      ;steals the ball
      29 000000c0     f991  intercept       .word   0f991H,59,081a9H,0      ;Intercepted
      30 00000100     f970  intostands      .word   0f970H,74,081c7H,0      ;into the stands
      31 00000140     fc80  bounce_snd      .word   0fc80H,10,08129H,0      ;Ball bounce
      32 00000180     fca0  swish_snd       .word   0fca0H,30,08112H,0      ;Ball swish
      33 000001c0     fca4  dunk_snd        .word   0fca4H,30,08120H,0      ;Dunk
      34                    
      35 00000200     fc90  miss_snd        .word   0fc90H,10,0813bH,0      ;Ball hits rim
      36 00000240     fd90  miss2_snd       .word   0fd90H,10,08139H,0      ;Ball hits rim
      37 00000280     fc90  miss3_snd       .word   0fc90H,10,0813aH,0      ;Ball hits rim
      38 000002c0     fc90  missd1_snd      .word   0fc90H,08H,08128H,0     ;Cartoon part of missed dunk
      39                    
      40 00000300     fcf5  hitbboard_snd   .word   0fcf5H,05,08138H,0      ;Hit backboard
      41 00000340     fd94  swat_snd        .word   0fd94H,15,08157H,0      ;Swat ball (Steals & blocks)
      42 00000380     fd94  swat3_snd       .word   0fd94H,18,08155H,0
      43 000003c0     f898  cheer_snd       .word   0f898H,40,08144H,0      ;Quick cheer
      44 00000400     fd84  cheer1_snd      .word   0fd84H,100,08111H,0     ;Long cheer
      45 00000440     f894  cheer2_snd      .word   0f894H,100,08144H,0     ;Long cheer
      46 00000480     fc84  cheer3_snd      .word   0fc84H,130,0814eH,0     ;Long cheer
      47 000004c0     f884  boo1_snd        .word   0f884H,120,0814aH,0     ;Boo
      48 00000500     fbf7  steal_snd       .word   0fbf7H,08H,08093H,0     ;Steal
      49 00000540     f1f8  anncr3_snd      .word   0f1f8H,100,08182H,0     ;And it's good
      50 00000580     fcf9  explode_snd     .word   0fcf9H,250,08153H,0     ;Backboard smash
      51                    
      52 000005c0     f9fe  onfire_snd      .word   0f9feH,74,08169H,0      ;He's on fire
      53 00000600     f981  nogood          .word   0f981H,58,081f1H,0      ;NO GOOD!
      54                    
      55                    
      56                            .ref    plyr_maxpower
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    2

      57                            .ref    shot_percentage
      58                            .ref    gmqrtr,FIREFALP
      59                            .ref    w1blok3,w2blok3,w4blok3,w5blok3
      60                            .ref    w1blok2,w2blok2,w4blok2,w5blok2
      61                            .ref    shot_distance
      62                    
      63                            .ref    AUD1,AUD
      64                            .ref    nogood_speech,GAMSTATE
      65                            .ref    speech_playovrp
      66                    
      67                            .ref    pushed_speech
      68                            .ref    rejected_speech
      69                            .ref    rejected_dnk_speech
      70                            .ref    rebound_speech
      71                            .ref    intercepted_speech
      72                            .ref    stolen_speech
      73                    
      74                            .ref    rebound_delay
      75                            .ref    pushing_delay
      76                            .ref    team1
      77                    
      78                            .ref    shot_type
      79                            .ref    shoots_speech,scored_speech
      80                    
      81                            .ref    steals_off
      82                            .ref    pass_off
      83                            .ref    RNDRNGS,PSTATUS
      84                    
      85                            .ref    game_time
      86                            .ref    scores,prt_top_scores
      87                            .ref    score_add,score_showtvpanel
      88                            .ref    stick_number
      89                            .ref    sclockx,sc_proc
      90                            .ref    net_ani
      91                            .ref    arw_on1plyr
      92                    
      93                            .ref    pal_getf
      94                    
      95                            .ref    PCNT
      96                            .ref    HALT
      97                            .ref    scale58_t,scale66_t,scale72_t
      98                            .ref    gndx
      99                            .ref    RNDPER
     100                            .ref    SHAKER
     101                            .ref    GET_ADJ
     102                    
     103                            .ref    plyrobj_t,plyrproc_t
     104                            .ref    P1DATA,P2DATA,P3DATA,P4DATA
     105                            .ref    plyrcharge
     106                            .ref    plyrpasstype
     107                            .ref    plyrairballoff
     108                            .ref    ball_smokepuff
     109                    
     110                            .ref    seekdir_xyxy128
     111                            .ref    seekdirdist_obxz128
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    3

     112                            .ref    plyr_setseq,plyr_takeoutball
     113                            .ref    plyr_goaltending
     114                            .ref    plyr_setshtdly
     115                    
     116                            .ref    inc_player_stat
     117                    
     118                    
     119                    
     120                            .def    ball101
     121                    
     122                            .def    hoopl_t,hoopr_t
     123                    
     124                    
     125                    
     126 00000640                   BSSX    plyrnumonfire   ,16     ;Plyr # on fire (0-3) or Neg
     127 00000640                   BSSX    ballobj_p       ,32     ;* basketball obj
     128 00000640                   BSSX    ballpnum        ,16     ;Plyr # who owns (0-3) or Neg
     129 00000640                   BSSX    ballpnumlast    ,16     ;Last plyr who owned ^ (0-3) or neg if loose
     130 00000640                   BSSX    ballpnumshot    ,16     ;Last plyr who shot (0-3)
     131 00000640                   BSSX    ballsclastp     ,16     ;Last plyr who owned (0-3) for shot clock
     132                    
     133                                                            ;Keep in order!
     134 00000640                   BSSX    ballpnumscored  ,16     ;Last plyr who scored (0-3) or neg
     135 00000640                   BSSX    ballnumscored   ,16     ;# times last plyr scored
     136                    
     137 00000640                   BSSX    ballfree        ,16     ;!0=Ball free to move
     138 00000640                   BSSX    ballscorezhit   ,16     ;!0=Ball hit score zone, +=Top z, -=Scored
     139                    
     140 00000640                   BSSX    ballrimhitcnt   ,16     ;# times rim hit since last shot
     141 00000640                   BSSX    ballbbhitcnt    ,16     ;# times backboard hit since last shot
     142                    
     143 00000640                   BSSX    ballptsforshot  ,16     ;Point value for current shot (1-3)
     144 00000640                   BSSX    ballprcv_p      ,32     ;*Plyr proc who gets this pass or 0
     145 00000640                   BSSX    ballpasstime    ,16     ;# ticks since passed
     146 00000640                   BSSX    ballgoaltcnt    ,16     ;+=Goaltend cnt down
     147 00000640                   BSSX    ballflash       ,16     ;!0=Ball flashing
     148 00000640                   BSSX    inbound         ,16     ;Inbounding team (0-1) or Neg
     149 00000640                   BSSX    bbshatter       ,16     ;!0=Backboard shattered (+=L, -=R)
     150                    
     151 00000640                   BSSX    cntl_team       ,16     ;Team in control (0,1,-1)
     152 00000640                   BSSX    cntl_team_last  ,16     ;Team in control (0,1,-1)
     153 00000640                   BSSX    scrl_divs_cur   ,16     ;Scroller current divisor
     154 00000640                   BSSX    scrl_divs_dest  ,16     ;^ destination divisor
     155                    
     156                    
     157 00000640                   BSSX    slamming        ,16     ;!0=Ball going into rim from dunking
     158                    
     159 00000640                   BSSX    t1dunkcnt       ,16     ;+=# dunks since start of game (In order)
     160 000001b0                   .bss    t2dunkcnt       ,16     ;^ -=# dunks till we can break board
     161                    
     162 00000640                   BSSX    brick_count     ,4*16   ;# bricks each player has thrown up
     163 00000640                   BSSX    last_power      ,16     ;Player pushing has this power
     164                    
     165 00000640                   BSSX    original_names  ,4*32   ;Names of original players in game
     166 00000640                   BSSX    fire_flags      ,16     ;1 if this player has been on fire (1,2,4,8)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    4

     167                    
     168                    
     169                    
     170 00000640                   .text
     171                    
     172                    
     173                    
     174 00000640                   STRUCTPD
     175 00000640                   WORD    ball_anix       ;X anipt offset
     176 00000640                   WORD    ball_aniy       ;Y ^
     177 00000640                   APTR    ball_ani1st_p   ;*1st ani_l pos
     178 00000640                   APTR    ball_ani_p      ;*Current ani_l pos
     179 00000640                   WORD    ball_zsznum     ;Z size # 0-?
     180 00000640                   WORD    ball_collcnt    ;# of collisions in a row
     181 00000640                   WORD    ball_xscrllmin  ;
     182 00000640                   WORD    ball_xscrllmax  ;
     183 00000640                   WORD    ball_onfire     ;!0=Flaming
     184                    
     185 00000640     fd85  push1_snd       .word   0fd85H,15,08160H,0      ;Push ugh
     186                    
     187 00000680            SUBR   ball_main
     188                    
     189                    
     190 00000680     4da1          move    a13,a1                  ;0CHlr PDATA & PSDATA areas
     191 00000690     0b01          addi    PDATA,a1
         000006a0     0100  
     192 000006b0     09c2          movi    (PRCSIZ-PDATA)/16,a2
         000006c0     004b  
     193 000006d0     5600          clr     a0
     194 000006e0     9001  qlcfclrpd       move    a0,*a1+
     195 000006f0     3c42          dsj     a2,qlcfclrpd
     196                    
     197                    
     198 00000700     05a0          move    @WORLDTLX+16,a0
         00000710 00000010! 
     199 00000730     0b00          addi    200,a0
         00000740     00c8  
     200 00000750     2600          sll     16,a0
     201 00000760     09e1          movi    [-80,0],a1              ;In air
         00000770 ffb00000  
     202 00000790     09e2          movi    ball11,a2
         000007a0 00000000! 
     203 000007c0     09c3          movi    CZMID,a3
         000007d0     0492  
     204 000007e0     09e4          movi    DMAWNZ|M_3D|M_NOSCALE,a4
         000007f0 00009102  
     205 00000810     09e5          movi    CLSENMY|TYPBALL,a5
         00000820 00008200  
     206 00000840     56c6          clr     a6
     207 00000850     09e7          movi    -020000H,a7
         00000860 fffe0000  
     208 00000880     0d5f          calla   BEGINOBJ2
         00000890 00000000! 
     209 000008b0     0788          move    a8,@ballobj_p,L
         000008c0 00000010- 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    5

     210 000008e0     0d3f          callr   ball_getshadow
         000008f0     04ff  
     211                    
     212 00000900     5600          clr     a0
     213 00000910     0580          move    a0,@ballpnumshot
         00000920 00000050- 
     214 00000940     0580          move    a0,@ballscorezhit
         00000950 000000a0- 
     215 00000970     0580          move    a0,@ballgoaltcnt
         00000980 00000110- 
     216 000009a0     0580          move    a0,@ballflash
         000009b0 00000120- 
     217 000009d0     0580          move    a0,@t1dunkcnt
         000009e0 000001a0- 
     218 00000a00     0580          move    a0,@t2dunkcnt
         00000a10 000001b0- 
     219 00000a30     09c0          movi    -1,a0
         00000a40     ffff  
     220 00000a50     0580          move    a0,@ballpnum
         00000a60 00000030- 
     221 00000a80     0580          move    a0,@ballpnumlast
         00000a90 00000040- 
     222                    
     223 00000ab0     0780          move    a0,@brick_count,L
         00000ac0 000001c0- 
     224 00000ae0     0780          move    a0,@brick_count+20h,L
         00000af0 000001e0- 
     225                    
     226                    
     227 00000b10     0580          move    a0,@ballpnumscored
         00000b20 00000070- 
     228                    
     229 00000b40     b00d          move    a0,*a13(ball_zsznum)
         00000b50     0160  
     230 00000b60     0580          move    a0,@bbshatter
         00000b70 00000140- 
     231 00000b90     1820          movk    1,a0
     232 00000ba0     0580          move    a0,@ballfree            ;Free
         00000bb0 00000090- 
     233                    
     234                    
     235 00000bd0     b700          move    *a8(OIMG),a0,L
         00000be0     0170  
     236 00000bf0     b80d          move    *a0(IANIOFFX),*a13(ball_anix)
         00000c00     0020  
         00000c10     0100  
     237                    
     238 00000c20     182a          movk    1,a10                   ;A10=Anim cntdn
     239                    
     240 00000c30     09c0          movi    DIVS_RATE1,a0
         00000c40     2400  
     241 00000c50     0580          move    a0,@scrl_divs_cur
         00000c60 00000170- 
     242 00000c80     09c0          movi    DIVS_RATE2,a0
         00000c90     0800  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    6

     243 00000ca0     0580          move    a0,@scrl_divs_dest
         00000cb0 00000180- 
     244                    
     245 00000cd0     07a0          move    @WORLDTLX,a0,L
         00000ce0 00000000! 
     246 00000d00     0d00          subi    [WRLDMID-200,0],a0
         00000d10 e0c7ffff  
     247 00000d30     0780          move    a0,@gndx,L
         00000d40 00000000! 
     248                    
     249 00000d60                   SLEEPK  4                       ;Wait for others to establish data
     250                    
     251                    
     252 00000da0           qlcflp
     253 00000da0     05a0          move    @HALT,a0
         00000db0 00000000! 
     254 00000dd0     cb00          jrnz    qlcfhalted
         00000de0     02ca  
     255                    
     256                    
     257 00000df0     05a0          move    @ballgoaltcnt,a0
         00000e00 00000110- 
     258 00000e20     c604          jrle    qlcfskipgt
     259 00000e30     1420          subk    1,a0
     260 00000e40     0580          move    a0,@ballgoaltcnt
         00000e50 00000110- 
     261 00000e70           qlcfskipgt
     262                    
     263 00000e70     57ce          clr     a14                     ;0EHmit smoke if hot
     264 00000e80     09c2          movi    -1,a2
         00000e90     ffff  
     265 00000ea0     05a0          move    @ballnumscored,a0
         00000eb0 00000080- 
     266                    
     267 00000ed0     05a4          move    @ballpnumscored,a4
         00000ee0 00000070- 
     268 00000f00     05a3          move    @fire_flags,a3
         00000f10 00000290- 
     269 00000f30     4a83          btst    a4,a3
     270 00000f40     ca02          jrz     qlcfnormfire
     271 00000f50     1480          subk    4,a0
     272 00000f60     c001          jruc    qlcfinhr
     273                    
     274 00000f70           qlcfnormfire
     275 00000f70     1460          subk    3,a0
     276 00000f80           qlcfinhr
     277 00000f80     c452          jrlt    qlcfnothot                      ;Not enough?
     278                    
     279                    
     280                    
     281                    
     282                    
     283                    
     284                    
     285 00000f90     05a0          move    @ballpnumscored,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    7

         00000fa0 00000070- 
     286 00000fc0     4c02          move    a0,a2
     287 00000fd0     05a1          move    @ballpnum,a1
         00000fe0 00000030- 
     288 00001000     ce15          jrn     qlcfnoownr
     289                    
     290 00001010     05a3          move    @plyrnumonfire,a3
         00001020 00000000- 
     291 00001040     4823          cmp     a1,a3
     292 00001050     ca04          jrz     qlcfnxt
     293                            
     294 00001060     5663          clr     a3
     295 00001070     b06d          move    a3,*a13(ball_onfire)
         00001080     01a0  
     296 00001090     c041          jruc    qlcfnothot
     297 000010a0           qlcfnxt
     298                    
     299 000010a0     4801          cmp     a0,a1
     300 000010b0     cb3f          jrne    qlcfnothot
     301 000010c0     24a1          sll     5,a1
     302 000010d0     0b21          addi    plyrproc_t,a1
         000010e0 00000000! 
     303 00001100     8621          move    *a1,a1,L
     304 00001110     b421          move    *a1(plyr_seqflgs),a1
         00001120     0180  
     305 00001130     1fc1          btst    DUNK_B,a1
     306 00001140     cb29          jrnz    qlcfhot2                        ;Dunking?
     307 00001150     c034          jruc    qlcfhotf
     308 00001160           qlcfnoownr
     309 00001160     05a3          move    @plyrnumonfire,a3
         00001170 00000000- 
     310 00001190     05a1          move    @ballpnumlast,a1
         000011a0 00000040- 
     311 000011c0     2fe1          srl     1,a1
     312 000011d0     2fe3          srl     1,a3
     313 000011e0     4823          cmp     a1,a3
     314 000011f0     cb2b          jrnz    qlcfnothot
     315                            
     316 00001200     05a3          move    @plyrnumonfire,a3
         00001210 00000000- 
     317 00001230     05a1          move    @ballpnumshot,a1
         00001240 00000050- 
     318 00001260     4823          cmp     a1,a3
     319 00001270     ca16          jrz     qlcfhot
     320 00001280     4801          cmp     a0,a1
     321 00001290     cb09          jrne    qlcfnota
     322 000012a0     07a4          move    @ballprcv_p,a4,L
         000012b0 000000e0- 
     323 000012d0     ca0e          jrz     qlcfahot
     324 000012e0     b484          move    *a4(plyr_num),a4
         000012f0     0100  
     325 00001300     4864          cmp     a3,a4
     326 00001310     ca19          jrz     qlcfnothot
     327 00001320     c00b          jruc    qlcfhot
     328 00001330           qlcfnota
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    8

     329 00001330     07a4          move    @ballprcv_p,a4,L
         00001340 000000e0- 
     330 00001360     ca14          jrz     qlcfnothot
     331 00001370     b484          move    *a4(plyr_num),a4
         00001380     0100  
     332 00001390     4864          cmp     a3,a4
     333 000013a0     cb03          jrnz    qlcfhot
     334 000013b0     c00f          jruc    qlcfnothot
     335                    
     336 000013c0     4823  qlcfahot        cmp     a1,a3
     337 000013d0     cb0d          jrnz    qlcfnothot
     338                            
     339 000013e0           qlcfhot
     340 000013e0           qlcfhot2
     341 000013e0     05a0          move    @PCNT,a0
         000013f0 00000000! 
     342 00001410     27e0          sll     32-1,a0
     343 00001420     cb07          jrnz    qlcfhotf
     344 00001430                   CREATE0 ball_smokepuff
     345 000014a0     182e  qlcfhotf        movk    1,a14
     346 000014b0           qlcfnothot
     347                    
     348 000014b0     05a0          move    @plyrnumonfire,a0
         000014c0 00000000- 
     349 000014e0     cf24          jrnn    qlcfskip
     350 000014f0     4c42          move    a2,a2
     351 00001500     ce1f          jrn     qlcfskipsnd
     352                    
     353 00001510     05a0          move    @GAMSTATE,a0
         00001520 00000000! 
     354 00001540     0b40          cmpi    INAMODE,a0
         00001550     fffe  
     355 00001560     ca05          jrz     qlcfnoaud
     356 00001570     09c0          movi    AUD_NUMHOTSTRK,a0
         00001580     005a  
     357 00001590     0d5f          calla   AUD1
         000015a0 00000000! 
     358 000015c0           qlcfnoaud
     359                    
     360 000015c0     4c40          move    a2,a0
     361 000015d0     2460          sll     3,a0
     362 000015e0     0b20          addi    qlcfbit_t,a0
         000015f0 00001800' 
     363 00001610     8e00          movb    *a0,a0
     364 00001620     05ae          move    @fire_flags,a14
         00001630 00000290- 
     365 00001650     540e          or      a0,a14
     366                    
     367 00001660     1880          movk    4,a0
     368 00001670     0580          move    a0,@ballnumscored
         00001680 00000080- 
     369                    
     370 000016a0     09e0          movi    onfire_snd,a0
         000016b0 000005c0' 
     371 000016d0     0d5f          calla   speech_playovrp
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    9

         000016e0 00000000! 
     372                    
     373 00001700           qlcfskipsnd
     374 00001700     0582          move    a2,@plyrnumonfire       ;Save pnum
         00001710 00000000- 
     375 00001730           qlcfskip
     376 00001730     05a1          move    @ballpnum,a1
         00001740 00000030- 
     377 00001760     cf04          jrnn    qlcfck1
     378 00001770     05a1          move    @ballpnumlast,a1
         00001780 00000040- 
     379 000017a0     ce02          jrn     qlcfclrball
     380 000017b0           qlcfck1
     381 000017b0     4801          cmp     a0,a1
     382 000017c0     ca05          jrz     qlcffireit
     383                            
     384 000017d0           qlcfclrball
     385 000017d0     57ce          clr     a14
     386 000017e0     5600          clr     a0
     387 000017f0     c005          jruc    qlcfsetb
     388                    
     389 00001800       01  qlcfbit_t       .byte   1,2,4,8
     390                    
     391 00001820     182e  qlcffireit      movk    1,a14
     392 00001830     09c0          movi    -1,a0
         00001840     ffff  
     393 00001850           qlcfsetb
     394 00001850     b1cd          move    a14,*a13(ball_onfire)
         00001860     01a0  
     395 00001870           qlcffsame
     396                    
     397                    
     398                    
     399 00001870     b506          move    *a8(OXPOS),a6
         00001880     0090  
     400 00001890     b5ae          move    *a13(ball_anix),a14
         000018a0     0100  
     401 000018b0     41c6          add     a14,a6
     402                    
     403 000018c0     b701          move    *a8(OXVEL),a1,L
         000018d0     0020  
     404 000018e0     ca15          jreq    qlcfxok
     405 000018f0     c709          jrgt    qlcfxvpos
     406                    
     407 00001900     0b46          cmpi    WRLDMID-345,a6
         00001910     e158  
     408 00001920     c511          jrge    qlcfxok
     409 00001930     09c6          movi    WRLDMID-345,a6
         00001940     1ea7  
     410 00001950     45c6          sub     a14,a6
     411 00001960     b0c8          move    a6,*a8(OXPOS)
         00001970     0090  
     412 00001980     c008          jruc    qlcfbadx
     413                    
     414 00001990     0b46  qlcfxvpos       cmpi    WRLDMID+345,a6
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   10

         000019a0     dea6  
     415 000019b0     c408          jrlt    qlcfxok
     416 000019c0     09c6          movi    WRLDMID+345,a6
         000019d0     2159  
     417 000019e0     45c6          sub     a14,a6
     418 000019f0     b0c8          move    a6,*a8(OXPOS)
         00001a00     0090  
     419                    
     420 00001a10     5621  qlcfbadx        clr     a1
     421 00001a20     b228          move    a1,*a8(OXVEL),L
         00001a30     0020  
     422 00001a40           qlcfxok
     423                    
     424                    
     425 00001a40     05a5          move    @ballpnum,a5
         00001a50 00000030- 
     426 00001a70     ce05          jrn     qlcffree
     427                    
     428 00001a80     57ce          clr     a14
     429 00001a90     058e          move    a14,@ballpasstime
         00001aa0 00000100- 
     430                    
     431 00001ac0     c00e          jruc    qlcfowned
     432                    
     433 00001ad0     07a5  qlcffree        move    @ballprcv_p,a5,L
         00001ae0 000000e0- 
     434 00001b00     cb02          jrnz    qlcfskpcol                      ;Pass in progress?
     435                    
     436 00001b10     0d3f          callr   ball_bbcollision
         00001b20     03fd  
     437 00001b30           qlcfskpcol
     438                    
     439 00001b30     05a0          move    @ballpasstime,a0
         00001b40 00000100- 
     440 00001b60     1020          addk    1,a0
     441 00001b70     0580          move    a0,@ballpasstime
         00001b80 00000100- 
     442 00001ba0     c004          jruc    qlcfscroll
     443                    
     444 00001bb0           qlcfowned
     445 00001bb0     b5ae          move    *a13(ball_onfire),a14
         00001bc0     01a0  
     446 00001bd0     cb01          jrnz    qlcfscroll                      ;On fire?
     447 00001be0     184a          movk    2,a10                   ;Keep ball from animating
     448                    
     449 00001bf0           qlcfscroll
     450 00001bf0     05a0          move    @inbound,a0
         00001c00 00000130- 
     451 00001c20     ce15          jrn     qlcfnot_inbounding
     452 00001c30           qlcfdunking
     453 00001c30     cb0a          jrnz    qlcfright_side
     454 00001c40     09e3          movi    [WRLDMID-200-MAX_VIEW1,0],a3
         00001c50 1e020000  
     455 00001c70     09c0          movi    DIVS_RATE1,a0
         00001c80     2400  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   11

     456 00001c90     0580          move    a0,@scrl_divs_cur
         00001ca0 00000170- 
     457 00001cc0     c000          jruc    qlcfdo_scroll
         00001cd0     00be  
     458 00001ce0           qlcfright_side
     459 00001ce0     09e3          movi    [WRLDMID-200+MAX_VIEW1,0],a3
         00001cf0 206e0000  
     460 00001d10     09c0          movi    DIVS_RATE1,a0
         00001d20     2400  
     461 00001d30     0580          move    a0,@scrl_divs_cur
         00001d40 00000170- 
     462 00001d60     c000          jruc    qlcfdo_scroll
         00001d70     00b4  
     463 00001d80           qlcfnot_inbounding
     464                    
     465                    
     466 00001d80     09c0          movi    DIVS_RATE2,a0           ;normal scroll divisor
         00001d90     0800  
     467 00001da0     0580          move    a0,@scrl_divs_dest
         00001db0 00000180- 
     468                    
     469 00001dd0     05a5          move    @ballpnum,a5
         00001de0 00000030- 
     470 00001e00     c528          jrge    qlcfplyr_has_ball
     471 00001e10     4cc3          move    a6,a3
     472                    
     473 00001e20     07a0          move    @ballprcv_p,a0,L        ;passing?
         00001e30 000000e0- 
     474 00001e50     ca14          jrz     qlcfnot_passing
     475                    
     476 00001e60     05a0          move    @ballpnumlast,a0        ;player who passed ball
         00001e70 00000040- 
     477 00001e90     ce10          jrn     qlcfnot_passing
     478                    
     479                    
     480 00001ea0     09c0          movi    DIVS_RATE3,a0
         00001eb0     0500  
     481 00001ec0     05a1          move    @plyrpasstype,a1
         00001ed0 00000000! 
     482 00001ef0     ca03          jrz     qlcfnot_turbo
     483 00001f00     0580          move    a0,@scrl_divs_cur
         00001f10 00000170- 
     484 00001f30           qlcfnot_turbo
     485 00001f30     0580          move    a0,@scrl_divs_dest
         00001f40 00000180- 
     486                    
     487 00001f60     05a5          move    @ballpnumlast,a5        ;player who passed ball
         00001f70 00000040- 
     488 00001f90     c01a          jruc    qlcfplyr_has_ball2
     489                    
     490 00001fa0           qlcfnot_passing
     491 00001fa0     05a5          move    @ballpnumlast,a5
         00001fb0 00000040- 
     492 00001fd0     cf16          jrnn    qlcfplyr_shooting
     493                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   12

     494 00001fe0     09c0          movi    -1,a0
         00001ff0     ffff  
     495 00002000     0580          move    a0,@cntl_team           ;team in control (0,1 or -1)
         00002010 00000150- 
     496 00002030     09c0          movi    DIVS_RATE1,a0
         00002040     2400  
     497 00002050     0580          move    a0,@scrl_divs_cur
         00002060 00000170- 
     498                    
     499 00002080     c039          jruc    qlcfball_free1
     500                    
     501                    
     502 00002090           qlcfplyr_has_ball
     503 00002090     4ca0          move    a5,a0
     504 000020a0     24a0          sll     5,a0                    ;*32
     505 000020b0     0b20          addi    plyrobj_t,a0
         000020c0 00000000! 
     506 000020e0     8600          move    *a0,a0,L
     507 000020f0     b403          move    *a0(OXPOS),a3
         00002100     0090  
     508 00002110     b401          move    *a0(OXANI+16),a1
         00002120     01f0  
     509 00002130     4023          add     a1,a3
     510 00002140           qlcfplyr_has_ball2
     511 00002140           qlcfplyr_shooting
     512 00002140     4ca0          move    a5,a0
     513 00002150     2fe0          srl     1,a0
     514 00002160     0580          move    a0,@cntl_team           ;team in control (0,1 or -1)
         00002170 00000150- 
     515 00002190     24a5          sll     5,a5
     516 000021a0     0b25          addi    plyrproc_t,a5
         000021b0 00000000! 
     517 000021d0     86a5          move    *a5,a5,L
     518 000021e0     b4a0          move    *a5(plyr_seqflgs),a0
         000021f0     0180  
     519 00002200     1fc0          btst    DUNK_B,a0
     520 00002210     ca07          jrz     qlcfnot_dunking
     521 00002220     05a0          move    @cntl_team,a0           ;team in control (0,1 or -1)
         00002230 00000150- 
     522 00002250     0bc0          xori    1,a0
         00002260 00000001  
     523 00002280     c09a          jruc    qlcfdunking
     524 00002290           qlcfnot_dunking
     525                    
     526                    
     527 00002290           qlcfnot_hixvel
     528                    
     529                    
     530 00002290     05a1          move    @scrl_divs_cur,a1       ;move cur -> dest
         000022a0 00000170- 
     531 000022c0     05a2          move    @scrl_divs_dest,a2
         000022d0 00000180- 
     532 000022f0     4822          cmp     a1,a2                   ;dest-cur
     533 00002300     ca11          jreq    qlcfat_dest
     534 00002310     c707          jrgt    qlcfadd
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   13

     535 00002320     09c0          movi    DIVS_DELTA,a0
         00002330     0048  
     536 00002340     4401          sub     a0,a1
     537 00002350     4822          cmp     a1,a2
     538 00002360     c608          jrle    qlcfset_divs
     539 00002370     4c41          move    a2,a1
     540 00002380     c006          jruc    qlcfset_divs
     541 00002390           qlcfadd
     542 00002390     09c0          movi    DIVS_DELTA,a0
         000023a0     0048  
     543 000023b0     4001          add     a0,a1
     544 000023c0     4822          cmp     a1,a2
     545 000023d0     c501          jrge    qlcfset_divs
     546 000023e0     4c41          move    a2,a1
     547 000023f0           qlcfset_divs
     548 000023f0     0581          move    a1,@scrl_divs_cur
         00002400 00000170- 
     549 00002420           qlcfat_dest
     550                    
     551                    
     552                    
     553 00002420           qlcfball_free1
     554 00002420     2603          sll     16,a3                   ;[int,frac]
     555 00002430     0d03          subi    [200,0],a3
         00002440 ff37ffff  
     556                    
     557 00002460     05a0          move    @cntl_team,a0           ;team in control (0,1 or -1)
         00002470 00000150- 
     558 00002490     ce08          jrn     qlcfball_free
     559 000024a0     cb04          jrnz    qlcfteam2
     560 000024b0           qlcfteam1
     561 000024b0     0b23          addi    [SCRL_EDGE_OFF,0],a3
         000024c0 00640000  
     562 000024e0     c003          jruc    qlcfcont1
     563 000024f0           qlcfteam2
     564 000024f0     0d03          subi    [SCRL_EDGE_OFF,0],a3
         00002500 ff9bffff  
     565 00002520           qlcfcont1
     566 00002520           qlcfball_free
     567                    
     568 00002520     05a0          move    @cntl_team,a0
         00002530 00000150- 
     569 00002550     05a1          move    @cntl_team_last,a1
         00002560 00000160- 
     570 00002580     4801          cmp     a0,a1
     571 00002590     ca08          jreq    qlcfno_turnover2
     572 000025a0     0580          move    a0,@cntl_team_last
         000025b0 00000160- 
     573 000025d0     09c0          movi    DIVS_RATE1,a0
         000025e0     2400  
     574 000025f0     0580          move    a0,@scrl_divs_cur
         00002600 00000170- 
     575 00002620           qlcfno_turnover2
     576                    
     577                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   14

     578 00002620     0b63          cmpi    [WRLDMID-200-MAX_VIEW2,0],a3
         00002630 e1c4ffff  
     579 00002650     c511          jrge    qlcfsxok1
     580 00002660     09e3          movi    [WRLDMID-200-MAX_VIEW2,0],a3
         00002670 1e3b0000  
     581 00002690     05a0          move    @scrl_divs_cur,a0
         000026a0 00000170- 
     582 000026c0     0b40          cmpi    DIVS_RATE2,a0
         000026d0     f7ff  
     583 000026e0     c908          jrhs    qlcfsxok1
     584 000026f0     09c0          movi    DIVS_RATE2,a0
         00002700     0800  
     585 00002710     0580          move    a0,@scrl_divs_cur
         00002720 00000170- 
     586 00002740     0580          move    a0,@scrl_divs_dest
         00002750 00000180- 
     587 00002770           qlcfsxok1
     588 00002770     0b63          cmpi    [WRLDMID-200+MAX_VIEW2,0],a3
         00002780 dfcaffff  
     589 000027a0     c611          jrle    qlcfsxok2
     590 000027b0     09e3          movi    [WRLDMID-200+MAX_VIEW2,0],a3
         000027c0 20350000  
     591 000027e0     05a0          move    @scrl_divs_cur,a0
         000027f0 00000170- 
     592 00002810     0b40          cmpi    DIVS_RATE2,a0
         00002820     f7ff  
     593 00002830     c908          jrhs    qlcfsxok2
     594 00002840     09c0          movi    DIVS_RATE2,a0
         00002850     0800  
     595 00002860     0580          move    a0,@scrl_divs_cur
         00002870 00000170- 
     596 00002890     0580          move    a0,@scrl_divs_dest
         000028a0 00000180- 
     597 000028c0           qlcfsxok2
     598                    
     599                    
     600                    
     601 000028c0           qlcfdo_scroll
     602 000028c0     05a7          move    @scrl_divs_cur,a7
         000028d0 00000170- 
     603 000028f0     07a1          move    @WORLDTLX,a1,L          ;>Scroll world view
         00002900 00000000! 
     604 00002920     4c25          move    a1,a5
     605 00002930     4465          sub     a3,a5
     606 00002940     ca2e          jreq    qlcfno_scroll
     607 00002950     c40c          jrlt    qlcfscroll_right
     608 00002960           qlcfscroll_left
     609 00002960     0d05          subi    [SCROLL_BUFFER,0],a5
         00002970 fff7ffff  
     610 00002990     c629          jrle    qlcfno_scroll
     611 000029a0     5ae5          divu    a7,a5                   ;/ divs rate x 256
     612 000029b0     2505          sll     8,a5                    ;x 256
     613 000029c0     44a1          sub     a5,a1
     614 000029d0     0b61          cmpi    [WRLDMID-200-MAX_VIEW1,0],a1
         000029e0 e1fdffff  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   15

     615 00002a00     c622          jrle    qlcfno_scroll
     616 00002a10     c00c          jruc    qlcfset_scroll
     617                    
     618 00002a20           qlcfscroll_right
     619 00002a20     0385          abs     a5
     620 00002a30     0d05          subi    [SCROLL_BUFFER,0],a5
         00002a40 fff7ffff  
     621 00002a60     c61c          jrle    qlcfno_scroll
     622 00002a70     5ae5          divu    a7,a5                   ;/ divs rate x 256
     623 00002a80     2505          sll     8,a5                    ;x 256
     624 00002a90     40a1          add     a5,a1
     625 00002aa0     0b61          cmpi    [WRLDMID-200+MAX_VIEW1,0],a1
         00002ab0 df91ffff  
     626 00002ad0     c515          jrge    qlcfno_scroll
     627                    
     628 00002ae0           qlcfset_scroll
     629 00002ae0     05a0          move    @inbound,a0
         00002af0 00000130- 
     630 00002b10     ce08          jrn     qlcfnoinb
     631                     
     632 00002b20     07a0          move    @WORLDTLX,a0,L
         00002b30 00000000! 
     633 00002b50     4420          sub     a1,a0
     634 00002b60     0380          abs     a0
     635 00002b70     0b40          cmpi    1000h,a0
         00002b80     efff  
     636 00002b90     c409          jrlt    qlcfno_scroll
     637 00002ba0           qlcfnoinb
     638                    
     639 00002ba0     0781          move    a1,@WORLDTLX,L
         00002bb0 00000000! 
     640 00002bd0     0d01          subi    [WRLDMID-200,0],a1
         00002be0 e0c7ffff  
     641 00002c00     0781          move    a1,@gndx,L
         00002c10 00000000! 
     642 00002c30           qlcfno_scroll
     643                    
     644                    
     645                    
     646                    
     647 00002c30     05a5          move    @ballpnum,a5            ;player who has ball (0-3 or -1)
         00002c40 00000030- 
     648 00002c60     b50e          move    *a8(OZPOS),a14          ;>Set world Y
         00002c70     00d0  
     649 00002c80     0bee          subi    GZBASE,a14              ;-Base
         00002c90     fc81  
     650 00002ca0     c501          jrge    qlcfzok2
     651 00002cb0     57ce          clr     a14
     652 00002cc0     4dc2  qlcfzok2        move    a14,a2
     653 00002cd0     2bee          sra     1,a14                   ;Z/2
     654 00002ce0     2ba2          sra     3,a2                    ;Z/8
     655 00002cf0     444e          sub     a2,a14                  ;=Z/2.667
     656                    
     657 00002d00     b501          move    *a8(OYPOS),a1
         00002d10     00b0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   16

     658 00002d20     41c1          add     a14,a1
     659 00002d30     0b01          addi    70,a1
         00002d40     0046  
     660                    
     661 00002d50     4cae          move    a5,a14
     662 00002d60     ce1c          jrn     qlcfbfree                       ;Free from plyr?
     663 00002d70     24ae          sll     5,a14                   ;x 32 bits
     664 00002d80     0b2e          addi    plyrproc_t,a14
         00002d90 00000000! 
     665 00002db0     87ce          move    *a14,a14,L
     666 00002dc0     b5c2          move    *a14(plyr_seqflgs),a2
         00002dd0     0180  
     667 00002de0     1fc2          btst    DUNK_B,a2
     668 00002df0     ca13          jrz     qlcfbfree
     669                    
     670 00002e00     b5c2          move    *a14(plyr_seq),a2       ;Current ani sequence #
         00002e10     0170  
     671 00002e20     0b42          cmpi    DUNKU2_SEQ,a2           ;These dunks need different buffering
         00002e30     ff87  
     672 00002e40     c40c          jrlt    qlcf1stdunks
     673 00002e50     0b01          addi    25-70,a1
         00002e60     ffd3  
     674 00002e70     4c21          move    a1,a1
     675 00002e80     c401          jrlt    qlcfbyvis0
     676 00002e90     5621          clr     a1
     677 00002ea0           qlcfbyvis0
     678 00002ea0     05a2          move    @WORLDTLY+16,a2
         00002eb0 00000010! 
     679 00002ed0     4441          sub     a2,a1
     680 00002ee0     ca16          jreq    qlcfskipwy
     681 00002ef0     2b81          sra     4,a1
     682 00002f00     c00b          jruc    qlcfsetwy
     683                    
     684 00002f10           qlcf1stdunks
     685 00002f10     0b01          addi    45-70,a1
         00002f20     ffe7  
     686                    
     687 00002f30           qlcfbfree
     688 00002f30     4c21          move    a1,a1
     689 00002f40     c401          jrlt    qlcfbyvis
     690 00002f50     5621          clr     a1
     691 00002f60           qlcfbyvis
     692 00002f60     05a2          move    @WORLDTLY+16,a2
         00002f70 00000010! 
     693 00002f90     4441          sub     a2,a1
     694 00002fa0     ca0a          jreq    qlcfskipwy
     695 00002fb0     2bc1          sra     2,a1
     696 00002fc0     cb01  qlcfsetwy       jrnz    qlcfadjok
     697 00002fd0     1021          addk    1,a1
     698 00002fe0     4022  qlcfadjok       add     a1,a2
     699 00002ff0     0b42          cmpi    -130,a2                 ;110 ;125,;135
         00003000     0081  
     700 00003010     c403          jrlt    qlcfskipwy                      ;Don't scroll higher?
     701 00003020     0582          move    a2,@WORLDTLY+16
         00003030 00000010! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   17

     702 00003050           qlcfskipwy
     703                    
     704                    
     705                    
     706                                                            ;0CHheck Z
     707 00003050     b500          move    *a8(OZPOS),a0
         00003060     00d0  
     708 00003070     4ca5          move    a5,a5
     709 00003080     c513          jrge    qlcfzok                 ;Plyr has ball?
     710 00003090     b701          move    *a8(OZVEL),a1,L
         000030a0     0060  
     711 000030b0     ce06          jrn     qlcfzvneg
     712                    
     713 000030c0     0b40          cmpi    GZMAX,a0                ;-12
         000030d0     fa92  
     714 000030e0     c40d          jrlt    qlcfzok
     715 000030f0     09c0          movi    GZMAX,a0
         00003100     056d  
     716 00003110     c005          jruc    qlcfzbad
     717                    
     718 00003120     0b40  qlcfzvneg       cmpi    CZMIN,a0
         00003130     fc17  
     719 00003140     c507          jrge    qlcfzok
     720 00003150     09c0          movi    CZMIN,a0
         00003160     03e8  
     721                    
     722 00003170     b008  qlcfzbad        move    a0,*a8(OZPOS)
         00003180     00d0  
     723 00003190     5621          clr     a1
     724 000031a0     b228          move    a1,*a8(OZVEL),L
         000031b0     0060  
     725 000031c0           qlcfzok
     726                    
     727 000031c0     0be0          subi    CZMIN,a0                ;-Base
         000031d0     fc17  
     728 000031e0     c501          jrge    qlcfzge
     729 000031f0     5600          clr     a0
     730 00003200     2f60  qlcfzge srl     5,a0                    ;/32
     731 00003210     b5a1          move    *a13(ball_zsznum),a1
         00003220     0160  
     732 00003230     4820          cmp     a1,a0
     733 00003240     ca26          jreq    qlcfani                 ;Same Z range?
     734 00003250     b00d          move    a0,*a13(ball_zsznum)
         00003260     0160  
     735 00003270     24a0          sll     5,a0                    ;*32
     736 00003280     4c01          move    a0,a1
     737 00003290     0b21          addi    qlcfshad_t,a1           ;>Set new shadow img
         000032a0 00005570' 
     738 000032c0     8622          move    *a1,a2,L
     739 000032d0     b249          move    a2,*a9(OIMG),L
         000032e0     0170  
     740 000032f0     864e          move    *a2,a14,L
     741 00003300     b3c9          move    a14,*a9(OSIZE),L
         00003310     0130  
     742 00003320     ba49          move    *a2(ISAG),*a9(OSAG),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   18

         00003330     0040  
         00003340     0110  
     743 00003350     b441          move    *a2(IANIOFFY),a1
         00003360     0030  
     744 00003370     03a1          neg     a1
     745 00003380     b029          move    a1,*a9(OYPOS)
         00003390     00b0  
     746                    
     747 000033a0     b5ae          move    *a13(ball_onfire),a14
         000033b0     01a0  
     748 000033c0     cb07          jrnz    qlcfonfire
     749 000033d0     0b20          addi    qlcfani_t,a0
         000033e0 00003b00' 
     750 00003400     8600          move    *a0,a0,L
     751 00003410     b20d          move    a0,*a13(ball_ani1st_p),L
         00003420     0120  
     752 00003430     c01d          jruc    qlcfnewz
     753                    
     754 00003440           qlcfonfire
     755 00003440     0b20          addi    qlcfanif_t,a0
         00003450 000045b0' 
     756 00003470     8600          move    *a0,a0,L
     757 00003480     b20d          move    a0,*a13(ball_ani1st_p),L
         00003490     0120  
     758 000034a0     c016          jruc    qlcfnewz
     759                    
     760                    
     761 000034b0           qlcfani
     762 000034b0     0d8a          dsj     a10,qlcfskipa
         000034c0     002f  
     763                     
     764 000034d0     b5ae          move    *a13(ball_onfire),a14
         000034e0     01a0  
     765 000034f0     cb0b          jrnz    qlcfmovin                       ;On fire?
     766                    
     767 00003500     b700          move    *a8(OXVEL),a0,L
         00003510     0020  
     768 00003520     0380          abs     a0
     769 00003530     2fc0          srl     2,a0
     770 00003540     cb06          jrnz    qlcfmovin
     771 00003550     18aa          movk    5,a10
     772 00003560     b700          move    *a8(OZVEL),a0,L
         00003570     0060  
     773 00003580     0380          abs     a0
     774 00003590     2fc0          srl     2,a0
     775 000035a0     ca21          jrz     qlcfskipa
     776 000035b0           qlcfmovin
     777                    
     778 000035b0     b7a0          move    *a13(ball_ani_p),a0,L
         000035c0     0140  
     779 000035d0     9601          move    *a0+,a1,L               ;*Next img
     780 000035e0     cb03          jrnz    qlcfnotend
     781                    
     782 000035f0     b7a0          move    *a13(ball_ani1st_p),a0,L
         00003600     0120  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   19

     783 00003610     9601  qlcfnewz        move    *a0+,a1,L               ;*1st img
     784                    
     785 00003620     940a  qlcfnotend      move    *a0+,a10
     786 00003630     b20d          move    a0,*a13(ball_ani_p),L
         00003640     0140  
     787                    
     788 00003650     b228          move    a1,*a8(OIMG),L          ;>Set new img
         00003660     0170  
     789 00003670     8622          move    *a1,a2,L
     790 00003680     b248          move    a2,*a8(OSIZE),L
         00003690     0130  
     791 000036a0     ba28          move    *a1(ISAG),*a8(OSAG),L
         000036b0     0040  
         000036c0     0110  
     792 000036d0     b422          move    *a1(IANIOFFX),a2
         000036e0     0020  
     793 000036f0     b82d          move    *a1(IANIOFFY),*a13(ball_aniy)
         00003700     0030  
         00003710     0110  
     794 00003720     b5a1          move    *a13(ball_anix),a1
         00003730     0100  
     795 00003740     b04d          move    a2,*a13(ball_anix)
         00003750     0100  
     796 00003760     b500          move    *a8(OXPOS),a0
         00003770     0090  
     797 00003780     4020          add     a1,a0                   ;Old ani X
     798 00003790     4440          sub     a2,a0                   ;-New ani X
     799 000037a0     b008          move    a0,*a8(OXPOS)
         000037b0     0090  
     800                    
     801 000037c0           qlcfskipa
     802 000037c0     b702          move    *a8(OYVEL),a2,L
         000037d0     0040  
     803                    
     804 000037e0     b501          move    *a8(OYPOS),a1
         000037f0     00b0  
     805 00003800     b5a3          move    *a13(ball_aniy),a3
         00003810     0110  
     806 00003820     4061          add     a3,a1
     807 00003830     c414          jrlt    qlcfagnd                        ;Above gnd?
     808                    
     809 00003840     5600          clr     a0
     810 00003850     0d5f          calla   plyr_setshtdly
         00003860 00000000! 
     811                    
     812 00003880     0b42          cmpi    04000H,a2
         00003890     bfff  
     813 000038a0     c406          jrlt    qlcfnosnd
     814 000038b0     09e0          movi    bounce_snd,a0
         000038c0 00000140' 
     815 000038e0     0d5f          calla   snd_play1
         000038f0 00000000! 
     816                    
     817 00003910           qlcfnosnd
     818 00003910     03a3          neg     a3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   20

     819 00003920     b068          move    a3,*a8(OYPOS)           ;Set on gnd
         00003930     00b0  
     820 00003940     03a2          neg     a2
     821 00003950     4c43          move    a2,a3                   ;75%
     822 00003960     2bc3          sra     2,a3                    ;/4
     823 00003970     4462          sub     a3,a2
     824 00003980     0b02  qlcfagnd        addi    GRAVB,a2
         00003990     2600  
     825 000039a0     b248          move    a2,*a8(OYVEL),L
         000039b0     0040  
     826 000039c0           qlcfnograv
     827 000039c0     bb09          move    *a8(OXVAL),*a9(OXVAL),L ;0AHlign shadow
         000039d0     0080  
         000039e0     0080  
     828 000039f0     bb09          move    *a8(OXANI),*a9(OXANI),L
         00003a00     01e0  
         00003a10     01e0  
     829 00003a20     b500          move    *a8(OZPOS),a0
         00003a30     00d0  
     830 00003a40     1540          subk    10,a0                   ;Adjust
     831 00003a50     b009          move    a0,*a9(OZPOS)
         00003a60     00d0  
     832                    
     833 00003a70     0d3f          callr   ball_chkpcollide
         00003a80     079e  
     834                    
     835 00003a90           qlcfhalted
     836 00003a90                   SLOOP   1,qlcflp
     837                    
     838                    
     839 00003b00           qlcfani_t
     840 00003b00 00003f80'         .long   qlcfb1_l
     841 00003b20 00003f80'         .long   qlcfb1_l,qlcfb2_l,qlcfb2_l
     842 00003b80 000040e0'         .long   qlcfb3_l,qlcfb3_l,qlcfb4_l,qlcfb4_l
     843 00003c00 00004240'         .long   qlcfb5_l,qlcfb5_l,qlcfb6_l,qlcfb6_l
     844 00003c80 000043a0'         .long   qlcfb7_l,qlcfb7_l,qlcfb8_l,qlcfb8_l
     845 00003d00 00004500'         .long   qlcfb9_l,qlcfb9_l, qlcfb9_l,qlcfb9_l
     846 00003d80 00004500'         .long   qlcfb9_l,qlcfb9_l, qlcfb9_l,qlcfb9_l
     847 00003e00 00004500'         .long   qlcfb9_l,qlcfb9_l, qlcfb9_l,qlcfb9_l
     848 00003e80 00004500'         .long   qlcfb9_l,qlcfb9_l, qlcfb9_l,qlcfb9_l
     849 00003f00 00004500'         .long   qlcfb9_l,qlcfb9_l, qlcfb9_l,qlcfb9_l
     850                    
     851                            .asg    5,D
     852                    
     853 00003f80           qlcfb1_l        LW      ball11,D
     854 00003fb0                   LW      ball12,D
     855 00003fe0                   LWL0    ball13,D
     856                    
     857 00004030           qlcfb2_l        LW      ball21,D
     858 00004060                   LW      ball22,D
     859 00004090                   LWL0    ball23,D
     860                    
     861 000040e0           qlcfb3_l        LW      ball31,D
     862 00004110                   LW      ball32,D
     863 00004140                   LWL0    ball33,D
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   21

     864                    
     865 00004190           qlcfb4_l        LW      ball41,D
     866 000041c0                   LW      ball42,D
     867 000041f0                   LWL0    ball43,D
     868                    
     869 00004240           qlcfb5_l        LW      ball51,D
     870 00004270                   LW      ball52,D
     871 000042a0                   LWL0    ball53,D
     872                    
     873 000042f0           qlcfb6_l        LW      ball61,D
     874 00004320                   LW      ball62,D
     875 00004350                   LWL0    ball63,D
     876                    
     877 000043a0           qlcfb7_l        LW      ball71,D
     878 000043d0                   LW      ball72,D
     879 00004400                   LWL0    ball73,D
     880                    
     881 00004450           qlcfb8_l        LW      ball81,D
     882 00004480                   LW      ball82,D
     883 000044b0                   LWL0    ball83,D
     884                    
     885 00004500           qlcfb9_l        LW      ball91,D
     886 00004530                   LW      ball92,D
     887 00004560                   LWL0    ball93,D
     888                    
     889                    
     890 000045b0           qlcfanif_t
     891 000045b0 00004a30'         .long   qlcfbf1_l
     892 000045d0 00004a30'         .long   qlcfbf1_l,qlcfbf2_l,qlcfbf2_l
     893 00004630 00004cb0'         .long   qlcfbf3_l,qlcfbf3_l,qlcfbf4_l,qlcfbf4_l
     894 000046b0 00004f30'         .long   qlcfbf5_l,qlcfbf5_l,qlcfbf6_l,qlcfbf6_l
     895 00004730 000051b0'         .long   qlcfbf7_l,qlcfbf7_l,qlcfbf8_l,qlcfbf8_l
     896 000047b0 00005430'         .long   qlcfbf9_l,qlcfbf9_l, qlcfbf9_l,qlcfbf9_l
     897 00004830 00005430'         .long   qlcfbf9_l,qlcfbf9_l, qlcfbf9_l,qlcfbf9_l
     898 000048b0 00005430'         .long   qlcfbf9_l,qlcfbf9_l, qlcfbf9_l,qlcfbf9_l
     899 00004930 00005430'         .long   qlcfbf9_l,qlcfbf9_l, qlcfbf9_l,qlcfbf9_l
     900 000049b0 00005430'         .long   qlcfbf9_l,qlcfbf9_l, qlcfbf9_l,qlcfbf9_l
     901                    
     902                            .asg    4,D
     903                    
     904 00004a30           qlcfbf1_l       LW      ballf11,D
     905 00004a60                   LW      ballf12,D
     906 00004a90                   LW      ballf13,D
     907 00004ac0                   LW      ballf14,D
     908 00004af0                   LW      ballf15,D
     909 00004b20                   LWL0    ballf16,D
     910                    
     911 00004b70           qlcfbf2_l       LW      ballf21,D
     912 00004ba0                   LW      ballf22,D
     913 00004bd0                   LW      ballf23,D
     914 00004c00                   LW      ballf24,D
     915 00004c30                   LW      ballf25,D
     916 00004c60                   LWL0    ballf26,D
     917                    
     918 00004cb0           qlcfbf3_l       LW      ballf31,D
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   22

     919 00004ce0                   LW      ballf32,D
     920 00004d10                   LW      ballf33,D
     921 00004d40                   LW      ballf34,D
     922 00004d70                   LW      ballf35,D
     923 00004da0                   LWL0    ballf36,D
     924                    
     925 00004df0           qlcfbf4_l       LW      ballf41,D
     926 00004e20                   LW      ballf42,D
     927 00004e50                   LW      ballf43,D
     928 00004e80                   LW      ballf44,D
     929 00004eb0                   LW      ballf45,D
     930 00004ee0                   LWL0    ballf46,D
     931                    
     932 00004f30           qlcfbf5_l       LW      ballf51,D
     933 00004f60                   LW      ballf52,D
     934 00004f90                   LW      ballf53,D
     935 00004fc0                   LW      ballf54,D
     936 00004ff0                   LW      ballf55,D
     937 00005020                   LWL0    ballf56,D
     938                    
     939 00005070           qlcfbf6_l       LW      ballf61,D
     940 000050a0                   LW      ballf62,D
     941 000050d0                   LW      ballf63,D
     942 00005100                   LW      ballf64,D
     943 00005130                   LW      ballf65,D
     944 00005160                   LWL0    ballf66,D
     945                    
     946 000051b0           qlcfbf7_l       LW      ballf71,D
     947 000051e0                   LW      ballf72,D
     948 00005210                   LW      ballf73,D
     949 00005240                   LW      ballf74,D
     950 00005270                   LW      ballf75,D
     951 000052a0                   LWL0    ballf76,D
     952                    
     953 000052f0           qlcfbf8_l       LW      ballf81,D
     954 00005320                   LW      ballf82,D
     955 00005350                   LW      ballf83,D
     956 00005380                   LW      ballf84,D
     957 000053b0                   LW      ballf85,D
     958 000053e0                   LWL0    ballf86,D
     959                    
     960 00005430           qlcfbf9_l       LW      ballf91,D
     961 00005460                   LW      ballf92,D
     962 00005490                   LW      ballf93,D
     963 000054c0                   LW      ballf94,D
     964 000054f0                   LW      ballf95,D
     965 00005520                   LWL0    ballf96,D
     966                    
     967                    
     968                    
     969 00005570           qlcfshad_t
     970 00005570 000002a0"         .long   ballshad8,ballshad8,ballshad7,ballshad7
     971 000055f0 000001c0"         .long   ballshad6,ballshad6,ballshad5,ballshad5
     972 00005670 00000150"         .long   ballshad4,ballshad4,ballshad3,ballshad3
     973 000056f0 00000070"         .long   ballshad2,ballshad2,ballshad1,ballshad1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   23

     974 00005770 00000000"         .long   ballshad1,ballshad1,ballshad1,ballshad1
     975 000057f0 00000000"         .long   ballshad1,ballshad1,ballshad1,ballshad1
     976 00005870 00000000"         .long   ballshad1,ballshad1,ballshad1,ballshad1
     977                    
     978                    
     979                    
     980 000058f0            SUBRP  ball_getshadow
     981                    
     982 000058f0                   PUSH    a8
     983                    
     984 00005900     b700          move    *a8(OXVAL),a0,L
         00005910     0080  
     985 00005920     09e1          movi    [-2,0],a1
         00005930 fffe0000  
     986 00005950     09e2          movi    ballshad5,a2
         00005960 00000000! 
     987 00005980     b503          move    *a8(OZPOS),a3
         00005990     00d0  
     988 000059a0     1543          subk    10,a3                   ;Z
     989 000059b0     b504          move    *a8(OCTRL),a4
         000059c0     00f0  
     990 000059d0     0b84          andi    M_FLIPH|M_FLIPV,a4
         000059e0 ffffffcf  
     991 00005a00     0ba4          ori     DMAWNZ|M_3D|M_SHAD|M_NOCOLL,a4
         00005a10 00008b02  
     992 00005a30     09c5          movi    CLSDEAD,a5
         00005a40     2000  
     993 00005a50     56c6          clr     a6
     994 00005a60     56e7          clr     a7
     995 00005a70     0d5f          calla   BEGINOBJ2
         00005a80 00000000! 
     996 00005aa0     4d09          move    a8,a9
     997 00005ab0     1940          movk    10,a0
     998 00005ac0     b008          move    a0,*a8(OMISC)           ;Z offset
         00005ad0     0210  
     999                    
    1000 00005ae0                   PULL    a8
    1001 00005af0     0960          rets
    1002                    
    1003                    
    1004                    
    1005 00005b00            SUBRP  ball_bbcollision
    1006                    
    1007 00005b00                   PUSH    a2,a3,a4,a5,a6,a7,a9,a10,a11
    1008                    
    1009 00005b20     5652          clr     b2                      ;B2=Rim collision flag
    1010                    
    1011 00005b30     05ae          move    @shot_distance,a14
         00005b40 00000000! 
    1012 00005b60     0b4e          cmpi    0158H,a14
         00005b70     fea7  
    1013 00005b80     c41c          jrlt    mjnbok
    1014 00005b90     09c0          movi    200,a0
         00005ba0     00c8  
    1015                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   24

    1016 00005bb0     07a1          move    @game_time,a1,L
         00005bc0 00000000! 
    1017 00005be0     0b41          cmpi    0400H,a1
         00005bf0     fbff  
    1018 00005c00     c702          jrgt    mjnbnohelp
    1019 00005c10     09c0          movi    350,a0
         00005c20     015e  
    1020 00005c30           mjnbnohelp
    1021 00005c30     0d5f          calla   RNDPER
         00005c40 00000000! 
    1022 00005c60     c30e          jrhi    mjnbok
    1023 00005c70     09ea          movi    lhoopl_t,a10
         00005c80 00007c20' 
    1024 00005ca0     09d3          movi    HOOPLX,b3               ;B3=Hoop X
         00005cb0     1ec0  
    1025 00005cc0     0b46          cmpi    WRLDMID,a6
         00005cd0     dfff  
    1026 00005ce0     c413          jrlt    mjnbleft
    1027 00005cf0     09ea          movi    lhoopr_t,a10
         00005d00 00007ff0' 
    1028 00005d20     09d3          movi    HOOPRX,b3
         00005d30     2140  
    1029 00005d40     c00d          jruc    mjnbleft
    1030                    
    1031 00005d50           mjnbok
    1032 00005d50     09ea          movi    hoopl_t,a10
         00005d60 00007480' 
    1033 00005d80     09d3          movi    HOOPLX,b3               ;B3=Hoop X
         00005d90     1ec0  
    1034 00005da0     0b46          cmpi    WRLDMID,a6
         00005db0     dfff  
    1035 00005dc0     c405          jrlt    mjnbleft
    1036 00005dd0     09ea          movi    hoopr_t,a10
         00005de0 00007850' 
    1037 00005e00     09d3          movi    HOOPRX,b3
         00005e10     2140  
    1038 00005e20           mjnbleft
    1039 00005e20     b507          move    *a8(OYPOS),a7           ;A7=Ball Y
         00005e30     00b0  
    1040 00005e40     b50e          move    *a8(OSIZEY),a14
         00005e50     0140  
    1041 00005e60     2fee          srl     1,a14                   ;/2
    1042 00005e70     41c7          add     a14,a7                  ;Center Y
    1043 00005e80     0b47          cmpi    HOOPY+20,a7
         00005e90     0063  
    1044 00005ea0     c500          jrge    mjnbx                   ;Under all collision points?
         00005eb0     0159  
    1045                    
    1046                    
    1047 00005ec0     05a0          move    @ballscorezhit,a0
         00005ed0 000000a0- 
    1048 00005ef0     c51a          jrge    mjnbchkpts                      ;Haven't scored?
    1049                    
    1050 00005f00     b700          move    *a8(OZVEL),a0,L         ;>Slow XZ vel
         00005f10     0060  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   25

    1051 00005f20     2be0          sra     1,a0
    1052 00005f30     b208          move    a0,*a8(OZVEL),L
         00005f40     0060  
    1053                    
    1054 00005f50     b700          move    *a8(OYVEL),a0,L         ;-1/4 Y
         00005f60     0040  
    1055 00005f70     4c0e          move    a0,a14
    1056 00005f80     2bce          sra     2,a14
    1057 00005f90     45c0          sub     a14,a0
    1058 00005fa0     b208          move    a0,*a8(OYVEL),L
         00005fb0     0040  
    1059                    
    1060                    
    1061 00005fc0     4cc0          move    a6,a0                   ;>Pull toward center
    1062 00005fd0     4e7e          move    b3,a14
    1063 00005fe0     45c0          sub     a14,a0
    1064 00005ff0     2580          sll     12,a0                   ;/16
    1065                    
    1066 00006000     b701          move    *a8(OXVEL),a1,L
         00006010     0020  
    1067 00006020     4401          sub     a0,a1
    1068 00006030     4c2e          move    a1,a14
    1069 00006040     2bce          sra     2,a14                   ;/4
    1070 00006050     45c1          sub     a14,a1
    1071 00006060     b228          move    a1,*a8(OXVEL),L
         00006070     0020  
    1072                    
    1073 00006080     c000          jruc    mjnbchkbb
         00006090     00fc  
    1074                    
    1075                    
    1076 000060a0           mjnbchkpts
    1077 000060a0     b505          move    *a8(OZPOS),a5           ;A5=Ball Z
         000060b0     00d0  
    1078 000060c0     c000          jruc    mjnbnxt
         000060d0     00bc  
    1079                    
    1080                    
    1081 000060e0     9543  mjnblp  move    *a10+,a3                ;Y
    1082 000060f0     9544          move    *a10+,a4                ;Z
    1083 00006100     954b          move    *a10+,a11               ;Mode
    1084 00006110     44c2          sub     a6,a2
    1085 00006120     44e3          sub     a7,a3
    1086 00006130     44a4          sub     a5,a4
    1087 00006140     0382          abs     a2
    1088 00006150     0383          abs     a3
    1089 00006160     0384          abs     a4
    1090                    
    1091 00006170     4862          cmp     a3,a2                   ;>Sort A2-A4 large to sml
    1092 00006180     c503          jrge    mjnb20
    1093 00006190                   SWAP    a2,a3
    1094                    
    1095 000061c0     4883  mjnb20  cmp     a4,a3
    1096 000061d0     c508          jrge    mjnbsorted
    1097 000061e0                   SWAP    a3,a4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   26

    1098                    
    1099 00006210     4862          cmp     a3,a2
    1100 00006220     c503          jrge    mjnbsorted
    1101 00006230                   SWAP    a2,a3
    1102                    
    1103 00006260     2fe3  mjnbsorted      srl     1,a3                    ;/2
    1104 00006270     2fc4          srl     2,a4                    ;/4
    1105 00006280     4062          add     a3,a2
    1106 00006290     4082          add     a4,a2
    1107 000062a0     14a2          subk    5,a2
    1108 000062b0     c700          jrgt    mjnbnxt                 ;Too far?
         000062c0     009d  
    1109                    
    1110                    
    1111 000062d0     07a0          move    @sc_proc,a0,L
         000062e0 00000000! 
    1112 00006300     ca12          jrz     mjnbno24clock
    1113 00006310     57ce          clr     a14
    1114 00006320     0784          move    a4,@sc_proc,L
         00006330 00000000! 
    1115 00006350                   PUSH    a7,a10
    1116 00006370     09e7          movi    sclockx,a7
         00006380 00000000! 
    1117 000063a0     09c1          movi    clockid,a1
         000063b0     0084  
    1118 000063c0     b60a          move    *a0(PA10),a10,L
         000063d0     0080  
    1119 000063e0     0d5f          calla   XFERPROC
         000063f0 00000000! 
    1120 00006410                   PULL    a7,a10
    1121 00006430           mjnbno24clock
    1122                    
    1123 00006430     5600          clr     a0
    1124 00006440     0580          move    a0,@ballgoaltcnt
         00006450 00000110- 
    1125                    
    1126 00006470     09c0          movi    3*60+30,a0              ;Rebound stat can happen for next 3
         00006480     00d2  
    1127 00006490     0580          move    a0,@rebound_delay       ;seconds
         000064a0 00000000! 
    1128                    
    1129 000064c0     1900          movk    8,a0
    1130 000064d0     0580          move    a0,@ballsclastp         ;Nobody
         000064e0 00000060- 
    1131                    
    1132                    
    1133 00006500     4d6b          move    a11,a11
    1134 00006510     c676          jrle    mjnbnotrim
    1135                                                            ;>Rim
    1136                    
    1137 00006520     05a0          move    @ballscorezhit,a0
         00006530 000000a0- 
    1138 00006550     ce74          jrn     mjnbnxt                 ;Already scored?
    1139                     
    1140 00006560     05a0          move    @ballrimhitcnt,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   27

         00006570 000000b0- 
    1141 00006590     cb17          jrnz    mjnbskipit
    1142                    
    1143 000065a0                   PUSH    a0,a7,a11
    1144                    
    1145 000065c0     05a0          move    @ballpnumshot,a0
         000065d0 00000050- 
    1146 000065f0     2480          sll     4,a0                    ;x 16
    1147 00006600     0b20          addi    brick_count,a0
         00006610 000001c0- 
    1148 00006630     8401          move    *a0,a1                  ;brick_count++
    1149 00006640     1021          inc     a1
    1150 00006650     8020          move    a1,*a0
    1151                    
    1152 00006660     4e7b          move    b3,a11                  ;hoop x
    1153 00006670                   CREATE  NOG_PID,no_good_check
    1154 000066f0                   PULL    a0,a7,a11
    1155 00006710           mjnbskipit
    1156 00006710     1020          addk    1,a0
    1157 00006720     0580          move    a0,@ballrimhitcnt
         00006730 000000b0- 
    1158                    
    1159 00006750     4c52          move    b2,b2
    1160 00006760     cb2f          jrnz    mjnbnomv                        ;Hit already?
    1161 00006770     1032          addk    1,b2                    ;Set flag
    1162                    
    1163 00006780     0b4b          cmpi    3,a11
         00006790     fffc  
    1164 000067a0     c409          jrlt    mjnbnobend
    1165                    
    1166 000067b0     5600          clr     a0                      ;>Make rim bend a little
    1167 000067c0     0b46          cmpi    WRLDMID,a6
         000067d0     dfff  
    1168 000067e0     c401          jrlt    mjnbnetani
    1169 000067f0     1820          movk    1,a0
    1170 00006800     1881  mjnbnetani      movk    4,a1
    1171 00006810     0d5f          calla   net_ani
         00006820 00000000! 
    1172                    
    1173 00006840           mjnbnobend
    1174 00006840     05a0          move    @PCNT,a0
         00006850 00000000! 
    1175 00006870     27c0          sll     32-2,a0
    1176 00006880     2ce0          srl     32-2-5,a0
    1177 00006890     0b20          addi    rim_snds,a0
         000068a0 000083c0' 
    1178 000068c0     8600          move    *a0,a0,L
    1179 000068d0     0d5f          calla   snd_play1
         000068e0 00000000! 
    1180                    
    1181                    
    1182 00006900     4d01          move    a8,a1                   ;>Move back
    1183 00006910     0b01          addi    OXVAL,a1
         00006920     0080  
    1184 00006930     b700          move    *a8(OXVEL),a0,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   28

         00006940     0020  
    1185 00006950     8622          move    *a1,a2,L
    1186 00006960     4402          sub     a0,a2
    1187 00006970     9241          move    a2,*a1+,L
    1188 00006980     b700          move    *a8(OYVEL),a0,L
         00006990     0040  
    1189 000069a0     8623          move    *a1,a3,L
    1190 000069b0     4403          sub     a0,a3
    1191 000069c0     9261          move    a3,*a1+,L
    1192 000069d0     b700          move    *a8(OZVEL),a0,L
         000069e0     0060  
    1193 000069f0     8624          move    *a1,a4,L
    1194 00006a00     4404          sub     a0,a4
    1195 00006a10     9281          move    a4,*a1+,L
    1196                    
    1197 00006a20     b5a1          move    *a13(ball_collcnt),a1
         00006a30     0170  
    1198 00006a40     1461          subk    3,a1
    1199 00006a50     c51f          jrge    mjnbballstuck
    1200                    
    1201 00006a60           mjnbnomv
    1202 00006a60     0bea          subi    16*4,a10
         00006a70     ffbf  
    1203 00006a80     9542          move    *a10+,a2
    1204 00006a90     9543          move    *a10+,a3
    1205 00006aa0     9544          move    *a10+,a4
    1206 00006ab0     120a          addk    16,a10
    1207 00006ac0     0d3f          callr   ball_deflect
         00006ad0     0196  
    1208                    
    1209 00006ae0     4c52          move    b2,b2
    1210 00006af0     cb1a          jrnz    mjnbnxt                 ;Hit already?
    1211                    
    1212 00006b00     b5a1          move    *a13(ball_collcnt),a1
         00006b10     0170  
    1213 00006b20     cb17          jrnz    mjnbnxt
    1214                    
    1215 00006b30     4d60          move    a11,a0                  ;0AbHsorb some vel
    1216 00006b40     15a0          subk    13,a0                   ;-12 to -9
    1217 00006b50     03a0          neg     a0
    1218 00006b60     4d01          move    a8,a1
    1219 00006b70     1001          addk    OXVEL,a1
    1220 00006b80     8623          move    *a1,a3,L
    1221 00006b90     5c03          mpys    a0,a3
    1222 00006ba0     2b63          sra     5,a3                    ;/32
    1223 00006bb0     9261          move    a3,*a1+,L
    1224 00006bc0     8623          move    *a1,a3,L
    1225 00006bd0     5c03          mpys    a0,a3
    1226 00006be0     2b63          sra     5,a3                    ;/32
    1227 00006bf0     9261          move    a3,*a1+,L
    1228 00006c00     8623          move    *a1,a3,L
    1229 00006c10     5c03          mpys    a0,a3
    1230 00006c20     2b63          sra     5,a3                    ;/32
    1231 00006c30     9261          move    a3,*a1+,L
    1232                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   29

    1233 00006c40     c005          jruc    mjnbnxt
    1234                    
    1235                    
    1236 00006c50           mjnbballstuck
    1237 00006c50     0d3f          callr   ball_stuck
         00006c60     01e4  
    1238 00006c70     c005          jruc    mjnbskip
    1239                    
    1240 00006c80           mjnbnotrim
    1241                    
    1242                    
    1243 00006c80     0d3f  mjnbscore       callr   ball_score              ;>Score if really a basket
         00006c90     0230  
    1244                    
    1245                    
    1246 00006ca0     9542  mjnbnxt move    *a10+,a2                ;X
    1247 00006cb0     cb00          jrnz    mjnblp
         00006cc0     ff41  
    1248                    
    1249                    
    1250 00006cd0     5621  mjnbskip        clr     a1
    1251 00006ce0     4c52          move    b2,b2
    1252 00006cf0     ca03          jrz     mjnbsvcol                       ;No rim collision?
    1253 00006d00     b5a1          move    *a13(ball_collcnt),a1
         00006d10     0170  
    1254 00006d20     1021          addk    1,a1
    1255 00006d30     b02d  mjnbsvcol       move    a1,*a13(ball_collcnt)
         00006d40     0170  
    1256                    
    1257                    
    1258 00006d50     4c52          move    b2,b2
    1259 00006d60     ca2f          jrz     mjnbchkbb                       ;No rim collision?
    1260                    
    1261 00006d70     b702          move    *a8(OXVEL),a2,L         ;>Limit max XZvel
         00006d80     0020  
    1262 00006d90     b703          move    *a8(OZVEL),a3,L
         00006da0     0060  
    1263 00006db0     b704          move    *a8(OYVEL),a4,L
         00006dc0     0040  
    1264 00006dd0     4c40          move    a2,a0
    1265 00006de0     4c61          move    a3,a1
    1266 00006df0     0380          abs     a0
    1267 00006e00     0381          abs     a1
    1268 00006e10     4801          cmp     a0,a1
    1269 00006e20     c501          jrge    mjnba1big
    1270 00006e30     4c01          move    a0,a1
    1271 00006e40           mjnba1big
    1272 00006e40     0b61          cmpi    012000H,a1
         00006e50 fffedfff  
    1273 00006e70     c60e          jrle    mjnbchkyv                       ;XZ vel within max?
    1274                    
    1275 00006e80     4c8e          move    a4,a14
    1276 00006e90     2b0e          sra     8,a14
    1277                    
    1278 00006ea0     2fe1  mjnbscldlp      srl     1,a1                    ;Scale down
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   30

    1279 00006eb0     2be2          sra     1,a2
    1280 00006ec0     2be3          sra     1,a3
    1281 00006ed0     41c4          add     a14,a4                  ;+1/8
    1282 00006ee0     0b61  mjnbstrtsc      cmpi    012000H,a1
         00006ef0 fffedfff  
    1283 00006f10     c7f8          jrgt    mjnbscldlp
    1284                    
    1285 00006f20     b248          move    a2,*a8(OXVEL),L
         00006f30     0020  
    1286 00006f40     b268          move    a3,*a8(OZVEL),L
         00006f50     0060  
    1287                    
    1288 00006f60     0b64  mjnbchkyv       cmpi    -044000H,a4
         00006f70 00043fff  
    1289 00006f90     c503          jrge    mjnbymaxok
    1290 00006fa0     09e4          movi    -044000H,a4
         00006fb0 fffbc000  
    1291 00006fd0     0b64  mjnbymaxok      cmpi    030000H,a4
         00006fe0 fffcffff  
    1292 00007000     c603          jrle    mjnbydnok
    1293 00007010     09e4          movi    030000H,a4
         00007020 00030000  
    1294 00007040     b288  mjnbydnok       move    a4,*a8(OYVEL),L
         00007050     0040  
    1295                    
    1296                    
    1297                    
    1298                    
    1299                    
    1300                    
    1301 00007060           mjnbchkbb
    1302 00007060     0be5          subi    CZMID,a5                ;0CHheck backboard
         00007070     fb6d  
    1303 00007080     0385          abs     a5
    1304 00007090     0b45          cmpi    34,a5
         000070a0     ffdd  
    1305 000070b0     c539          jrge    mjnbx                   ;Z <> backboard Z?
    1306 000070c0     0be7          subi    HOOPY+5,a7
         000070d0     0072  
    1307 000070e0     c736          jrgt    mjnbx                   ;Y<bottom?
    1308 000070f0     0b47          cmpi    -56,a7
         00007100     0037  
    1309 00007110     c433          jrlt    mjnbx                   ;Y>top?
    1310                    
    1311 00007120     0be6          subi    WRLDMID,a6
         00007130     dfff  
    1312 00007140     4cc2          move    a6,a2
    1313 00007150     0386          abs     a6
    1314 00007160     0be6          subi    HOOPRX-WRLDMID+12,a6
         00007170     feb3  
    1315 00007180     c42c          jrlt    mjnbx                   ;In front of backboard?
    1316                    
    1317 00007190     b700          move    *a8(OXVEL),a0,L
         000071a0     0020  
    1318 000071b0     0380          abs     a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   31

    1319 000071c0     4c42          move    a2,a2
    1320 000071d0     ce01          jrn     mjnblbb                 ;Left bb?
    1321 000071e0     03a0          neg     a0
    1322 000071f0     b208  mjnblbb move    a0,*a8(OXVEL),L
         00007200     0020  
    1323 00007210     b701          move    *a8(OXVAL),a1,L
         00007220     0080  
    1324 00007230     4001          add     a0,a1
    1325 00007240     4001          add     a0,a1
    1326 00007250     b228          move    a1,*a8(OXVAL),L
         00007260     0080  
    1327                    
    1328 00007270     0380          abs     a0
    1329 00007280     0b40          cmpi    01fffH,a0
         00007290     e000  
    1330 000072a0     c406          jrlt    mjnbsoftbbhit           ;Soft?
    1331 000072b0     09e0          movi    hitbboard_snd,a0
         000072c0 00000300' 
    1332 000072e0     0d5f          calla   snd_play1
         000072f0 00000000! 
    1333 00007310           mjnbsoftbbhit
    1334                         
    1335 00007310     05a0          move    @ballbbhitcnt,a0
         00007320 000000c0- 
    1336 00007340     1020          addk    1,a0
    1337 00007350     0580          move    a0,@ballbbhitcnt
         00007360 000000c0- 
    1338                    
    1339 00007380     14e0          subk    7,a0                    ;8
    1340 00007390     c40b          jrlt    mjnbx                   ;!Stuck?
    1341 000073a0     09e0          movi    020000H,a0              ;20000
         000073b0 00020000  
    1342 000073d0     b501          move    *a8(OZPOS),a1
         000073e0     00d0  
    1343 000073f0     0b41          cmpi    CZMID,a1
         00007400     fb6d  
    1344 00007410     c701          jrgt    mjnbnewzv
    1345 00007420     03a0          neg     a0
    1346 00007430           mjnbnewzv
    1347 00007430     b208          move    a0,*a8(OZVEL),L         ;Try to unstick
         00007440     0060  
    1348                    
    1349 00007450           mjnbx   PULL    a2,a3,a4,a5,a6,a7,a9,a10,a11
    1350 00007470     0960          rets
    1351                    
    1352                    
    1353                            .asg    HOOPLX,X
    1354                            .asg    HOOPY,Y
    1355                            .asg    Y+7,NY
    1356                            .asg    CZMID,Z
    1357 00007480     1eb8  hoopl_t .word   X-8     ,Y      ,Z      ,1      ;Rim
    1358 000074c0     1eba          .word   X-6     ,Y      ,Z-7    ,1
    1359 00007500     1ec0          .word   X       ,Y      ,Z-9    ,2
    1360 00007540     1ec6          .word   X+6     ,Y      ,Z-7    ,3
    1361 00007580     1ec8          .word   X+8     ,Y      ,Z      ,4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   32

    1362 000075c0     1ec6          .word   X+6     ,Y      ,Z+7    ,3
    1363 00007600     1ec0          .word   X       ,Y      ,Z+9    ,2
    1364 00007640     1eba          .word   X-6     ,Y      ,Z+7    ,1
    1365 00007680     1ec0          .word   X       ,Y      ,Z      ,-1     ;Score spots
    1366 000076c0     1ec0          .word   X       ,Y+2    ,Z      ,-1
    1367 00007700     1ec0          .word   X       ,Y+6    ,Z      ,-2
    1368 00007740     1ebd          .word   X-3     ,Y+8    ,Z      ,-2
    1369 00007780     1ec0          .word   X       ,Y+8    ,Z-3    ,-2
    1370 000077c0     1ec3          .word   X+3     ,Y+8    ,Z      ,-2
    1371 00007800     1ec0          .word   X       ,Y+8    ,Z+3    ,-2
    1372 00007840     0000          .word   0
    1373                    
    1374                            .asg    HOOPRX,X
    1375 00007850     2138  hoopr_t .word   X-8     ,Y      ,Z      ,4
    1376 00007890     213a          .word   X-6     ,Y      ,Z-7    ,3
    1377 000078d0     2140          .word   X       ,Y      ,Z-9    ,2
    1378 00007910     2146          .word   X+6     ,Y      ,Z-7    ,1
    1379 00007950     2148          .word   X+8     ,Y      ,Z      ,1
    1380 00007990     2146          .word   X+6     ,Y      ,Z+7    ,1
    1381 000079d0     2140          .word   X       ,Y      ,Z+9    ,2
    1382 00007a10     213a          .word   X-6     ,Y      ,Z+7    ,3
    1383 00007a50     2140          .word   X       ,Y      ,Z      ,-1     ;Score spots
    1384 00007a90     2140          .word   X       ,Y+2    ,Z      ,-1
    1385 00007ad0     2140          .word   X       ,Y+6    ,Z      ,-2
    1386 00007b10     213d          .word   X-3     ,Y+8    ,Z      ,-2
    1387 00007b50     2140          .word   X       ,Y+8    ,Z-3    ,-2
    1388 00007b90     2143          .word   X+3     ,Y+8    ,Z      ,-2
    1389 00007bd0     2140          .word   X       ,Y+8    ,Z+3    ,-2
    1390 00007c10     0000          .word   0
    1391                    
    1392                            .asg    HOOPLX,X
    1393 00007c20           lhoopl_t
    1394 00007c20     1eb8          .word   X-8     ,Y      ,Z      ,1      ;Rim
    1395 00007c60     1eba          .word   X-6     ,Y      ,Z-7    ,1
    1396 00007ca0     1ec0          .word   X       ,Y      ,Z-9    ,2
    1397 00007ce0     1ec6          .word   X+6     ,Y      ,Z-7    ,3
    1398 00007d20     1ec8          .word   X+8     ,Y      ,Z      ,4
    1399 00007d60     1ec6          .word   X+6     ,Y      ,Z+7    ,3
    1400 00007da0     1ec0          .word   X       ,Y      ,Z+9    ,2
    1401 00007de0     1eba          .word   X-6     ,Y      ,Z+7    ,1
    1402 00007e20     1ec0          .word   X       ,Y      ,Z      ,1      ;Score spots
    1403 00007e60     1ec0          .word   X       ,Y+2    ,Z      ,2
    1404 00007ea0     1ec0          .word   X       ,Y+6    ,Z      ,3
    1405 00007ee0     1ebd          .word   X-3     ,Y+8    ,Z      ,4
    1406 00007f20     1ec0          .word   X       ,Y+8    ,Z-3    ,3
    1407 00007f60     1ec3          .word   X+3     ,Y+8    ,Z      ,2
    1408 00007fa0     1ec0          .word   X       ,Y+8    ,Z+3    ,1
    1409 00007fe0     0000          .word   0
    1410                    
    1411                            .asg    HOOPRX,X
    1412 00007ff0           lhoopr_t
    1413 00007ff0     2138          .word   X-8     ,Y      ,Z      ,4
    1414 00008030     213a          .word   X-6     ,Y      ,Z-7    ,3
    1415 00008070     2140          .word   X       ,Y      ,Z-9    ,2
    1416 000080b0     2146          .word   X+6     ,Y      ,Z-7    ,1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   33

    1417 000080f0     2148          .word   X+8     ,Y      ,Z      ,1
    1418 00008130     2146          .word   X+6     ,Y      ,Z+7    ,1
    1419 00008170     2140          .word   X       ,Y      ,Z+9    ,2
    1420 000081b0     213a          .word   X-6     ,Y      ,Z+7    ,3
    1421 000081f0     2140          .word   X       ,Y      ,Z      ,1      ;Score spots
    1422 00008230     2140          .word   X       ,Y+2    ,Z      ,2
    1423 00008270     2140          .word   X       ,Y+6    ,Z      ,3
    1424 000082b0     213d          .word   X-3     ,Y+8    ,Z      ,4
    1425 000082f0     2140          .word   X       ,Y+8    ,Z-3    ,3
    1426 00008330     2143          .word   X+3     ,Y+8    ,Z      ,2
    1427 00008370     2140          .word   X       ,Y+8    ,Z+3    ,1
    1428 000083b0     0000          .word   0
    1429                    
    1430 000083c0           rim_snds
    1431 000083c0 00000200'         .long   miss_snd,miss_snd,miss2_snd,miss3_snd
    1432                    
    1433                    
    1434                    
    1435 00008440            SUBRP  ball_deflect
    1436                    
    1437 00008440                   PUSH    a5,a6,a7,a9,a10,a11
    1438                    
    1439 00008460     2482          sll     4,a2
    1440 00008470     2483          sll     4,a3
    1441 00008480     2484          sll     4,a4
    1442 00008490     2485          sll     4,a5
    1443 000084a0     2486          sll     4,a6
    1444 000084b0     2487          sll     4,a7
    1445                    
    1446 000084c0                   PUSH    a2,a3,a6,a7
    1447                    
    1448 000084e0     4cc0          move    a6,a0                   ;0DefHlect XZ
    1449 000084f0     4ca1          move    a5,a1
    1450 00008500     4c46          move    a2,a6
    1451 00008510     4c87          move    a4,a7
    1452 00008520     0d3f          callr   seekdir_xyxy128
         00008530     f7ac! 
    1453 00008540     4c0e          move    a0,a14
    1454 00008550     03a0          neg     a0
    1455 00008560     0b00          addi    080H,a0
         00008570     0080  
    1456 00008580     0d3f          callr   sinecos_get
         00008590     0244  
    1457                    
    1458 000085a0     b703          move    *a8(OXVEL),a3,L
         000085b0     0020  
    1459 000085c0     b709          move    *a8(OZVEL),a9,L
         000085d0     0060  
    1460                    
    1461 000085e0     4c65          move    a3,a5                   ;>Rotate to 0
    1462 000085f0     4d2b          move    a9,a11
    1463 00008600     5c23          mpys    a1,a3                   ;X*COS
    1464 00008610     5c0b          mpys    a0,a11                  ;Z*SIN
    1465 00008620     4563          sub     a11,a3                  ;X-Z
    1466 00008630     5c05          mpys    a0,a5                   ;X*SIN
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   34

    1467 00008640     5c29          mpys    a1,a9                   ;Z*COS
    1468 00008650     40a9          add     a5,a9                   ;X+Z
    1469 00008660     2a83          sra     12,a3
    1470 00008670     2a89          sra     12,a9
    1471                    
    1472 00008680     03a9          neg     a9                      ;Neg Z
    1473                    
    1474 00008690     4dc0          move    a14,a0
    1475 000086a0     0d3f          callr   sinecos_get
         000086b0     0232  
    1476                    
    1477 000086c0     4c65          move    a3,a5                   ;>Rotate back
    1478 000086d0     4d2b          move    a9,a11
    1479 000086e0     5c23          mpys    a1,a3                   ;X*COS
    1480 000086f0     5c0b          mpys    a0,a11                  ;Z*SIN
    1481 00008700     4563          sub     a11,a3                  ;X-Z
    1482 00008710     5c05          mpys    a0,a5                   ;X*SIN
    1483 00008720     5c29          mpys    a1,a9                   ;Z*COS
    1484 00008730     40a9          add     a5,a9                   ;X+Z
    1485 00008740     2a83          sra     12,a3
    1486 00008750     2a89          sra     12,a9
    1487                    
    1488 00008760     b268          move    a3,*a8(OXVEL),L
         00008770     0020  
    1489 00008780     b328          move    a9,*a8(OZVEL),L
         00008790     0060  
    1490                    
    1491 000087a0                   PULL    a2,a3,a6,a7
    1492                    
    1493 000087c0     4cc0          move    a6,a0                   ;0DefHlect XY
    1494 000087d0     4ce1          move    a7,a1
    1495 000087e0     4c46          move    a2,a6
    1496 000087f0     4c67          move    a3,a7
    1497 00008800     0d3f          callr   seekdir_xyxy128
         00008810     f77e! 
    1498 00008820     4c0e          move    a0,a14
    1499 00008830     03a0          neg     a0
    1500 00008840     0b00          addi    080H,a0
         00008850     0080  
    1501 00008860     0d3f          callr   sinecos_get
         00008870     0216  
    1502                    
    1503 00008880     b703          move    *a8(OXVEL),a3,L
         00008890     0020  
    1504 000088a0     b709          move    *a8(OYVEL),a9,L
         000088b0     0040  
    1505                    
    1506 000088c0     4c65          move    a3,a5                   ;>Rotate to 0
    1507 000088d0     4d2b          move    a9,a11
    1508 000088e0     5c23          mpys    a1,a3                   ;X*COS
    1509 000088f0     5c0b          mpys    a0,a11                  ;Z*SIN
    1510 00008900     4563          sub     a11,a3                  ;X-Z
    1511 00008910     5c05          mpys    a0,a5                   ;X*SIN
    1512 00008920     5c29          mpys    a1,a9                   ;Z*COS
    1513 00008930     40a9          add     a5,a9                   ;X+Z
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   35

    1514 00008940     2a83          sra     12,a3
    1515 00008950     2a89          sra     12,a9
    1516                    
    1517 00008960     03a9          neg     a9                      ;Neg Y
    1518                    
    1519 00008970     4dc0          move    a14,a0
    1520 00008980     0d3f          callr   sinecos_get
         00008990     0204  
    1521                    
    1522 000089a0     4c65          move    a3,a5                   ;>Rotate back
    1523 000089b0     4d2b          move    a9,a11
    1524 000089c0     5c23          mpys    a1,a3                   ;X*COS
    1525 000089d0     5c0b          mpys    a0,a11                  ;Z*SIN
    1526 000089e0     4563          sub     a11,a3                  ;X-Z
    1527 000089f0     5c05          mpys    a0,a5                   ;X*SIN
    1528 00008a00     5c29          mpys    a1,a9                   ;Z*COS
    1529 00008a10     40a9          add     a5,a9                   ;X+Z
    1530 00008a20     2a83          sra     12,a3
    1531 00008a30     2a89          sra     12,a9
    1532                    
    1533 00008a40     b268          move    a3,*a8(OXVEL),L
         00008a50     0020  
    1534 00008a60     b328          move    a9,*a8(OYVEL),L
         00008a70     0040  
    1535                    
    1536                    
    1537 00008a80                   PULL    a5,a6,a7,a9,a10,a11
    1538 00008aa0     0960          rets
    1539                    
    1540                    
    1541                    
    1542 00008ab0            SUBRP  ball_stuck
    1543                    
    1544 00008ab0                   PUSH    a6,a7
    1545                    
    1546 00008ad0     4e76          move    b3,a6                   ;>Give vel towards or away from center
    1547 00008ae0     09c7          movi    CZMID,a7
         00008af0     0492  
    1548 00008b00     0d3f          callr   seekdirdist_obxz128
         00008b10     f74e! 
    1549                    
    1550 00008b20     2fa0          srl     3,a0                    ;Dir 0-15
    1551 00008b30     2480          sll     4,a0                    ;*16
    1552 00008b40     0b20          addi    ositdx_t,a0
         00008b50 00008ea0' 
    1553 00008b70     8402          move    *a0,a2
    1554 00008b80     b403          move    *a0(ositdz_t-ositdx_t),a3
         00008b90     ffc0  
    1555 00008ba0     1541          subk    10,a1
    1556 00008bb0     c604          jrle    osittcent                       ;Towards center?
    1557 00008bc0     03a2          neg     a2
    1558 00008bd0     03a3          neg     a3
    1559 00008be0     2be2          sra     1,a2                    ;/2
    1560 00008bf0     2be3          sra     1,a3
    1561 00008c00           osittcent
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   36

    1562 00008c00     2462          sll     3,a2                    ;*8
    1563 00008c10     2463          sll     3,a3
    1564 00008c20     b248          move    a2,*a8(OXVEL),L
         00008c30     0020  
    1565 00008c40     b268          move    a3,*a8(OZVEL),L
         00008c50     0060  
    1566                    
    1567 00008c60     b700          move    *a8(OXVAL),a0,L
         00008c70     0080  
    1568 00008c80     4040          add     a2,a0
    1569 00008c90     b208          move    a0,*a8(OXVAL),L
         00008ca0     0080  
    1570 00008cb0     b700          move    *a8(OZVAL),a0,L
         00008cc0     00c0  
    1571 00008cd0     4060          add     a3,a0
    1572 00008ce0     b208          move    a0,*a8(OZVAL),L
         00008cf0     00c0  
    1573                    
    1574 00008d00     05ae          move    @HCOUNT,a14
         00008d10 c00001c0  
    1575 00008d30     1fee          btst    0,a14
    1576 00008d40     ca0b          jrz     ositnoyvc                       ;Skip yvel change?
    1577                    
    1578 00008d50     09e1          movi    -GRAVB*7,a1
         00008d60 fffef600  
    1579 00008d80     b500          move    *a8(OYPOS),a0
         00008d90     00b0  
    1580 00008da0     0b40          cmpi    HOOPY+6,a0
         00008db0     0071  
    1581 00008dc0     c401          jrlt    ositabv                 ;Ball above rim?
    1582 00008dd0     03a1          neg     a1
    1583 00008de0     b228  ositabv move    a1,*a8(OYVEL),L
         00008df0     0040  
    1584                    
    1585 00008e00           ositnoyvc
    1586 00008e00     5621          clr     a1
    1587 00008e10     b02d          move    a1,*a13(ball_collcnt)
         00008e20     0170  
    1588                    
    1589 00008e30                   PULL    a6,a7
    1590 00008e50     0960          rets
    1591                    
    1592                    
    1593 00008e60           ositdz_t
    1594 00008e60     c000          .word   -16384,-15137,-11585,-6270
    1595 00008ea0           ositdx_t
    1596 00008ea0     0000          .word   0,6270,11585,15137,16384,15137,11585,6270
    1597 00008f20     0000          .word   0,-6269,-11585,-15137, -16384,-15137,-11585,-6270
    1598                    
    1599                    
    1600                    
    1601 00008fa0            SUBRP  ball_score
    1602                    
    1603 00008fa0                   PUSH    a2,a3,a4,a5,a6,a7,a10,a11
    1604                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   37

    1605                    
    1606 00008fc0     b700          move    *a8(OYVEL),a0,L
         00008fd0     0040  
    1607 00008fe0     c600          jrle    zzbox                   ;Moving up?
         00008ff0     016b  
    1608                    
    1609 00009000     102b          addk    1,a11
    1610 00009010     cb06          jrne    zzbolow
    1611                    
    1612 00009020     1820          movk    1,a0                    ;Upper zone hit
    1613 00009030     0580          move    a0,@ballscorezhit
         00009040 000000a0- 
    1614 00009060     c000          jruc    zzbox
         00009070     0163  
    1615                    
    1616 00009080           zzbolow
    1617 00009080     05a0          move    @ballscorezhit,a0
         00009090 000000a0- 
    1618 000090b0     c600          jrle    zzbox                   ;No top hit?
         000090c0     015e  
    1619                    
    1620 000090d0     09c0          movi    -1,a0
         000090e0     ffff  
    1621 000090f0     0580          move    a0,@ballscorezhit
         00009100 000000a0- 
    1622                    
    1623 00009120     09c0          movi    NOG_PID,a0              ;kill no good process
         00009130     2600  
    1624 00009140     0d5f          calla   KIL1C
         00009150 00000000! 
    1625                    
    1626 00009170     05a1          move    @ballptsforshot,a1
         00009180 000000d0- 
    1627 000091a0     ca00          jrz     zzbox                   ;Goaltending?
         000091b0     014f  
    1628                    
    1629                    
    1630 000091c0     574a          clr     a10
    1631                    
    1632                    
    1633 000091d0     1a00          movk    16,a0                   ;Team 2
    1634 000091e0     5642          clr     a2
    1635 000091f0     b50e          move    *a8(OXPOS),a14
         00009200     0090  
    1636 00009210     0b4e          cmpi    WRLDMID,a14
         00009220     dfff  
    1637 00009230     c402          jrlt    zzboleft
    1638 00009240     5600          clr     a0                      ;Team 1
    1639 00009250     1802          movk    32,a2
    1640 00009260           zzboleft
    1641 00009260     0b20          addi    scores,a0               ;+Base
         00009270 00000000! 
    1642 00009290     05a1          move    @ballptsforshot,a1
         000092a0 000000d0- 
    1643 000092c0     4c23          move    a1,a3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   38

    1644 000092d0     0d5f          calla   score_add
         000092e0 00000000! 
    1645                    
    1646 00009300     5600          clr     a0
    1647 00009310     0580          move    a0,@rebound_delay
         00009320 00000000! 
    1648                    
    1649 00009340     0d3f          callr   plyr_setptsdown
         00009350     0726  
    1650                    
    1651 00009360     1443          subk    2,a3
    1652 00009370     cb02          jrne    zzbo3ptr
    1653 00009380     1820          movk    PS_2PTS_MADE,a0         ;>Inc made shot stat
    1654 00009390     c001          jruc    zzbo2ptr
    1655 000093a0           zzbo3ptr
    1656 000093a0     1860          movk    PS_3PTS_MADE,a0
    1657                    
    1658 000093b0     05a1  zzbo2ptr        move    @ballpnumshot,a1
         000093c0 00000050- 
    1659 000093e0     0d5f          calla   inc_player_stat
         000093f0 00000000! 
    1660                    
    1661 00009410     0d5f          calla   prt_top_scores          ;Update scores at scrn top
         00009420 00000000! 
    1662                    
    1663 00009440                   CREATE0 score_showtvpanel
    1664                    
    1665 000094b0     4c4b          move    a2,a11
    1666                    
    1667                    
    1668 000094c0                   CREATE0 plyr_takeoutball
    1669                    
    1670                    
    1671                    
    1672 00009530     09c0          movi    TSEC*1,a0
         00009540     0035  
    1673 00009550     0d5f          calla   plyr_setshtdly
         00009560 00000000! 
    1674                    
    1675 00009580     09ea          movi    P1DATA,a10
         00009590 00000000! 
    1676 000095b0     0d5f          calla   stick_number
         000095c0 00000000! 
    1677 000095e0     09ea          movi    P2DATA,a10
         000095f0 00000000! 
    1678 00009610     0d5f          calla   stick_number
         00009620 00000000! 
    1679 00009640     09ea          movi    P3DATA,a10
         00009650 00000000! 
    1680 00009670     0d5f          calla   stick_number
         00009680 00000000! 
    1681 000096a0     09ea          movi    P4DATA,a10
         000096b0 00000000! 
    1682 000096d0     0d5f          calla   stick_number
         000096e0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   39

    1683                    
    1684                                                            ;0DHo a net animation
    1685 00009700     05a0          move    @ballpnumshot,a0
         00009710 00000050- 
    1686 00009730     4c0e          move    a0,a14
    1687 00009740     248e          sll     4,a14                   ;x 16
    1688 00009750     0b2e          addi    brick_count,a14
         00009760 000001c0- 
    1689 00009780     5621          clr     a1
    1690 00009790     802e          move    a1,*a14
    1691                    
    1692 000097a0     09e3          movi    ballpnumscored,a3
         000097b0 00000070- 
    1693 000097d0     846e          move    *a3,a14
    1694 000097e0     480e          cmp     a0,a14
    1695 000097f0     ca1b          jreq    zzbosmpl                        ;Same guy?
    1696                    
    1697 00009800     1821          movk    1,a1                    ;1st
    1698 00009810     b464          move    *a3(16),a4              ;# times
         00009820     0010  
    1699                    
    1700                    
    1701 00009830     05a5          move    @fire_flags,a5
         00009840 00000290- 
    1702 00009860     4bc5          btst    a14,a5
    1703 00009870     ca03          jrz     zzbonormfire2
    1704 00009880     0b44          cmpi    4,a4
         00009890     fffb  
    1705 000098a0     c002          jruc    zzbonrmf2       
    1706                    
    1707 000098b0           zzbonormfire2
    1708 000098b0     0b44          cmpi    3,a4
         000098c0     fffc  
    1709 000098d0           zzbonrmf2       
    1710                    
    1711 000098d0     c419          jrlt    zzbodiffpl                      ;Last guy not hot?
    1712                    
    1713 000098e0     4c04          move    a0,a4
    1714 000098f0     2fe4          srl     1,a4
    1715 00009900     2fee          srl     1,a14
    1716 00009910     488e          cmp     a4,a14
    1717 00009920     ca16          jrz     zzbonochg                       ;Different team?
    1718 00009930     b023          move    a1,*a3(16)
         00009940     0010  
    1719 00009950     09c1          movi    -1,a1
         00009960     ffff  
    1720 00009970     0581          move    a1,@plyrnumonfire
         00009980 00000000- 
    1721 000099a0     c00e          jruc    zzbonochg                       ;Don't messup teammate
    1722                    
    1723 000099b0           zzbosmpl
    1724 000099b0     b461          move    *a3(16),a1              ;# times
         000099c0     0010  
    1725 000099d0     1021          addk    1,a1
    1726 000099e0     0b41          cmpi    8,a1                    ;7
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   40

         000099f0     fff7  
    1727 00009a00     c406          jrlt    zzbodiffpl
    1728 00009a10     09c1          movi    -1,a1
         00009a20     ffff  
    1729 00009a30     0581          move    a1,@plyrnumonfire       ;Cap out on fire capability
         00009a40 00000000- 
    1730 00009a60     1821          movk    1,a1
    1731 00009a70     b023  zzbodiffpl      move    a1,*a3(16)
         00009a80     0010  
    1732 00009a90           zzbonochg
    1733 00009a90     8003          move    a0,*a3
    1734                    
    1735 00009aa0     24a0          sll     5,a0                    ;*32
    1736 00009ab0     0b20          addi    plyrproc_t,a0
         00009ac0 00000000! 
    1737 00009ae0     860a          move    *a0,a10,L
    1738 00009af0     b546          move    *a10(plyr_seqflgs),a6
         00009b00     0180  
    1739                    
    1740 00009b10     4c40          move    a2,a0
    1741 00009b20     1821          movk    1,a1                    ;Bend from dunk
    1742                    
    1743 00009b30     09eb          movi    dunk_snd,a11            ;Sound for dunk
         00009b40 000001c0' 
    1744 00009b60     1fc6          btst    DUNK_B,a6
    1745 00009b70     cb19          jrnz    zzboneta
    1746                    
    1747 00009b80                   CREATE0 plyr_jscrowdsnd         ;For good jump shot
    1748                    
    1749 00009bf0     09eb          movi    swish_snd,a11           ;Sound for swish
         00009c00 00000180' 
    1750                    
    1751 00009c20     5621          clr     a1                      ;Normal swish
    1752 00009c30     b70e          move    *a8(OXVEL),a14,L
         00009c40     0020  
    1753 00009c50     2a2e          sra     15,a14
    1754 00009c60     4c40          move    a2,a0
    1755 00009c70     cb01          jrnz    zzbornet
    1756 00009c80     03ae          neg     a14                     ;Reverse
    1757 00009c90     148e  zzbornet        subk    4,a14
    1758 00009ca0     c401          jrlt    zzboxvsml
    1759 00009cb0     1861          movk    3,a1                    ;Angled swish
    1760 00009cc0           zzboxvsml
    1761 00009cc0     b50e          move    *a8(OYVEL+16),a14
         00009cd0     0050  
    1762 00009ce0     144e          subk    2,a14
    1763 00009cf0     c501          jrge    zzboyvlrg
    1764 00009d00     5621          clr     a1
    1765 00009d10           zzboyvlrg
    1766 00009d10           zzboneta
    1767 00009d10     b464          move    *a3(16),a4              ;# times
         00009d20     0010  
    1768 00009d30     05ae          move    @ballpnumscored,a14
         00009d40 00000070- 
    1769 00009d60     05a2          move    @fire_flags,a2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   41

         00009d70 00000290- 
    1770 00009d90     4bc2          btst    a14,a2
    1771 00009da0     ca03          jrz     zzbonor2
    1772 00009db0     0b44          cmpi    4,a4
         00009dc0     fffb  
    1773 00009dd0     c002          jruc    zzbonor3
    1774                    
    1775 00009de0           zzbonor2
    1776 00009de0     0b44          cmpi    3,a4
         00009df0     fffc  
    1777 00009e00           zzbonor3
    1778                    
    1779                    
    1780                    
    1781                    
    1782 00009e00     c401          jrlt    zzbonothot
    1783 00009e10     18c1          movk    6,a1                    ;Burn net
    1784 00009e20           zzbonothot
    1785 00009e20     0d5f          calla   net_ani
         00009e30 00000000! 
    1786                    
    1787 00009e50     4d60          move    a11,a0
    1788 00009e60     0d5f          calla   snd_play1               ;Net sound
         00009e70 00000000! 
    1789                    
    1790                    
    1791                    
    1792                    
    1793 00009e90     b700          move    *a8(OXVEL),a0,L         ;>Slow XZ vel
         00009ea0     0020  
    1794 00009eb0     2be0          sra     1,a0
    1795 00009ec0     b208          move    a0,*a8(OXVEL),L
         00009ed0     0020  
    1796 00009ee0     b700          move    *a8(OZVEL),a0,L
         00009ef0     0060  
    1797 00009f00     2be0          sra     1,a0
    1798 00009f10     b208          move    a0,*a8(OZVEL),L
         00009f20     0060  
    1799                    
    1800                    
    1801 00009f30     1fc6          btst    DUNK_B,a6
    1802 00009f40     ca73          jrz     zzbonoshake             ;!dunk?
    1803 00009f50     1e06          btst    LAYUP_B,a6
    1804 00009f60     cb71          jrnz    zzbonoshake             ;!dunk?
    1805                    
    1806 00009f70     18a0          movk    PS_DUNKS_MADE,a0
    1807 00009f80     05a1          move    @ballpnumshot,a1
         00009f90 00000050- 
    1808 00009fb0     4c22          move    a1,a2
    1809 00009fc0     0d5f          calla   inc_player_stat
         00009fd0 00000000! 
    1810 00009ff0     2fe2          srl     1,a2                    ;0-1
    1811 0000a000     4c43          move    a2,a3
    1812 0000a010                   XORK    1,a2
    1813 0000a030     0582          move    a2,@inbound             ;Inbounding team (0-1)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   42

         0000a040 00000130- 
    1814                    
    1815 0000a060     2483          sll     4,a3                    ;*16
    1816 0000a070     0b23          addi    t1dunkcnt,a3
         0000a080 000001a0- 
    1817 0000a0a0     8460          move    *a3,a0
    1818 0000a0b0     1020          addk    1,a0
    1819 0000a0c0     c956          jrnc    zzbonoshat                      ;No overflow?
    1820                    
    1821 0000a0d0     b540          move    *a10(plyr_seq),a0
         0000a0e0     0170  
    1822 0000a0f0     09e1          movi    zzbodunk_t,a1
         0000a100 0000a6e0' 
    1823 0000a120     942e  zzbodlp move    *a1+,a14
    1824 0000a130     ce50          jrn     zzbonoshat2             ;End of table?
    1825 0000a140     49c0          cmp     a14,a0
    1826 0000a150     cbfc          jrne    zzbodlp                 ;Wimpy dunk?
    1827                    
    1828 0000a160     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         0000a170 00000000! 
    1829 0000a190     05a1          move    @ballpnumshot,a1
         0000a1a0 00000050- 
    1830 0000a1c0     4a20          btst    a1,a0
    1831 0000a1d0     ca46          jrz     zzbonoshat2             ;Drone?
    1832                    
    1833                    
    1834 0000a1e0     05a0          move    @bbshatter,a0           ;Already happened
         0000a1f0 00000140- 
    1835 0000a210     cb42          jrnz    zzbonoshat2
    1836                    
    1837                    
    1838                            .ref    gmqrtr
    1839 0000a220     05a0          move    @gmqrtr,a0
         0000a230 00000000! 
    1840 0000a250     0b40          cmpi    3,a0
         0000a260     fffc  
    1841 0000a270     c43c          jrlt    zzbonoshat2
    1842                    
    1843 0000a280     b740          move    *a10(plyr_attrib_p),a0,L
         0000a290     0150  
    1844 0000a2a0     b400          move    *a0(PAT_DUNKSKILL),a0
         0000a2b0     0040  
    1845 0000a2c0     0b40          cmpi    9,a0
         0000a2d0     fff6  
    1846 0000a2e0     c435          jrlt    zzbonoshat2
    1847                    
    1848 0000a2f0     5600          clr     a0
    1849 0000a300     8003          move    a0,*a3                  ;Reset cnt
    1850 0000a310     0580          move    a0,@t1dunkcnt
         0000a320 000001a0- 
    1851 0000a340     0580          move    a0,@t2dunkcnt
         0000a350 000001b0- 
    1852                    
    1853 0000a370     1800          movk    32,a0
    1854 0000a380     0b41          cmpi    2,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   43

         0000a390     fffd  
    1855 0000a3a0     c40b          jrlt    tm1
    1856 0000a3b0     07a1          move    @plyrproc_t,a1,L
         0000a3c0 00000000! 
    1857 0000a3e0     b001          move    a0,*a1(plyr_stagcnt)
         0000a3f0     0430  
    1858 0000a400     07a1          move    @plyrproc_t+32,a1,L
         0000a410 00000020! 
    1859 0000a430     b001          move    a0,*a1(plyr_stagcnt)
         0000a440     0430  
    1860 0000a450     c00a          jruc    zzbodoit
    1861 0000a460           tm1
    1862 0000a460     07a1          move    @plyrproc_t+64,a1,L
         0000a470 00000040! 
    1863 0000a490     b001          move    a0,*a1(plyr_stagcnt)
         0000a4a0     0430  
    1864 0000a4b0     07a1          move    @plyrproc_t+96,a1,L
         0000a4c0 00000060! 
    1865 0000a4e0     b001          move    a0,*a1(plyr_stagcnt)
         0000a4f0     0430  
    1866 0000a500           zzbodoit
    1867 0000a500                   CREATE0 board_shatter
    1868 0000a570     09c0          movi    HOOP_PID,a0
         0000a580     2300  
    1869 0000a590     0d5f          calla   KIL1C
         0000a5a0 00000000! 
    1870 0000a5c0     4c40          move    a2,a0
    1871 0000a5d0     18a1          movk    5,a1                    ;Big rim bend
    1872 0000a5e0     0d5f          calla   net_ani
         0000a5f0 00000000! 
    1873 0000a610     1a4a          movk    18,a10                  ;Big shake
    1874 0000a620     c002          jruc    zzboshake
    1875 0000a630           zzbonoshat
    1876 0000a630     8003          move    a0,*a3
    1877 0000a640           zzbonoshat2
    1878 0000a640     19ea          movk    15,a10
    1879 0000a650     0d5f  zzboshake       calla   SHAKER
         0000a660 00000000! 
    1880 0000a680           zzbonoshake
    1881                    
    1882                    
    1883                    
    1884 0000a680     0d5f          calla   scored_speech
         0000a690 00000000! 
    1885                    
    1886 0000a6b0           zzbox   PULL    a2,a3,a4,a5,a6,a7,a10,a11
    1887 0000a6d0     0960          rets
    1888                    
    1889 0000a6e0     0058  zzbodunk_t      .word   DUNKP_SEQ,DUNKA_SEQ,DUNKB_SEQ,DUNKC_SEQ,DUNKD_SEQ
    1890 0000a730     0045          .word   DUNKE_SEQ,DUNKE2_SEQ,DUNKD2_SEQ
    1891 0000a760     0050          .word   DUNKL_SEQ,DUNKL2_SEQ,DUNKL3_SEQ,DUNKL4_SEQ
    1892 0000a7a0     0059          .word   DUNKP2_SEQ
    1893 0000a7b0     005a          .word   DUNKP3_SEQ
    1894 0000a7c0     005f          .word   DUNKR_SEQ
    1895 0000a7d0     0060          .word   DUNKR2_SEQ
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   44

    1896 0000a7e0     0067          .word   DUNKT5_SEQ
    1897 0000a7f0     0078          .word   DUNKU2_SEQ
    1898 0000a800     0079          .word   DUNKU3_SEQ
    1899 0000a810     007a          .word   DUNKU4_SEQ
    1900 0000a820     007b          .word   DUNKU5_SEQ
    1901 0000a830     007c          .word   DUNKU6_SEQ
    1902 0000a840     007d          .word   DUNKX_SEQ
    1903 0000a850     007e          .word   DUNKX2_SEQ
    1904 0000a860     007f          .word   DUNKX3_SEQ
    1905 0000a870     006d          .word   DUNKY_SEQ
    1906 0000a880     006e          .word   DUNKY2_SEQ
    1907 0000a890     006f          .word   DUNKZ_SEQ
    1908 0000a8a0     0070          .word   DUNKZ2_SEQ
    1909 0000a8b0     0071          .word   DUNKZ3_SEQ
    1910 0000a8c0     0064          .word   DUNKT2_SEQ
    1911 0000a8d0     0065          .word   DUNKT3_SEQ
    1912 0000a8e0     0066          .word   DUNKT4_SEQ
    1913 0000a8f0     0063          .word   DUNKT_SEQ
    1914 0000a900     0077          .word   DUNKU_SEQ
    1915 0000a910     0047          .word   DUNKF_SEQ,DUNKJ_SEQ,DUNKO_SEQ
    1916 0000a940     004e          .word   DUNKK_SEQ,DUNKK2_SEQ,DUNKJ2_SEQ
    1917 0000a970     005b          .word   DUNKQ_SEQ
    1918 0000a980     005d          .word   DUNKQ3_SEQ
    1919 0000a990     0057          .word   DUNKO2_SEQ
    1920 0000a9a0     006c          .word   DUNKW3_SEQ
    1921 0000a9b0     006b          .word   DUNKW2_SEQ
    1922 0000a9c0     006a          .word   DUNKW_SEQ
    1923                    
    1924 0000a9d0     ffff          .word   -1
    1925                    
    1926                    
    1927                    
    1928 0000a9e0            SUBR   sinecos_get
    1929                    
    1930 0000a9e0     2720          sll     32-7,a0
    1931 0000a9f0     2d60          srl     32-7-4,a0               ;*16
    1932 0000aa00     0b20          addi    sine_t,a0
         0000aa10 0000aa70' 
    1933 0000aa30     b401          move    *a0(cos_t-sine_t),a1
         0000aa40     0200  
    1934 0000aa50     8400          move    *a0,a0
    1935 0000aa60     0960          rets
    1936                    
    1937 0000aa70           sine_t
    1938 0000aa70     f000          .word   -4096,-4091,-4076,-4052,-4017,-3973,-3920,-3857
    1939 0000aaf0     f138          .word   -3784,-3703,-3612,-3513,-3406,-3290,-3166,-3035
    1940 0000ab70     f4b0          .word   -2896,-2751,-2598,-2440,-2275,-2106,-1931,-1751
    1941 0000abf0     f9e1          .word   -1567,-1380,-1189,-995,-799,-601,-401,-201
    1942 0000ac70           cos_t
    1943 0000ac70     0000          .word   0,201,401,601,799,995,1189,1380
    1944 0000acf0     061f          .word   1567,1751,1931,2106,2275,2440,2598,2751
    1945 0000ad70     0b50          .word   2896,3035,3166,3290,3406,3513,3612,3703
    1946 0000adf0     0ec8          .word   3784,3857,3920,3973,4017,4052,4076,4091
    1947                    
    1948 0000ae70     1000          .word   4096,4091,4076,4052,4017,3973,3920,3857
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   45

    1949 0000aef0     0ec8          .word   3784,3703,3612,3513,3406,3290,3166,3035
    1950 0000af70     0b50          .word   2896,2751,2598,2440,2275,2106,1931,1751
    1951 0000aff0     061f          .word   1567,1380,1189,995,799,601,401,201
    1952                    
    1953 0000b070     0000          .word   0,-200,-401,-601,-799,-995,-1189,-1380
    1954 0000b0f0     f9e1          .word   -1567,-1751,-1931,-2105,-2275,-2440,-2598,-2750
    1955 0000b170     f4b0          .word   -2896,-3035,-3166,-3290,-3406,-3513,-3612,-3703
    1956 0000b1f0     f138          .word   -3784,-3857,-3920,-3973,-4017,-4052,-4076,-4091
    1957                    
    1958 0000b270     f000          .word   -4096,-4091,-4076,-4052,-4017,-3973,-3920,-3857
    1959 0000b2f0     f138          .word   -3784,-3703,-3612,-3513,-3406,-3290,-3166,-3035
    1960 0000b370     f4b0          .word   -2896,-2751,-2598,-2440,-2275,-2106,-1931,-1751
    1961 0000b3f0     f9e1          .word   -1567,-1380,-1189,-995,-799,-601,-401,-201
    1962                    
    1963                    
    1964                    
    1965                    
    1966 0000b470            SUBR   ball_chkpcollide
    1967                    
    1968 0000b470                   PUSH    a2,a3,a4,a5,a6,a7,a10,a11
    1969                    
    1970 0000b490     1887          movk    4,a7
    1971 0000b4a0     b504          move    *a8(OXPOS),a4
         0000b4b0     0090  
    1972 0000b4c0     b50e          move    *a8(OXANI+16),a14
         0000b4d0     01f0  
    1973 0000b4e0     41c4          add     a14,a4                  ;A4=Center X
    1974 0000b4f0     b506          move    *a8(OZPOS),a6           ;A6=Z
         0000b500     00d0  
    1975 0000b510     09e5          movi    plyrobj_t,a5
         0000b520 00000000! 
    1976                    
    1977 0000b540     1a4a          movk    18,a10                  ;A10=Z coll radius
    1978 0000b550     b500          move    *a8(OYPOS),a0
         0000b560     00b0  
    1979 0000b570     0b40          cmpi    -28,a0
         0000b580     001b  
    1980 0000b590     c409          jrlt    iphclp
    1981 0000b5a0     b700          move    *a8(OYVEL),a0,L
         0000b5b0     0040  
    1982 0000b5c0     0380          abs     a0
    1983 0000b5d0     0b60          cmpi    0c000H,a0
         0000b5e0 ffff3fff  
    1984 0000b600     c702          jrgt    iphclp
    1985 0000b610     09ca          movi    35,a10                  ;Larger radius
         0000b620     0023  
    1986                    
    1987 0000b630     96ab  iphclp  move    *a5+,a11,L
    1988                    
    1989 0000b640     b762          move    *a11(OPLINK),a2,L
         0000b650     01a0  
    1990 0000b660     b642          move    *a2(plyr_attrib_p),a2,L
         0000b670     0150  
    1991 0000b680     b442          move    *a2(PAT_DEFSKILL),a2
         0000b690     0050  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   46

    1992 0000b6a0     2482          sll     4,a2
    1993 0000b6b0     164a          subk    18,a10
    1994 0000b6c0     ca04          jrz     iphctbl1
    1995 0000b6d0     0b22          addi    tbl2,a2
         0000b6e0 0000f570' 
    1996 0000b700     c003          jruc    iphctbo
    1997 0000b710           iphctbl1        
    1998 0000b710     0b22          addi    tbl1,a2
         0000b720 0000f4b0' 
    1999 0000b740     844a  iphctbo move    *a2,a10
    2000                    
    2001                    
    2002 0000b750     b562          move    *a11(OZPOS),a2          ;0CHhk Z
         0000b760     00d0  
    2003 0000b770     44c2          sub     a6,a2
    2004 0000b780     0382          abs     a2
    2005 0000b790     4542          sub     a10,a2
    2006 0000b7a0     c500          jrge    iphcnxt
         0000b7b0     03ca  
    2007                    
    2008 0000b7c0     b561          move    *a11(OXPOS),a1          ;0CHhk box X
         0000b7d0     0090  
    2009 0000b7e0     b56e          move    *a11(OXANI+16),a14
         0000b7f0     01f0  
    2010 0000b800     41c1          add     a14,a1
    2011 0000b810     b56e          move    *a11(OSIZEX),a14
         0000b820     0130  
    2012 0000b830     2fee          srl     1,a14                   ;/2
    2013 0000b840     45c1          sub     a14,a1
    2014 0000b850     4824          cmp     a1,a4
    2015 0000b860     c600          jrle    iphcnxt                 ;Center X <= lft?
         0000b870     03be  
    2016 0000b880     242e          sll     1,a14
    2017 0000b890     41c1          add     a14,a1
    2018 0000b8a0     4824          cmp     a1,a4
    2019 0000b8b0     c500          jrge    iphcnxt                 ;Center X >= rgt?
         0000b8c0     03b9  
    2020                    
    2021 0000b8d0     b561          move    *a11(OYPOS),a1
         0000b8e0     00b0  
    2022 0000b8f0     b500          move    *a8(OYPOS),a0
         0000b900     00b0  
    2023 0000b910     1060          addk    3,a0
    2024 0000b920     b5ae          move    *a13(plyr_seq),a14
         0000b930     0170  
    2025 0000b940     0b4e          cmpi    RUNDRIBTURB_SEQ,a14
         0000b950     ffef  
    2026 0000b960     c30c          jrhi    iphchandhi                      ;Hand higher than shoulder?
    2027                    
    2028 0000b970     b76e          move    *a11(OPLINK),a14,L
         0000b980     01a0  
    2029 0000b990     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000b9a0     0150  
    2030 0000b9b0     b5ce          move    *a14(PAT_DEFSKILL),a14
         0000b9c0     0050  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   47

    2031 0000b9d0     248e          sll     4,a14
    2032 0000b9e0     0b2e          addi    tbl3,a14
         0000b9f0 0000f630' 
    2033 0000ba10     85ce          move    *a14,a14
    2034 0000ba20     41c0          add     a14,a0
    2035                    
    2036                    
    2037 0000ba30     4820  iphchandhi      cmp     a1,a0
    2038 0000ba40     c400          jrlt    iphcnxt                 ;Too hi?
         0000ba50     03a0  
    2039                    
    2040 0000ba60     b763          move    *a11(OPLINK),a3,L
         0000ba70     01a0  
    2041 0000ba80     b46e          move    *a3(plyr_shtdly),a14
         0000ba90     02b0  
    2042 0000baa0     c700          jrgt    iphcnxt5                        ;Can't touch?
         0000bab0     0392  
    2043                    
    2044 0000bac0     05b0          move    @ballpnum,b0    ;a14
         0000bad0 00000030- 
    2045 0000baf0     ce55          jrn     iphcok
    2046                    
    2047                    
    2048 0000bb00     24b0          sll     5,b0            ;a14
    2049 0000bb10     0b30          addi    plyrproc_t,b0   ;a14
         0000bb20 00000000! 
    2050 0000bb40     8610          move    *b0,b0,L        ;a14,a14,L
    2051 0000bb50     4e1e          move    b0,a14
    2052 0000bb60     49c3          cmp     a14,a3
    2053 0000bb70     ca06          jrz     iphcskpz
    2054 0000bb80     b410          move    *b0(plyr_seqflgs),b0    ;a14    a6
         0000bb90     0180  
    2055 0000bba0     1e10          btst    LAYUP_B,b0
    2056 0000bbb0     cb1f          jrnz    iphcguydunking
    2057 0000bbc0     1fd0          btst    DUNK_B,b0
    2058 0000bbd0     cb1d          jrnz    iphcguydunking
    2059 0000bbe0           iphcskpz
    2060 0000bbe0     b5ce          move    *a14(plyr_seq),a14
         0000bbf0     0170  
    2061 0000bc00     0b4e          cmpi    SHOOT_SEQ,a14
         0000bc10     ffe8  
    2062 0000bc20     cb42          jrnz    iphcok
    2063 0000bc30     c000          jruc    iphcnxt5
         0000bc40     0379  
    2064                    
    2065 0000bc50           takedunk_t
    2066 0000bc50     0000          .word   0,0,0,0,0,0,0,0,0,0,0,50,100,150,300,400,500,600,700,800,999,999
    2067                    
    2068 0000bdb0           iphcguydunking
    2069 0000bdb0                   PUSH    a0,a1
    2070                    
    2071 0000bdd0     b5c0          move    *a14(plyr_num),a0
         0000bde0     0100  
    2072 0000bdf0     05a1          move    @plyr_maxpower,a1
         0000be00 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   48

    2073 0000be20     4bc1          btst    a14,a1
    2074 0000be30     ca02          jrz     iphcnochng
    2075 0000be40     1920          movk    9,a0
    2076 0000be50     c004          jruc    iphcmaxp
    2077 0000be60           iphcnochng
    2078 0000be60     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000be70     0150  
    2079 0000be80     b5c0          move    *a14(PAT_POWER),a0              ;Guy trying to dunk ball
         0000be90     0150  
    2080 0000bea0           iphcmaxp
    2081                    
    2082                    
    2083                    
    2084 0000bea0     b76e          move    *a11(OPLINK),a14,L
         0000beb0     01a0  
    2085 0000bec0     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000bed0     0150  
    2086 0000bee0     b5ce          move    *a14(PAT_POWER),a14             ;Guy trying to take ball
         0000bef0     0150  
    2087 0000bf00     0b4e          cmpi    3,a14
         0000bf10     fffc  
    2088 0000bf20     c60c          jrle    iphcnxt0z                               ;3 power can't take ball!
    2089                    
    2090 0000bf30     45c0          sub     a14,a0                          ;a0=-10 thru 10
    2091 0000bf40     1140          addk    10,a0
    2092 0000bf50     2480          sll     4,a0
    2093 0000bf60     0b20          addi    takedunk_t,a0
         0000bf70 0000bc50' 
    2094 0000bf90     8400          move    *a0,a0
    2095 0000bfa0     ca08          jrz     iphcok0
    2096 0000bfb0     0d5f          calla   RNDPER
         0000bfc0 00000000! 
    2097 0000bfe0     c204          jrls    iphcok0
    2098 0000bff0           iphcnxt0z                                               ;3 power can't take ball!
    2099 0000bff0                   PULL    a0,a1
    2100 0000c010     c000          jruc    iphcnxt                         ;To big, don't lose ball!
         0000c020     0343  
    2101 0000c030           iphcok0
    2102 0000c030                   PULL    a0,a1
    2103 0000c050           iphcok
    2104 0000c050     b46e          move    *a3(plyr_jmpcnt),a14
         0000c060     0400  
    2105 0000c070     c608          jrle    iphcongnd
    2106 0000c080     b46e          move    *a3(plyr_aniy),a14
         0000c090     0420  
    2107 0000c0a0     41c1          add     a14,a1
    2108 0000c0b0     2bce          sra     2,a14                   ;/4
    2109 0000c0c0     45c1          sub     a14,a1                  ;75% down from top
    2110 0000c0d0     4820          cmp     a1,a0
    2111 0000c0e0     c500          jrge    iphcnxt3                        ;Ball too low?
         0000c0f0     0332  
    2112 0000c100           iphcongnd
    2113                    
    2114 0000c100     b46e          move    *a3(plyr_seqflgs),a14
         0000c110     0180  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   49

    2115 0000c120     1f2e          btst    BLOCKREB_B,a14
    2116 0000c130     ca00          jrz     iphcnobr                        ;No?
         0000c140     01b0  
    2117                    
    2118 0000c150     10c2          addk    18-12,a2
    2119 0000c160     c500          jrge    iphcnxt2                        ;Too far from Z?
         0000c170     0328  
    2120                                                            ;0CHhk box X
    2121 0000c180     b762          move    *a11(OIMG),a2,L
         0000c190     0170  
    2122 0000c1a0     b440          move    *a2(IANI2X),a0
         0000c1b0     0090  
    2123                    
    2124 0000c1c0     b56e          move    *a11(OCTRL),a14
         0000c1d0     00f0  
    2125 0000c1e0     1f6e          btst    B_FLIPH,a14
    2126 0000c1f0     ca04          jrz     iphcnof                 ;No flip?
    2127                    
    2128 0000c200     8442          move    *a2,a2                  ;ISIZEX
    2129 0000c210     1422          subk    1,a2
    2130 0000c220     03a0          neg     a0
    2131 0000c230     4040          add     a2,a0                   ;+size
    2132 0000c240           iphcnof
    2133 0000c240     b56e          move    *a11(OXPOS),a14
         0000c250     0090  
    2134 0000c260     41c0          add     a14,a0
    2135 0000c270     4480          sub     a4,a0
    2136 0000c280     0380          abs     a0
    2137                    
    2138 0000c290     b76e          move    *a11(OPLINK),a14,L
         0000c2a0     01a0  
    2139 0000c2b0     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000c2c0     0150  
    2140 0000c2d0     b5ce          move    *a14(PAT_DEFSKILL),a14
         0000c2e0     0050  
    2141 0000c2f0     248e          sll     4,a14
    2142 0000c300     0b2e          addi    tbl4,a14
         0000c310 0000f6f0' 
    2143 0000c330     85ce          move    *a14,a14
    2144 0000c340     45c0          sub     a14,a0
    2145                    
    2146 0000c350     c500          jrge    iphcnxt4                        ;Too far from X?
         0000c360     030d  
    2147                    
    2148                    
    2149 0000c370     05a1          move    @ballpnum,a1
         0000c380 00000030- 
    2150 0000c3a0     ce21          jrn     iphcnoow                        ;No owner?
    2151 0000c3b0     b46e          move    *a3(plyr_num),a14
         0000c3c0     0100  
    2152 0000c3d0     482e          cmp     a1,a14
    2153 0000c3e0     ca00          jreq    iphcnxt                 ;I own?
         0000c3f0     0306  
    2154                    
    2155 0000c400     2fe1          srl     1,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   50

    2156 0000c410     2fee          srl     1,a14
    2157 0000c420     482e          cmp     a1,a14
    2158 0000c430     ca00          jreq    iphcnxt                 ;Teammate owns?
         0000c440     0301  
    2159                    
    2160                    
    2161 0000c450     b460          move    *a3(plyr_num),a0
         0000c460     0100  
    2162 0000c470     05a1          move    @plyrnumonfire,a1
         0000c480 00000000- 
    2163 0000c4a0     4801          cmp     a0,a1
    2164 0000c4b0     ca10          jrz     iphcnoow                        ;If on fire, don't miss as often
    2165                    
    2166 0000c4c0     b76e          move    *a11(OPLINK),a14,L
         0000c4d0     01a0  
    2167 0000c4e0     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000c4f0     0150  
    2168 0000c500     b5ce          move    *a14(PAT_DEFSKILL),a14
         0000c510     0050  
    2169 0000c520     248e          sll     4,a14
    2170 0000c530     0b2e          addi    tbl5,a14
         0000c540 0000f7b0' 
    2171 0000c560     85c0          move    *a14,a0
    2172 0000c570     0d5f          calla   RNDPER
         0000c580 00000000! 
    2173 0000c5a0     c300          jrhi    iphcnxt
         0000c5b0     02ea  
    2174                    
    2175                    
    2176 0000c5c0           iphcnoow
    2177 0000c5c0                   PUSH    a7
    2178 0000c5d0                   CREATE0 fix_airb
    2179 0000c640                   PULL    a7
    2180                    
    2181                    
    2182 0000c650     07a2          move    @ballprcv_p,a2,L
         0000c660 000000e0- 
    2183 0000c680     4862          cmp     a3,a2
    2184 0000c690     ca00          jreq    iphcrcvok                       ;The receiver is touching it?
         0000c6a0     0298  
    2185                    
    2186                    
    2187 0000c6b0     05a0          move    @ballgoaltcnt,a0        ;0CHhk goaltending
         0000c6c0 00000110- 
    2188 0000c6e0     c662          jrle    iphcskipgt
    2189 0000c6f0     05a1          move    @ballpnumshot,a1
         0000c700 00000050- 
    2190 0000c720     b46e          move    *a3(plyr_num),a14
         0000c730     0100  
    2191 0000c740     2fe1          srl     1,a1
    2192 0000c750     2fee          srl     1,a14
    2193 0000c760     482e          cmp     a1,a14
    2194 0000c770     ca00          jreq    iphcnxt                 ;Same team?
         0000c780     02cd  
    2195                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   51

    2196 0000c790     b700          move    *a8(OYVEL),a0,L
         0000c7a0     0040  
    2197 0000c7b0     4c02          move    a0,a2
    2198 0000c7c0     2a40          sra     14,a0
    2199 0000c7d0     c63c          jrle    iphcnogt
    2200                    
    2201 0000c7e0     b460          move    *a3(plyr_num),a0
         0000c7f0     0100  
    2202 0000c800     05a1          move    @plyrnumonfire,a1
         0000c810 00000000- 
    2203 0000c830     4801          cmp     a0,a1
    2204 0000c840     ca35          jrz     iphcnogt
    2205                    
    2206 0000c850     b460          move    *a3(plyr_ptsdown),a0
         0000c860     0440  
    2207                    
    2208 0000c870     14a0          subk    5,a0
    2209 0000c880     c405          jrlt    iphcnormgt                      ;I'm losing by 5?
    2210 0000c890     0b62          cmpi    [3,0000h],a2
         0000c8a0 fffcffff  
    2211 0000c8c0     c42d          jrlt    iphcnogt
    2212 0000c8d0     c004          jruc    iphcgt
    2213 0000c8e0           iphcnormgt
    2214 0000c8e0     0b62          cmpi    [2,0000h],a2
         0000c8f0 fffdffff  
    2215 0000c910     c428          jrlt    iphcnogt
    2216                    
    2217 0000c920           iphcgt
    2218 0000c920     18c0          movk    6,a0
    2219 0000c930     0d5f          calla   rnd
         0000c940 00012530' 
    2220 0000c960     cb00          jrnz    iphcnxt
         0000c970     02ae  
    2221                            
    2222 0000c980     05a0          move    @plyrairballoff,a0
         0000c990 00000000! 
    2223 0000c9b0     ce1e          jrn     iphcnogt
    2224 0000c9c0     05a0          move    @shot_percentage,a0
         0000c9d0 00000000! 
    2225 0000c9f0     ce1a          jrn     iphcnogt
    2226                            
    2227                    
    2228 0000ca00     b460          move    *a3(plyr_num),a0
         0000ca10     0100  
    2229 0000ca20     2480          sll     4,a0                    ;Secret goaltend
    2230                            .ref    p1taps
    2231 0000ca30     0b20          addi    p1taps,a0
         0000ca40 00000000! 
    2232 0000ca60     8400          move    *a0,a0
    2233 0000ca70     0b40          cmpi    24,a0
         0000ca80     ffe7  
    2234 0000ca90     cb06          jrnz    iphcnosec1
    2235                    
    2236 0000caa0     09c0          movi    700,a0                  ;Let this guy get away with GT
         0000cab0     02bc  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   52

    2237 0000cac0     0d5f          calla   RNDPER
         0000cad0 00000000! 
    2238 0000caf0     c30a          jrhi    iphcnogt
    2239                    
    2240                    
    2241 0000cb00           iphcnosec1
    2242 0000cb00     4ce2          move    a7,a2
    2243 0000cb10                   CREATE0 plyr_goaltending        ;Pass A11
    2244 0000cb80     4c47          move    a2,a7
    2245 0000cb90     c017          jruc    iphcskipgt
    2246 0000cba0           iphcnogt
    2247 0000cba0     18c0          movk    PS_BLOCKS,a0            ;It's a block
    2248 0000cbb0     b461          move    *a3(plyr_num),a1
         0000cbc0     0100  
    2249 0000cbd0     0d5f          calla   inc_player_stat
         0000cbe0 00000000! 
    2250                    
    2251 0000cc00     0d5f          calla   rejected_speech
         0000cc10 00000000! 
    2252                    
    2253 0000cc30     09e0          movi    steal_snd,a0
         0000cc40 00000500' 
    2254 0000cc60     0d5f          calla   snd_play1
         0000cc70 00000000! 
    2255 0000cc90                   PUSH    a7,a10
    2256 0000ccb0     4c6a          move    a3,a10
    2257 0000ccc0     0d5f          calla   arw_on1plyr             ;Guy who picks up ball gets arw
         0000ccd0 00000000! 
    2258 0000ccf0                   PULL    a7,a10
    2259                    
    2260 0000cd10           iphcskipgt
    2261                    
    2262 0000cd10     0d3f          callr   flash_ball
         0000cd20     02ff  
    2263 0000cd30     09e0          movi    cheer_snd,a0
         0000cd40 000003c0' 
    2264 0000cd60     0d5f          calla   snd_play1
         0000cd70 00000000! 
    2265 0000cd90     0d3f          callr   get_swat
         0000cda0     02cc  
    2266                    
    2267 0000cdb0     b462          move    *a3(plyr_seq),a2
         0000cdc0     0170  
    2268 0000cdd0     0b42          cmpi    REBOUND_SEQ,a2
         0000cde0     ffeb  
    2269 0000cdf0     ca03          jreq    iphcagiveball
    2270 0000ce00     0b42          cmpi    REBOUNDA_SEQ,a2
         0000ce10     ffea  
    2271 0000ce20     cb53          jrnz    iphcfix
    2272                    
    2273                    
    2274 0000ce30           iphcagiveball
    2275 0000ce30                   PUSH    a3
    2276                    
    2277 0000ce40     05a0          move    @ballpnum,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   53

         0000ce50 00000030- 
    2278 0000ce70     ce07          jrn     iphcballfree
    2279                    
    2280 0000ce80     09e0          movi    stealsb,a0              ;steals the ball
         0000ce90 00000080' 
    2281 0000ceb0     0d5f          calla   snd_play1ovrp
         0000cec0 00000000! 
    2282                    
    2283 0000cee0     c03a          jruc    iphcskiprbnd
    2284 0000cef0           iphcballfree
    2285 0000cef0     05a0          move    @ballgoaltcnt,a0        ;0CHhk goaltending
         0000cf00 00000110- 
    2286 0000cf20     c736          jrgt    iphcskiprbnd
    2287 0000cf30     07a0          move    @ballprcv_p,a0,L
         0000cf40 000000e0- 
    2288 0000cf60     ca04          jrz     iphcisreb
    2289 0000cf70     0d5f          calla   intercepted_speech
         0000cf80 00000000! 
    2290 0000cfa0     c02e          jruc    iphcskiprbnd
    2291 0000cfb0           iphcisreb
    2292 0000cfb0     b46e          move    *a3(plyr_num),a14
         0000cfc0     0100  
    2293 0000cfd0     058e          move    a14,@ballpnum
         0000cfe0 00000030- 
    2294 0000d000     5600          clr     a0
    2295 0000d010     b003          move    a0,*a3(plyr_dribmode)   ;Reset dribble
         0000d020     0210  
    2296                    
    2297 0000d030     05a0          move    @inbound,a0
         0000d040 00000130- 
    2298 0000d060     cf22          jrnn    iphcskiprbnd
    2299                    
    2300 0000d070     05a0          move    @gmqrtr,a0
         0000d080 00000000! 
    2301 0000d0a0     cb07          jrnz    iphcokr
    2302 0000d0b0     07a0          move    @game_time,a0,L
         0000d0c0 00000000! 
    2303 0000d0e0     0b60          cmpi    02050400H,a0
         0000d0f0 fdfafbff  
    2304 0000d110     c703          jrgt    iphcnor
    2305                    
    2306 0000d120           iphcokr
    2307 0000d120     0d5f          calla   rebound_speech
         0000d130 00000000! 
    2308 0000d150           iphcnor
    2309 0000d150     09c0          movi    80,a0
         0000d160     0050  
    2310 0000d170     0580          move    a0,@pushing_delay
         0000d180 00000000! 
    2311 0000d1a0     09c0          movi    15,a0
         0000d1b0     000f  
    2312 0000d1c0     0d5f          calla   plyr_setshtdly
         0000d1d0 00000000! 
    2313 0000d1f0                   PULL    a3
    2314                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   54

    2315 0000d200     c000          jruc    iphcx
         0000d210     0226  
    2316                    
    2317 0000d220           fix_airb
    2318 0000d220     1820          movk    1,a0
    2319 0000d230     0580          move    a0,@plyrairballoff      ;Shut off eventual airball snd
         0000d240 00000000! 
    2320 0000d260                   DIE
    2321                    
    2322 0000d290           iphcskiprbnd
    2323 0000d290     09c0          movi    80,a0
         0000d2a0     0050  
    2324 0000d2b0     0580          move    a0,@pushing_delay
         0000d2c0 00000000! 
    2325 0000d2e0     09c0          movi    15,a0
         0000d2f0     000f  
    2326 0000d300     0d5f          calla   plyr_setshtdly
         0000d310 00000000! 
    2327 0000d330                   PULL    a3
    2328 0000d340     c000          jruc    iphcgiveball
         0000d350     0132  
    2329 0000d360           iphcfix
    2330 0000d360     1642          subk    BLOCKREJ_SEQ,a2
    2331 0000d370     ca6d          jreq    iphcrej
    2332                    
    2333 0000d380     1860          movk    3,a0                    ;>Regular block
    2334 0000d390     0d3f          callr   rnd
         0000d3a0     0518  
    2335                    
    2336                    
    2337 0000d3b0     cb1e          jrnz    iphcglance_off
    2338                    
    2339 0000d3c0     09e0          movi    steal_snd,a0
         0000d3d0 00000500' 
    2340 0000d3f0     0d5f          calla   snd_play1
         0000d400 00000000! 
    2341 0000d420     09c0          movi    80,a0
         0000d430     0050  
    2342 0000d440     0580          move    a0,@pushing_delay
         0000d450 00000000! 
    2343 0000d470                   PUSH    a7,a10
    2344 0000d490     4c6a          move    a3,a10
    2345 0000d4a0     0d5f          calla   arw_on1plyr
         0000d4b0 00000000! 
    2346 0000d4d0                   PULL    a7,a10
    2347                    
    2348 0000d4f0     18c0          movk    PS_BLOCKS,a0            ;It's a block
    2349 0000d500     b461          move    *a3(plyr_num),a1
         0000d510     0100  
    2350 0000d520     0d5f          calla   inc_player_stat
         0000d530 00000000! 
    2351                     
    2352 0000d550     0d5f          calla   rejected_dnk_speech
         0000d560 00000000! 
    2353 0000d580     c000          jruc    iphcgiveball
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   55

         0000d590     010e  
    2354                    
    2355 0000d5a0           iphcglance_off
    2356 0000d5a0                   PUSH    a3
    2357 0000d5b0     09c0          movi    15,a0
         0000d5c0     000f  
    2358 0000d5d0     0d5f          calla   plyr_setshtdly
         0000d5e0 00000000! 
    2359 0000d600                   PULL    a3
    2360                    
    2361 0000d610     05a0          move    @ballgoaltcnt,a0
         0000d620 00000110- 
    2362 0000d640     c723          jrgt    iphcablk
    2363                    
    2364                    
    2365 0000d650     b500          move    *a8(OYPOS),a0
         0000d660     00b0  
    2366 0000d670     13c0          addk    30,a0                   ;Not if ball near ground
    2367 0000d680     c700          jrgt    iphcx
         0000d690     01de  
    2368                    
    2369 0000d6a0     b460          move    *a3(plyr_dir),a0
         0000d6b0     03d0  
    2370 0000d6c0     0d3f          callr   sinecos_get
         0000d6d0     fd30  
    2371 0000d6e0     24a0          sll     5,a0                    ;*32
    2372 0000d6f0     24a1          sll     5,a1
    2373 0000d700     b208          move    a0,*a8(OZVEL),L
         0000d710     0060  
    2374 0000d720     b228          move    a1,*a8(OXVEL),L
         0000d730     0020  
    2375                    
    2376 0000d740     09e1          movi    -GRAV*22,a1             ;Towards roof
         0000d750 fffcbc00  
    2377                    
    2378 0000d770     b228          move    a1,*a8(OYVEL),L
         0000d780     0040  
    2379                    
    2380 0000d790     05a0          move    @PCNT,a0
         0000d7a0 00000000! 
    2381 0000d7c0                   ANDK    7,a0
    2382 0000d7e0     cb00          jrnz    iphcx
         0000d7f0     01c8  
    2383                    
    2384 0000d800     1b20          movk    25,a0
    2385 0000d810     b003          move    a0,*a3(plyr_shtdly)
         0000d820     02b0  
    2386 0000d830     0d5f          calla   rejected_dnk_speech
         0000d840 00000000! 
    2387                    
    2388 0000d860     c000          jruc    iphcx
         0000d870     01c0  
    2389                    
    2390 0000d880           iphcablk
    2391 0000d880     5600          clr     a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   56

    2392 0000d890     0580          move    a0,@ballgoaltcnt
         0000d8a0 00000110- 
    2393                    
    2394                    
    2395 0000d8c0     09e1          movi    -GRAV*15,a1             ;Towards roof
         0000d8d0 fffdc600  
    2396 0000d8f0     b228          move    a1,*a8(OYVEL),L
         0000d900     0040  
    2397                    
    2398                    
    2399 0000d910     1be0          movk    01fH,a0
    2400 0000d920     0d3f          callr   rnd
         0000d930     04bf  
    2401 0000d940     1fe0          btst    0,a0
    2402 0000d950     ca05          jrz     iphcnoxf
    2403 0000d960     b702          move    *a8(OXVEL),a2,L
         0000d970     0020  
    2404 0000d980     03a2          neg     a2
    2405 0000d990     b248          move    a2,*a8(OXVEL),L
         0000d9a0     0020  
    2406 0000d9b0           iphcnoxf
    2407 0000d9b0     1fc0          btst    1,a0
    2408 0000d9c0     ca00          jrz     iphcnxt
         0000d9d0     01a8  
    2409 0000d9e0     b702          move    *a8(OZVEL),a2,L
         0000d9f0     0060  
    2410 0000da00     03a2          neg     a2
    2411 0000da10     b248          move    a2,*a8(OZVEL),L
         0000da20     0060  
    2412                    
    2413                    
    2414 0000da30     c000          jruc    iphcnxt
         0000da40     01a1  
    2415                    
    2416 0000da50           iphcrej
    2417 0000da50     18c0          movk    PS_BLOCKS,a0            ;It's a block
    2418 0000da60     b461          move    *a3(plyr_num),a1
         0000da70     0100  
    2419 0000da80     0d5f          calla   inc_player_stat
         0000da90 00000000! 
    2420 0000dab0     b460          move    *a3(plyr_dir),a0
         0000dac0     03d0  
    2421 0000dad0     0d3f          callr   sinecos_get
         0000dae0     fcef  
    2422 0000daf0     24a0          sll     5,a0                    ;*32
    2423 0000db00     24a1          sll     5,a1
    2424 0000db10     b208          move    a0,*a8(OZVEL),L
         0000db20     0060  
    2425 0000db30     b228          move    a1,*a8(OXVEL),L
         0000db40     0020  
    2426 0000db50     09e1          movi    -GRAV*21,a1             ;Towards roof ;18
         0000db60 fffce200  
    2427 0000db80     b228          move    a1,*a8(OYVEL),L
         0000db90     0040  
    2428 0000dba0     19e0          movk    15,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   57

    2429 0000dbb0     b003          move    a0,*a3(plyr_shtdly)
         0000dbc0     02b0  
    2430                    
    2431 0000dbd0     0d3f          callr   def_play_reward         ;Good defensive play reward
         0000dbe0     01ef  
    2432                    
    2433 0000dbf0     5600          clr     a0
    2434 0000dc00     0580          move    a0,@ballgoaltcnt
         0000dc10 00000110- 
    2435 0000dc30     c000          jruc    iphcnxt
         0000dc40     0181  
    2436                    
    2437 0000dc50           iphcnobr
    2438 0000dc50     05a2          move    @ballpnum,a2
         0000dc60 00000030- 
    2439 0000dc80     c400          jrlt    iphcgiveball            ;No owner?
         0000dc90     009e  
    2440 0000dca0     b46e          move    *a3(plyr_num),a14
         0000dcb0     0100  
    2441 0000dcc0     484e          cmp     a2,a14
    2442 0000dcd0     ca00          jreq    iphcnxt                 ;I already have it?
         0000dce0     0177  
    2443                    
    2444 0000dcf0     b460          move    *a3(plyr_seq),a0
         0000dd00     0170  
    2445 0000dd10     0be0          subi    STEAL_SEQ,a0
         0000dd20     ffd4  
    2446 0000dd30     cb00          jrne    iphcnxt
         0000dd40     0171  
    2447                    
    2448                    
    2449 0000dd50     b660          move    *a3(plyr_attrib_p),a0,L
         0000dd60     0150  
    2450 0000dd70     b400          move    *a0(PAT_STLSKILL),a0
         0000dd80     0060  
    2451 0000dd90     2480          sll     4,a0
    2452 0000dda0     0b20          addi    stl1,a0
         0000ddb0 0000e380' 
    2453 0000ddd0     8400          move    *a0,a0
    2454                    
    2455 0000dde0     0d5f          calla   RNDPER
         0000ddf0 00000000! 
    2456 0000de10     c200          jrls    iphcnxt                 ;No steal?
         0000de20     0163  
    2457                    
    2458 0000de30     24a2          sll     5,a2                    ;*32
    2459 0000de40     0b22          addi    plyrproc_t,a2
         0000de50 00000000! 
    2460 0000de70     8642          move    *a2,a2,L
    2461                    
    2462 0000de80     b440          move    *a2(plyr_seqflgs),a0
         0000de90     0180  
    2463 0000dea0     1e80          btst    NOSTEAL_B,a0
    2464 0000deb0     cb00          jrnz    iphcnxt                 ;Ball can't be stolen?
         0000dec0     0159  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   58

    2465                    
    2466                    
    2467 0000ded0     05a0          move    @steals_off,a0
         0000dee0 00000000! 
    2468 0000df00     cb00          jrnz    iphcnxt
         0000df10     0154  
    2469                    
    2470 0000df20     1920          movk    PS_STEALS,a0
    2471 0000df30     b461          move    *a3(plyr_num),a1
         0000df40     0100  
    2472 0000df50     0d5f          calla   inc_player_stat
         0000df60 00000000! 
    2473                    
    2474 0000df80     b660          move    *a3(plyr_attrib_p),a0,L
         0000df90     0150  
    2475 0000dfa0     b400          move    *a0(PAT_STLSKILL),a0
         0000dfb0     0060  
    2476 0000dfc0     2480          sll     4,a0
    2477 0000dfd0     0b20          addi    stl2,a0
         0000dfe0 0000e430' 
    2478 0000e000     8400          move    *a0,a0
    2479                    
    2480 0000e010     0d5f          calla   RNDPER
         0000e020 00000000! 
    2481 0000e040     c349          jrhi    iphcgiveballflsh                ;20% give him the ball?
    2482                    
    2483 0000e050     19e0          movk    15,a0                   ;>Knock it away
    2484 0000e060     b002          move    a0,*a2(plyr_shtdly)
         0000e070     02b0  
    2485 0000e080     b003          move    a0,*a3(plyr_shtdly)
         0000e090     02b0  
    2486                    
    2487 0000e0a0     09c0          movi    -1,a0
         0000e0b0     ffff  
    2488 0000e0c0     0580          move    a0,@ballpnum
         0000e0d0 00000030- 
    2489 0000e0f0     0580          move    a0,@ballpnumlast
         0000e100 00000040- 
    2490 0000e120     0d3f          callr   ball_convfmprel2
         0000e130     0229  
    2491                    
    2492 0000e140     09e2          movi    01ffffH,a2              ;>Give rnd velocity
         0000e150 0001ffff  
    2493 0000e170     09e3          movi    010000H,a3
         0000e180 00010000  
    2494 0000e1a0     4c40          move    a2,a0
    2495 0000e1b0     0d3f          callr   rnd
         0000e1c0     0436  
    2496 0000e1d0     4060          add     a3,a0
    2497 0000e1e0     1fe0          btst    0,a0
    2498 0000e1f0     ca01          jrz     iphcxpos
    2499 0000e200     03a0          neg     a0
    2500 0000e210     b208  iphcxpos        move    a0,*a8(OXVEL),L
         0000e220     0020  
    2501 0000e230     4c40          move    a2,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   59

    2502 0000e240     0d3f          callr   rnd
         0000e250     042d  
    2503 0000e260     4060          add     a3,a0
    2504 0000e270     1fe0          btst    0,a0
    2505 0000e280     ca01          jrz     iphcypos
    2506 0000e290     03a0          neg     a0
    2507 0000e2a0     b208  iphcypos        move    a0,*a8(OZVEL),L
         0000e2b0     0060  
    2508                    
    2509 0000e2c0     0d3f          callr   flash_ball
         0000e2d0     01a4  
    2510 0000e2e0     0d3f          callr   get_swat
         0000e2f0     0177  
    2511 0000e300     09e0          movi    cheer_snd,a0
         0000e310 000003c0' 
    2512 0000e330     0d5f          calla   snd_play1
         0000e340 00000000! 
    2513                    
    2514 0000e360     c000          jruc    iphcnxt
         0000e370     010e  
    2515                    
    2516 0000e380     00a0  stl1    .word   160,170,180,195,200
    2517 0000e3d0     00cd          .word   205,215,245,260,285
    2518 0000e420     012c          .word   300
    2519                    
    2520 0000e430     00a0  stl2    .word   160,170,180,195,200
    2521 0000e480     00cd          .word   205,215,225,230,235
    2522 0000e4d0     00fa          .word   250
    2523                    
    2524                    
    2525 0000e4e0           iphcgiveballflsh
    2526                    
    2527 0000e4e0     0d5f          calla   stolen_speech
         0000e4f0 00000000! 
    2528                    
    2529 0000e510     1bc0          movk    30,a0
    2530 0000e520     0580          move    a0,@steals_off
         0000e530 00000000! 
    2531 0000e550     1b20          movk    25,a0
    2532 0000e560     0580          move    a0,@pass_off
         0000e570 00000000! 
    2533 0000e590     09c0          movi    80,a0
         0000e5a0     0050  
    2534 0000e5b0     0580          move    a0,@pushing_delay
         0000e5c0 00000000! 
    2535 0000e5e0     0d3f          callr   flash_ball
         0000e5f0     0172  
    2536 0000e600     0d3f          callr   get_swat
         0000e610     0145  
    2537 0000e620     09e0          movi    cheer_snd,a0
         0000e630 000003c0' 
    2538 0000e650     0d5f          calla   snd_play1
         0000e660 00000000! 
    2539                    
    2540                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   60

    2541 0000e680           iphcgiveball
    2542 0000e680     07a2          move    @ballprcv_p,a2,L
         0000e690 000000e0- 
    2543 0000e6b0     ca00          jrz     iphcnorcvr                      ;No pass receiver?
         0000e6c0     009a  
    2544 0000e6d0     4862          cmp     a3,a2
    2545 0000e6e0     ca00          jreq    iphcrcvok                       ;The receiver has it?
         0000e6f0     0093  
    2546                    
    2547 0000e700     09c0          movi    99,a0
         0000e710     0063  
    2548 0000e720     0d3f          callr   rndrng0
         0000e730     03ed  
    2549                    
    2550 0000e740     57ce          clr     a14
    2551 0000e750     b461          move    *a3(plyr_ptsdown),a1
         0000e760     0440  
    2552 0000e770     c612          jrle    iphcnormint             ;!Losing?
    2553                    
    2554 0000e780     0b41          cmpi    15,a1
         0000e790     fff0  
    2555 0000e7a0     c601          jrle    iphcmaxpts2
    2556 0000e7b0     19e1          movk    15,a1
    2557                    
    2558 0000e7c0           iphcmaxpts2
    2559 0000e7c0     09ce          movi    150,a14                 ;Secret steal power!
         0000e7d0     0096  
    2560 0000e7e0     b466          move    *a3(plyr_num),a6
         0000e7f0     0100  
    2561                            .ref    stlpower
    2562 0000e800     05a4          move    @stlpower,a4
         0000e810 00000000! 
    2563 0000e830     4ac4          btst    a6,a4
    2564 0000e840     cb05          jrnz    iphcnormint
    2565                    
    2566 0000e850     2481          sll     4,a1
    2567 0000e860     0b21          addi    iphcint_t,a1
         0000e870 0000f970' 
    2568 0000e890     842e          move    *a1,a14
    2569                    
    2570 0000e8a0           iphcnormint
    2571 0000e8a0     05a1          move    @ballpasstime,a1
         0000e8b0 00000100- 
    2572 0000e8d0     1461          subk    3,a1
    2573 0000e8e0     0381          abs     a1
    2574 0000e8f0     2fe1          srl     1,a1                    ;/2
    2575 0000e900     41c1          add     a14,a1
    2576 0000e910     1021          addk    1,a1                    ;1% to 100%
    2577 0000e920     4820          cmp     a1,a0
    2578 0000e930     c500          jrge    iphcnxt                 ;% failed?
         0000e940     00b1  
    2579                    
    2580                    
    2581 0000e950     09c0          movi    400,a0                  ;650 ,450
         0000e960     0190  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   61

    2582 0000e970     0d5f          calla   RNDPER
         0000e980 00000000! 
    2583 0000e9a0     c200          jrls    iphcnxt                 ;br=nope
         0000e9b0     00aa  
    2584                    
    2585                    
    2586 0000e9c0                   PUSH    a2,a8
    2587                    
    2588 0000e9e0     b706          move    *a8(OXVAL),a6,L         ;Figure out where ball was 4 ticks ago
         0000e9f0     0080  
    2589 0000ea00     b707          move    *a8(OZVAL),a7,L
         0000ea10     00c0  
    2590                    
    2591 0000ea20     b701          move    *a8(OXVEL),a1,L
         0000ea30     0020  
    2592 0000ea40     2441          sll     2,a1
    2593 0000ea50     4426          sub     a1,a6
    2594 0000ea60     b701          move    *a8(OZVEL),a1,L
         0000ea70     0060  
    2595 0000ea80     2441          sll     2,a1
    2596 0000ea90     4427          sub     a1,a7
    2597                    
    2598 0000eaa0     2a06          sra     16,a6
    2599 0000eab0     2a07          sra     16,a7
    2600                    
    2601 0000eac0     4d68          move    a11,a8
    2602                    
    2603 0000ead0     0d5f          calla   seekdirdist_obxz128
         0000eae0 00000000! 
    2604 0000eb00     b003          move    a0,*a3(plyr_newdir)     ;Turn toward ball
         0000eb10     03e0  
    2605                    
    2606 0000eb20                   PULL    a2,a8
    2607                    
    2608 0000eb40     b440          move    *a2(plyr_rcvpass),a0
         0000eb50     0230  
    2609 0000eb60     c644          jrle    iphcrcvok0                      ;Already caught?
    2610                    
    2611 0000eb70     57ce          clr     a14                     ;Intercepted
    2612 0000eb80     b1c2          move    a14,*a2(plyr_rcvpass)
         0000eb90     0230  
    2613 0000eba0     b440          move    *a2(plyr_jmpcnt),a0
         0000ebb0     0400  
    2614 0000ebc0     cb02          jrnz    iphcinair                       ;Jumping?
    2615 0000ebd0     b1c2          move    a14,*a2(plyr_nojoy)
         0000ebe0     03b0  
    2616 0000ebf0           iphcinair
    2617                    
    2618                    
    2619                    
    2620 0000ebf0     0d3f          callr   def_play_reward         ;Good defensive play reward
         0000ec00     00ed  
    2621                    
    2622 0000ec10     09c0          movi    40,a0                   ;2% of intercepts are just deflects
         0000ec20     0028  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   62

    2623 0000ec30     0d5f          calla   RNDPER
         0000ec40 00000000! 
    2624 0000ec60     c21c          jrls    iphcnope
    2625                    
    2626                    
    2627 0000ec70     09e0          movi    intercept,a0
         0000ec80 000000c0' 
    2628 0000eca0     0d5f          calla   snd_play1ovrp
         0000ecb0 00000000! 
    2629                    
    2630 0000ecd0     b460          move    *a3(plyr_dir),a0
         0000ece0     03d0  
    2631 0000ecf0     0d3f          callr   sinecos_get
         0000ed00     fbcd  
    2632 0000ed10     24a0          sll     5,a0                    ;*32
    2633 0000ed20     24a1          sll     5,a1
    2634 0000ed30     b208          move    a0,*a8(OZVEL),L
         0000ed40     0060  
    2635 0000ed50     b228          move    a1,*a8(OXVEL),L
         0000ed60     0020  
    2636 0000ed70     09e1          movi    -GRAV*25,a1             ;Towards roof
         0000ed80 fffc4a00  
    2637 0000eda0     b228          move    a1,*a8(OYVEL),L
         0000edb0     0040  
    2638 0000edc0     1920          movk    PS_STEALS,a0
    2639 0000edd0     b461          move    *a3(plyr_num),a1
         0000ede0     0100  
    2640 0000edf0     0d5f          calla   inc_player_stat
         0000ee00 00000000! 
    2641                    
    2642 0000ee20     c065          jruc    iphcx                   ;iphcnxt
    2643                    
    2644 0000ee30           iphcnope
    2645                    
    2646                    
    2647 0000ee30     07a0          move    @ballprcv_p,a0,L        ;*Plyr proc who gets this pass or 0
         0000ee40 000000e0- 
    2648 0000ee60     ca0a          jrz     iphcnopass
    2649                    
    2650 0000ee70     05a0          move    @ballpasstime,a0        ;# ticks since passed
         0000ee80 00000100- 
    2651 0000eea0     0b40          cmpi    6,a0
         0000eeb0     fff9  
    2652 0000eec0     c607          jrle    iphccntstl                      ;iphcnopass
    2653                    
    2654 0000eed0     0d5f          calla   intercepted_speech
         0000eee0 00000000! 
    2655 0000ef00     c003          jruc    iphccntstl
    2656                    
    2657 0000ef10           iphcnopass
    2658 0000ef10     0d5f          calla   stolen_speech
         0000ef20 00000000! 
    2659                    
    2660 0000ef40           iphccntstl
    2661                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   63

    2662 0000ef40     1920          movk    PS_STEALS,a0
    2663 0000ef50     b461          move    *a3(plyr_num),a1
         0000ef60     0100  
    2664 0000ef70     0d5f          calla   inc_player_stat
         0000ef80 00000000! 
    2665 0000efa0     c008          jruc    iphcrcvok
    2666                    
    2667 0000efb0           iphcrcvok0
    2668 0000efb0                   PUSH    a7,a10
    2669 0000efd0     4c6a          move    a3,a10
    2670 0000efe0     0d5f          calla   arw_on1plyr             ;Guy who picks up ball gets arw
         0000eff0 00000000! 
    2671 0000f010                   PULL    a7,a10
    2672                    
    2673 0000f030           iphcrcvok
    2674 0000f030     57ce          clr     a14
    2675 0000f040     078e          move    a14,@ballprcv_p,L
         0000f050 000000e0- 
    2676                    
    2677 0000f070           iphcnorcvr
    2678 0000f070     b46e          move    *a3(plyr_num),a14
         0000f080     0100  
    2679 0000f090     058e          move    a14,@ballpnum
         0000f0a0 00000030- 
    2680 0000f0c0     5600          clr     a0
    2681 0000f0d0     b003          move    a0,*a3(plyr_dribmode)   ;Reset dribble
         0000f0e0     0210  
    2682                            
    2683 0000f0f0     b760          move    *a11(OIMG),a0,L
         0000f100     0170  
    2684 0000f110     0b60          cmpi    w1blok3,a0
         0000f120 ffffffff! 
    2685 0000f140     ca1c          jrz     iphcahha
    2686 0000f150     0b60          cmpi    w2blok3,a0
         0000f160 ffffffff! 
    2687 0000f180     ca18          jrz     iphcahha
    2688 0000f190     0b60          cmpi    w4blok3,a0
         0000f1a0 ffffffff! 
    2689 0000f1c0     ca14          jrz     iphcahha
    2690 0000f1d0     0b60          cmpi    w5blok3,a0
         0000f1e0 ffffffff! 
    2691 0000f200     ca10          jrz     iphcahha
    2692 0000f210     0b60          cmpi    w1blok2,a0
         0000f220 ffffffff! 
    2693 0000f240     ca0c          jrz     iphcahha
    2694 0000f250     0b60          cmpi    w2blok2,a0
         0000f260 ffffffff! 
    2695 0000f280     ca08          jrz     iphcahha
    2696 0000f290     0b60          cmpi    w4blok2,a0
         0000f2a0 ffffffff! 
    2697 0000f2c0     ca04          jrz     iphcahha
    2698 0000f2d0     0b60          cmpi    w5blok2,a0
         0000f2e0 ffffffff! 
    2699 0000f300     cb17          jrnz    iphcx
    2700                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   64

    2701 0000f310           iphcahha
    2702 0000f310     1ac0          movk    NOSPEAR_SEQ,a0
    2703 0000f320     b467          move    *a3(plyr_dir),a7
         0000f330     03d0  
    2704 0000f340                   PUSH    a13
    2705 0000f350     4c6d          move    a3,a13
    2706 0000f360     0d5f          calla   plyr_setseq
         0000f370 00000000! 
    2707 0000f390     1820          movk    1,a0
    2708 0000f3a0     b20d          move    a0,*a13(PA10),L
         0000f3b0     0080  
    2709 0000f3c0                   PULL    a13
    2710                    
    2711                    
    2712 0000f3d0     c00a          jruc    iphcx
    2713                    
    2714 0000f3e0           iphcnxt5        
    2715 0000f3e0     0300          nop
    2716 0000f3f0     0300          nop
    2717 0000f400           iphcnxt2
    2718 0000f400     0300          nop
    2719 0000f410     0300          nop
    2720 0000f420           iphcnxt3
    2721 0000f420     0300          nop
    2722 0000f430     0300          nop
    2723 0000f440           iphcnxt4
    2724 0000f440     0300          nop
    2725 0000f450     0300          nop
    2726                    
    2727                    
    2728 0000f460     0d87  iphcnxt dsj     a7,iphclp
         0000f470     fc1b  
    2729                    
    2730                    
    2731 0000f480           iphcx   PULL    a2,a3,a4,a5,a6,a7,a10,a11
    2732 0000f4a0     0960          rets
    2733                    
    2734 0000f4b0     0010  tbl1    .word   16,17,18,18,18,18,18,19,20,21,22,23
    2735 0000f570     0020  tbl2    .word   32,33,34,35,35,35,35,36,37,38,39,40
    2736 0000f630     000f  tbl3    .word   15,15,15,15,15,15,15,15,15,15,15,15
    2737 0000f6f0     000b  tbl4    .word   11,12,12,12,12,12,12,13,14,15,16,17
    2738 0000f7b0     01f4  tbl5    .word   500,500,500,500,500,500,500,500,500,500,500,500
    2739                    
    2740                    
    2741 0000f870           iphcgoalt_t
    2742 0000f870     0000          .word   0,35,45,55,60,65,70,75,75
    2743 0000f900     004b          .word   75,80,90,90,90,90,90
    2744                    
    2745 0000f970           iphcint_t
    2746 0000f970     0000          .word   0,4,7,10,12,15,19,20,20,20
    2747 0000fa10     0014          .word   20,20,22,25,27,30
    2748                    
    2749                    
    2750                    
    2751 0000fa70            SUBR   get_swat
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   65

    2752 0000fa70     09e0          movi    swat_snd,a0
         0000fa80 00000340' 
    2753 0000faa0     0d5f          calla   snd_play1
         0000fab0 00000000! 
    2754 0000fad0     0960          rets
    2755                    
    2756                    
    2757                    
    2758                    
    2759                    
    2760 0000fae0            SUBR   def_play_reward
    2761                    
    2762 0000fae0     0d3f          callr   flash_ball
         0000faf0     0022  
    2763                    
    2764 0000fb00     09e0          movi    steal_snd,a0
         0000fb10 00000500' 
    2765 0000fb30     0d5f          calla   snd_play1
         0000fb40 00000000! 
    2766 0000fb60     0d3f          callr   get_swat
         0000fb70     ffef  
    2767 0000fb80     09e0          movi    cheer_snd,a0
         0000fb90 000003c0' 
    2768 0000fbb0     0d5f          calla   snd_play1
         0000fbc0 00000000! 
    2769                    
    2770 0000fbe0                   PUSH    a7,a10
    2771 0000fc00     4c6a          move    a3,a10
    2772 0000fc10     0d5f          calla   arw_on1plyr             ;Guy who picks up ball gets arw
         0000fc20 00000000! 
    2773 0000fc40                   PULL    a7,a10
    2774                    
    2775 0000fc60     0960          rets
    2776                    
    2777                    
    2778 0000fc70            SUBR   flash_reward
    2779                    
    2780 0000fc70     0d3f          callr   flash_ball
         0000fc80     0009  
    2781                    
    2782 0000fc90     09e0          movi    cheer_snd,a0
         0000fca0 000003c0' 
    2783 0000fcc0     0d5f          calla   snd_play1
         0000fcd0 00000000! 
    2784 0000fcf0     0d3f          callr   get_swat
         0000fd00     ffd6  
    2785 0000fd10     0960          rets
    2786                    
    2787                    
    2788                    
    2789                    
    2790 0000fd20            SUBRP  flash_ball
    2791                    
    2792 0000fd20     05a0          move    @inbound,a0
         0000fd30 00000130- 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   66

    2793 0000fd50     cf0d          jrnn    buzgx
    2794 0000fd60     05a0          move    @ballflash,a0
         0000fd70 00000120- 
    2795 0000fd90     cb09          jrnz    buzgx
    2796 0000fda0                   PUSH    a7
    2797 0000fdb0                   CREATE0 ball_flash
    2798 0000fe20                   PULL    a7
    2799 0000fe30     0960  buzgx   rets    
    2800                    
    2801                    
    2802 0000fe40           ball_flash
    2803 0000fe40     1820          movk    1,a0
    2804 0000fe50     0580          move    a0,@ballflash
         0000fe60 00000120- 
    2805                    
    2806 0000fe80     07a8          move    @ballobj_p,a8,L         ;Basketball obj
         0000fe90 00000010- 
    2807                    
    2808 0000feb0     09c2          movi    1010h,a2
         0000fec0     1010  
    2809 0000fed0     b048          move    a2,*a8(OCONST)
         0000fee0     0160  
    2810                    
    2811 0000fef0     188a          movk    4,a10
    2812 0000ff00           buzgagain
    2813 0000ff00     0544          setf    4,0,0
    2814 0000ff10     1900          movk    M_CONNON,a0             ;Replace non-zero data with constant
    2815 0000ff20     b008          move    a0,*a8(OCTRL)           ;Write 4 low bits
         0000ff30     00f0  
    2816 0000ff40     0570          setf    16,1,0
    2817                    
    2818 0000ff50                   SLEEPK  3
    2819                    
    2820 0000ff90     0544          setf    4,0,0
    2821 0000ffa0     1840          movk    M_WRNONZ,a0
    2822 0000ffb0     b008          move    a0,*a8(OCTRL)           ;Write 4 low bits
         0000ffc0     00f0  
    2823 0000ffd0     0570          setf    16,1,0
    2824                    
    2825 0000ffe0                   SLEEPK  3
    2826                    
    2827                    
    2828 00010020     3e6a          dsj     a10,buzgagain
    2829                    
    2830 00010030     5600  buzgdie clr     a0
    2831 00010040     0580          move    a0,@ballflash
         00010050 00000120- 
    2832                    
    2833 00010070                   DIE
    2834                    
    2835                    
    2836                    
    2837                    
    2838 000100a0            SUBR   plyr_jscrowdsnd
    2839                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   67

    2840 000100a0                   SLEEPK  10
    2841 000100e0     09e0          movi    cheer1_snd,a0
         000100f0 00000400' 
    2842 00010110     0d5f          calla   snd_play1
         00010120 00000000! 
    2843 00010140     09e0          movi    cheer2_snd,a0
         00010150 00000440' 
    2844 00010170     0d5f          calla   snd_play1
         00010180 00000000! 
    2845 000101a0                   SLEEP   76
    2846 000101f0     1920          movk    9,a0
    2847 00010200     0d3f          callr   rndrng0
         00010210     023f  
    2848 00010220     14e0          subk    7,a0
    2849 00010230     c480          jalt    SUCIDE          ;70%
         00010240 00000000! 
    2850                    
    2851 00010260     09e0          movi    cheer3_snd,a0
         00010270 00000480' 
    2852 00010290     0d5f          calla   snd_play1
         000102a0 00000000! 
    2853 000102c0                   DIE
    2854                    
    2855                    
    2856                    
    2857 000102f0            SUBR   ball_convfmprel
    2858                    
    2859 000102f0     07a0          move    @ballobj_p,a0,L
         00010300 00000010- 
    2860                    
    2861 00010320     b601          move    *a0(OIMG),a1,L          ;0CHonvert ball from player relative
         00010330     0170  
    2862 00010340     b421          move    *a1(IANIOFFX),a1
         00010350     0020  
    2863 00010360     2601          sll     16,a1
    2864 00010370     b60e          move    *a0(OXANI),a14,L
         00010380     01e0  
    2865 00010390     b220          move    a1,*a0(OXANI),L
         000103a0     01e0  
    2866 000103b0     45c1          sub     a14,a1                  ;Ani difference
    2867                    
    2868                    
    2869 000103c0     0960          rets
    2870                    
    2871                    
    2872 000103d0            SUBR   ball_convfmprel2
    2873                    
    2874 000103d0     07a0          move    @ballobj_p,a0,L
         000103e0 00000010- 
    2875                    
    2876 00010400     b601          move    *a0(OIMG),a1,L          ;0CHonvert ball from player relative
         00010410     0170  
    2877 00010420     b421          move    *a1(IANIOFFX),a1
         00010430     0020  
    2878 00010440     2601          sll     16,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   68

    2879 00010450     b60e          move    *a0(OXANI),a14,L
         00010460     01e0  
    2880 00010470     b220          move    a1,*a0(OXANI),L
         00010480     01e0  
    2881 00010490     45c1          sub     a14,a1                  ;Ani difference
    2882                    
    2883 000104a0     2aa1          sra     16-5,a1
    2884 000104b0     b40e          move    *a0(OZPOS),a14          ;894 to 1379 (Z range 486)
         000104c0     00d0  
    2885 000104d0     0b0e          addi    (819-GZBASE),a14        ;768 to ?
         000104e0     ffb5  
    2886 000104f0     5dc1          mpys    a14,a1
    2887 00010500     4c2e          move    a1,a14
    2888 00010510     2bce          sra     2,a14                   ;/4
    2889 00010520     45c1          sub     a14,a1
    2890 00010530     2bee          sra     1,a14                   ;/2
    2891 00010540     45c1          sub     a14,a1
    2892 00010550     2421          sll     16-(14+1),a1            ;*64k /16k /2
    2893                    
    2894 00010560     b60e          move    *a0(OXVAL),a14,L        ;Adjust X
         00010570     0080  
    2895 00010580     442e          sub     a1,a14
    2896 00010590     b3c0          move    a14,*a0(OXVAL),L
         000105a0     0080  
    2897                    
    2898 000105b0     0960          rets
    2899                    
    2900                    
    2901                    
    2902                            .ref    assistance_off
    2903                    
    2904 000105c0            SUBR   plyr_setptsdown
    2905                    
    2906 000105c0                   PUSH    a2,a3,a4,a5,a6
    2907                    
    2908 000105e0     09ee          movi    scores,a14
         000105f0 00000000! 
    2909 00010610     95c0          move    *a14+,a0
    2910 00010620     95c4          move    *a14+,a4
    2911 00010630     4404          sub     a0,a4                   ;+ if losing, - if winning
    2912                    
    2913 00010640     05a5          move    @PSTATUS,a5
         00010650 00000000! 
    2914                    
    2915 00010670     09e6          movi    plyrproc_t,a6
         00010680 00000000! 
    2916 000106a0     1883          movk    4,a3
    2917                    
    2918 000106b0           msqglp
    2919 000106b0     4c82          move    a4,a2
    2920 000106c0     2fe5          srl     1,a5
    2921 000106d0     c913          jrnc    msqgset                 ;Drone?
    2922                    
    2923 000106e0     05a0          move    @PSTATUS,a0
         000106f0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   69

    2924 00010710     4c01          move    a0,a1
    2925 00010720     27c0          sll     32-2,a0
    2926 00010730     ca0d          jrz     msqgset                 ;Drone team?
    2927 00010740                   ANDK    0cH,a1
    2928 00010760     ca0a          jrz     msqgset                 ;Drone team?
    2929                    
    2930 00010770     05a0          move    @assistance_off,a0
         00010780 00000000! 
    2931 000107a0     cb05          jrnz    msqgnoset
    2932                    
    2933 000107b0     1b60          movk    ADJCOMPASS,a0           ;Computer assistance
    2934 000107c0     0d5f          calla   GET_ADJ                 ;0-1
         000107d0 00000000! 
    2935 000107f0     ca01          jrz     msqgset                 ;On?
    2936 00010800           msqgnoset
    2937 00010800     5642          clr     a2
    2938 00010810           msqgset
    2939 00010810     96c0          move    *a6+,a0,L
    2940 00010820     b040          move    a2,*a0(plyr_ptsdown)
         00010830     0440  
    2941                    
    2942 00010840     0b43          cmpi    3,a3
         00010850     fffc  
    2943 00010860     cb01          jrne    msqgnxt
    2944 00010870     03a4          neg     a4
    2945                    
    2946 00010880     3fc3  msqgnxt dsj     a3,msqglp
    2947                    
    2948 00010890                   PULL    a2,a3,a4,a5,a6
    2949 000108b0     0960          rets
    2950                    
    2951                    
    2952                    
    2953                    
    2954 000108c0            SUBRP  board_shatter
    2955                    
    2956 000108c0     09e0          movi    explode_snd,a0
         000108d0 00000580' 
    2957 000108f0     0d5f          calla   snd_play1ovr
         00010900 00000000! 
    2958                    
    2959 00010920     09e0          movi    ohmy,a0                 ;oh my!
         00010930 00000040' 
    2960 00010950     0d5f          calla   snd_play1ovr
         00010960 00000000! 
    2961                    
    2962 00010980                   CREATE0 board_glssnd
    2963 000109f0     1941          movk    10,a1
    2964 00010a00     b020          move    a1,*a0(PTIME)
         00010a10     0030  
    2965                    
    2966 00010a20     05ab          move    @ballpnumshot,a11
         00010a30 00000050- 
    2967 00010a50     1948          movk    10,a8
    2968 00010a60     4d60          move    a11,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   70

    2969 00010a70     1440          subk    2,a0
    2970 00010a80     cb01          jrnz    rctsn0
    2971 00010a90     1020          addk    1,a0
    2972 00010aa0     0580  rctsn0  move    a0,@bbshatter
         00010ab0 00000140- 
    2973 00010ad0           rctsshlp
    2974 00010ad0     19a2          movk    13,a2
    2975 00010ae0           rctsshlp2       CREATE0 board_shard
    2976 00010b50     3d02          dsj     a2,rctsshlp2
    2977 00010b60                   SLEEPK  1
    2978 00010ba0     3dc8          dsj     a8,rctsshlp
    2979                    
    2980 00010bb0                   DIE
    2981                    
    2982 00010be0           board_glssnd
    2983 00010be0                   SLEEPK  10
    2984 00010c20     09e0          movi    explode_snd,a0
         00010c30 00000580' 
    2985 00010c50     0d5f          calla   snd_play1ovr
         00010c60 00000000! 
    2986 00010c80                   DIE
    2987                    
    2988                    
    2989 00010cb0                   STRUCTPD
    2990 00010cb0                   APTR    shd_ani1st_p    ;*1st ani_l pos
    2991                    
    2992 00010cb0            SUBRP  board_shard
    2993                    
    2994 00010cb0     1940          movk    10,a0
    2995 00010cc0     0d3f          callr   rndrng0
         00010cd0     0193  
    2996 00010ce0     24a0          sll     5,a0                    ;*32
    2997 00010cf0     0b20          addi    rctsshard_t,a0
         00010d00 00011590' 
    2998 00010d20     8609          move    *a0,a9,L
    2999 00010d30     9720          move    *a9+,a0,L
    3000 00010d40                   PUSHP   a0
    3001 00010d50     b32d          move    a9,*a13(shd_ani1st_p),L
         00010d60     0100  
    3002                    
    3003 00010d70     19e0          movk    0fH,a0
    3004 00010d80     0d3f          callr   rnd
         00010d90     0179  
    3005 00010da0     14a0          subk    5,a0
    3006 00010db0     4c06          move    a0,a6
    3007 00010dc0     25a6          sll     13,a6                   ;XVel
    3008                    
    3009 00010dd0     1860          movk    3,a0
    3010 00010de0     0d3f          callr   rnd
         00010df0     0173  
    3011 00010e00     cb01          jrnz    rctsxnorm
    3012 00010e10     2446          sll     2,a6                    ;*4
    3013 00010e20           rctsxnorm
    3014 00010e20     19e0          movk    0fH,a0
    3015 00010e30     0d3f          callr   rnd
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   71

         00010e40     016e  
    3016 00010e50     14c0          subk    6,a0
    3017 00010e60     4c07          move    a0,a7
    3018 00010e70     25c7          sll     14,a7                   ;YVel
    3019                    
    3020 00010e80     1860          movk    3,a0
    3021 00010e90     0d3f          callr   rnd
         00010ea0     0168  
    3022 00010eb0     cb01          jrnz    rctsynorm
    3023 00010ec0     2447          sll     2,a7                    ;*4
    3024 00010ed0           rctsynorm
    3025                    
    3026 00010ed0     09c0          movi    36,a0
         00010ee0     0024  
    3027 00010ef0     0d3f          callr   rndrng0
         00010f00     0170  
    3028 00010f10     4c01          move    a0,a1
    3029 00010f20     03a1          neg     a1                      ;Y offset
    3030                    
    3031 00010f30     09c0          movi    HOOPLX-13,a0
         00010f40     1eb3  
    3032 00010f50     144b          subk    2,a11
    3033 00010f60     c503          jrge    rctsp23
    3034 00010f70     09c0          movi    HOOPRX+13,a0
         00010f80     214d  
    3035 00010f90     03a6          neg     a6
    3036 00010fa0           rctsp23
    3037 00010fa0     2600          sll     16,a0
    3038 00010fb0     0b01          addi    HOOPY,a1
         00010fc0     ff88  
    3039 00010fd0     2601          sll     16,a1
    3040 00010fe0     09e2          movi    shard1_1,a2
         00010ff0 00000000! 
    3041 00011010     09c3          movi    CZMID,a3
         00011020     0492  
    3042 00011030     09e4          movi    DMAWNZ|M_3D|M_NOSCALE,a4
         00011040 00009102  
    3043 00011060     09c5          movi    CLSDEAD,a5
         00011070     2000  
    3044 00011080     0d5f          calla   BEGINOBJ2
         00011090 00000000! 
    3045                    
    3046 000110b0     18e0          movk    7,a0
    3047 000110c0     0d3f          callr   rnd
         000110d0     0145  
    3048 000110e0     1480          subk    4,a0
    3049 000110f0     2600          sll     16,a0
    3050 00011100     b208          move    a0,*a8(OZVEL),L
         00011110     0060  
    3051                    
    3052 00011120     1820          movk    1,a0
    3053 00011130     0d3f          callr   rnd
         00011140     013e  
    3054 00011150     1020          addk    1,a0
    3055 00011160     4c0b          move    a0,a11
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   72

    3056 00011170     c001          jruc    rctsstrt
    3057                    
    3058 00011180     396a  rctslp  dsj     a10,rctsnoani
    3059 00011190           rctsstrt
    3060 00011190     4d6a          move    a11,a10
    3061 000111a0     9720          move    *a9+,a0,L
    3062 000111b0     cb03          jrnz    rctsani
    3063 000111c0     b7a9          move    *a13(shd_ani1st_p),a9,L
         000111d0     0100  
    3064 000111e0     9720          move    *a9+,a0,L
    3065 000111f0           rctsani
    3066 000111f0     b501          move    *a8(OCTRL),a1
         00011200     00f0  
    3067 00011210     0d5f          calla   obj_aniq
         00011220 00000000! 
    3068 00011240           rctsnoani
    3069 00011240                   SLEEPK  1
    3070 00011280     b702          move    *a8(OYVEL),a2,L
         00011290     0040  
    3071 000112a0     0b02          addi    GRAV,a2
         000112b0     2600  
    3072 000112c0     b248          move    a2,*a8(OYVEL),L
         000112d0     0040  
    3073 000112e0     cee9          jrn     rctslp                  ;Going up?
    3074 000112f0     b701          move    *a8(OYVAL),a1,L
         00011300     00a0  
    3075 00011310     c4e6          jrlt    rctslp                  ;Above gnd?
    3076 00011320     5621          clr     a1
    3077 00011330     b228          move    a1,*a8(OYVAL),L
         00011340     00a0  
    3078 00011350     05ae          move    @HCOUNT,a14
         00011360 c00001c0  
    3079 00011380     27ce          sll     32-2,a14
    3080 00011390     ca07          jrz     rctsshatter
    3081 000113a0     03a2          neg     a2
    3082 000113b0     2bc2          sra     2,a2
    3083 000113c0     b248          move    a2,*a8(OYVEL),L
         000113d0     0040  
    3084 000113e0     0b42          cmpi    -(GRAV*2),a2
         000113f0     4bff  
    3085 00011400     c4d7          jrlt    rctslp
    3086                    
    3087 00011410           rctsshatter
    3088 00011410     5600          clr     a0
    3089 00011420     b208          move    a0,*a8(OXVEL),L
         00011430     0020  
    3090 00011440     b208          move    a0,*a8(OYVEL),L
         00011450     0040  
    3091 00011460     b208          move    a0,*a8(OZVEL),L
         00011470     0060  
    3092                    
    3093 00011480                   PULLP   a9
    3094 00011490     186a          movk    3,a10
    3095 000114a0     c009          jruc    rctsstrt2
    3096                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   73

    3097 000114b0           rctslp2
    3098 000114b0     b501          move    *a8(OCTRL),a1
         000114c0     00f0  
    3099 000114d0     0d5f          calla   obj_aniq
         000114e0 00000000! 
    3100 00011500           rctsnoani2
    3101 00011500                   SLEEPK  1
    3102 00011540     9720  rctsstrt2       move    *a9+,a0,L
    3103 00011550     cbf5          jrnz    rctslp2
    3104                    
    3105                    
    3106 00011560     c080          jauc    DELOBJDIE
         00011570 00000000! 
    3107                    
    3108                    
    3109 00011590           rctsshard_t
    3110 00011590 000116f0'         .long   s1_t,s2_t,s3_t,s4_t,s5_t,s6_t,s7_t,s8_t
    3111 00011690 000116f0'         .long   s1_t,s6_t,s8_t
    3112                    
    3113 000116f0           s1_t
    3114 000116f0 00012470'         .long   st4_t
    3115 00011710 00000000!         .long   shard1_1
    3116 00011730 00000000!         .long   shard1_2
    3117 00011750 00000000!         .long   shard1_3
    3118 00011770 00000000!         .long   shard1_4
    3119 00011790 00000000!         .long   shard1_5
    3120 000117b0 00000000!         .long   shard1_6
    3121 000117d0 00000000!         .long   shard1_7
    3122 000117f0 00000000!         .long   shard1_8
    3123 00011810 00000000          .long   0
    3124 00011830           s2_t
    3125 00011830 000123b0'         .long   st3_t
    3126 00011850 00000000!         .long   shard2_1
    3127 00011870 00000000!         .long   shard2_2
    3128 00011890 00000000!         .long   shard2_3
    3129 000118b0 00000000!         .long   shard2_4
    3130 000118d0 00000000!         .long   shard2_5
    3131 000118f0 00000000!         .long   shard2_6
    3132 00011910 00000000!         .long   shard2_7
    3133 00011930 00000000!         .long   shard2_8
    3134 00011950 00000000          .long   0
    3135 00011970           s3_t
    3136 00011970 000122f0'         .long   st2_t
    3137 00011990 00000000!         .long   shard3_1
    3138 000119b0 00000000!         .long   shard3_2
    3139 000119d0 00000000!         .long   shard3_3
    3140 000119f0 00000000!         .long   shard3_4
    3141 00011a10 00000000!         .long   shard3_5
    3142 00011a30 00000000!         .long   shard3_6
    3143 00011a50 00000000!         .long   shard3_7
    3144 00011a70 00000000!         .long   shard3_8
    3145 00011a90 00000000!         .long   shard3_9
    3146 00011ab0 00000000!         .long   shard3_10
    3147 00011ad0 00000000!         .long   shard3_11
    3148 00011af0 00000000!         .long   shard3_12
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   74

    3149 00011b10 00000000          .long   0
    3150 00011b30           s4_t
    3151 00011b30 00012230'         .long   st1_t
    3152 00011b50 00000000!         .long   shard4_1
    3153 00011b70 00000000!         .long   shard4_2
    3154 00011b90 00000000!         .long   shard4_3
    3155 00011bb0 00000000!         .long   shard4_4
    3156 00011bd0 00000000!         .long   shard4_5
    3157 00011bf0 00000000!         .long   shard4_6
    3158 00011c10 00000000!         .long   shard4_7
    3159 00011c30 00000000!         .long   shard4_8
    3160 00011c50 00000000!         .long   shard4_9
    3161 00011c70 00000000!         .long   shard4_10
    3162 00011c90 00000000          .long   0
    3163 00011cb0           s5_t
    3164 00011cb0 000122f0'         .long   st2_t
    3165 00011cd0 00000000!         .long   shard5_1
    3166 00011cf0 00000000!         .long   shard5_2
    3167 00011d10 00000000!         .long   shard5_3
    3168 00011d30 00000000!         .long   shard5_4
    3169 00011d50 00000000!         .long   shard5_5
    3170 00011d70 00000000!         .long   shard5_6
    3171 00011d90 00000000!         .long   shard5_7
    3172 00011db0 00000000!         .long   shard5_8
    3173 00011dd0 00000000          .long   0
    3174 00011df0           s6_t
    3175 00011df0 00012470'         .long   st4_t
    3176 00011e10 00000000!         .long   shard6_1
    3177 00011e30 00000000!         .long   shard6_2
    3178 00011e50 00000000!         .long   shard6_3
    3179 00011e70 00000000!         .long   shard6_4
    3180 00011e90 00000000!         .long   shard6_5
    3181 00011eb0 00000000!         .long   shard6_6
    3182 00011ed0 00000000!         .long   shard6_7
    3183 00011ef0 00000000!         .long   shard6_8
    3184 00011f10 00000000          .long   0
    3185 00011f30           s7_t
    3186 00011f30 000122f0'         .long   st2_t
    3187 00011f50 00000000!         .long   shard7_1
    3188 00011f70 00000000!         .long   shard7_2
    3189 00011f90 00000000!         .long   shard7_3
    3190 00011fb0 00000000!         .long   shard7_4
    3191 00011fd0 00000000!         .long   shard7_5
    3192 00011ff0 00000000!         .long   shard7_6
    3193 00012010 00000000!         .long   shard7_7
    3194 00012030 00000000!         .long   shard7_8
    3195 00012050 00000000!         .long   shard7_9
    3196 00012070 00000000!         .long   shard7_10
    3197 00012090 00000000          .long   0
    3198 000120b0           s8_t
    3199 000120b0 00012470'         .long   st4_t
    3200 000120d0 00000000!         .long   shard8_1
    3201 000120f0 00000000!         .long   shard8_2
    3202 00012110 00000000!         .long   shard8_3
    3203 00012130 00000000!         .long   shard8_4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   75

    3204 00012150 00000000!         .long   shard8_5
    3205 00012170 00000000!         .long   shard8_6
    3206 00012190 00000000!         .long   shard8_7
    3207 000121b0 00000000!         .long   shard8_8
    3208 000121d0 00000000!         .long   shard8_9
    3209 000121f0 00000000!         .long   shard8_10
    3210 00012210 00000000          .long   0
    3211                    
    3212 00012230 00000000! st1_t   .long   shat1_1
    3213 00012250 00000000!         .long   shat1_2
    3214 00012270 00000000!         .long   shat1_3
    3215 00012290 00000000!         .long   shat1_4
    3216 000122b0 00000000!         .long   shat1_5
    3217 000122d0 00000000          .long   0
    3218 000122f0 00000000! st2_t   .long   shat2_1
    3219 00012310 00000000!         .long   shat2_2
    3220 00012330 00000000!         .long   shat2_3
    3221 00012350 00000000!         .long   shat2_4
    3222 00012370 00000000!         .long   shat2_5
    3223 00012390 00000000          .long   0
    3224 000123b0 00000000! st3_t   .long   shat3_1
    3225 000123d0 00000000!         .long   shat3_2
    3226 000123f0 00000000!         .long   shat3_3
    3227 00012410 00000000!         .long   shat3_4
    3228 00012430 00000000!         .long   shat3_5
    3229 00012450 00000000          .long   0
    3230 00012470 00000000! st4_t   .long   shat4_1
    3231 00012490 00000000!         .long   shat4_2
    3232 000124b0 00000000!         .long   shat4_3
    3233 000124d0 00000000!         .long   shat4_4
    3234 000124f0 00000000!         .long   shat4_5
    3235 00012510 00000000          .long   0
    3236                    
    3237                    
    3238                    
    3239 00012530            SUBRP  rnd
    3240                    
    3241 00012530     07a1          move    @RAND,a1,L
         00012540 00000000! 
    3242 00012560     6821          rl      a1,a1
    3243 00012570     05ae          move    @HCOUNT,a14
         00012580 c00001c0  
    3244 000125a0     69c1          rl      a14,a1
    3245 000125b0     41e1          add     sp,a1
    3246 000125c0     0781          move    a1,@RAND,L
         000125d0 00000000! 
    3247                    
    3248 000125f0     5020          and     a1,a0
    3249 00012600     0960          rets
    3250                    
    3251                    
    3252 00012610            SUBRP  rndrng0
    3253                    
    3254 00012610     07a1          move    @RAND,a1,L
         00012620 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   76

    3255 00012640     6821          rl      a1,a1
    3256 00012650     05ae          move    @HCOUNT,a14
         00012660 c00001c0  
    3257 00012680     69c1          rl      a14,a1
    3258 00012690     41e1          add     sp,a1
    3259 000126a0     0781          move    a1,@RAND,L
         000126b0 00000000! 
    3260                    
    3261 000126d0     1020          addk    1,a0
    3262 000126e0     5e20          mpyu    a1,a0           ;Condition codes not valid!
    3263                    
    3264 000126f0     0960          rets
    3265                    
    3266                    
    3267                    
    3268                    
    3269                    
    3270                    
    3271 00012700            SUBR   seq_stand
    3272                    
    3273 00012700     5600          clr     a0
    3274 00012710     b00d          move    a0,*a13(plyr_nojoy)
         00012720     03b0  
    3275                    
    3276 00012730     1820          movk    STND_SEQ,a0             ;Set stand sequence
    3277 00012740     b5a1          move    *a13(plyr_ownball),a1
         00012750     0260  
    3278 00012760     c63a          jrle    rctsset
    3279                    
    3280                    
    3281 00012770     b5a2          move    *a13(plyr_num),a2
         00012780     0100  
    3282 00012790     2fe2          srl     1,a2
    3283 000127a0                   XORK    1,a2
    3284 000127c0     24c2          sll     6,a2                    ;*64
    3285 000127d0     0b22          addi    plyrproc_t,a2
         000127e0 00000000! 
    3286 00012800     9644          move    *a2+,a4,L
    3287 00012810     9645          move    *a2+,a5,L
    3288 00012820     b5a0          move    *a13(plyr_o1dist),a0
         00012830     0310  
    3289 00012840     0b40          cmpi    60,a0
         00012850     ffc3  
    3290 00012860     c509          jrge    rctschko2                       ;Too far?
    3291 00012870     17c0          subk    30,a0
    3292 00012880     c415          jrlt    rctsdoelbo                      ;In close?
    3293 00012890     b48e          move    *a4(plyr_seq),a14
         000128a0     0170  
    3294 000128b0     0bee          subi    STEAL_SEQ,a14
         000128c0     ffd4  
    3295 000128d0     ca10          jreq    rctsdoelbo
    3296 000128e0     142e          subk    PUSH_SEQ-STEAL_SEQ,a14
    3297 000128f0     ca0e          jreq    rctsdoelbo
    3298 00012900           rctschko2
    3299 00012900     b5a0          move    *a13(plyr_o2dist),a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   77

         00012910     0330  
    3300 00012920     0b40          cmpi    60,a0
         00012930     ffc3  
    3301 00012940     c51b          jrge    rctsstndwb                      ;Too far?
    3302 00012950     17c0          subk    30,a0
    3303 00012960     c407          jrlt    rctsdoelbo                      ;In close?
    3304 00012970     b4ae          move    *a5(plyr_seq),a14
         00012980     0170  
    3305 00012990     0bee          subi    STEAL_SEQ,a14
         000129a0     ffd4  
    3306 000129b0     ca02          jreq    rctsdoelbo
    3307 000129c0     142e          subk    PUSH_SEQ-STEAL_SEQ,a14
    3308 000129d0     cb12          jrne    rctsstndwb
    3309 000129e0           rctsdoelbo
    3310 000129e0     b5ae          move    *a13(plyr_autoctrl),a14
         000129f0     03c0  
    3311 00012a00     cb0f          jrnz    rctsstndwb
    3312                    
    3313 00012a10     07a1          move    @game_time,a1,L         ;If under 2 secs, no elbow
         00012a20 00000000! 
    3314 00012a40     0b41          cmpi    0200H,a1
         00012a50     fdff  
    3315 00012a60     c609          jrle    rctsstndwb
    3316                    
    3317 00012a70     09c0          movi    ELBO_SEQ,a0
         00012a80     0039  
    3318 00012a90     b5ae          move    *a13(plyr_seq),a14
         00012aa0     0170  
    3319 00012ab0     480e          cmp     a0,a14
    3320 00012ac0     cb0b          jrne    rctssetnostl            ;!In elbo?
    3321 00012ad0     8561          move    *a11,a1
    3322 00012ae0     2741          sll     32-6,a1
    3323 00012af0     ca01          jrz     rctsset                 ;No buttons?
    3324                    
    3325                    
    3326 00012b00     1880  rctsstndwb      movk    STNDWB_SEQ,a0
    3327 00012b10     0d5f  rctsset calla   plyr_setseq
         00012b20 00000000! 
    3328                    
    3329 00012b40     b7a0          move    *a13(plyr_ani1st_p),a0,L
         00012b50     01c0  
    3330 00012b60     4e04          move    a0,b4
    3331 00012b70     0960          rets
    3332                    
    3333                    
    3334                    
    3335 00012b80           rctssetnostl
    3336 00012b80     0d5f          calla   plyr_setseq
         00012b90 00000000! 
    3337                    
    3338 00012bb0     b7a0          move    *a13(plyr_ani1st_p),a0,L
         00012bc0     01c0  
    3339 00012bd0     4e04          move    a0,b4
    3340                    
    3341 00012be0     09c0          movi    140,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   78

         00012bf0     008c  
    3342 00012c00     0580          move    a0,@steals_off          ;Don't allow steals for 60 ticks
         00012c10 00000000! 
    3343 00012c30     09c0          movi    80,a0
         00012c40     0050  
    3344 00012c50     0580          move    a0,@pushing_delay
         00012c60 00000000! 
    3345 00012c80     0960          rets
    3346                    
    3347                    
    3348                    
    3349                    
    3350 00012c90            SUBR   seq_stealstand
    3351                    
    3352 00012c90     b5a0          move    *a13(plyr_ownball),a0
         00012ca0     0260  
    3353 00012cb0     c1a4          jrp     seq_stand
    3354                    
    3355 00012cc0     1f46          btst    5,a6
    3356 00012cd0     caa2          jrz     seq_stand
    3357 00012ce0     0960          rets
    3358                    
    3359                    
    3360                    
    3361 00012cf0            SUBR   seq_newdir
    3362                    
    3363 00012cf0     9490          move    *b4+,b0
    3364 00012d00     4e17          move    b0,a7
    3365 00012d10     b5a0          move    *a13(plyr_anirevff),a0
         00012d20     0200  
    3366 00012d30     ca06          jrz     ewagx
    3367 00012d40     2f87          srl     4,a7
    3368 00012d50     2467          sll     3,a7
    3369 00012d60     0b27          addi    ewagt,a7
         00012d70 00012dd0' 
    3370 00012d90     8ee7          movb    *a7,a7
    3371 00012da0     b0ed  ewagx   move    a7,*a13(plyr_dir)
         00012db0     03d0  
    3372 00012dc0     0960          rets
    3373                    
    3374 00012dd0       00  ewagt   .byte   0,7*16,6*16,5*16,4*16,3*16,2*16,1*16
    3375                    
    3376                    
    3377                    
    3378 00012e10            SUBR   seq_stayinair
    3379                    
    3380 00012e10     b5a0          move    *a13(plyr_jmpcnt),a0
         00012e20     0400  
    3381 00012e30     ca02          jrz     giygx
    3382 00012e40     0bf4          subi    2*32+3*16,b4
         00012e50     ff8f  
    3383 00012e60     0960  giygx   rets
    3384                    
    3385                    
    3386 00012e70            SUBR   seq_keepzx
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   79

    3387                    
    3388 00012e70     b700          move    *a8(OXVEL),a0,L
         00012e80     0020  
    3389 00012e90     2020          sla     1,a0
    3390 00012ea0     b20d          move    a0,*a13(plyr_kpxvel),L
         00012eb0     0590  
    3391 00012ec0     b700          move    *a8(OZVEL),a0,L
         00012ed0     0060  
    3392 00012ee0     2020          sla     1,a0
    3393 00012ef0     b20d          move    a0,*a13(plyr_kpzvel),L
         00012f00     0570  
    3394 00012f10     0960          rets
    3395                    
    3396                    
    3397 00012f20            SUBR   seq_injury
    3398                    
    3399 00012f20     19a0          movk    PS_INJURY,a0            ;>Inc try shot stat
    3400 00012f30     b5a1          move    *a13(plyr_num),a1
         00012f40     0100  
    3401 00012f50     0d5f          calla   inc_player_stat
         00012f60 00000000! 
    3402                    
    3403 00012f80     0960          rets
    3404                    
    3405                    
    3406 00012f90            SUBR   seq_stuffzx
    3407                    
    3408 00012f90     b7a0          move    *a13(plyr_kpxvel),a0,L
         00012fa0     0590  
    3409 00012fb0     b208          move    a0,*a8(OXVEL),L
         00012fc0     0020  
    3410 00012fd0     b7a0          move    *a13(plyr_kpzvel),a0,L
         00012fe0     0570  
    3411 00012ff0     b208          move    a0,*a8(OZVEL),L
         00013000     0060  
    3412                    
    3413 00013010     0960          rets
    3414                    
    3415                    
    3416 00013020            SUBR   seq_strtfire
    3417                    
    3418                    
    3419 00013020     b5a0          move    *a13(plyr_keeppal),a0
         00013030     0550  
    3420 00013040     cb14          jrnz    dyiux
    3421 00013050     b500          move    *a8(OPAL),a0
         00013060     0150  
    3422 00013070     b00d          move    a0,*a13(plyr_keeppal)
         00013080     0550  
    3423 00013090     09e0          movi    FIREFALP,a0
         000130a0 00000000! 
    3424 000130c0     0d5f          calla   pal_getf
         000130d0 00000000! 
    3425 000130f0     b008          move    a0,*a8(OPAL)
         00013100     0150  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   80

    3426 00013110     b7a1          move    *a13(plyr_headobj_p),a1,L
         00013120     04b0  
    3427 00013130     b42e          move    *a1(OPAL),a14
         00013140     0150  
    3428 00013150     b1cd          move    a14,*a13(plyr_hdkeeppal)
         00013160     0560  
    3429 00013170     b001          move    a0,*a1(OPAL)
         00013180     0150  
    3430 00013190           dyiux
    3431 00013190     0960          rets
    3432                    
    3433                    
    3434 000131a0            SUBR   seq_stopfire
    3435                    
    3436 000131a0     b5a0          move    *a13(plyr_keeppal),a0
         000131b0     0550  
    3437 000131c0     ca0b          jrz     gvlux
    3438 000131d0     b008          move    a0,*a8(OPAL)
         000131e0     0150  
    3439 000131f0     b5a0          move    *a13(plyr_hdkeeppal),a0
         00013200     0560  
    3440 00013210     b7a1          move    *a13(plyr_headobj_p),a1,L
         00013220     04b0  
    3441 00013230     b001          move    a0,*a1(OPAL)
         00013240     0150  
    3442 00013250     5600          clr     a0
    3443 00013260     b00d          move    a0,*a13(plyr_keeppal)
         00013270     0550  
    3444 00013280           gvlux
    3445 00013280     0960          rets
    3446                    
    3447                    
    3448 00013290            SUBR   seq_smoke
    3449                    
    3450                            .ref    plyr_smoketrail2
    3451 00013290                   CREATE0 plyr_smoketrail2
    3452 00013300     b3a0          move    a13,*a0(PA10),L
         00013310     0080  
    3453                    
    3454 00013320     0960          rets
    3455                    
    3456                    
    3457                    
    3458 00013330            SUBR   seq_snd
    3459                    
    3460 00013330     9690          move    *b4+,b0,L
    3461 00013340     4e10          move    b0,a0
    3462 00013350     c080          jauc    snd_play1
         00013360 00000000! 
    3463                    
    3464                    
    3465 00013380            SUBR   seq_noballoff
    3466                    
    3467 00013380     b5a0          move    *a13(plyr_seqflgs),a0
         00013390     0180  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   81

    3468 000133a0     0b80          andni   NOBALL_M,a0
         000133b0 00000020  
    3469 000133d0     b00d          move    a0,*a13(plyr_seqflgs)
         000133e0     0180  
    3470                    
    3471 000133f0     0960          rets
    3472                    
    3473                    
    3474                    
    3475 00013400            SUBR   seq_resetseq
    3476                    
    3477 00013400     5600          clr     a0
    3478 00013410     b00d          move    a0,*a13(plyr_nojoy)
         00013420     03b0  
    3479                    
    3480 00013430     b5a0          move    *a13(plyr_seq),a0
         00013440     0170  
    3481 00013450     4cc1          move    a6,a1
    3482 00013460     2781          sll     32-4,a1
    3483 00013470     cb05          jrnz    qcpjset                 ;Pushing joy?
    3484                    
    3485 00013480     1860          movk    STNDDEF_SEQ,a0          ;>Setup stand sequence
    3486 00013490     b5ae          move    *a13(plyr_ownball),a14
         000134a0     0260  
    3487 000134b0     c601          jrle    qcpjset
    3488 000134c0     1901          movk    STNDDRIBDEF_SEQ,a1
    3489                    
    3490 000134d0     c000  qcpjset jruc    plyr_setseq
         000134e0     ecb1! 
    3491                    
    3492                    
    3493                    
    3494 000134f0            SUBR   seq_run
    3495                    
    3496 000134f0     4e90          move    b4,a0
    3497 00013500     0b00          addi    4*16,a0
         00013510     0040  
    3498 00013520     b20d          move    a0,*a13(plyr_ani1st_p),L
         00013530     01c0  
    3499 00013540     0960          rets
    3500                    
    3501                    
    3502                    
    3503 00013550            SUBR   seq_jump
    3504                    
    3505 00013550     b5ae          move    *a13(plyr_seq),a14
         00013560     0170  
    3506 00013570     0b4e          cmpi    LAYUP_SEQ,a14
         00013580     ffe4  
    3507 00013590     ca1a          jreq    zzlsjmp
    3508 000135a0     0b4e          cmpi    HOOK_SEQ,a14
         000135b0     ffe6  
    3509 000135c0     ca17          jreq    zzlsjmp
    3510 000135d0     0b4e          cmpi    HOOK2_SEQ,a14
         000135e0     ffe5  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   82

    3511 000135f0     ca14          jreq    zzlsjmp
    3512                    
    3513                    
    3514 00013600     07a0          move    @game_time,a0,L
         00013610 00000000! 
    3515 00013630     0b40          cmpi    0400H,a0
         00013640     fbff  
    3516 00013650     c40e          jrlt    zzlsjmp
    3517                    
    3518 00013660     1f66          btst    4,a6                    ;But1 (Shoot/block)
    3519 00013670     cb0c          jrnz    seq_jump2               ;Fake?
    3520 00013680                   SOUND1  fake_snd
    3521 000136e0     c000          jruc    seq_stand               ;Fake?
         000136f0     ff00  
    3522                    
    3523 00013700     f981  fake_snd        .word   0f981H,60,0816eH,0      ;Head fake
    3524                    
    3525                    
    3526 00013740            SUBR   seq_jump2
    3527                    
    3528 00013740           zzlsjmp
    3529 00013740     1820          movk    1,a0                    ;Start jump
    3530 00013750     b00d          move    a0,*a13(plyr_jmpcnt)
         00013760     0400  
    3531                    
    3532 00013770     b702          move    *a8(OXVEL),a2,L         ;>Reduce vel
         00013780     0020  
    3533 00013790     b703          move    *a8(OZVEL),a3,L
         000137a0     0060  
    3534 000137b0     2bc2          sra     2,a2
    3535 000137c0     2bc3          sra     2,a3
    3536                    
    3537 000137d0     b5a0          move    *a13(plyr_seq),a0
         000137e0     0170  
    3538 000137f0     0b40          cmpi    LAYUP_SEQ,a0
         00013800     ffe4  
    3539 00013810     ca25          jrz     zzlsnodesp
    3540                    
    3541 00013820     b5a5          move    *a13(plyr_turbon),a5
         00013830     0250  
    3542                    
    3543 00013840     b5ae          move    *a13(plyr_num),a14
         00013850     0100  
    3544 00013860     05a0          move    @plyrnumonfire,a0
         00013870 00000000- 
    3545 00013890     480e          cmp     a0,a14
    3546 000138a0     cb02          jrnz    zzlsfire1                       ;If on fire, don't do turbo jump!
    3547 000138b0     56a5          clr     a5
    3548 000138c0     c00a          jruc    zzlsfire
    3549 000138d0           zzlsfire1
    3550                    
    3551 000138d0     b7a1          move    *a13(plyr_PDATA_p),a1,L ;If lotsa turbo, still do tall jump!
         000138e0     0130  
    3552 000138f0     b421          move    *a1(ply_turbo),a1
         00013900     0040  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   83

    3553 00013910     0b41          cmpi    24,a1
         00013920     ffe7  
    3554 00013930     c403          jrlt    zzlsfire                        ;Turbo too low?
    3555                    
    3556 00013940     b5a5          move    *a13(plyr_turbon),a5
         00013950     0250  
    3557 00013960     cb02          jrnz    zzlsturb                        ;Br=taller jump!
    3558 00013970           zzlsfire
    3559 00013970     2be2          sra     1,a2
    3560 00013980     2be3          sra     1,a3
    3561 00013990           zzlsturb
    3562 00013990     b5a0          move    *a13(plyr_seq),a0
         000139a0     0170  
    3563 000139b0     17e0          subk    SHOOTDESP3_SEQ,a0
    3564 000139c0     cb0a          jrne    zzlsnodesp
    3565 000139d0     09e2          movi    020000H,a2              ;For this desperation shot, we
         000139e0 00020000  
    3566 00013a00     b5a0          move    *a13(plyr_num),a0       ;need some x velocity
         00013a10     0100  
    3567 00013a20     1440          subk    2,a0
    3568 00013a30     c403          jrlt    zzlsnodesp
    3569 00013a40     09e2          movi    -020000H,a2
         00013a50 fffe0000  
    3570 00013a70           zzlsnodesp
    3571                    
    3572                    
    3573 00013a70     b248          move    a2,*a8(OXVEL),L
         00013a80     0020  
    3574 00013a90     b268          move    a3,*a8(OZVEL),L
         00013aa0     0060  
    3575                    
    3576                    
    3577 00013ab0     b50e          move    *a8(OZPOS),a14          ;894 to 1379 (Z range 486)
         00013ac0     00d0  
    3578 00013ad0     0bee          subi    400,a14
         00013ae0     fe6f  
    3579 00013af0     09c1          movi    -070H,a1
         00013b00     ff90  
    3580 00013b10     5dc1          mpys    a14,a1
    3581 00013b20     0b21          addi    -024000H,a1
         00013b30 fffdc000  
    3582                    
    3583 00013b50     4ca5          move    a5,a5
    3584 00013b60     ca02          jrz     zzlsnotur
    3585 00013b70     0b01          addi    -08000H,a1
         00013b80     8000  
    3586 00013b90           zzlsnotur
    3587 00013b90     b5a0          move    *a13(plyr_seq),a0
         00013ba0     0170  
    3588 00013bb0     0b40          cmpi    LAYUP_SEQ,a0
         00013bc0     ffe4  
    3589 00013bd0     ca02          jreq    zzlsnoly2
    3590 00013be0     0b01          addi    -08000H,a1
         00013bf0     8000  
    3591 00013c00           zzlsnoly2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   84

    3592 00013c00     b5a0          move    *a13(plyr_seqflgs),a0
         00013c10     0180  
    3593 00013c20     1ec0          btst    SHOOT_B,a0
    3594 00013c30     ca09          jrz     zzlsnotsh
    3595 00013c40     4c20          move    a1,a0                   ;-1/16
    3596 00013c50     2b80          sra     4,a0
    3597 00013c60     4401          sub     a0,a1
    3598                    
    3599 00013c70     b5ae          move    *a13(plyr_seq),a14
         00013c80     0170  
    3600 00013c90     0b4e          cmpi    QSHOOT_SEQ,a14
         00013ca0     ffe7  
    3601 00013cb0     cb01          jrnz    zzlsnotsh
    3602 00013cc0     2be1          sra     1,a1
    3603                    
    3604 00013cd0           zzlsnotsh
    3605 00013cd0     b228          move    a1,*a8(OYVEL),L
         00013ce0     0040  
    3606                    
    3607 00013cf0     0960          rets
    3608                    
    3609                    
    3610                    
    3611                    
    3612 00013d00            SUBR   seq_block
    3613                    
    3614 00013d00                   PUSH    a6,a7,a9
    3615                    
    3616 00013d20     1820          movk    1,a0                    ;Start jump
    3617 00013d30     b00d          move    a0,*a13(plyr_jmpcnt)
         00013d40     0400  
    3618                    
    3619                    
    3620 00013d50     07a5          move    @ballobj_p,a5,L         ;0CaHlc where ball is headed
         00013d60 00000010- 
    3621                    
    3622 00013d80     05ae          move    @ballpnum,a14
         00013d90 00000030- 
    3623 00013db0     ce57          jrn     lfwgbinair                      ;Ball in air?
    3624                    
    3625                    
    3626 00013dc0     b5a0          move    *a13(plyr_myhoopx),a0
         00013dd0     02c0  
    3627 00013de0     09c1          movi    CZMID,a1
         00013df0     0492  
    3628                    
    3629 00013e00     24ae          sll     5,a14
    3630 00013e10     0b2e          addi    plyrproc_t,a14
         00013e20 00000000! 
    3631 00013e40     87ce          move    *a14,a14,L
    3632 00013e50     b5c2          move    *a14(plyr_seqflgs),a2
         00013e60     0180  
    3633 00013e70     1fc2          btst    DUNK_B,a2
    3634 00013e80     ca0b          jrz     lfwgnodunk
    3635                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   85

    3636 00013e90     4c06          move    a0,a6                   ;>Jump at rim
    3637 00013ea0     4c27          move    a1,a7
    3638 00013eb0     09e9          movi    -200<<16,a9
         00013ec0 ff380000  
    3639 00013ee0     10c6          addk    6,a6
    3640 00013ef0     0b46          cmpi    WRLDMID,a6
         00013f00     dfff  
    3641 00013f10     c459          jrlt    lfwgcalcintercept
    3642 00013f20     1586          subk    6+6,a6
    3643 00013f30     c057          jruc    lfwgcalcintercept
    3644                    
    3645                    
    3646 00013f40           lfwgnodunk
    3647 00013f40     b5ae          move    *a13(plyr_seq),a14
         00013f50     0170  
    3648 00013f60     162e          subk    BLOCK_SEQ,a14
    3649 00013f70     cb1e          jrne    lfwgnoblk
    3650 00013f80     1014          addk    32,b4                   ;Skip
    3651                    
    3652                    
    3653 00013f90                   PULL    a6,a7,a9
    3654                    
    3655                    
    3656 00013fb0     b5a0          move    *a13(plyr_balldist),a0
         00013fc0     0350  
    3657 00013fd0     0b40          cmpi    0100H,a0                        ;About 10 feet away from ball
         00013fe0     feff  
    3658 00013ff0     c400          jrlt    seq_jump2
         00014000     ff73  
    3659                    
    3660 00014010     1820          movk    1,a0                    ;Start jump
    3661 00014020     b00d          move    a0,*a13(plyr_jmpcnt)
         00014030     0400  
    3662                    
    3663 00014040     5600          clr     a0
    3664 00014050     b208          move    a0,*a8(OXVEL),L         ;Zero vel
         00014060     0020  
    3665 00014070     b208          move    a0,*a8(OZVEL),L
         00014080     0060  
    3666                    
    3667 00014090     b50e          move    *a8(OZPOS),a14          ;894 to 1379 (Z range 486)
         000140a0     00d0  
    3668 000140b0     0bee          subi    400,a14
         000140c0     fe6f  
    3669 000140d0     09c1          movi    -030H,a1                        ;Smaller vertical jump
         000140e0     ffd0  
    3670 000140f0     5dc1          mpys    a14,a1
    3671 00014100     0b21          addi    -024000H,a1
         00014110 fffdc000  
    3672                    
    3673 00014130     b228          move    a1,*a8(OYVEL),L
         00014140     0040  
    3674                    
    3675 00014150     0960          rets
    3676                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   86

    3677 00014160           lfwgnoblk
    3678 00014160     b4a6          move    *a5(OXPOS),a6           ;>In front of plyr between basket
         00014170     0090  
    3679 00014180     b4ae          move    *a5(OXANI+16),a14
         00014190     01f0  
    3680 000141a0     41c6          add     a14,a6
    3681 000141b0     b4a7          move    *a5(OZPOS),a7
         000141c0     00d0  
    3682 000141d0     09e9          movi    -200<<16,a9
         000141e0 ff380000  
    3683                    
    3684 00014200     44c0          sub     a6,a0
    3685 00014210     44e1          sub     a7,a1
    3686 00014220     4c02          move    a0,a2
    3687 00014230     4c23          move    a1,a3
    3688 00014240     0382          abs     a2
    3689 00014250     0383          abs     a3
    3690 00014260     4862          cmp     a3,a2
    3691 00014270     c505          jrge    lfwgscl
    3692 00014280     4c62          move    a3,a2
    3693 00014290     c003          jruc    lfwgscl
    3694                    
    3695 000142a0     2be0  lfwgscllp       sra     1,a0                    ;Scale down
    3696 000142b0     2be1          sra     1,a1
    3697 000142c0     2fe2          srl     1,a2
    3698 000142d0     0b42  lfwgscl cmpi    22,a2
         000142e0     ffe9  
    3699 000142f0     c7fa          jrgt    lfwgscllp
    3700                    
    3701 00014300     4006          add     a0,a6
    3702 00014310     4027          add     a1,a7
    3703                    
    3704 00014320     c018          jruc    lfwgcalcintercept
    3705                    
    3706 00014330           lfwgbinair
    3707 00014330     b6a6          move    *a5(OXVAL),a6,L
         00014340     0080  
    3708 00014350     b6a0          move    *a5(OXANI),a0,L
         00014360     01e0  
    3709 00014370     4006          add     a0,a6
    3710 00014380     b6a7          move    *a5(OZVAL),a7,L
         00014390     00c0  
    3711 000143a0     b6a9          move    *a5(OYVAL),a9,L
         000143b0     00a0  
    3712                    
    3713 000143c0     b6a0          move    *a5(OXVEL),a0,L
         000143d0     0020  
    3714 000143e0     b6a1          move    *a5(OZVEL),a1,L
         000143f0     0060  
    3715 00014400     b6a2          move    *a5(OYVEL),a2,L
         00014410     0040  
    3716 00014420     1bd0          movk    30,b0
    3717 00014430           lfwgnewblp
    3718 00014430     4006          add     a0,a6
    3719 00014440     4027          add     a1,a7
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   87

    3720 00014450     4049          add     a2,a9
    3721 00014460     0b02          addi    GRAVB,a2
         00014470     2600  
    3722 00014480     3cd0          dsj     b0,lfwgnewblp
    3723                    
    3724 00014490     2a06          sra     16,a6
    3725 000144a0     2a07          sra     16,a7
    3726                    
    3727 000144b0           lfwgcalcintercept
    3728                    
    3729 000144b0     9690          move    *b4+,b0,L
    3730 000144c0     4e12          move    b0,a2                   ;*Key img
    3731                    
    3732 000144d0     1bc4          movk    30,a4
    3733                    
    3734 000144e0     5663          clr     a3
    3735 000144f0     56a5          clr     a5
    3736 00014500     07a0          move    @ballprcv_p,a0,L
         00014510 000000e0- 
    3737 00014530     49a0          cmp     a13,a0
    3738 00014540     ca37          jreq    lfwgsetvel                      ;I'm receiving?
    3739                    
    3740                    
    3741 00014550     b441          move    *a2(IANIOFFX),a1
         00014560     0020  
    3742 00014570     b44e          move    *a2(IANI2X),a14
         00014580     0090  
    3743 00014590     45c1          sub     a14,a1
    3744 000145a0     09c0          movi    850,a0
         000145b0     0352  
    3745 000145c0     5c01          mpys    a0,a1
    3746 000145d0     2ac1          sra     10,a1                   ;/1024
    3747                    
    3748 000145e0     b5ae          move    *a13(plyr_newdir),a14
         000145f0     03e0  
    3749 00014600     c502          jrge    lfwgndok
    3750 00014610     b5ae          move    *a13(plyr_dir),a14
         00014620     03d0  
    3751 00014630     110e  lfwgndok        addk    8,a14
    3752 00014640     272e          sll     32-7,a14
    3753 00014650     2c6e          srl     32-7+4,a14
    3754 00014660     148e          subk    4,a14
    3755 00014670     c601          jrle    lfwgnof                 ;No flip?
    3756 00014680     03a1          neg     a1
    3757 00014690           lfwgnof
    3758 00014690     4026          add     a1,a6
    3759                    
    3760                    
    3761 000146a0     4cc3          move    a6,a3
    3762 000146b0     4ce5          move    a7,a5
    3763                    
    3764 000146c0     b501          move    *a8(OXPOS),a1
         000146d0     0090  
    3765 000146e0     b50e          move    *a8(OXANI+16),a14
         000146f0     01f0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   88

    3766 00014700     41c1          add     a14,a1
    3767 00014710     4423          sub     a1,a3                   ;X delta
    3768                    
    3769                    
    3770 00014720     b501          move    *a8(OZPOS),a1
         00014730     00d0  
    3771 00014740     4425          sub     a1,a5                   ;Z delta
    3772                    
    3773 00014750     1bc1          movk    30,a1                   ;Max delta
    3774 00014760     b5ae          move    *a13(plyr_seq),a14
         00014770     0170  
    3775 00014780     168e          subk    REBOUND_SEQ,a14
    3776 00014790     cb01          jrne    lfwgnoreb
    3777 000147a0     1281          addk    20,a1
    3778                    
    3779 000147b0     4823  lfwgnoreb       cmp     a1,a3
    3780 000147c0     c401          jrlt    lfwgx1ok
    3781 000147d0     4c23          move    a1,a3
    3782 000147e0           lfwgx1ok
    3783 000147e0     4825          cmp     a1,a5
    3784 000147f0     c401          jrlt    lfwgz1ok
    3785 00014800     4c25          move    a1,a5
    3786 00014810           lfwgz1ok
    3787 00014810     03a1          neg     a1
    3788 00014820     4823          cmp     a1,a3
    3789 00014830     c701          jrgt    lfwgx2ok
    3790 00014840     4c23          move    a1,a3
    3791 00014850           lfwgx2ok
    3792 00014850     4825          cmp     a1,a5
    3793 00014860     c701          jrgt    lfwgz2ok
    3794 00014870     4c25          move    a1,a5
    3795 00014880           lfwgz2ok
    3796                    
    3797 00014880     2603          sll     16,a3
    3798 00014890     2605          sll     16,a5
    3799 000148a0     5883          divs    a4,a3
    3800 000148b0     5885          divs    a4,a5
    3801 000148c0           lfwgsetvel
    3802 000148c0     b268          move    a3,*a8(OXVEL),L
         000148d0     0020  
    3803 000148e0     b2a8          move    a5,*a8(OZVEL),L
         000148f0     0060  
    3804                    
    3805 00014900     09c1          movi    -GRAV/2,a1
         00014910     ed00  
    3806 00014920     5c81          mpys    a4,a1
    3807 00014930     b703          move    *a8(OYVAL),a3,L         ;Adjust for hgt difference
         00014940     00a0  
    3808 00014950     4523          sub     a9,a3                   ;- if above
    3809 00014960     5883          divs    a4,a3
    3810 00014970     4461          sub     a3,a1
    3811 00014980     0b61          cmpi    -03c000H,a1
         00014990 0003bfff  
    3812 000149b0     c403          jrlt    lfwgminok
    3813 000149c0     09e1          movi    -03c000H,a1             ;Min
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   89

         000149d0 fffc4000  
    3814 000149f0           lfwgminok
    3815                    
    3816 000149f0     b5ae          move    *a13(plyr_num),a14
         00014a00     0100  
    3817 00014a10     05a6          move    @plyrnumonfire,a6
         00014a20 00000000- 
    3818 00014a40     49c6          cmp     a14,a6
    3819 00014a50     cb08          jrnz    lfwgnofire
    3820                    
    3821 00014a60     0b61          cmpi    -050200H,a1             ;4a200
         00014a70 000501ff  
    3822 00014a90     c70b          jrgt    lfwgmaxok
    3823 00014aa0     09e1          movi    -050200H,a1
         00014ab0 fffafe00  
    3824 00014ad0     c007          jruc    lfwgmaxok
    3825 00014ae0           lfwgnofire
    3826 00014ae0     0b61          cmpi    -04b200H,a1             ;4a200
         00014af0 0004b1ff  
    3827 00014b10     c703          jrgt    lfwgmaxok
    3828 00014b20     09e1          movi    -04b200H,a1
         00014b30 fffb4e00  
    3829 00014b50           lfwgmaxok
    3830 00014b50     b228          move    a1,*a8(OYVEL),L
         00014b60     0040  
    3831                    
    3832                    
    3833 00014b70           lfwgx   PULL    a6,a7,a9
    3834 00014b90     0960          rets
    3835                    
    3836                    
    3837 00014ba0     049e  lfwgz_t .word   CZMID+12,CZMID+8,CZMID,CZMID-8
    3838 00014be0     0486          .word   CZMID-12,CZMID-8,CZMID,CZMID+8
    3839 00014c20     049e          .word   CZMID+12
    3840                    
    3841                    
    3842                    
    3843 00014c30            SUBR   seq_rebounda
    3844                    
    3845 00014c30     05ae          move    @ballpnum,a14
         00014c40 00000030- 
    3846 00014c60     c500          jrge    seq_stand               ;Someone grabbed ball?
         00014c70     fda8  
    3847                    
    3848                    
    3849 00014c80                   PUSH    a6,a7,a9
    3850                    
    3851                    
    3852 00014ca0     1820          movk    1,a0                    ;Start jump
    3853 00014cb0     b00d          move    a0,*a13(plyr_jmpcnt)
         00014cc0     0400  
    3854                    
    3855                    
    3856 00014cd0     07a5          move    @ballobj_p,a5,L         ;0CaHlc where ball is headed
         00014ce0 00000010- 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   90

    3857                    
    3858 00014d00     b6a6          move    *a5(OXVAL),a6,L
         00014d10     0080  
    3859 00014d20     b6a0          move    *a5(OXANI),a0,L
         00014d30     01e0  
    3860 00014d40     4006          add     a0,a6
    3861 00014d50     b6a7          move    *a5(OZVAL),a7,L
         00014d60     00c0  
    3862 00014d70     b6a9          move    *a5(OYVAL),a9,L
         00014d80     00a0  
    3863                    
    3864 00014d90     b6a0          move    *a5(OXVEL),a0,L
         00014da0     0020  
    3865 00014db0     b6a1          move    *a5(OZVEL),a1,L
         00014dc0     0060  
    3866 00014dd0     b6a2          move    *a5(OYVEL),a2,L
         00014de0     0040  
    3867 00014df0     1a90          movk    20,b0
    3868 00014e00     09ce          movi    GRAVB,a14
         00014e10     2600  
    3869 00014e20           fdtrnewblp
    3870 00014e20     4006          add     a0,a6
    3871 00014e30     4027          add     a1,a7
    3872 00014e40     4049          add     a2,a9
    3873 00014e50     41c2          add     a14,a2
    3874 00014e60     3cb0          dsj     b0,fdtrnewblp
    3875                    
    3876 00014e70     2a06          sra     16,a6
    3877 00014e80     2a07          sra     16,a7
    3878                    
    3879                    
    3880 00014e90     9690          move    *b4+,b0,L
    3881 00014ea0     4e12          move    b0,a2                   ;*Key img
    3882                    
    3883 00014eb0     1a84          movk    20,a4
    3884                    
    3885                    
    3886 00014ec0     b441          move    *a2(IANIOFFX),a1
         00014ed0     0020  
    3887 00014ee0     b44e          move    *a2(IANI2X),a14
         00014ef0     0090  
    3888 00014f00     45c1          sub     a14,a1
    3889 00014f10     09c0          movi    850,a0
         00014f20     0352  
    3890 00014f30     5c01          mpys    a0,a1
    3891 00014f40     2ac1          sra     10,a1                   ;/1024
    3892                    
    3893 00014f50     b5ae          move    *a13(plyr_newdir),a14
         00014f60     03e0  
    3894 00014f70     c502          jrge    fdtrndok
    3895 00014f80     b5ae          move    *a13(plyr_dir),a14
         00014f90     03d0  
    3896 00014fa0     110e  fdtrndok        addk    8,a14
    3897 00014fb0     272e          sll     32-7,a14
    3898 00014fc0     2c6e          srl     32-7+4,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   91

    3899 00014fd0     148e          subk    4,a14
    3900 00014fe0     c601          jrle    fdtrnof                 ;No flip?
    3901 00014ff0     03a1          neg     a1
    3902 00015000           fdtrnof
    3903 00015000     4026          add     a1,a6
    3904                    
    3905                    
    3906 00015010     4cc3          move    a6,a3
    3907 00015020     4ce5          move    a7,a5
    3908                    
    3909 00015030     b501          move    *a8(OXPOS),a1
         00015040     0090  
    3910 00015050     b50e          move    *a8(OXANI+16),a14
         00015060     01f0  
    3911 00015070     41c1          add     a14,a1
    3912 00015080     4423          sub     a1,a3                   ;X delta
    3913                    
    3914                    
    3915 00015090     b501          move    *a8(OZPOS),a1
         000150a0     00d0  
    3916 000150b0     4425          sub     a1,a5                   ;Z delta
    3917                    
    3918 000150c0     09c1          movi    50,a1                   ;Max delta (was 30)
         000150d0     0032  
    3919 000150e0     4823          cmp     a1,a3
    3920 000150f0     c401          jrlt    fdtrx1ok
    3921 00015100     4c23          move    a1,a3
    3922 00015110           fdtrx1ok
    3923 00015110     4825          cmp     a1,a5
    3924 00015120     c401          jrlt    fdtrz1ok
    3925 00015130     4c25          move    a1,a5
    3926 00015140           fdtrz1ok
    3927 00015140     03a1          neg     a1
    3928 00015150     4823          cmp     a1,a3
    3929 00015160     c701          jrgt    fdtrx2ok
    3930 00015170     4c23          move    a1,a3
    3931 00015180           fdtrx2ok
    3932 00015180     4825          cmp     a1,a5
    3933 00015190     c701          jrgt    fdtrz2ok
    3934 000151a0     4c25          move    a1,a5
    3935 000151b0           fdtrz2ok
    3936                    
    3937 000151b0     2603          sll     16,a3
    3938 000151c0     2605          sll     16,a5
    3939 000151d0     5883          divs    a4,a3
    3940 000151e0     5885          divs    a4,a5
    3941 000151f0           fdtrsetvel
    3942 000151f0     b268          move    a3,*a8(OXVEL),L
         00015200     0020  
    3943 00015210     b2a8          move    a5,*a8(OZVEL),L
         00015220     0060  
    3944                    
    3945 00015230     09c1          movi    -GRAV/2,a1
         00015240     ed00  
    3946 00015250     5c81          mpys    a4,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   92

    3947 00015260     b703          move    *a8(OYVAL),a3,L         ;Adjust for hgt difference
         00015270     00a0  
    3948 00015280     4523          sub     a9,a3                   ;- if above
    3949 00015290     5883          divs    a4,a3
    3950 000152a0     4461          sub     a3,a1
    3951 000152b0     0b61          cmpi    -01c000H,a1
         000152c0 0001bfff  
    3952 000152e0     c403          jrlt    fdtrminok
    3953 000152f0     09e1          movi    -01c000H,a1             ;Min
         00015300 fffe4000  
    3954 00015320           fdtrminok
    3955                    
    3956                    
    3957 00015320     b228  fdtrmaxok       move    a1,*a8(OYVEL),L
         00015330     0040  
    3958                    
    3959                    
    3960 00015340                   PULL    a6,a7,a9
    3961 00015360     0960          rets
    3962                    
    3963                    
    3964                    
    3965 00015370            SUBR   seq_strtdunk
    3966                    
    3967 00015370     9690          move    *b4+,b0,L
    3968 00015380     4e12          move    b0,a2                   ;*Slam img
    3969                    
    3970 00015390     9490          move    *b4+,b0
    3971 000153a0     4e14          move    b0,a4                   ;msiaticks till we reach rim
    3972                    
    3973                    
    3974 000153b0     1820          movk    1,a0                    ;Start jump
    3975 000153c0     b00d          move    a0,*a13(plyr_jmpcnt)
         000153d0     0400  
    3976                    
    3977                    
    3978 000153e0     b5a3          move    *a13(plyr_ohoopx),a3
         000153f0     02d0  
    3979                    
    3980 00015400     b441          move    *a2(IANIOFFX),a1
         00015410     0020  
    3981 00015420     b44e          move    *a2(IANI2X),a14
         00015430     0090  
    3982 00015440     45c1          sub     a14,a1
    3983 00015450     09c0          movi    850,a0
         00015460     0352  
    3984 00015470     5c01          mpys    a0,a1
    3985 00015480     2ac1          sra     10,a1                   ;/1024
    3986                    
    3987                    
    3988 00015490     b50e          move    *a8(OCTRL),a14
         000154a0     00f0  
    3989 000154b0     1f6e          btst    B_FLIPH,a14
    3990 000154c0     ca01          jrz     msianof
    3991 000154d0     03a1          neg     a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   93

    3992 000154e0           msianof
    3993 000154e0     4023          add     a1,a3
    3994                    
    3995                    
    3996 000154f0     b501          move    *a8(OXPOS),a1
         00015500     0090  
    3997 00015510     b50e          move    *a8(OXANI+16),a14
         00015520     01f0  
    3998 00015530     41c1          add     a14,a1
    3999 00015540     4423          sub     a1,a3                   ;X delta
    4000                    
    4001 00015550     b5ae          move    *a13(plyr_dir),a14
         00015560     03d0  
    4002 00015570     110e          addk    8,a14                   ;Round up
    4003 00015580     2f8e          srl     4,a14                   ;Lose frac
    4004 00015590     248e          sll     4,a14                   ;*16
    4005 000155a0     0b2e          addi    msiaz_t,a14
         000155b0 00015b20' 
    4006 000155d0     85c5          move    *a14,a5
    4007 000155e0     b501          move    *a8(OZPOS),a1
         000155f0     00d0  
    4008 00015600     4425          sub     a1,a5                   ;Y delta
    4009                    
    4010 00015610     2603          sll     16,a3
    4011 00015620     2605          sll     16,a5
    4012 00015630     5883          divs    a4,a3
    4013 00015640     5885          divs    a4,a5
    4014                    
    4015 00015650     b5a0          move    *a13(plyr_seqflgs),a0
         00015660     0180  
    4016 00015670     1e00          btst    LAYUP_B,a0
    4017 00015680     ca0c          jrz     msianolay
    4018                    
    4019 00015690     18a0          movk    LAY_UP,a0
    4020 000156a0     0580          move    a0,@shot_type
         000156b0 00000000! 
    4021                    
    4022 000156d0     186e          movk    3,a14
    4023 000156e0     4c67          move    a3,a7
    4024 000156f0     59c7          divs    a14,a7
    4025 00015700     44e3          sub     a7,a3
    4026                    
    4027 00015710     4ca7          move    a5,a7
    4028 00015720     59c7          divs    a14,a7
    4029 00015730     44e5          sub     a7,a5
    4030                    
    4031 00015740     c006          jruc    msialayin
    4032 00015750           msianolay
    4033 00015750     1880          movk    PS_DUNKS_TRY,a0         ;>Inc dunk stats
    4034 00015760     b5a1          move    *a13(plyr_num),a1
         00015770     0100  
    4035 00015780     0d5f          calla   inc_player_stat
         00015790 00000000! 
    4036                    
    4037 000157b0           msialayin
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   94

    4038 000157b0     b268          move    a3,*a8(OXVEL),L
         000157c0     0020  
    4039 000157d0     b2a8          move    a5,*a8(OZVEL),L
         000157e0     0060  
    4040                    
    4041 000157f0     09c1          movi    -GRAV/2,a1
         00015800     ed00  
    4042 00015810     5c81          mpys    a4,a1
    4043 00015820     b703          move    *a8(OYVAL),a3,L         ;Adjust for hgt difference
         00015830     00a0  
    4044 00015840     0d03          subi    (HOOPY+12)<<16,a3       ;- if above
         00015850 006bffff  
    4045 00015870     5883          divs    a4,a3
    4046 00015880     4461          sub     a3,a1
    4047 00015890     b228          move    a1,*a8(OYVEL),L
         000158a0     0040  
    4048                    
    4049 000158b0     5600          clr     a0
    4050 000158c0     0580          move    a0,@plyrcharge
         000158d0 00000000! 
    4051 000158f0     0580          move    a0,@slamming
         00015900 00000190- 
    4052                    
    4053 00015920     09c0          movi    PS_2PTS_TRY,a0
         00015930     0000  
    4054 00015940     b5a1          move    *a13(plyr_num),a1
         00015950     0100  
    4055 00015960     0d5f          calla   inc_player_stat
         00015970 00000000! 
    4056                    
    4057 00015990     0b44          cmpi    62,a4                   ;60
         000159a0     ffc1  
    4058 000159b0     c415          jrlt    msianofl
    4059                    
    4060 000159c0                   PUSH    a10
    4061 000159d0     574a          clr     a10
    4062 000159e0     0b44          cmpi    48h,a4
         000159f0     ffb7  
    4063 00015a00     c406          jrlt    msianosnd
    4064 00015a10     09c0          movi    20,a0                   ;2% do bogus snd
         00015a20     0014  
    4065 00015a30     0d3f          callr   RNDPER
         00015a40     ea5b! 
    4066 00015a50     c201          jrls    msianosnd       
    4067 00015a60     182a          movk    1,a10
    4068 00015a70           msianosnd       
    4069 00015a70     4ce2          move    a7,a2
    4070 00015a80                   CREATE0 plyr_camflash
    4071 00015af0     4c47          move    a2,a7
    4072 00015b00                   PULL    a10
    4073                    
    4074 00015b10           msianofl
    4075 00015b10     0960          rets
    4076                    
    4077                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   95

    4078 00015b20     049e  msiaz_t .word   CZMID+12,CZMID+8,CZMID,CZMID-8
    4079 00015b60     0486          .word   CZMID-12,CZMID-8,CZMID,CZMID+8
    4080 00015ba0     049e          .word   CZMID+12
    4081                    
    4082                    
    4083                    
    4084                            .ref    gndpos_t
    4085                    
    4086 00015bb0            SUBR   plyr_camflash
    4087                    
    4088 00015bb0     18e0          movk    7,a0
    4089 00015bc0     0d3f          callr   rnd
         00015bd0     fc95  
    4090 00015be0     1220          addk    17,a0
    4091 00015bf0     4c08          move    a0,a8
    4092 00015c00           kstjlp  CREATE0 plyr_cflsh
    4093 00015c70     4d4a          move    a10,a10
    4094 00015c80     ca07          jrz     kstjnosnd
    4095 00015c90                   CREATE0 plyr_cflsh_snd
    4096 00015d00           kstjnosnd
    4097 00015d00     1880          movk    4,a0                    ;7
    4098 00015d10     0d3f          callr   rnd
         00015d20     fc80  
    4099 00015d30     1040          addk    2,a0
    4100 00015d40     0d5f          calla   PRCSLP
         00015d50 00000000! 
    4101 00015d70     3f08          dsj     a8,kstjlp
    4102 00015d80                   DIE
    4103                    
    4104 00015db0           plyr_cflsh_snd
    4105 00015db0     1860          movk    3,a0
    4106 00015dc0     0d3f          callr   rndrng0
         00015dd0     fc83  
    4107 00015de0     24a0          sll     5,a0
    4108 00015df0     0b20          addi    flsh_t,a0
         00015e00 00015e90' 
    4109 00015e20     8600          move    *a0,a0,L
    4110 00015e30     0d5f  kstjs1  calla   snd_play1
         00015e40 00000000! 
    4111 00015e60                   DIE
    4112                    
    4113 00015e90 00015f10' flsh_t  .long   flsh1_snd,flsh1_snd,flsh2_snd,flsh2_snd
    4114                    
    4115 00015f10     fabe  flsh1_snd       .word   0fabeH,5,080a8H,0
    4116 00015f50     fbbe  flsh2_snd       .word   0fbbeH,8,080a9H,0
    4117                    
    4118 00015f90           plyr_cflsh
    4119 00015f90     09c0          movi    110,a0
         00015fa0     006e  
    4120 00015fb0     0d3f          callr   rndrng0
         00015fc0     fc64  
    4121 00015fd0     0be0          subi    50,a0
         00015fe0     ffcd  
    4122 00015ff0     4c02          move    a0,a2
    4123                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   96

    4124 00016000     09c0          movi    399,a0
         00016010     018f  
    4125 00016020     0d3f          callr   rndrng0
         00016030     fc5d  
    4126 00016040     05ae          move    @WORLDTLX+16,a14
         00016050 00000010! 
    4127 00016070     0bee          subi    02000H-200,a14
         00016080     e0c7  
    4128 00016090     41c0          add     a14,a0
    4129 000160a0     2600          sll     16,a0                   ;X
    4130                    
    4131 000160b0     4c41          move    a2,a1
    4132 000160c0     2601          sll     16,a1                   ;Y
    4133                    
    4134 000160d0     09e2          movi    flash1,a2
         000160e0 00000000! 
    4135 00016100     09c3          movi    290,a3
         00016110     0122  
    4136 00016120     09e4          movi    DMAWNZ|M_3DQ|M_NOCOLL|M_NOSCALE,a4
         00016130 00009842  
    4137 00016150     09c5          movi    CLSDEAD,a5
         00016160     2000  
    4138 00016170     56c6          clr     a6
    4139 00016180     56e7          clr     a7
    4140 00016190     0d5f          calla   BEGINOBJ2
         000161a0 00000000! 
    4141 000161c0     09e1          movi    gndpos_t,a1
         000161d0 00000000! 
    4142 000161f0     b228          move    a1,*a8(ODATA_p),L
         00016200     01c0  
    4143                    
    4144 00016210     09e9          movi    kstjf_l,a9
         00016220 00016320' 
    4145 00016240     1820          movk    1,a0
    4146 00016250     0d3f          callr   rnd
         00016260     fc2c  
    4147 00016270     cb03          jrnz    kstj1
    4148 00016280     09e9          movi    kstjf2_l,a9
         00016290 00016460' 
    4149 000162b0           kstj1
    4150 000162b0                   SLEEPK  2
    4151 000162f0     c080          jauc    FRQDELDIE
         00016300 00000000! 
    4152                    
    4153                    
    4154 00016320           kstjf_l LW      flash2,2
    4155 00016350                   LW      flash3,2
    4156 00016380                   LW      flash3a,2
    4157 000163b0                   LW      flash3,2
    4158 000163e0                   LW      flash2,2
    4159 00016410                   LWL0    flash1,2
    4160                    
    4161 00016460           kstjf2_l        LW      flash4,2
    4162 00016490                   LW      flash5,1
    4163 000164c0                   LW      flash6,1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   97

    4164 000164f0                   LW      flash5,1
    4165 00016520                   LWL0    flash4,2
    4166                    
    4167                    
    4168                    
    4169 00016570            SUBR   seq_slamball
    4170                    
    4171                    
    4172 00016570     05a0          move    @ballpnum,a0
         00016580 00000030- 
    4173 000165a0     b5a1          move    *a13(plyr_num),a1
         000165b0     0100  
    4174 000165c0     4801          cmp     a0,a1
    4175 000165d0     cb00          jrne    xqztx                   ;I don't have it?
         000165e0     011b  
    4176                    
    4177 000165f0     1820          movk    1,a0
    4178 00016600     0580          move    a0,@slamming
         00016610 00000190- 
    4179                    
    4180 00016630     07a5          move    @ballobj_p,a5,L
         00016640 00000010- 
    4181                    
    4182 00016660     b6a1          move    *a5(OIMG),a1,L          ;0CHonvert ball from player relative
         00016670     0170  
    4183 00016680     b421          move    *a1(IANIOFFX),a1
         00016690     0020  
    4184 000166a0     2601          sll     16,a1
    4185 000166b0     b225          move    a1,*a5(OXANI),L
         000166c0     01e0  
    4186                    
    4187                    
    4188                    
    4189 000166d0     b5a7          move    *a13(plyr_ohoopx),a7    ;>Set ball over rim
         000166e0     02d0  
    4190 000166f0     14c7          subk    6,a7
    4191                    
    4192                        
    4193 00016700     09c0          movi    35,a0
         00016710     0023  
    4194 00016720     0d5f          calla   RNDPER
         00016730 00000000! 
    4195 00016750     c207          jrls    xqztnoadjst
    4196                    
    4197 00016760           xqztyes
    4198 00016760     b5a0          move    *a13(plyr_num),a0
         00016770     0100  
    4199 00016780     0b40          cmpi    2,a0
         00016790     fffd  
    4200 000167a0     c401          jrlt    xqztnofix
    4201 000167b0     1127          addk    9,a7
    4202 000167c0           xqztnofix
    4203 000167c0     14c7          subk    6,a7
    4204                    
    4205 000167d0           xqztnoadjst
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   98

    4206                    
    4207 000167d0     b0e5          move    a7,*a5(OXPOS)
         000167e0     0090  
    4208                    
    4209 000167f0     09ce          movi    HOOPY-8,a14
         00016800     ff80  
    4210 00016810     b1c5          move    a14,*a5(OYPOS)
         00016820     00b0  
    4211 00016830     09ce          movi    CZMID,a14
         00016840     0492  
    4212 00016850     b1c5          move    a14,*a5(OZPOS)
         00016860     00d0  
    4213                    
    4214                    
    4215 00016870     09c0          movi    25,a0
         00016880     0019  
    4216 00016890     0d5f          calla   RNDPER
         000168a0 00000000! 
    4217 000168c0     c233          jrls    xqztdunknorm
    4218                                                            ;>Missed dunk
    4219 000168d0     b5a0          move    *a13(plyr_ptsdown),a0
         000168e0     0440  
    4220 000168f0     1440          subk    2,a0
    4221 00016900     c52f          jrge    xqztdunknorm            ;I'm loosing by 5?
    4222                    
    4223                    
    4224 00016910     05ae          move    @plyrnumonfire,a14
         00016920 00000000- 
    4225                    
    4226                    
    4227 00016940     cf2b          jrnn    xqztdunknorm
    4228                    
    4229 00016950     09e0          movi    missd1_snd,a0
         00016960 000002c0' 
    4230 00016980     0d5f          calla   snd_play1
         00016990 00000000! 
    4231 000169b0     09e0          movi    boo1_snd,a0
         000169c0 000004c0' 
    4232 000169e0     0d5f          calla   snd_play1
         000169f0 00000000! 
    4233 00016a10     09e0          movi    cheer1_snd,a0
         00016a20 00000400' 
    4234 00016a40     0d5f          calla   snd_play1
         00016a50 00000000! 
    4235                    
    4236 00016a70     09e0          movi    03ffffH,a0
         00016a80 0003ffff  
    4237 00016aa0     0d3f          callr   rnd
         00016ab0     fba7  
    4238 00016ac0     0d00          subi    020000H,a0
         00016ad0 fffdffff  
    4239 00016af0     4c02          move    a0,a2
    4240 00016b00     09e0          movi    01ffffH,a0
         00016b10 0001ffff  
    4241 00016b30     0d3f          callr   rnd
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   99

         00016b40     fb9e  
    4242 00016b50     0b00          addi    04000H,a0
         00016b60     4000  
    4243 00016b70     b5a1          move    *a13(plyr_num),a1
         00016b80     0100  
    4244 00016b90     1441          subk    2,a1
    4245 00016ba0     c501          jrge    xqztt2
    4246 00016bb0     03a0          neg     a0
    4247 00016bc0     09e3  xqztt2  movi    -GRAVB*40,a3            ;Up
         00016bd0 fffa1000  
    4248 00016bf0     c044          jruc    xqztsetxyz
    4249                    
    4250 00016c00           xqztdunknorm
    4251                    
    4252 00016c00     b5a0          move    *a13(plyr_o1dist),a0
         00016c10     0310  
    4253 00016c20     0b40          cmpi    35,a0
         00016c30     ffdc  
    4254 00016c40     c405          jrlt    xqztdlvr
    4255 00016c50     b5a0          move    *a13(plyr_o2dist),a0
         00016c60     0330  
    4256 00016c70     0b40          cmpi    35,a0
         00016c80     ffdc  
    4257 00016c90     c72e          jrgt    xqztnodlvr
    4258 00016ca0           xqztdlvr
    4259 00016ca0     b5a0          move    *a13(plyr_num),a0
         00016cb0     0100  
    4260 00016cc0     0b40          cmpi    2,a0
         00016cd0     fffd  
    4261 00016ce0     c40f          jrlt    xqztcktm2
    4262                    
    4263                    
    4264 00016cf0     07a0          move    @plyrproc_t,a0,L
         00016d00 00000000! 
    4265 00016d20     b401          move    *a0(plyr_stagcnt),a1
         00016d30     0430  
    4266 00016d40     07a2          move    @plyrproc_t+32,a2,L
         00016d50 00000020! 
    4267 00016d70     b442          move    *a2(plyr_stagcnt),a2
         00016d80     0430  
    4268 00016d90     4041          add     a2,a1
    4269 00016da0     0b41          cmpi    13,a1
         00016db0     fff2  
    4270 00016dc0     c41b          jrlt    xqztnodlvr
    4271 00016dd0     c00e          jruc    xqztdlv
    4272 00016de0           xqztcktm2
    4273 00016de0     07a0          move    @plyrproc_t+64,a0,L
         00016df0 00000040! 
    4274 00016e10     b401          move    *a0(plyr_stagcnt),a1
         00016e20     0430  
    4275 00016e30     07a2          move    @plyrproc_t+96,a2,L
         00016e40 00000060! 
    4276 00016e60     b442          move    *a2(plyr_stagcnt),a2
         00016e70     0430  
    4277 00016e80     4041          add     a2,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  100

    4278 00016e90     0b41          cmpi    13,a1
         00016ea0     fff2  
    4279 00016eb0     c40c          jrlt    xqztnodlvr
    4280 00016ec0           xqztdlv
    4281 00016ec0     09c0          movi    350,a0
         00016ed0     015e  
    4282 00016ee0     0d5f          calla   RNDPER
         00016ef0 00000000! 
    4283 00016f10     c306          jrhi    xqztnodlvr
    4284 00016f20     09e0          movi    facial_snd,a0
         00016f30 00000000' 
    4285 00016f50     0d5f          calla   snd_play1ovrp
         00016f60 00000000! 
    4286 00016f80           xqztnodlvr
    4287                    
    4288 00016f80                   CREATE0 xqztdunk_cheer
    4289 00016ff0     5600          clr     a0
    4290 00017000     5642          clr     a2
    4291 00017010     09e3          movi    GRAVB*4,a3
         00017020 00009800  
    4292 00017040     b205  xqztsetxyz      move    a0,*a5(OXVEL),L
         00017050     0020  
    4293 00017060     b245          move    a2,*a5(OZVEL),L
         00017070     0060  
    4294 00017080     b265          move    a3,*a5(OYVEL),L
         00017090     0040  
    4295                    
    4296                    
    4297 000170a0     b701          move    *a8(OXVEL),a1,L
         000170b0     0020  
    4298 000170c0     b702          move    *a8(OZVEL),a2,L
         000170d0     0060  
    4299                    
    4300 000170e0     9490          move    *b4+,b0                 ;Get # ticks we hang
    4301 000170f0     4e10          move    b0,a0
    4302 00017100     b00d          move    a0,*a13(plyr_hangcnt)
         00017110     0410  
    4303 00017120     1440          subk    2,a0
    4304 00017130     c442          jrlt    xqztnohang
    4305 00017140     b5a1          move    *a13(plyr_seq),a1
         00017150     0170  
    4306 00017160     0b41          cmpi    DUNKX3_SEQ,a1
         00017170     ff80  
    4307 00017180     cb11          jrnz    xqztdck1
    4308 00017190     b501          move    *a8(OYPOS),a1
         000171a0     00b0  
    4309 000171b0     10a1          addk    5,a1
    4310 000171c0     b028          move    a1,*a8(OYPOS)
         000171d0     00b0  
    4311 000171e0     b501          move    *a8(OXPOS),a1
         000171f0     0090  
    4312 00017200     b702          move    *a8(OXVEL),a2,L
         00017210     0020  
    4313 00017220     cf02          jrnn    xqztfix1
    4314 00017230     0be1          subi    02eH,a1                 ;2c
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  101

         00017240     ffd1  
    4315 00017250     0b01  xqztfix1        addi    016H,a1
         00017260     0016  
    4316 00017270     b028          move    a1,*a8(OXPOS)
         00017280     0090  
    4317 00017290     c028          jruc    xqztfix2
    4318 000172a0           xqztdck1
    4319 000172a0     0b41          cmpi    DUNKX_SEQ,a1
         000172b0     ff82  
    4320 000172c0     cb11          jrnz    xqztdck2
    4321 000172d0     b501          move    *a8(OYPOS),a1
         000172e0     00b0  
    4322 000172f0     1121          addk    9,a1
    4323 00017300     b028          move    a1,*a8(OYPOS)
         00017310     00b0  
    4324 00017320     b501          move    *a8(OXPOS),a1
         00017330     0090  
    4325 00017340     b702          move    *a8(OXVEL),a2,L
         00017350     0020  
    4326 00017360     cf02          jrnn    xqztfix1a
    4327 00017370     0be1          subi    02eH,a1                 ;2c
         00017380     ffd1  
    4328 00017390     0b01  xqztfix1a       addi    018H,a1
         000173a0     0018  
    4329 000173b0     b028          move    a1,*a8(OXPOS)
         000173c0     0090  
    4330 000173d0     c014          jruc    xqztfix2
    4331 000173e0           xqztdck2
    4332 000173e0     0b41          cmpi    DUNKX2_SEQ,a1
         000173f0     ff81  
    4333 00017400     cb11          jrnz    xqztdck3
    4334 00017410     b501          move    *a8(OYPOS),a1
         00017420     00b0  
    4335 00017430     1441          subk    2,a1
    4336 00017440     b028          move    a1,*a8(OYPOS)
         00017450     00b0  
    4337 00017460     b501          move    *a8(OXPOS),a1
         00017470     0090  
    4338 00017480     b702          move    *a8(OXVEL),a2,L
         00017490     0020  
    4339 000174a0     cf02          jrnn    xqztfix1b
    4340 000174b0     0be1          subi    02eH,a1                 ;2c
         000174c0     ffd1  
    4341 000174d0     0b01  xqztfix1b       addi    016H,a1
         000174e0     0016  
    4342 000174f0     b028          move    a1,*a8(OXPOS)
         00017500     0090  
    4343 00017510     0300          jruc    xqztfix2
    4344 00017520           xqztdck3
    4345                    
    4346 00017520           xqztfix2
    4347 00017520     5621          clr     a1                      ;0 velocity
    4348 00017530     5642          clr     a2
    4349 00017540     b228          move    a1,*a8(OYVEL),L
         00017550     0040  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  102

    4350 00017560     2be1  xqztnohang      sra     1,a1
    4351 00017570     2be2          sra     1,a2
    4352 00017580     b228          move    a1,*a8(OXVEL),L
         00017590     0020  
    4353 000175a0     b248          move    a2,*a8(OZVEL),L
         000175b0     0060  
    4354                    
    4355 000175c0     b5a1          move    *a13(plyr_num),a1
         000175d0     0100  
    4356 000175e0     0581          move    a1,@ballpnumshot
         000175f0 00000050- 
    4357 00017610     0581          move    a1,@ballpnumlast
         00017620 00000040- 
    4358 00017640     09c0          movi    -1,a0
         00017650     ffff  
    4359 00017660     0580          move    a0,@ballpnum            ;No owner
         00017670 00000030- 
    4360 00017690     5600          clr     a0
    4361 000176a0     0580          move    a0,@ballscorezhit
         000176b0 000000a0- 
    4362 000176d0     0580          move    a0,@ballrimhitcnt
         000176e0 000000b0- 
    4363 00017700     0580          move    a0,@ballbbhitcnt
         00017710 000000c0- 
    4364 00017730     b00d          move    a0,*a13(plyr_ownball)
         00017740     0260  
    4365 00017750     09c0          movi    TSEC+20,a0
         00017760     0049  
    4366 00017770     b00d          move    a0,*a13(plyr_shtdly)
         00017780     02b0  
    4367                    
    4368 00017790     0960          rets
    4369                    
    4370 000177a0     1214  xqztx   addk    16,b4
    4371 000177b0     0960          rets
    4372                    
    4373 000177c0           xqztdunk_cheer
    4374 000177c0                   SLEEPK  15
    4375 00017800     09e0          movi    cheer1_snd,a0
         00017810 00000400' 
    4376 00017830     0d5f          calla   snd_play1
         00017840 00000000! 
    4377 00017860     09e0          movi    cheer2_snd,a0
         00017870 00000440' 
    4378 00017890     0d5f          calla   snd_play1
         000178a0 00000000! 
    4379                     
    4380 000178c0                   SLEEP   5*60
    4381                    
    4382 00017910     5600          clr     a0
    4383 00017920     0580          move    a0,@slamming
         00017930 00000190- 
    4384                    
    4385 00017950                   DIE
    4386                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  103

    4387                    
    4388                    
    4389                    
    4390 00017980            SUBR   seq_push
    4391                    
    4392                    
    4393 00017980                   PUSH    a11
    4394                    
    4395 00017990     b5a3          move    *a13(plyr_dir),a3
         000179a0     03d0  
    4396                    
    4397 000179b0     b5ae          move    *a13(plyr_o1dist),a14
         000179c0     0310  
    4398 000179d0     0bee          subi    50,a14
         000179e0     ffcd  
    4399 000179f0     c70d          jrgt    cjrio1far                       ;Too far?
    4400 00017a00     56a5          clr     a5                      ;O1
    4401 00017a10     b5a2          move    *a13(plyr_o1dir),a2
         00017a20     0300  
    4402 00017a30     4462          sub     a3,a2
    4403 00017a40     0382          abs     a2
    4404 00017a50     0b42          cmpi    040H,a2
         00017a60     ffbf  
    4405 00017a70     c603          jrle    cjrio1dsml
    4406 00017a80     0be2          subi    080H,a2
         00017a90     ff7f  
    4407 00017aa0     0382          abs     a2
    4408 00017ab0     1402  cjrio1dsml      subk    32,a2                   ;16
    4409 00017ac0     c430          jrlt    cjripusho                       ;In front of me?
    4410                    
    4411 00017ad0           cjrio1far
    4412                    
    4413 00017ad0     b5ae          move    *a13(plyr_o2dist),a14
         00017ae0     0330  
    4414 00017af0     0bee          subi    50,a14
         00017b00     ffcd  
    4415 00017b10     c70d          jrgt    cjrio2far                       ;Too far?
    4416 00017b20     1805          movk    32,a5                   ;O2
    4417 00017b30     b5a2          move    *a13(plyr_o2dir),a2
         00017b40     0320  
    4418 00017b50     4462          sub     a3,a2
    4419 00017b60     0382          abs     a2
    4420 00017b70     0b42          cmpi    040H,a2
         00017b80     ffbf  
    4421 00017b90     c603          jrle    cjrio2dsml
    4422 00017ba0     0be2          subi    080H,a2
         00017bb0     ff7f  
    4423 00017bc0     0382          abs     a2
    4424 00017bd0     1402  cjrio2dsml      subk    32,a2                   ;16
    4425 00017be0     c41e          jrlt    cjripusho
    4426 00017bf0           cjrio2far
    4427                    
    4428                    
    4429 00017bf0     b5ae          move    *a13(plyr_num),a14
         00017c00     0100  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  104

    4430 00017c10     05a0          move    @PSTATUS,a0
         00017c20 00000000! 
    4431 00017c40     4bc0          btst    a14,a0
    4432 00017c50     ca00          jrz     cjrix                   ;I am a stupid drone?  Drones never
         00017c60     014f  
    4433                                                            ;push human teammate!
    4434                    
    4435 00017c70     b5ae          move    *a13(plyr_tmdist),a14
         00017c80     02f0  
    4436 00017c90     0bee          subi    50,a14
         00017ca0     ffcd  
    4437 00017cb0     c700          jrgt    cjrix                   ;Too far?
         00017cc0     0149  
    4438 00017cd0     09c5          movi    -1,a5
         00017ce0     ffff  
    4439 00017cf0     b5a2          move    *a13(plyr_tmdir),a2
         00017d00     02e0  
    4440 00017d10     4462          sub     a3,a2
    4441 00017d20     0382          abs     a2
    4442 00017d30     0b42          cmpi    040H,a2
         00017d40     ffbf  
    4443 00017d50     c603          jrle    cjritmdsml
    4444 00017d60     0be2          subi    080H,a2
         00017d70     ff7f  
    4445 00017d80     0382          abs     a2
    4446 00017d90     1602  cjritmdsml      subk    16,a2
    4447 00017da0     c402          jrlt    cjripush
    4448 00017db0     c000          jruc    cjrix
         00017dc0     0139  
    4449                    
    4450                    
    4451 00017dd0           cjripusho
    4452                    
    4453                    
    4454                    
    4455 00017dd0           cjripush
    4456 00017dd0     05a0          move    @inbound,a0
         00017de0 00000130- 
    4457 00017e00     cf00          jrnn    cjrix
         00017e10     0134  
    4458                    
    4459 00017e20     b5a0          move    *a13(plyr_num),a0       ;>Nail him
         00017e30     0100  
    4460                    
    4461 00017e40     4ca5          move    a5,a5
    4462 00017e50     cf07          jrnn    cjripush_op             ;Pushing opponent
    4463                    
    4464 00017e60                   XORK    1,a0                    ;Get teammate
    4465 00017e80     24a0          sll     5,a0
    4466 00017e90     0b20          addi    plyrproc_t,a0
         00017ea0 00000000! 
    4467 00017ec0     c008          jruc    cjriget_prc
    4468                    
    4469 00017ed0           cjripush_op
    4470                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  105

    4471                    
    4472 00017ed0     2fe0          srl     1,a0
    4473 00017ee0                   XORK    1,a0
    4474 00017f00     24c0          sll     6,a0                    ;*64
    4475 00017f10     0b20          addi    plyrproc_t,a0
         00017f20 00000000! 
    4476 00017f40     40a0          add     a5,a0
    4477                    
    4478 00017f50           cjriget_prc
    4479 00017f50     8605          move    *a0,a5,L                ;A5=*O proc
    4480                    
    4481 00017f60     b4ae          move    *a5(plyr_seqflgs),a14
         00017f70     0180  
    4482 00017f80     09c0          movi    300,a0
         00017f90     012c  
    4483 00017fa0     1e0e          btst    LAYUP_B,a14
    4484 00017fb0     cb10          jrnz    cjrixz2
    4485                    
    4486 00017fc0     b4ae          move    *a5(plyr_seq),a14
         00017fd0     0170  
    4487 00017fe0     0b4e          cmpi    ELBO_SEQ,a14
         00017ff0     ffc6  
    4488 00018000     ca09          jrz     cjrixz
    4489 00018010     0b4e          cmpi    ELBO2_SEQ,a14
         00018020     ffc5  
    4490 00018030     ca06          jrz     cjrixz
    4491 00018040     0b4e          cmpi    REBOUND_SEQ,a14
         00018050     ffeb  
    4492 00018060     ca03          jrz     cjrixz
    4493 00018070     0b4e          cmpi    REBOUNDA_SEQ,a14
         00018080     ffea  
    4494 00018090     cb07          jrnz    cjriskpck
    4495                    
    4496 000180a0           cjrixz
    4497 000180a0     09c0          movi    150,a0                  ;200
         000180b0     0096  
    4498 000180c0           cjrixz2                                 ;Layups 30%
    4499 000180c0     0d5f          calla   RNDPER
         000180d0 00000000! 
    4500 000180f0     c200          jrls    cjrix                   ;br=nope
         00018100     0105  
    4501 00018110           cjriskpck
    4502                    
    4503 00018110     b6a2          move    *a5(PA8),a2,L
         00018120     00c0  
    4504 00018130     b440          move    *a2(OYPOS),a0
         00018140     00b0  
    4505 00018150     b501          move    *a8(OYPOS),a1
         00018160     00b0  
    4506 00018170     4401          sub     a0,a1
    4507                    
    4508 00018180     0b41          cmpi    054H,a1                 ;060H,5c,58
         00018190     ffab  
    4509 000181a0     c700          jrgt    cjrix                   ;Too far above me?
         000181b0     00fa  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  106

    4510                    
    4511                    
    4512                    
    4513 000181c0     b5ae          move    *a13(plyr_num),a14
         000181d0     0100  
    4514 000181e0     05a0          move    @plyr_maxpower,a0
         000181f0 00000000! 
    4515 00018210     4bc0          btst    a14,a0
    4516 00018220     ca02          jrz     cjrinochng
    4517 00018230     1923          movk    9,a3
    4518 00018240     c004          jruc    cjrimaxp
    4519 00018250           cjrinochng
    4520 00018250     b7a0          move    *a13(plyr_attrib_p),a0,L
         00018260     0150  
    4521 00018270     b403          move    *a0(PAT_POWER),a3
         00018280     0150  
    4522 00018290           cjrimaxp
    4523 00018290     0583          move    a3,@last_power          ;For later analysis
         000182a0 00000200- 
    4524                    
    4525 000182c0     b5a0          move    *a13(plyr_dir),a0
         000182d0     03d0  
    4526 000182e0     4c01          move    a0,a1
    4527 000182f0     0b01          addi    040H,a1
         00018300     0040  
    4528 00018310     2721          sll     32-7,a1
    4529 00018320     2ce1          srl     32-7,a1
    4530 00018330     b025          move    a1,*a5(plyr_newdir)
         00018340     03e0  
    4531 00018350     0d3f          callr   sinecos_get
         00018360     f267  
    4532                    
    4533 00018370     2480          sll     4,a0                    ;*128
    4534 00018380     2481          sll     4,a1
    4535                    
    4536 00018390     b6ae          move    *a5(plyr_attrib_p),a14,L
         000183a0     0150  
    4537 000183b0     b5ce          move    *a14(PAT_POWER),a14
         000183c0     0150  
    4538 000183d0     446e          sub     a3,a14
    4539 000183e0     4dc3          move    a14,a3
    4540 000183f0     0b4e          cmpi    6,a14
         00018400     fff9  
    4541                    
    4542                    
    4543 00018410     c503          jrge    cjrishortfal
    4544                    
    4545 00018420     2440          sll     2,a0                    ;*128
    4546 00018430     2441          sll     2,a1
    4547 00018440     c00a          jruc    cjrish1
    4548 00018450           cjrishortfal
    4549 00018450                   PUSH    a0,a1
    4550 00018470     09e0          movi    push1_snd,a0
         00018480 00000640' 
    4551 000184a0     0d5f          calla   snd_play1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  107

         000184b0 00000000! 
    4552 000184d0                   PULL    a0,a1
    4553 000184f0           cjrish1
    4554 000184f0     4c0b          move    a0,a11
    4555 00018500     b202          move    a0,*a2(OZVEL),L
         00018510     0060  
    4556 00018520     b222          move    a1,*a2(OXVEL),L
         00018530     0020  
    4557 00018540     b4a0          move    *a5(plyr_jmpcnt),a0
         00018550     0400  
    4558 00018560     cb12          jrnz    cjriinjmp
    4559 00018570     1820          movk    1,a0
    4560 00018580     b005          move    a0,*a5(plyr_jmpcnt)
         00018590     0400  
    4561 000185a0     09e0          movi    -GRAVB*18,a0            ;Up     ;19
         000185b0 fffd5400  
    4562 000185d0     05ae          move    @HCOUNT,a14
         000185e0 c00001c0  
    4563 00018600     0b8e          andi    07,a14
         00018610 fffffff8  
    4564 00018630     cb03          jrnz    cjrinotlow
    4565 00018640     09e0          movi    -GRAVB*14,a0            ;Up
         00018650 fffdec00  
    4566 00018670           cjrinotlow
    4567 00018670     b202          move    a0,*a2(OYVEL),L
         00018680     0040  
    4568 00018690           cjriinjmp
    4569 00018690     1800          movk    32,a0
    4570 000186a0     0b43          cmpi    7,a3
         000186b0     fff8  
    4571 000186c0     c40c          jrlt    cjrinotsml
    4572                    
    4573 000186d0     09c0          movi    650,a0
         000186e0     028a  
    4574 000186f0     0d5f          calla   RNDPER
         00018700 00000000! 
    4575 00018720     c306          jrhi    cjrinotsml
    4576                    
    4577                    
    4578 00018730     09e0          movi    -GRAVB*8,a0             ;7
         00018740 fffed000  
    4579 00018760     b202          move    a0,*a2(OYVEL),L
         00018770     0040  
    4580 00018780     1a00          movk    16,a0                   ;16
    4581 00018790           cjrinotsml
    4582                    
    4583 00018790     b4ae          move    *a5(plyr_num),a14
         000187a0     0100  
    4584 000187b0     05a1          move    @plyr_maxpower,a1
         000187c0 00000000! 
    4585 000187e0     4bc1          btst    a14,a1
    4586 000187f0     ca1c          jrz     cjrinochng1
    4587 00018800     09e0          movi    -GRAVB*8,a0             ;7
         00018810 fffed000  
    4588 00018830     b202          move    a0,*a2(OYVEL),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  108

         00018840     0040  
    4589 00018850     b640          move    *a2(OZVEL),a0,L
         00018860     0060  
    4590 00018870     2bc0          sra     2,a0
    4591 00018880     b202          move    a0,*a2(OZVEL),L
         00018890     0060  
    4592 000188a0     b640          move    *a2(OXVEL),a0,L
         000188b0     0020  
    4593 000188c0     2bc0          sra     2,a0
    4594 000188d0     b202          move    a0,*a2(OXVEL),L
         000188e0     0020  
    4595                    
    4596 000188f0     09e0          movi    push1_snd,a0
         00018900 00000640' 
    4597 00018920     0d5f          calla   snd_play1
         00018930 00000000! 
    4598                    
    4599 00018950     1a00          movk    16,a0
    4600 00018960     05a1          move    @HCOUNT,a1
         00018970 c00001c0  
    4601 00018990     1fe1          btst    0,a1
    4602 000189a0     ca01          jrz     cjrinochng1
    4603 000189b0     1b00          movk    24,a0                   ;16
    4604 000189c0           cjrinochng1
    4605 000189c0     b005          move    a0,*a5(plyr_stagcnt)
         000189d0     0430  
    4606                    
    4607 000189e0     05a0          move    @ballpnum,a0
         000189f0 00000030- 
    4608 00018a10     b4a1          move    *a5(plyr_num),a1
         00018a20     0100  
    4609 00018a30     4801          cmp     a0,a1
    4610 00018a40     cb36          jrne    cjrinobl                        ;Doesn't have ball?
    4611                    
    4612                    
    4613 00018a50     1920          movk    PS_STEALS,a0
    4614 00018a60     b5a1          move    *a13(plyr_num),a1
         00018a70     0100  
    4615 00018a80     0d5f          calla   inc_player_stat
         00018a90 00000000! 
    4616                    
    4617 00018ab0     07a4          move    @ballobj_p,a4,L
         00018ac0 00000010- 
    4618 00018ae0     09e2          movi    01ffffH,a2              ;>Give rnd velocity
         00018af0 0001ffff  
    4619 00018b10     09e3          movi    010000H,a3
         00018b20 00010000  
    4620 00018b40     4c40          move    a2,a0
    4621 00018b50     0d3f          callr   rnd
         00018b60     f99c  
    4622 00018b70     4460          sub     a3,a0
    4623 00018b80     b204          move    a0,*a4(OXVEL),L
         00018b90     0020  
    4624 00018ba0     4c40          move    a2,a0
    4625 00018bb0     0d3f          callr   rnd
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  109

         00018bc0     f996  
    4626 00018bd0     4460          sub     a3,a0
    4627                    
    4628                    
    4629 00018be0     b4ae          move    *a5(plyr_num),a14
         00018bf0     0100  
    4630 00018c00     24ae          sll     5,a14
    4631 00018c10     0b2e          addi    plyrobj_t,a14
         00018c20 00000000! 
    4632 00018c40     87ce          move    *a14,a14,L
    4633 00018c50     b5c1          move    *a14(OZPOS),a1
         00018c60     00d0  
    4634 00018c70     0b41          cmpi    0410H,a1
         00018c80     fbef  
    4635 00018c90     c70f          jrgt    cjrinot_rear
    4636                    
    4637 00018ca0     09c0          movi    40,a0
         00018cb0     0028  
    4638 00018cc0     b005          move    a0,*a5(plyr_shtdly)     ;can't scoop up ball
         00018cd0     02b0  
    4639                    
    4640 00018ce0     09c0          movi    -1,a0
         00018cf0     ffff  
    4641 00018d00     0580          move    a0,@ballpnum
         00018d10 00000030- 
    4642 00018d30     0580          move    a0,@ballpnumlast
         00018d40 00000040- 
    4643                    
    4644 00018d60     09e0          movi    [2,0],a0
         00018d70 00020000  
    4645 00018d90           cjrinot_rear
    4646 00018d90     b204          move    a0,*a4(OZVEL),L
         00018da0     0060  
    4647 00018db0           cjrinobl
    4648 00018db0     b4ae          move    *a5(plyr_num),a14
         00018dc0     0100  
    4649 00018dd0     24ae          sll     5,a14
    4650 00018de0     0b2e          addi    plyrobj_t,a14
         00018df0 00000000! 
    4651 00018e10     87ce          move    *a14,a14,L
    4652 00018e20     b5c1          move    *a14(OZPOS),a1
         00018e30     00d0  
    4653 00018e40     0b41          cmpi    0410H,a1
         00018e50     fbef  
    4654 00018e60     c708          jrgt    cjrinot_rear2
    4655                    
    4656 00018e70     4d6b          move    a11,a11
    4657 00018e80     cf06          jrnn    cjrinot_rear2
    4658                    
    4659 00018e90     09e0          movi    intostands,a0
         00018ea0 00000100' 
    4660 00018ec0     0d5f          calla   snd_play1
         00018ed0 00000000! 
    4661                    
    4662 00018ef0           cjrinot_rear2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  110

    4663                    
    4664 00018ef0     b5a0          move    *a13(plyr_num),a0       ;If on fire, don't use turbo on push
         00018f00     0100  
    4665 00018f10     05a1          move    @plyrnumonfire,a1
         00018f20 00000000- 
    4666 00018f40     4801          cmp     a0,a1
    4667 00018f50     ca20          jrz     cjrix
    4668                    
    4669 00018f60     b7a2          move    *a13(plyr_PDATA_p),a2,L
         00018f70     0130  
    4670 00018f80     b441          move    *a2(ply_turbo),a1
         00018f90     0040  
    4671 00018fa0     0b41          cmpi    10,a1
         00018fb0     fff5  
    4672 00018fc0     c40b          jrlt    cjriclrbl
    4673 00018fd0     14e1          subk    7,a1
    4674 00018fe0     b022          move    a1,*a2(ply_turbo)
         00018ff0     0040  
    4675 00019000     b640          move    *a2(ply_meter_imgs+40h),a0,L
         00019010     00c0  
    4676 00019020     b401          move    *a0(OFSET),a1           ;Shrink meter
         00019030     0100  
    4677 00019040     10e1          addk    7,a1
    4678 00019050     b020          move    a1,*a0(OFSET)
         00019060     0100  
    4679 00019070     c00e          jruc    cjrix
    4680                    
    4681 00019080           cjriclrbl
    4682 00019080     b7a2          move    *a13(plyr_PDATA_p),a2,L
         00019090     0130  
    4683 000190a0     b44e          move    *a2(ply_turbo),a14
         000190b0     0040  
    4684 000190c0     5600          clr     a0
    4685 000190d0     b002          move    a0,*a2(ply_turbo)
         000190e0     0040  
    4686 000190f0     b640          move    *a2(ply_meter_imgs+40h),a0,L
         00019100     00c0  
    4687 00019110     b401          move    *a0(OFSET),a1           ;Shrink meter
         00019120     0100  
    4688 00019130     41c1          add     a14,a1
    4689 00019140     b020          move    a1,*a0(OFSET)
         00019150     0100  
    4690                    
    4691                    
    4692 00019160           cjrix   PULL    a11
    4693 00019170     0960          rets
    4694                    
    4695                    
    4696                    
    4697 00019180            SUBR   seq_elbo
    4698                    
    4699 00019180     b5a4          move    *a13(plyr_num),a4
         00019190     0100  
    4700 000191a0     2fe4          srl     1,a4
    4701 000191b0                   XORK    1,a4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  111

    4702 000191d0     24c4          sll     6,a4                    ;*64
    4703 000191e0     0b24          addi    plyrproc_t,a4
         000191f0 00000000! 
    4704                    
    4705 00019210     b5ae          move    *a13(plyr_o1dist),a14
         00019220     0310  
    4706 00019230     0bee          subi    40,a14
         00019240     ffd7  
    4707 00019250     c50a          jrge    wnveo1far                       ;Too far?
    4708                    
    4709 00019260     05ae          move    @HCOUNT,a14
         00019270 c00001c0  
    4710 00019290     1fee          btst    0,a14
    4711 000192a0     ca05          jrz     wnveo1far                       ;Skip? (50%)
    4712                    
    4713 000192b0     8685          move    *a4,a5,L                ;A5=*O proc
    4714 000192c0     b5a0          move    *a13(plyr_o1dir),a0
         000192d0     0300  
    4715 000192e0     0d3f          callr   wnveelbo
         000192f0     0011  
    4716 00019300           wnveo1far
    4717                    
    4718 00019300     b5ae          move    *a13(plyr_o2dist),a14
         00019310     0330  
    4719 00019320     0bee          subi    40,a14
         00019330     ffd7  
    4720 00019340     c50b          jrge    wnvex                   ;Too far?
    4721                    
    4722 00019350     05ae          move    @HCOUNT,a14
         00019360 c00001c0  
    4723 00019380     1fee          btst    0,a14
    4724 00019390     ca06          jrz     wnvex                   ;Skip? (50%)
    4725                    
    4726 000193a0     1004          addk    32,a4
    4727 000193b0     8685          move    *a4,a5,L                ;A5=*O proc
    4728 000193c0     b5a0          move    *a13(plyr_o2dir),a0
         000193d0     0320  
    4729 000193e0     0d3f          callr   wnveelbo
         000193f0     0001  
    4730                    
    4731 00019400     0960  wnvex   rets
    4732                    
    4733                    
    4734 00019410           wnveelbo
    4735 00019410     b6a2          move    *a5(PA8),a2,L           ;>Make opponent fly
         00019420     00c0  
    4736                    
    4737 00019430     4c01          move    a0,a1
    4738 00019440     0b01          addi    040H,a1
         00019450     0040  
    4739 00019460     2721          sll     32-7,a1
    4740 00019470     2ce1          srl     32-7,a1
    4741 00019480     b025          move    a1,*a5(plyr_newdir)
         00019490     03e0  
    4742 000194a0     0d3f          callr   sinecos_get
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  112

         000194b0     f152  
    4743                    
    4744 000194c0     24a0          sll     5,a0                    ;*32
    4745 000194d0     24a1          sll     5,a1
    4746 000194e0     b202          move    a0,*a2(OZVEL),L
         000194f0     0060  
    4747 00019500     b222          move    a1,*a2(OXVEL),L
         00019510     0020  
    4748 00019520     b4a0          move    *a5(plyr_jmpcnt),a0
         00019530     0400  
    4749 00019540     cb1e          jrnz    wnveinjmp
    4750 00019550     1820          movk    1,a0
    4751 00019560     b005          move    a0,*a5(plyr_jmpcnt)
         00019570     0400  
    4752 00019580     09e0          movi    -GRAVB*12,a0            ;Up 15
         00019590 fffe3800  
    4753 000195b0     b202          move    a0,*a2(OYVEL),L
         000195c0     0040  
    4754                    
    4755 000195d0     b4ae          move    *a5(plyr_num),a14
         000195e0     0100  
    4756 000195f0     05a1          move    @plyr_maxpower,a1
         00019600 00000000! 
    4757 00019620     4bc1          btst    a14,a1
    4758 00019630     ca0f          jrz     wnveinjmp
    4759 00019640     09e0          movi    -GRAVB*8,a0             ;7
         00019650 fffed000  
    4760 00019670     b202          move    a0,*a2(OYVEL),L
         00019680     0040  
    4761 00019690     1b00          movk    24,a0                   ;16
    4762 000196a0     05a1          move    @HCOUNT,a1
         000196b0 c00001c0  
    4763 000196d0     1fe1          btst    0,a1
    4764 000196e0     ca01          jrz     wnveko
    4765 000196f0     1a00          movk    16,a0                   ;16
    4766 00019700           wnveko
    4767 00019700     b005          move    a0,*a5(plyr_stagcnt)
         00019710     0430  
    4768 00019720     0960          rets
    4769                    
    4770 00019730           wnveinjmp
    4771 00019730     1800          movk    32,a0
    4772 00019740     b005          move    a0,*a5(plyr_stagcnt)
         00019750     0430  
    4773                    
    4774 00019760     0960          rets
    4775                    
    4776                    
    4777                    
    4778              0100  GAME_QTR        equ     PDATA
    4779                    
    4780                            .asg    22,DIAM
    4781                    
    4782 00019770            SUBRP  no_good_check
    4783                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  113

    4784 00019770     05a0          move    @gmqrtr,a0
         00019780 00000000! 
    4785 000197a0     b00d          move    a0,*a13(GAME_QTR)
         000197b0     0100  
    4786                    
    4787 000197c0           sfnlloop
    4788 000197c0                   SLEEPK  1
    4789                    
    4790 00019800     07a0          move    @game_time,a0,L         ;If at beginning of
         00019810 00000000! 
    4791 00019830     0b60          cmpi    02050400H,a0            ;qrtr, no speech!
         00019840 fdfafbff  
    4792 00019860     c720          jrgt    sfnlsnuffit
    4793                    
    4794 00019870     05a0          move    @gmqrtr,a0
         00019880 00000000! 
    4795 000198a0     b5a1          move    *a13(GAME_QTR),a1
         000198b0     0100  
    4796 000198c0     4801          cmp     a0,a1
    4797 000198d0     cb19          jrne    sfnlsnuffit
    4798                    
    4799 000198e0     b500          move    *a8(OYPOS),a0
         000198f0     00b0  
    4800 00019900     0b40          cmpi    HOOPY+15,a0
         00019910     0068  
    4801 00019920     c711          jrgt    sfnlno_good
    4802                    
    4803 00019930     b500          move    *a8(OXPOS),a0
         00019940     0090  
    4804 00019950     b501          move    *a8(OXANI+10h),a1
         00019960     01f0  
    4805 00019970     4020          add     a1,a0
    4806 00019980     4560          sub     a11,a0
    4807 00019990     0380          abs     a0
    4808 000199a0     16c0          subk    DIAM,a0
    4809 000199b0     c708          jrgt    sfnlno_good
    4810                    
    4811                    
    4812 000199c0     b500          move    *a8(OZPOS),a0
         000199d0     00d0  
    4813 000199e0     0be0          subi    CZMID,a0                ;0CHheck backboard
         000199f0     fb6d  
    4814 00019a00     0380          abs     a0
    4815 00019a10     16c0          subk    DIAM,a0
    4816 00019a20     c701          jrgt    sfnlno_good
    4817                    
    4818 00019a30     c0d8          jruc    sfnlloop
    4819                    
    4820                    
    4821 00019a40           sfnlno_good
    4822 00019a40     0d5f          calla   nogood_speech
         00019a50 00000000! 
    4823                    
    4824 00019a70           sfnlsnuffit
    4825 00019a70                   DIE
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:02 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  114

    4826                    
    4827                            .end

 No Errors,  No Warnings
