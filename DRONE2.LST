TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .file   "drone2.asm"
       3                            .width  132
       4                            .option b,d,l,t
       5                            .mnolist
       6                    
       7                    
       8                            .include        "mproc.equ"             ;Mproc equates
       9                            .include        "disp.equ"              ;Display proc equates
      10                            .include        "gsp.equ"               ;Gsp asm equates
      11                            .include        "sys.equ"
      12                            .include        "audit.equ"
      13                            .include        "shawn.hdr"             ;Macros
      14                            .asg            0,SEQT
      15                            .include        "plyr.equ"
      16                    
      17                    
      18                    
      19                    
      20                    
      21                            .ref    plyrobj_t,plyrproc_t
      22                            .ref    ballobj_p
      23                            .ref    ballpnum,ballpnumshot
      24                            .ref    plyrnumonfire
      25                            .ref    seekdirdist_obxz128
      26                    
      27                            .ref    game_time,gmqrtr
      28                            .ref    shotimer
      29                    
      30                            .ref    team1,team2
      31                    
      32                            .ref    RNDPER
      33                            .ref    PSTATUS
      34                            .ref    GET_ADJ
      35                    
      36                    
      37                    
      38                    
      39                    
      40 00000000                   .bss    drnzzcnt        ,16     ;Drone zigzag mode cntdn
      41 00000010                   .bss    drnzzmode       ,16     ;Drone zigzag mode (0-?)
      42 00000000                   BSSX    drone2on        ,16     ;!0=Use drone version2 code
      43                    
      44                    
      45                    
      46                    
      47 00000000                   .text
      48                    
      49                    
      50                    
      51                    
      52 00000000            SUBR   drone2_main
      53                    
      54                    
      55 00000000     05ae          move    @ballpnum,a14
         00000010 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    2

      56 00000030     ce00          jrn     drone_chaseball         ;No owner?
         00000040     0591  
      57                    
      58 00000050     b5a1          move    *a13(plyr_ownball),a1
         00000060     0260  
      59 00000070     ca00          jrz     drone_defence           ;We don't have ball?
         00000080     0327  
      60 00000090     ce00          jrn     drone_offwoball         ;Teammate has ball?
         000000a0     01f3  
      61                    
      62                    
      63                    
      64 000000b0     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         000000c0 00000000! 
      65 000000e0     b5a1          move    *a13(plyr_num),a1
         000000f0     0100  
      66 00000100                   XORK    1,a1
      67 00000120     4a20          btst    a1,a0
      68 00000130     ca18          jrz     avbktmdrone             ;Teammate is a drone?
      69                    
      70 00000140     b5a2          move    *a13(plyr_d_cflgs),a2
         00000150     0470  
      71 00000160     1fe2          btst    DRN_PASS_B,a2
      72 00000170     ca03          jrz     avbknopass
      73                    
      74 00000180     09ce          movi    BUT2_M<<8+BUT2_M,a14    ;>Make him pass
         00000190     2020  
      75 000001a0     c004          jruc    avbkdocmd
      76                    
      77 000001b0           avbknopass
      78 000001b0     1fc2          btst    DRN_SHOOT_B,a2
      79 000001c0     ca0f          jrz     avbknoshoot
      80 000001d0     09ce          movi    BUT1_M|BUT3_M,a14       ;>Make him shoot
         000001e0     0050  
      81 000001f0           avbkdocmd
      82 000001f0     8560          move    *a11,a0
      83 00000200     2780          sll     32-4,a0
      84 00000210     2c80          srl     32-4,a0
      85 00000220     0ba0          ori     BUT3_M,a0               ;+turbo
         00000230 00000040  
      86 00000250           avbknoturb
      87 00000250     55c0          or      a14,a0
      88 00000260     800b          move    a0,*a11
      89 00000270     5600          clr     a0
      90 00000280     b00d          move    a0,*a13(plyr_d_cflgs)
         00000290     0470  
      91 000002a0     c000          jruc    avbkx
         000002b0     0179  
      92                    
      93 000002c0           avbknoshoot
      94 000002c0           avbktmdrone
      95                    
      96 000002c0     b5ae          move    *a13(plyr_d_mode),a14
         000002d0     0450  
      97 000002e0     144e          subk    2,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    3

      98 000002f0     c505          jrge    avbkinmd                        ;Already in mode?
      99                    
     100 00000300     1841          movk    2,a1                    ;Offense with ball
     101 00000310     b02d          move    a1,*a13(plyr_d_mode)
         00000320     0450  
     102 00000330     1821          movk    1,a1
     103 00000340     c003          jruc    avbksetskc
     104 00000350           avbkinmd
     105                    
     106                    
     107 00000350     b5a1          move    *a13(plyr_d_seekcnt),a1 ;>Update tob mode
         00000360     0480  
     108 00000370     c60b          jrle    avbknotob
     109 00000380     1421  avbksetskc      subk    1,a1
     110 00000390     b02d          move    a1,*a13(plyr_d_seekcnt)
         000003a0     0480  
     111 000003b0     c707          jrgt    avbknotob
     112 000003c0     b9ad          move    *a13(plyr_ohoopx),*a13(plyr_d_seekx)
         000003d0     02d0  
         000003e0     0490  
     113 000003f0     09c0          movi    CZMID,a0
         00000400     0492  
     114 00000410     b00d          move    a0,*a13(plyr_d_seeky)
         00000420     04a0  
     115 00000430           avbknotob
     116                    
     117 00000430     b5a2          move    *a13(plyr_seqflgs),a2
         00000440     0180  
     118 00000450     1ea2          btst    PASS_B,a2
     119 00000460     cb00          jrnz    avbkkilbuts
         00000470     015b  
     120                    
     121 00000480     b5ae          move    *a13(plyr_jmpcnt),a14
         00000490     0400  
     122 000004a0     cb00          jrnz    avbkinjmp
         000004b0     0128  
     123                    
     124 000004c0     8560          move    *a11,a0
     125 000004d0     1f60          btst    BUT1_B,a0
     126 000004e0     cb00          jrnz    avbkfake                        ;Shoot button down?
         000004f0     0107  
     127                    
     128                    
     129 00000500     1ec2          btst    SHOOT_B,a2
     130 00000510     cb00          jrnz    avbkinjmp
         00000520     0121  
     131                    
     132                    
     133 00000530     b5ae          move    *a13(plyr_dribmode),a14
         00000540     0210  
     134 00000550     ce4a          jrn     avbknodrib
     135                    
     136 00000560     b5ae          move    *a13(plyr_num),a14      ;0CHhk for breakaway
         00000570     0100  
     137 00000580     2fee          srl     1,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    4

     138 00000590     1820          movk    1,a0
     139 000005a0     560e          xor     a0,a14
     140 000005b0     24ce          sll     6,a14                   ;*64
     141 000005c0     0b2e          addi    plyrproc_t,a14
         000005d0 00000000! 
     142 000005f0     97c2          move    *a14+,a2,L
     143 00000600     97c3          move    *a14+,a3,L
     144                    
     145 00000610     b442          move    *a2(plyr_hpdist),a2
         00000620     0370  
     146 00000630     b463          move    *a3(plyr_hpdist),a3
         00000640     0370  
     147 00000650     b5a4          move    *a13(plyr_ohpdist),a4
         00000660     0390  
     148                    
     149 00000670     4882          cmp     a4,a2
     150 00000680     c448          jrlt    avbkshootrnd            ;He's closer?
     151 00000690     4883          cmp     a4,a3
     152 000006a0     c446          jrlt    avbkshootrnd            ;He's closer?
     153                    
     154 000006b0     b5a0          move    *a13(plyr_ohoopx),a0
         000006c0     02d0  
     155 000006d0     09c1          movi    CZMID,a1
         000006e0     0492  
     156 000006f0     0d3f          callr   drone_seekxy
         00000700     0602  
     157 00000710     b5ae          move    *a13(plyr_d_skill),a14
         00000720     0460  
     158 00000730     0b4e          cmpi    -11-3,a14
         00000740     000d  
     159 00000750     c604          jrle    avbknoturb2
     160 00000760     0ba0          ori     BUT3_M,a0               ;Push turbo
         00000770 00000040  
     161 00000790     800b          move    a0,*a11
     162 000007a0           avbknoturb2
     163                    
     164 000007a0     07a1          move    @game_time,a1,L
         000007b0 00000000! 
     165 000007d0     0b41          cmpi    0200H,a1
         000007e0     fdff  
     166 000007f0     c400          jrlt    avbkshoot2                      ;Less than 2 secs?
         00000800     00d0  
     167 00000810     05a1          move    @shotimer+16,a1         ;Tens
         00000820 00000010! 
     168 00000840     cb06          jrnz    avbkscok
     169 00000850     05a1          move    @shotimer,a1            ;Ones
         00000860 00000000! 
     170 00000880     1441          subk    2,a1
     171 00000890     c400          jrlt    avbkshoot2                      ;Less than 2 secs?
         000008a0     00c6  
     172 000008b0           avbkscok
     173 000008b0     0d3f          callr   drone_chk3ptr
         000008c0     0139  
     174 000008d0     cb00          jrnz    avbkshoot2                      ;Need a 3?
         000008e0     00c2  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    5

     175                    
     176 000008f0     b5ae          move    *a13(plyr_ohpdist),a14
         00000900     0390  
     177 00000910     0b4e          cmpi    170,a14
         00000920     ff55  
     178 00000930     c500          jrge    avbkx                   ;Too far?
         00000940     0110  
     179 00000950     0b4e          cmpi    50,a14
         00000960     ffcd  
     180 00000970     c400          jrlt    avbkshoot2                      ;Close?
         00000980     00b8  
     181 00000990     1be0          movk    01fH,a0
     182 000009a0     0d3f          callr   rnd
         000009b0     0727  
     183 000009c0     cb00          jrnz    avbkx
         000009d0     0107  
     184 000009e0     c000          jruc    avbkshoot2
         000009f0     00b1  
     185                    
     186                    
     187 00000a00           avbknodrib                                      ;0CaHn't dribble
     188 00000a00     b5a0          move    *a13(plyr_ohpdist),a0
         00000a10     0390  
     189 00000a20     0b40          cmpi    230,a0
         00000a30     ff19  
     190 00000a40     c400          jrlt    avbkshoot2
         00000a50     00ab  
     191 00000a60     0d3f          callr   drone_pass
         00000a70     023e  
     192 00000a80     cb00          jrnz    avbkx                   ;Pass OK?
         00000a90     00fb  
     193 00000aa0     1be0          movk    01fH,a0
     194 00000ab0     0d3f          callr   rnd
         00000ac0     0716  
     195 00000ad0     cb00          jrnz    avbkx                   ;97%?
         00000ae0     00f6  
     196 00000af0     c000          jruc    avbkshoot2
         00000b00     00a0  
     197                    
     198                    
     199 00000b10           avbkshootrnd
     200 00000b10     07a1          move    @game_time,a1,L
         00000b20 00000000! 
     201 00000b40     0b41          cmpi    0200H,a1
         00000b50     fdff  
     202 00000b60     c400          jrlt    avbkshoot2                      ;Less than 2 secs?
         00000b70     0099  
     203 00000b80     05a1          move    @shotimer+16,a1
         00000b90 00000010! 
     204 00000bb0     cb06          jrnz    avbkscok2
     205 00000bc0     05a1          move    @shotimer,a1
         00000bd0 00000000! 
     206 00000bf0     1441          subk    2,a1
     207 00000c00     c400          jrlt    avbkshoot2                      ;Less than 2 secs?
         00000c10     008f  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    6

     208 00000c20           avbkscok2
     209 00000c20                   PUSH    a6,a7
     210 00000c40     b5a6          move    *a13(plyr_ohoopx),a6
         00000c50     02d0  
     211 00000c60     09c7          movi    CZMID,a7
         00000c70     0492  
     212 00000c80     0d5f          calla   seekdirdist_obxz128
         00000c90 00000000! 
     213 00000cb0                   PULL    a6,a7
     214                    
     215 00000cd0     b5ae          move    *a13(plyr_o1dist),a14
         00000ce0     0310  
     216 00000cf0     0b4e          cmpi    80,a14
         00000d00     ffaf  
     217 00000d10     c70e          jrgt    avbko1dok                       ;He's too far?
     218 00000d20     49c1          cmp     a14,a1
     219 00000d30     c40c          jrlt    avbko1dok                       ;I'm closer?
     220 00000d40     b5a2          move    *a13(plyr_o1dir),a2
         00000d50     0300  
     221 00000d60     4402          sub     a0,a2
     222 00000d70     0382          abs     a2
     223 00000d80     0b42          cmpi    040H,a2
         00000d90     ffbf  
     224 00000da0     c603          jrle    avbko1dsml
     225 00000db0     0be2          subi    080H,a2
         00000dc0     ff7f  
     226 00000dd0     0382          abs     a2
     227 00000de0     1402  avbko1dsml      subk    32,a2
     228 00000df0     c414          jrlt    avbkgoaround            ;In front of me?
     229 00000e00           avbko1dok
     230 00000e00     b5ae          move    *a13(plyr_o2dist),a14
         00000e10     0330  
     231 00000e20     0b4e          cmpi    80,a14
         00000e30     ffaf  
     232 00000e40     c70e          jrgt    avbko2dok                       ;He's too far?
     233 00000e50     49c1          cmp     a14,a1
     234 00000e60     c40c          jrlt    avbko2dok                       ;I'm closer?
     235 00000e70     b5a2          move    *a13(plyr_o2dir),a2
         00000e80     0320  
     236 00000e90     4402          sub     a0,a2
     237 00000ea0     0382          abs     a2
     238 00000eb0     0b42          cmpi    040H,a2
         00000ec0     ffbf  
     239 00000ed0     c603          jrle    avbko2dsml
     240 00000ee0     0be2          subi    080H,a2
         00000ef0     ff7f  
     241 00000f00     0382          abs     a2
     242 00000f10     1402  avbko2dsml      subk    32,a2
     243 00000f20     c401          jrlt    avbkgoaround            ;In front of me?
     244 00000f30           avbko2dok
     245 00000f30     c02a          jruc    avbkrunath
     246                    
     247 00000f40           avbkgoaround                            ;>Opponent in my way
     248 00000f40     b5a0          move    *a13(plyr_tmdist),a0
         00000f50     02f0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    7

     249 00000f60     0b40          cmpi    70,a0
         00000f70     ffb9  
     250 00000f80     c404          jrlt    avbkgoa                 ;Teammate too close?
     251                    
     252 00000f90     0d3f          callr   drone_pass
         00000fa0     01eb  
     253 00000fb0     cb00          jrnz    avbkx                   ;Pass OK?
         00000fc0     00a8  
     254                    
     255 00000fd0           avbkgoa
     256 00000fd0     09e2          movi    drnzzcnt,a2
         00000fe0 00000000- 
     257 00001000     8440          move    *a2,a0
     258 00001010     1420          subk    1,a0
     259 00001020     c70a          jrgt    avbkzzsame
     260                    
     261 00001030     1860          movk    3,a0                    ;New mode
     262 00001040     0d3f          callr   rnd
         00001050     06bd  
     263 00001060     b002          move    a0,*a2(drnzzmode-drnzzcnt)
         00001070     0010  
     264 00001080     09c0          movi    TSEC-10,a0
         00001090     002b  
     265 000010a0     0d3f          callr   rndrng0
         000010b0     06c5  
     266 000010c0     1140          addk    10,a0
     267 000010d0           avbkzzsame
     268 000010d0     8002          move    a0,*a2
     269                    
     270 000010e0     0d3f          callr   drone_seek
         000010f0     055f  
     271 00001100     2460          sll     3,a0                    ;*8
     272 00001110     0b20          addi    avbkjbits_t,a0
         00001120 00001a60' 
     273                    
     274 00001140     b44e          move    *a2(drnzzmode-drnzzcnt),a14
         00001150     0010  
     275 00001160     24ee          sll     4+3,a14                 ;*16*8
     276 00001170     41c0          add     a14,a0
     277 00001180     8e00  avbkmd1 movb    *a0,a0
     278 00001190     800b          move    a0,*a11
     279                    
     280 000011a0     0b44          cmpi    80,a4
         000011b0     ffaf  
     281 000011c0     c434          jrlt    avbkshoot2                      ;Close enough for jam?
     282                    
     283 000011d0     c015          jruc    avbktryshot
     284                    
     285                    
     286 000011e0           avbkrunath                                      ;>I have a clr path to hoop!
     287 000011e0     b5ae          move    *a13(plyr_o1dist),a14
         000011f0     0310  
     288 00001200     0b4e          cmpi    65,a14
         00001210     ffbe  
     289 00001220     c4da          jrlt    avbkgoa                 ;He's too close?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    8

     290 00001230     b5ae          move    *a13(plyr_o2dist),a14
         00001240     0330  
     291 00001250     0b4e          cmpi    65,a14
         00001260     ffbe  
     292 00001270     c4d5          jrlt    avbkgoa                 ;He's too close?
     293                    
     294 00001280     0d3f          callr   drone_seek
         00001290     0545  
     295 000012a0     b5ae          move    *a13(plyr_d_skill),a14
         000012b0     0460  
     296 000012c0     0b4e          cmpi    -11-3,a14
         000012d0     000d  
     297 000012e0     c604          jrle    avbktryshot
     298 000012f0     0ba0          ori     BUT3_M,a0               ;Turbo
         00001300 00000040  
     299 00001320     800b          move    a0,*a11
     300                    
     301                    
     302 00001330           avbktryshot
     303 00001330     0b44          cmpi    50,a4
         00001340     ffcd  
     304 00001350     c41b          jrlt    avbkshoot2                      ;Close enough for jam?
     305                    
     306 00001360     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         00001370 00000000! 
     307 00001390     b5a1          move    *a13(plyr_num),a1
         000013a0     0100  
     308 000013b0                   XORK    1,a1
     309 000013d0     4a20          btst    a1,a0
     310 000013e0     cb66          jrnz    avbkx                   ;Teammate is a human?
     311                    
     312 000013f0     0d3f          callr   drone_chk3ptr
         00001400     0085  
     313 00001410     cb0f          jrnz    avbkshoot2                      ;Need a 3?
     314                    
     315 00001420     09c0          movi    50,a0
         00001430     0032  
     316 00001440     b5ae          move    *a13(plyr_d_skill),a14
         00001450     0460  
     317 00001460     0b4e          cmpi    -8,a14
         00001470     0007  
     318 00001480     c701          jrgt    avbkrndsht
     319 00001490     1bc0          movk    30,a0
     320 000014a0     0d3f  avbkrndsht      callr   rndrng0
         000014b0     0685  
     321 000014c0     4c00          move    a0,a0
     322 000014d0     cb57          jrnz    avbkx
     323                    
     324 000014e0     0b44          cmpi    250,a4
         000014f0     ff05  
     325 00001500     c554          jrge    avbkx                   ;Too far?
     326                    
     327                    
     328 00001510     8560  avbkshoot2      move    *a11,a0                 ;>Shoot
     329 00001520     0ba0          ori     BUT1_M|BUT3_M,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    9

         00001530 00000050  
     330 00001550     800b          move    a0,*a11
     331 00001560     c04e          jruc    avbkx
     332                    
     333                    
     334                    
     335 00001570           avbkfake                                        ;>Jumping but still on gnd
     336 00001570     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         00001580 00000000! 
     337 000015a0     b5a1          move    *a13(plyr_num),a1
         000015b0     0100  
     338 000015c0                   XORK    1,a1
     339 000015e0     4a20          btst    a1,a0
     340 000015f0     cb45          jrnz    avbkx                   ;Teammate is a human?
     341 00001600     1be0          movk    01fH,a0
     342 00001610     0d3f          callr   rnd
         00001620     0660  
     343 00001630     cb41          jrnz    avbkx
     344                    
     345 00001640     07a1          move    @game_time,a1,L
         00001650 00000000! 
     346 00001670     0b41          cmpi    0200H,a1
         00001680     fdff  
     347 00001690     c43b          jrlt    avbkx                   ;Less than 2 secs?
     348 000016a0     05a1          move    @shotimer+16,a1         ;Tens
         000016b0 00000010! 
     349 000016d0     cb05          jrnz    avbkfk
     350 000016e0     05a1          move    @shotimer,a1            ;Ones
         000016f0 00000000! 
     351 00001710     1441          subk    2,a1
     352 00001720     c432          jrlt    avbkx                   ;Less than 2 secs?
     353 00001730           avbkfk
     354 00001730     c02f          jruc    avbkkilbuts
     355                    
     356                    
     357 00001740           avbkinjmp
     358 00001740     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         00001750 00000000! 
     359 00001770     b5a1          move    *a13(plyr_num),a1
         00001780     0100  
     360 00001790                   XORK    1,a1
     361 000017b0     4a20          btst    a1,a0
     362 000017c0     ca08          jrz     avbktmdrn                       ;Teammate is a drone?
     363                    
     364 000017d0     b7a0          move    *a13(plyr_tmproc_p),a0,L
         000017e0     0110  
     365 000017f0     b600          move    *a0(PA11),a0,L
         00001800     0060  
     366 00001810     8400          move    *a0,a0                  ;Get teammates ctrl bits
     367 00001820     1f60          btst    BUT1_B,a0
     368 00001830     cb21          jrnz    avbkx                   ;Holding shoot button?
     369 00001840     c01e          jruc    avbkkilbuts
     370 00001850           avbktmdrn
     371 00001850     b460          move    *a3(plyr_seqflgs),a0
         00001860     0180  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   10

     372 00001870     1f20          btst    BLOCKREB_B,a0
     373 00001880     cb1a          jrnz    avbkkilbuts             ;Got a rebound?
     374                    
     375 00001890     19e0          movk    15,a0
     376 000018a0     0d3f          callr   rndrng0
         000018b0     0645  
     377 000018c0     4c00          move    a0,a0
     378 000018d0     ca15          jrz     avbkkilbuts             ;Cause shoot?
     379                    
     380 000018e0     18e0          movk    7,a0
     381 000018f0     0d3f          callr   rnd
         00001900     0632  
     382 00001910     cb13          jrnz    avbkx                   ;88%?
     383                    
     384 00001920     b5ae          move    *a13(plyr_ptsdown),a14
         00001930     0440  
     385 00001940     10ae          addk    5,a14
     386 00001950     c40a          jrlt    avbkpss                 ;Winning by 05H?
     387 00001960     b5ae          move    *a13(plyr_seqflgs),a14
         00001970     0180  
     388 00001980     1fce          btst    DUNK_B,a14
     389 00001990     cb0b          jrnz    avbkx                   ;In a dunk?
     390 000019a0     07a1          move    @game_time,a1,L
         000019b0 00000000! 
     391 000019d0     0b41          cmpi    0200H,a1
         000019e0     fdff  
     392 000019f0     c405          jrlt    avbkx                   ;Less than 2 secs?
     393                    
     394 00001a00     0d3f  avbkpss callr   drone_pass
         00001a10     0144  
     395                    
     396 00001a20     c002          jruc    avbkx
     397                    
     398                    
     399                    
     400 00001a30           avbkkilbuts
     401 00001a30     5600          clr     a0                      ;>Let go of shoot button
     402 00001a40     800b          move    a0,*a11
     403                    
     404                    
     405 00001a50     0960  avbkx   rets
     406                    
     407                    
     408 00001a60           avbkjbits_t
     409 00001a60       00          .byte   0,JOYL_M,JOYR_M,0                       ;90~ clockwise
     410 00001a80       02          .byte   JOYD_M,JOYD_M|JOYL_M,JOYD_M|JOYR_M,0
     411 00001aa0       01          .byte   JOYU_M,JOYU_M|JOYL_M,JOYU_M|JOYR_M,0
     412 00001ac0       00          .byte   0,0,0,0
     413                    
     414 00001ae0       00          .byte   0,JOYR_M,JOYL_M,0                       ;90~ cntr clkwise
     415 00001b00       01          .byte   JOYU_M,JOYU_M|JOYR_M,JOYU_M|JOYL_M,0
     416 00001b20       02          .byte   JOYD_M,JOYD_M|JOYR_M,JOYD_M|JOYL_M,0
     417 00001b40       00          .byte   0,0,0,0
     418                    
     419 00001b60       00          .byte   0,JOYD_M|JOYL_M,JOYU_M|JOYR_M,0         ;135~ clkwise
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   11

     420 00001b80       0a          .byte   JOYD_M|JOYR_M,JOYD_M,JOYR_M,0
     421 00001ba0       05          .byte   JOYU_M|JOYL_M,JOYL_M,JOYU_M,0
     422 00001bc0       00          .byte   0,0,0,0
     423                    
     424 00001be0       00          .byte   0,JOYD_M|JOYR_M,JOYU_M|JOYL_M,0         ;135~ cntr clkwise
     425 00001c00       09          .byte   JOYU_M|JOYR_M,JOYR_M,JOYU_M,0
     426 00001c20       06          .byte   JOYD_M|JOYL_M,JOYD_M,JOYL_M,0
     427 00001c40       00          .byte   0,0,0,0
     428                    
     429                    
     430                    
     431 00001c60            SUBRP  drone_chk3ptr
     432                    
     433 00001c60     0b44          cmpi    290,a4
         00001c70     fedd  
     434 00001c80     c733          jrgt    apnjx0                  ;Too far?
     435                    
     436 00001c90     b5a1          move    *a13(plyr_num),a1
         00001ca0     0100  
     437 00001cb0     05a0          move    @plyrnumonfire,a0
         00001cc0 00000000! 
     438 00001ce0     4820          cmp     a1,a0
     439 00001cf0     ca2a          jreq    apnjx1                  ;I'm on fire?
     440                    
     441 00001d00     0b44          cmpi    230,a4
         00001d10     ff19  
     442 00001d20     c429          jrlt    apnjx0                  ;Too close?
     443                    
     444 00001d30     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         00001d40 00000000! 
     445 00001d60                   XORK    1,a1
     446 00001d80     4a20          btst    a1,a0
     447 00001d90     cb22          jrnz    apnjx0                  ;Teammate is a human?
     448                    
     449 00001da0     18c1          movk    6,a1
     450 00001db0     07a0          move    @game_time,a0,L
         00001dc0 00000000! 
     451 00001de0     0b60          cmpi    01010000H,a0
         00001df0 fefeffff  
     452 00001e10     c701          jrgt    apnjhvtime                      ;Enough time?
     453 00001e20     1861          movk    3,a1
     454 00001e30           apnjhvtime
     455 00001e30     b5ae          move    *a13(plyr_ptsdown),a14
         00001e40     0440  
     456 00001e50     482e          cmp     a1,a14
     457 00001e60     c415          jrlt    apnjx0
     458                    
     459 00001e70     0b60          cmpi    040000H,a0
         00001e80 fffbffff  
     460 00001ea0     c40f          jrlt    apnjx1                  ;Less than 40 secs?
     461                    
     462 00001eb0     b5ae          move    *a13(plyr_o1dist),a14
         00001ec0     0310  
     463 00001ed0     0b4e          cmpi    70,a14
         00001ee0     ffb9  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   12

     464 00001ef0     c405          jrlt    apnjrndsht                      ;He's close?
     465 00001f00     b5ae          move    *a13(plyr_o2dist),a14
         00001f10     0330  
     466 00001f20     0b4e          cmpi    70,a14
         00001f30     ffb9  
     467 00001f40     c505          jrge    apnjx1                  ;He's far?
     468                    
     469 00001f50     1900  apnjrndsht      movk    8,a0
     470 00001f60     0d3f          callr   rndrng0
         00001f70     05d9  
     471 00001f80     4c00          move    a0,a0
     472 00001f90     cb02          jrnz    apnjx0
     473                    
     474 00001fa0     1020  apnjx1  addk    1,a0
     475 00001fb0     0960          rets
     476                    
     477 00001fc0     5600  apnjx0  clr     a0
     478 00001fd0     0960          rets
     479                    
     480                    
     481                    
     482 00001fe0            SUBRP  drone_offwoball
     483                    
     484 00001fe0     5600          clr     a0
     485 00001ff0     b00d          move    a0,*a13(plyr_d_cflgs)
         00002000     0470  
     486                    
     487                    
     488 00002010     b5ae          move    *a13(plyr_d_mode),a14
         00002020     0450  
     489 00002030     142e          subk    1,a14
     490 00002040     ca0e          jreq    pcjsinmd                        ;Already in mode?
     491                    
     492 00002050     1820          movk    1,a0                    ;Offense wo ball
     493 00002060     b00d          move    a0,*a13(plyr_d_mode)
         00002070     0450  
     494                    
     495 00002080     0d3f          callr   drone_getcurskillo
         00002090     0488  
     496 000020a0     0b20          addi    pcjsmdsk_t,a0
         000020b0 00002860' 
     497 000020d0     8400          move    *a0,a0
     498 000020e0     0d3f          callr   rndrng0
         000020f0     05c1  
     499 00002100     1020          addk    1,a0
     500 00002110     b00d          move    a0,*a13(plyr_d_seekcnt)
         00002120     0480  
     501 00002130           pcjsinmd
     502                    
     503                    
     504 00002130     b5a3          move    *a13(plyr_dir),a3
         00002140     03d0  
     505                    
     506 00002150     b5ae          move    *a13(plyr_o1dist),a14
         00002160     0310  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   13

     507 00002170     0bee          subi    50,a14
         00002180     ffcd  
     508 00002190     c70c          jrgt    pcjso1far                               ;Too far?
     509 000021a0     b5a2          move    *a13(plyr_o1dir),a2
         000021b0     0300  
     510 000021c0     4462          sub     a3,a2
     511 000021d0     0382          abs     a2
     512 000021e0     0b42          cmpi    040H,a2
         000021f0     ffbf  
     513 00002200     c603          jrle    pcjso1dsml
     514 00002210     0be2          subi    080H,a2
         00002220     ff7f  
     515 00002230     0382          abs     a2
     516 00002240     1602  pcjso1dsml      subk    16,a2
     517 00002250     c411          jrlt    pcjspusho                               ;In front of me?
     518 00002260           pcjso1far
     519 00002260     b5ae          move    *a13(plyr_o2dist),a14
         00002270     0330  
     520 00002280     0bee          subi    50,a14
         00002290     ffcd  
     521 000022a0     c729          jrgt    pcjsnopush                              ;Too far?
     522 000022b0     b5a2          move    *a13(plyr_o2dir),a2
         000022c0     0320  
     523 000022d0     4462          sub     a3,a2
     524 000022e0     0382          abs     a2
     525 000022f0     0b42          cmpi    040H,a2
         00002300     ffbf  
     526 00002310     c603          jrle    pcjso2dsml
     527 00002320     0be2          subi    080H,a2
         00002330     ff7f  
     528 00002340     0382          abs     a2
     529 00002350     1602  pcjso2dsml      subk    16,a2
     530 00002360     c51d          jrge    pcjsnopush                              ;!In front?
     531 00002370           pcjspusho
     532 00002370     09c0          movi    99,a0
         00002380     0063  
     533 00002390     0d3f          callr   rndrng0
         000023a0     0596  
     534                    
     535 000023b0     b5ae          move    *a13(plyr_ptsdown),a14
         000023c0     0440  
     536 000023d0     b5a1          move    *a13(plyr_d_skill),a1
         000023e0     0460  
     537 000023f0     402e          add     a1,a14
     538 00002400     0b4e          cmpi    15,a14
         00002410     fff0  
     539 00002420     c601          jrle    pcjsmxdnok
     540 00002430     19ee          movk    15,a14
     541 00002440     11ee  pcjsmxdnok      addk    15,a14
     542 00002450     c501          jrge    pcjsdnok
     543 00002460     57ce          clr     a14
     544 00002470     248e  pcjsdnok        sll     4,a14
     545 00002480     0b2e          addi    pcjsp_t,a14
         00002490 00002a50' 
     546 000024b0     85c1          move    *a14,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   14

     547                    
     548 000024c0     4820          cmp     a1,a0
     549 000024d0     c50f          jrge    pcjsnewseek                     ;Skip push?
     550                    
     551 000024e0     8560          move    *a11,a0                         ;Push
     552 000024f0     0ba0          ori     BUT2_M<<8|BUT2_M|BUT3_M,a0
         00002500 00002060  
     553 00002520     800b          move    a0,*a11
     554 00002530     c031          jruc    pcjsx
     555 00002540           pcjsnopush
     556                    
     557                    
     558 00002540     09c0          movi    07fH,a0
         00002550     007f  
     559 00002560     0d3f          callr   rnd
         00002570     056b  
     560 00002580     ca04          jrz     pcjsnewseek
     561                    
     562 00002590     b5a0          move    *a13(plyr_d_seekcnt),a0
         000025a0     0480  
     563 000025b0     1420          subk    1,a0
     564 000025c0     c71c          jrgt    pcjsseek
     565                    
     566 000025d0           pcjsnewseek
     567 000025d0     b5a0          move    *a13(plyr_newdir),a0
         000025e0     03e0  
     568 000025f0     cf1b          jrnn    pcjscontsk                              ;Turning?
     569                    
     570 00002600     1a00          movk    16,a0
     571 00002610     0d3f          callr   rndrng0
         00002620     056e  
     572 00002630     24a0          sll     5,a0                            ;*32
     573 00002640     0b20          addi    pcjsseek_t,a0
         00002650 00002c40' 
     574                    
     575 00002670     9401          move    *a0+,a1
     576 00002680     b5ae          move    *a13(plyr_num),a14
         00002690     0100  
     577 000026a0     144e          subk    2,a14
     578 000026b0     c501          jrge    pcjslft
     579 000026c0     03a1          neg     a1
     580 000026d0     0b01  pcjslft addi    WRLDMID,a1
         000026e0     2000  
     581 000026f0     b02d          move    a1,*a13(plyr_d_seekx)
         00002700     0490  
     582                    
     583 00002710     9401          move    *a0+,a1
     584 00002720     b02d          move    a1,*a13(plyr_d_seeky)
         00002730     04a0  
     585                    
     586 00002740     09c0          movi    TSEC*3,a0
         00002750     009f  
     587 00002760     0d3f          callr   rndrng0
         00002770     0559  
     588 00002780     1340          addk    TSEC/2,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   15

     589                    
     590 00002790     b00d  pcjsseek        move    a0,*a13(plyr_d_seekcnt)
         000027a0     0480  
     591 000027b0           pcjscontsk
     592 000027b0     0d3f          callr   drone_seek
         000027c0     03f2  
     593 000027d0     cb07          jrnz    pcjsnotthere
     594                    
     595 000027e0     1be0          movk    01fH,a0                         ;3%
     596 000027f0     0d3f          callr   rnd
         00002800     0542  
     597 00002810     cb03          jrnz    pcjsx
     598 00002820     5600          clr     a0
     599 00002830     b00d          move    a0,*a13(plyr_d_seekcnt)
         00002840     0480  
     600                    
     601 00002850           pcjsnotthere
     602                    
     603                    
     604 00002850           pcjsx
     605 00002850     0960          rets
     606                    
     607                    
     608 00002860           pcjsmdsk_t                                      ;Mode switch max seek time
     609 00002860     0032          .word   50,50,50,50,50          ;Up 15-11
     610 000028b0     0028          .word   40,40,40,35,30          ;10-6
     611 00002900     0019          .word   25,22,20,18,16          ;5-1
     612 00002950     000e          .word   14                      ;Even score
     613 00002960     000a          .word   10,8,6,4,4              ;Dn 1-5
     614 000029b0     0004          .word   4,3,3,3,2               ;6-10
     615 00002a00     0002          .word   2,2,2,2,1               ;11-15
     616                    
     617 00002a50           pcjsp_t                                 ;% to push
     618 00002a50     0001          .word   1,1,1,1,1
     619 00002aa0     0002          .word   2,2,2,2,3
     620 00002af0     0003          .word   3,3,4,4,5
     621 00002b40     0005          .word   5
     622 00002b50     0005          .word   5,6,8,10,13
     623 00002ba0     000f          .word   15,17,18,20,20
     624 00002bf0     0019          .word   25,30,35,40,50
     625                    
     626                    
     627                            .asg    CZMID,Z
     628 00002c40           pcjsseek_t
     629 00002c40     fec0          .word   -320,Z-160, -250,Z-160, -120,Z-100      ;3ptrs
     630 00002ca0     ff88          .word   -120,Z
     631 00002cc0     ff88          .word   -120,Z+100, -250,Z+160, -320,Z+160
     632                    
     633 00002d20     fec0          .word   -320,Z-100, -250,Z-80, -200,Z-50        ;2ptrs
     634 00002d80     ff4c          .word   -180,Z
     635 00002da0     ff38          .word   -200,Z+50, -250,Z+80, -320,Z+100
     636                    
     637 00002e00     feca          .word   -310,Z-10, -300,Z, -310,Z+10
     638                    
     639                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   16

     640                    
     641 00002e60            SUBRP  drone_pass
     642                    
     643 00002e60     05a0          move    @PSTATUS,a0                     ;Plyr start bits 0-3
         00002e70 00000000! 
     644 00002e90     b5a1          move    *a13(plyr_num),a1
         00002ea0     0100  
     645 00002eb0                   XORK    1,a1
     646 00002ed0     4a20          btst    a1,a0
     647 00002ee0     cb3f          jrnz    vkaxx                           ;Teammate is a human?
     648                    
     649 00002ef0     b5a0          move    *a13(plyr_tmdist),a0
         00002f00     02f0  
     650 00002f10     1140          addk    10,a0
     651                    
     652 00002f20     b5a1          move    *a13(plyr_o1dist),a1            ;0CHhk if o1 in my way
         00002f30     0310  
     653 00002f40     4820          cmp     a1,a0
     654 00002f50     c40e          jrlt    vkaxo1ok
     655                    
     656 00002f60     b5ae          move    *a13(plyr_tmdir),a14
         00002f70     02e0  
     657 00002f80     b5a1          move    *a13(plyr_o1dir),a1
         00002f90     0300  
     658 00002fa0     45c1          sub     a14,a1
     659 00002fb0     0381          abs     a1
     660 00002fc0     0b41          cmpi    64,a1
         00002fd0     ffbf  
     661 00002fe0     c603          jrle    vkaxdsml
     662 00002ff0     0be1          subi    128,a1
         00003000     ff7f  
     663 00003010     0381          abs     a1
     664 00003020     1601  vkaxdsml        subk    16,a1
     665 00003030     c41e          jrlt    vkaxinway
     666 00003040           vkaxo1ok
     667                    
     668 00003040     b5a1          move    *a13(plyr_o2dist),a1            ;0CHhk if o2 in my way
         00003050     0330  
     669 00003060     4820          cmp     a1,a0
     670 00003070     c40e          jrlt    vkaxo2ok
     671                    
     672 00003080     b5ae          move    *a13(plyr_tmdir),a14
         00003090     02e0  
     673 000030a0     b5a1          move    *a13(plyr_o2dir),a1
         000030b0     0320  
     674 000030c0     45c1          sub     a14,a1
     675 000030d0     0381          abs     a1
     676 000030e0     0b41          cmpi    64,a1
         000030f0     ffbf  
     677 00003100     c603          jrle    vkaxdsml2
     678 00003110     0be1          subi    128,a1
         00003120     ff7f  
     679 00003130     0381          abs     a1
     680 00003140     1601  vkaxdsml2       subk    16,a1
     681 00003150     c40c          jrlt    vkaxinway
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   17

     682 00003160           vkaxo2ok
     683                    
     684 00003160     b7a1          move    *a13(plyr_tmproc_p),a1,L
         00003170     0110  
     685 00003180           vkaxtmclos
     686 00003180     b420          move    *a1(plyr_seq),a0
         00003190     0170  
     687 000031a0     1600          subk    RUNDRIBTURB_SEQ,a0
     688 000031b0     c312          jrhi    vkaxx                           ;Tm is doing something?
     689                    
     690 000031c0     8560          move    *a11,a0                         ;>Pass
     691 000031d0     0ba0          ori     BUT2_M<<8|BUT2_M|BUT3_M,a0
         000031e0 00002060  
     692 00003200     800b          move    a0,*a11
     693                    
     694 00003210     0960          rets
     695                    
     696 00003220           vkaxinway
     697 00003220     b5a1          move    *a13(plyr_ohpdist),a1
         00003230     0390  
     698 00003240     0b41          cmpi    250,a1
         00003250     ff05  
     699 00003260     c407          jrlt    vkaxx
     700 00003270     b7a1          move    *a13(plyr_tmproc_p),a1,L
         00003280     0110  
     701 00003290     b420          move    *a1(plyr_ohpdist),a0
         000032a0     0390  
     702 000032b0     0b40          cmpi    240,a0
         000032c0     ff0f  
     703 000032d0     c4ea          jrlt    vkaxtmclos                              ;Teammate is close to hoop?
     704                    
     705 000032e0     5600  vkaxx   clr     a0
     706 000032f0     0960          rets
     707                    
     708                    
     709                    
     710 00003300            SUBRP  drone_defence
     711                    
     712 00003300                   PUSH    a7,a10
     713                    
     714                    
     715 00003320     05a5          move    @ballpnum,a5
         00003330 00000000! 
     716 00003350     24a5          sll     5,a5
     717 00003360     0b25          addi    plyrproc_t,a5
         00003370 00000000! 
     718 00003390     86a5          move    *a5,a5,L                ;A5=*Proc of opponent with ball
     719                    
     720                    
     721 000033a0     0d3f          callr   drone_getcurskillo
         000033b0     0356  
     722 000033c0     4c07          move    a0,a7                   ;A7=Ptsdn+skill for indexing (*16)
     723                    
     724                    
     725 000033d0     5600          clr     a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   18

     726 000033e0     b00d          move    a0,*a13(plyr_d_cflgs)
         000033f0     0470  
     727                    
     728 00003400     b5ae          move    *a13(plyr_d_mode),a14
         00003410     0450  
     729 00003420     ce13          jrn     lqkhinmd                        ;Already in mode?
     730                    
     731 00003430     1420          subk    1,a0                    ;-1
     732 00003440     b00d          move    a0,*a13(plyr_d_mode)
         00003450     0450  
     733                    
     734 00003460     4cee          move    a7,a14
     735 00003470     0b2e          addi    lqkhmdsk_t,a14
         00003480 000045e0' 
     736 000034a0     85c0          move    *a14,a0
     737 000034b0     4c02          move    a0,a2
     738 000034c0     2fc2          srl     2,a2                    ;/4
     739                    
     740 000034d0     0d3f          callr   rndrng0
         000034e0     0482  
     741 000034f0     1020          addk    1,a0
     742 00003500     4040          add     a2,a0
     743 00003510     b00d          move    a0,*a13(plyr_d_seekcnt)
         00003520     0480  
     744                    
     745 00003530     5600          clr     a0
     746 00003540     b009          move    a0,*a9(pld_d_nastycnt)
         00003550     0000  
     747 00003560           lqkhinmd
     748                    
     749                    
     750 00003560     184a          movk    2,a10                   ;>Update nasty mode
     751 00003570     07ae          move    @game_time,a14,L
         00003580 00000000! 
     752                    
     753 000035a0     0b4e          cmpi    0800H,a14
         000035b0     f7ff  
     754 000035c0     c427          jrlt    lqkhnasty                       ;Less than 8 secs?
     755                    
     756 000035d0     05a2          move    @gmqrtr,a2
         000035e0 00000000! 
     757 00003600     1462          subk    3,a2
     758 00003610     c408          jrlt    lqkhchkst
     759 00003620     b5a1          move    *a13(plyr_ptsdown),a1
         00003630     0440  
     760 00003640     1061          addk    3,a1
     761 00003650     c604          jrle    lqkhchkst                       ;Winning by 3 or more?
     762 00003660     0b6e          cmpi    030000H,a14
         00003670 fffcffff  
     763 00003690     c41a          jrlt    lqkhnasty                       ;Less than 30 secs?
     764                    
     765 000036a0     05ae  lqkhchkst       move    @shotimer+16,a14        ;Tens
         000036b0 00000010! 
     766 000036d0     cb05          jrnz    lqkhscok
     767 000036e0     05ae          move    @shotimer,a14           ;Ones
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   19

         000036f0 00000000! 
     768 00003710     14ae          subk    5,a14
     769 00003720     c411          jrlt    lqkhnasty                       ;Less than 5 secs?
     770                    
     771 00003730     b52a  lqkhscok        move    *a9(pld_d_nastycnt),a10
         00003740     0000  
     772 00003750     c70d          jrgt    lqkhnaston
     773                    
     774 00003760     09c0          movi    999,a0
         00003770     03e7  
     775 00003780     0d3f          callr   rndrng0
         00003790     0457  
     776                    
     777 000037a0     4cee          move    a7,a14
     778 000037b0     0b2e          addi    lqkhnast_t,a14
         000037c0 000047d0' 
     779 000037e0     85c1          move    *a14,a1
     780 000037f0     4820          cmp     a1,a0
     781 00003800     c505          jrge    lqkhnonast                      ;No nasty?
     782                    
     783 00003810     09ca          movi    TSEC,a10
         00003820     0035  
     784                    
     785 00003830     142a  lqkhnaston      subk    1,a10
     786 00003840     b149  lqkhnasty       move    a10,*a9(pld_d_nastycnt)
         00003850     0000  
     787 00003860           lqkhnonast
     788                    
     789                    
     790 00003860     b5a0          move    *a13(plyr_d_seekcnt),a0
         00003870     0480  
     791 00003880     1420          subk    1,a0
     792 00003890     c770          jrgt    lqkhseek
     793                    
     794 000038a0     b5a2          move    *a13(plyr_num),a2
         000038b0     0100  
     795 000038c0                   XORK    2,a2
     796 000038e0     4c44          move    a2,a4
     797 000038f0     24a4          sll     5,a4                    ;*32
     798 00003900     0b24          addi    plyrproc_t,a4
         00003910 00000000! 
     799 00003930     8684          move    *a4,a4,L
     800 00003940     48a4          cmp     a5,a4
     801 00003950     ca2d          jreq    lqkhguard                       ;I'm on guy with ball?
     802                    
     803 00003960     b4a0          move    *a5(plyr_ohpdist),a0
         00003970     0390  
     804 00003980     0b40          cmpi    300,a0
         00003990     fed3  
     805 000039a0     c728          jrgt    lqkhguard                       ;Too far to worry about?
     806                    
     807 000039b0     b4a0          move    *a5(plyr_seqflgs),a0
         000039c0     0180  
     808 000039d0     1fc0          btst    DUNK_B,a0
     809 000039e0     cb23          jrnz    lqkhgbc                 ;He's dunking?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   20

     810                    
     811 000039f0     b7a3          move    *a13(plyr_tmproc_p),a3,L
         00003a00     0110  
     812 00003a10     b460          move    *a3(plyr_seq),a0
         00003a20     0170  
     813 00003a30     0be0          subi    STAGGER_SEQ,a0
         00003a40     ffd2  
     814 00003a50     c202          jrls    lqkhtmok
     815 00003a60     14a0          subk    FLYBACKWB2_SEQ-STAGGER_SEQ,a0
     816 00003a70     c21a          jrls    lqkhgbc                 ;Teammates staggered?
     817 00003a80           lqkhtmok
     818 00003a80     b46e          move    *a3(plyr_o1dist),a14
         00003a90     0310  
     819 00003aa0     b461          move    *a3(plyr_o1dir),a1
         00003ab0     0300  
     820 00003ac0     1fe2          btst    0,a2
     821 00003ad0     cb04          jrnz    lqkhp1
     822 00003ae0     b46e          move    *a3(plyr_o2dist),a14
         00003af0     0330  
     823 00003b00     b461          move    *a3(plyr_o2dir),a1
         00003b10     0320  
     824 00003b20           lqkhp1
     825 00003b20     b460          move    *a3(plyr_hpdir),a0      ;Find dir difference
         00003b30     0360  
     826 00003b40     4420          sub     a1,a0
     827 00003b50     0380          abs     a0
     828 00003b60     0b40          cmpi    040H,a0
         00003b70     ffbf  
     829 00003b80     c603          jrle    lqkhdsml
     830 00003b90     0be0          subi    080H,a0
         00003ba0     ff7f  
     831 00003bb0     0380          abs     a0
     832 00003bc0     1780  lqkhdsml        subk    28,a0
     833 00003bd0     c604          jrle    lqkhgbc                 ;TM not between op and hoop?
     834                    
     835 00003be0     0b4e          cmpi    160,a14
         00003bf0     ff5f  
     836 00003c00     c701          jrgt    lqkhgbc                 ;TM not guarding?
     837 00003c10     c001          jruc    lqkhguard
     838                    
     839 00003c20     4ca4  lqkhgbc move    a5,a4                   ;Guard ball carrier
     840 00003c30           lqkhguard
     841 00003c30     b682          move    *a4(PA8),a2,L           ;*Obj
         00003c40     00c0  
     842                    
     843 00003c50     b440          move    *a2(OXPOS),a0
         00003c60     0090  
     844 00003c70     b44e          move    *a2(OXANI+16),a14
         00003c80     01f0  
     845 00003c90     41c0          add     a14,a0                  ;X
     846 00003ca0     b441          move    *a2(OZPOS),a1           ;Z
         00003cb0     00d0  
     847                    
     848 00003cc0     b64e          move    *a2(OXVEL),a14,L
         00003cd0     0020  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   21

     849 00003ce0     2a8e          sra     16-4,a14                ;16 ticks from now
     850 00003cf0     41c0          add     a14,a0
     851 00003d00     b64e          move    *a2(OZVEL),a14,L
         00003d10     0060  
     852 00003d20     2a8e          sra     16-4,a14                ;16 ticks from now
     853 00003d30     41c1          add     a14,a1
     854                    
     855 00003d40     4d4a          move    a10,a10
     856 00003d50     c710          jrgt    lqkhsetseek             ;Nasty on?
     857                    
     858 00003d60     b4ae          move    *a5(plyr_seqflgs),a14
         00003d70     0180  
     859 00003d80     1ece          btst    SHOOT_B,a14
     860 00003d90     cb0c          jrnz    lqkhsetseek             ;Starting a shot?
     861                    
     862 00003da0     b5a2          move    *a13(plyr_myhoopx),a2   ;>Stay near oplyr between my basket
         00003db0     02c0  
     863 00003dc0     09c3          movi    CZMID,a3
         00003dd0     0492  
     864                    
     865 00003de0     4002          add     a0,a2
     866 00003df0     2420          sll     1,a0
     867 00003e00     4040          add     a2,a0
     868 00003e10     2bc0          sra     2,a0                    ;/4
     869                    
     870 00003e20     4023          add     a1,a3
     871 00003e30     2421          sll     1,a1
     872 00003e40     4061          add     a3,a1
     873 00003e50     2bc1          sra     2,a1                    ;/4
     874 00003e60           lqkhsetseek
     875 00003e60     b00d          move    a0,*a13(plyr_d_seekx)
         00003e70     0490  
     876 00003e80     b02d          move    a1,*a13(plyr_d_seeky)
         00003e90     04a0  
     877                    
     878 00003ea0     1b20          movk    25,a0
     879 00003eb0     b4a1          move    *a5(plyr_hpdist),a1
         00003ec0     0370  
     880 00003ed0     0b41          cmpi    320,a1
         00003ee0     febf  
     881 00003ef0     c50a          jrge    lqkhseek                        ;Far from my hoop?
     882                    
     883                    
     884 00003f00     4cee          move    a7,a14
     885 00003f10     0b2e          addi    lqkhskt_t,a14
         00003f20 000049c0' 
     886 00003f40     85c0          move    *a14,a0
     887 00003f50     4c02          move    a0,a2
     888 00003f60     2fc2          srl     2,a2                    ;/4
     889 00003f70     0d3f          callr   rndrng0
         00003f80     03d8  
     890 00003f90     4040          add     a2,a0
     891                    
     892 00003fa0     b00d  lqkhseek        move    a0,*a13(plyr_d_seekcnt)
         00003fb0     0480  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   22

     893                    
     894 00003fc0     0d3f          callr   drone_seek
         00003fd0     0271  
     895 00003fe0     4c02          move    a0,a2
     896                    
     897                    
     898                    
     899 00003ff0     b5ae          move    *a13(plyr_num),a14      ;>Get opponents proc
         00004000     0100  
     900 00004010     104e          addk    2,a14
     901 00004020     27ce          sll     32-2,a14
     902 00004030     2cee          srl     32-2-5,a14              ;*32
     903 00004040     0b2e          addi    plyrproc_t,a14
         00004050 00000000! 
     904 00004070     87c0          move    *a14,a0,L
     905 00004080     b400          move    *a0(plyr_ohpdist),a0
         00004090     0390  
     906 000040a0     1540          subk    10,a0
     907 000040b0     0b40          cmpi    300,a0
         000040c0     fed3  
     908 000040d0     c402          jrlt    lqkhlong
     909 000040e0     0be0          subi    80,a0                   ;Turbo earlier
         000040f0     ffaf  
     910 00004100           lqkhlong
     911 00004100     b5a1          move    *a13(plyr_hpdist),a1
         00004110     0370  
     912 00004120     4801          cmp     a0,a1
     913 00004130     c402          jrlt    lqkhicloser
     914 00004140     0b02          addi    BUT3_M,a2               ;Turbo
         00004150     0040  
     915 00004160           lqkhicloser
     916                    
     917                    
     918 00004160     b5a1          move    *a13(plyr_balldist),a1
         00004170     0350  
     919 00004180     0b41          cmpi    35,a1
         00004190     ffdc  
     920 000041a0     c702          jrgt    lqkhpsrnd                       ;!In his face?
     921                    
     922 000041b0     4d4a          move    a10,a10
     923 000041c0     c712          jrgt    lqkhps                  ;Nasty on?
     924                    
     925 000041d0           lqkhpsrnd
     926 000041d0     4cee          move    a7,a14
     927 000041e0     0b2e          addi    lqkhdist_t,a14
         000041f0 00004bb0' 
     928 00004210     85c0          move    *a14,a0
     929 00004220     4801          cmp     a0,a1
     930 00004230     c714          jrgt    lqkhskipsp                      ;Ball too far?
     931                    
     932 00004240     09c0          movi    999,a0
         00004250     03e7  
     933 00004260     0d3f          callr   rndrng0
         00004270     03a9  
     934                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   23

     935 00004280     4cee          move    a7,a14
     936 00004290     0b2e          addi    lqkhps_t,a14
         000042a0 00004db0' 
     937 000042c0     85c1          move    *a14,a1
     938 000042d0     4820          cmp     a1,a0
     939 000042e0     c509          jrge    lqkhskipsp                      ;Skip push?
     940 000042f0           lqkhps
     941 000042f0     2782          sll     32-4,a2
     942 00004300     2c82          srl     32-4,a2
     943 00004310     1002          addk    BUT2_M,a2               ;Steal
     944                    
     945 00004320     1820          movk    1,a0
     946 00004330     0d3f          callr   rnd
         00004340     038e  
     947 00004350     cb02          jrnz    lqkhskipsp                      ;50%?
     948                    
     949 00004360     0b02          addi    BUT2_M<<8|BUT3_M,a2     ;Push
         00004370     2040  
     950 00004380           lqkhskipsp
     951                    
     952                    
     953 00004380     b5ae          move    *a13(plyr_balldist),a14 ;0CHhk if I can block ball
         00004390     0350  
     954 000043a0     0b4e          cmpi    65,a14
         000043b0     ffbe  
     955 000043c0     c51d          jrge    lqkhnoblk
     956                    
     957 000043d0     b4a0          move    *a5(plyr_jmpcnt),a0
         000043e0     0400  
     958 000043f0     cb0a          jrnz    lqkhtryblk                      ;Plyr with ball is in air?
     959                    
     960 00004400     b4a0          move    *a5(plyr_seqflgs),a0
         00004410     0180  
     961 00004420     1ec0          btst    SHOOT_B,a0
     962 00004430     ca16          jrz     lqkhnoblk                       ;!Starting a shot?
     963 00004440     1960          movk    11,a0
     964 00004450     0d3f          callr   rndrng0
         00004460     038a  
     965 00004470     4c00          move    a0,a0
     966 00004480     cb11          jrnz    lqkhnoblk                       ;94% ignore?
     967 00004490     c00d          jruc    lqkhblk
     968                    
     969 000044a0           lqkhtryblk
     970 000044a0     4d4a          move    a10,a10
     971 000044b0     c70b          jrgt    lqkhblk                 ;Nasty on?
     972                    
     973 000044c0     09c0          movi    99,a0
         000044d0     0063  
     974 000044e0     0d3f          callr   rndrng0
         000044f0     0381  
     975 00004500     4cee          move    a7,a14
     976 00004510     0b2e          addi    lqkhblk_t,a14
         00004520 00004fa0' 
     977 00004540     85c1          move    *a14,a1
     978 00004550     4820          cmp     a1,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   24

     979 00004560     c503          jrge    lqkhnoblk
     980                    
     981 00004570           lqkhblk
     982 00004570     2782          sll     32-4,a2
     983 00004580     2c82          srl     32-4,a2
     984 00004590     1202          addk    BUT1_M,a2               ;Block
     985 000045a0           lqkhnoblk
     986                    
     987 000045a0     804b          move    a2,*a11
     988                    
     989 000045b0                   PULL    a7,a10
     990 000045d0     0960          rets
     991                    
     992                    
     993 000045e0           lqkhmdsk_t                                      ;Mode switch max seek time
     994 000045e0     0032          .word   50,50,50,50,50          ;Up 15-11
     995 00004630     0032          .word   50,50,45,45,40          ;10-6
     996 00004680     0021          .word   33,25,22,18,16          ;5-1
     997 000046d0     000e          .word   14                      ;Even score
     998 000046e0     000a          .word   10,8,6,4,4              ;Dn 1-5
     999 00004730     0004          .word   4,3,3,3,2               ;6-10
    1000 00004780     0002          .word   2,2,2,2,1               ;11-15
    1001                    
    1002 000047d0           lqkhnast_t                                      ;% to become nasty
    1003 000047d0     0000          .word   0,0,0,0,0
    1004 00004820     0001          .word   1,1,2,2,2
    1005 00004870     0003          .word   3,3,3,4,6
    1006 000048c0     0008          .word   8
    1007 000048d0     000a          .word   10,11,12,13,14
    1008 00004920     000f          .word   15,17,20,25,26
    1009 00004970     001b          .word   27,28,29,30,35
    1010 000049c0           lqkhskt_t                                       ;Max seek time
    1011 000049c0     003c          .word   60,60,58,55,52
    1012 00004a10     0030          .word   48,44,40,36,32
    1013 00004a60     001c          .word   28,24,22,18,16
    1014 00004ab0     000f          .word   15                      ;Even score
    1015 00004ac0     000f          .word   15,15,14,14,14
    1016 00004b10     000e          .word   14,14,14,13,13
    1017 00004b60     000d          .word   13,13,13,12,12
    1018                    
    1019 00004bb0           lqkhdist_t                                      ;Max dist to try push/steal
    1020 00004bb0     006e          .word   110,100,100,100,100
    1021 00004c00     005a          .word   90,90,80,80,80,80
    1022 00004c60     0046          .word   70,70,60,60,60
    1023 00004cb0     0032          .word   50
    1024 00004cc0     0032          .word   50,50,50,50,50
    1025 00004d10     0032          .word   50,50,50,50,50
    1026 00004d60     0032          .word   50,50,50,50,50
    1027 00004db0           lqkhps_t                                        ;% to push/steal
    1028 00004db0     0001          .word   1,2,2,2,2
    1029 00004e00     0003          .word   3,3,3,3,3
    1030 00004e50     0004          .word   4,4,4,5,5
    1031 00004ea0     0006          .word   6
    1032 00004eb0     0006          .word   6,6,8,10,13
    1033 00004f00     000f          .word   15,17,18,20,30
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   25

    1034 00004f50     0028          .word   40,60,80,150,250
    1035 00004fa0           lqkhblk_t                                       ;% to block
    1036 00004fa0     0001          .word   1,1,2,3,3
    1037 00004ff0     0003          .word   3,3,4,4,5
    1038 00005040     0006          .word   6,7,8,10,12
    1039 00005090     000e          .word   14
    1040 000050a0     0010          .word   16,18,20,25,30
    1041 000050f0     0023          .word   35,40,45,50,50
    1042 00005140     0032          .word   50,50,50,50,50
    1043                    
    1044                    
    1045                    
    1046 00005190            SUBR   drone2_setuptob
    1047                    
    1048 00005190                   PUSH    a2,a3,a4,a13
    1049                    
    1050 000051b0     1884          movk    4,a4
    1051 000051c0     09e3          movi    plyrproc_t,a3
         000051d0 00000000! 
    1052                    
    1053 000051f0     966d  xtftlp  move    *a3+,a13,L
    1054 00005200     b7a2          move    *a13(PA9),a2,L
         00005210     00a0  
    1055                    
    1056 00005220     1820          movk    1,a0
    1057 00005230     b5ae          move    *a13(plyr_ownball),a14
         00005240     0260  
    1058 00005250     ca20          jrz     xtftdef                 ;Defense?
    1059                                                            ;>Setup offense
    1060 00005260     ce01          jrn     xtftwob
    1061 00005270     1840          movk    2,a0
    1062 00005280     b00d  xtftwob move    a0,*a13(plyr_d_mode)
         00005290     0450  
    1063                    
    1064 000052a0     09c0          movi    TSEC,a0
         000052b0     0035  
    1065 000052c0     0d3f          callr   rndrng0
         000052d0     02a3  
    1066 000052e0     10a0          addk    5,a0
    1067 000052f0     b00d          move    a0,*a13(plyr_d_seekcnt)
         00005300     0480  
    1068                    
    1069 00005310     1900          movk    9-1,a0
    1070 00005320     0d3f          callr   rndrng0
         00005330     029d  
    1071 00005340     24a0          sll     5,a0                    ;*32
    1072 00005350     0b20          addi    xtftseek_t,a0
         00005360 00005650' 
    1073                    
    1074 00005380     9401          move    *a0+,a1
    1075 00005390     b5ae          move    *a13(plyr_num),a14
         000053a0     0100  
    1076 000053b0     144e          subk    2,a14
    1077 000053c0     c401          jrlt    xtftlft
    1078 000053d0     03a1          neg     a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   26

    1079 000053e0     0b01  xtftlft addi    WRLDMID,a1
         000053f0     2000  
    1080 00005400     b02d          move    a1,*a13(plyr_d_seekx)
         00005410     0490  
    1081                    
    1082 00005420     9401          move    *a0+,a1
    1083 00005430     b02d          move    a1,*a13(plyr_d_seeky)
         00005440     04a0  
    1084                    
    1085 00005450     c01a          jruc    xtftnxt
    1086                    
    1087                    
    1088 00005460           xtftdef                                 ;>Setup defense
    1089 00005460     09ce          movi    -1,a14
         00005470     ffff  
    1090 00005480     b1cd          move    a14,*a13(plyr_d_mode)   ;Defense
         00005490     0450  
    1091                    
    1092 000054a0     5600          clr     a0
    1093 000054b0     b002          move    a0,*a2(pld_d_nastycnt)
         000054c0     0000  
    1094                    
    1095 000054d0     0d3f          callr   drone_getcurskillo
         000054e0     0143  
    1096                    
    1097 000054f0     0b20          addi    xtftmdsk_t,a0
         00005500 00005770' 
    1098 00005520     8400          move    *a0,a0
    1099 00005530     4c02          move    a0,a2
    1100 00005540     2fc2          srl     2,a2                    ;/4
    1101                    
    1102 00005550     0d3f          callr   rndrng0
         00005560     027a  
    1103 00005570     1020          addk    1,a0
    1104 00005580     4002          add     a0,a2
    1105                    
    1106 00005590     1820          movk    1,a0
    1107 000055a0     0d3f          callr   rnd
         000055b0     0267  
    1108 000055c0     cb01          jrnz    xtftsk
    1109 000055d0     2fe2          srl     1,a2
    1110 000055e0           xtftsk
    1111 000055e0     b04d          move    a2,*a13(plyr_d_seekcnt)
         000055f0     0480  
    1112                    
    1113 00005600           xtftnxt
    1114 00005600     0d84          dsj     a4,xtftlp
         00005610     ffbd  
    1115                    
    1116 00005620                   PULL    a2,a3,a4,a13
    1117 00005640     0960          rets
    1118                    
    1119                    
    1120                            .asg    CZMID,Z
    1121 00005650           xtftseek_t
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   27

    1122 00005650     fee8          .word   -280,Z-160, -200,Z-160, -100,Z-160, -50,Z-160
    1123 000056d0     0000          .word   0,Z
    1124 000056f0     fee8          .word   -280,Z+160, -200,Z+160, -100,Z+160, -50,Z+160
    1125                    
    1126                    
    1127 00005770           xtftmdsk_t                                      ;Mode switch max seek time
    1128 00005770     0032          .word   50,50,50,50,50          ;Up 15-11
    1129 000057c0     0032          .word   50,50,45,45,40          ;10-6
    1130 00005810     0021          .word   33,25,22,18,16          ;5-1
    1131 00005860     000e          .word   14                      ;Even score
    1132 00005870     000a          .word   10,8,6,4,4              ;Dn 1-5
    1133 000058c0     0004          .word   4,3,3,3,2               ;6-10
    1134 00005910     0002          .word   2,2,2,2,1               ;11-15
    1135                    
    1136                    
    1137                    
    1138 00005960            SUBRP  drone_chaseball
    1139                    
    1140 00005960     b5ae          move    *a13(plyr_rcvpass),a14
         00005970     0230  
    1141 00005980     c700          jrgt    drone_offwoball         ;I'm rcving ball?
         00005990     fc64  
    1142                    
    1143 000059a0     b7a2          move    *a13(plyr_tmproc_p),a2,L
         000059b0     0110  
    1144 000059c0     b44e          move    *a2(plyr_rcvpass),a14
         000059d0     0230  
    1145 000059e0     c700          jrgt    drone_offwoball         ;Teammate rcving ball?
         000059f0     fc5e  
    1146                    
    1147                    
    1148 00005a00     5600          clr     a0
    1149 00005a10     b00d          move    a0,*a13(plyr_d_cflgs)
         00005a20     0470  
    1150                    
    1151 00005a30     b5ae          move    *a13(plyr_d_mode),a14
         00005a40     0450  
    1152 00005a50     ca18          jrz     hxhdinmd                        ;Already in mode?
    1153                    
    1154 00005a60     b00d          move    a0,*a13(plyr_d_mode)
         00005a70     0450  
    1155                    
    1156 00005a80     b5ae          move    *a13(plyr_ptsdown),a14
         00005a90     0440  
    1157 00005aa0     b5a0          move    *a13(plyr_d_skill),a0
         00005ab0     0460  
    1158 00005ac0     400e          add     a0,a14
    1159 00005ad0     0b4e          cmpi    15,a14
         00005ae0     fff0  
    1160 00005af0     c601          jrle    hxhdmxdnok
    1161 00005b00     19ee          movk    15,a14
    1162 00005b10     11ee  hxhdmxdnok      addk    15,a14
    1163 00005b20     c501          jrge    hxhddnok
    1164 00005b30     57ce          clr     a14
    1165 00005b40     248e  hxhddnok        sll     4,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   28

    1166 00005b50     0b2e          addi    hxhdmdsk_t,a14
         00005b60 00006310' 
    1167 00005b80     85c0          move    *a14,a0
    1168 00005b90     0d3f          callr   rndrng0
         00005ba0     0216  
    1169 00005bb0     1040          addk    2,a0
    1170 00005bc0     b00d          move    a0,*a13(plyr_d_seekcnt)
         00005bd0     0480  
    1171                    
    1172 00005be0           hxhdinmd
    1173                    
    1174 00005be0     b5a0          move    *a13(plyr_d_seekcnt),a0
         00005bf0     0480  
    1175 00005c00     1420          subk    1,a0
    1176 00005c10     c741          jrgt    hxhdseek
    1177                    
    1178 00005c20     b440          move    *a2(plyr_seq),a0
         00005c30     0170  
    1179 00005c40     0be0          subi    STAGGER_SEQ,a0
         00005c50     ffd2  
    1180 00005c60     c202          jrls    hxhdtmok
    1181 00005c70     14a0          subk    FLYBACKWB2_SEQ-STAGGER_SEQ,a0
    1182 00005c80     c210          jrls    hxhdchaseb                      ;Teammates staggered?
    1183 00005c90           hxhdtmok
    1184 00005c90     b5a0          move    *a13(plyr_balldist),a0
         00005ca0     0350  
    1185 00005cb0     b44e          move    *a2(plyr_balldist),a14
         00005cc0     0350  
    1186 00005cd0     49c0          cmp     a14,a0
    1187 00005ce0     c40a          jrlt    hxhdchaseb                      ;I'm closer?
    1188                    
    1189 00005cf0     b5a0          move    *a13(plyr_ohoopx),a0    ;Go for opponents top of 3 pt line
         00005d00     02d0  
    1190 00005d10     0be0          subi    WRLDMID,a0
         00005d20     dfff  
    1191 00005d30     2bc0          sra     2,a0                    ;/4
    1192 00005d40     0b00          addi    WRLDMID,a0
         00005d50     2000  
    1193 00005d60     09c1          movi    CZMID,a1
         00005d70     0492  
    1194 00005d80     c012          jruc    hxhdsetxz
    1195                    
    1196 00005d90           hxhdchaseb
    1197 00005d90     07a5          move    @ballobj_p,a5,L
         00005da0 00000000! 
    1198                    
    1199 00005dc0     b4a0          move    *a5(OXPOS),a0
         00005dd0     0090  
    1200 00005de0     b4ae          move    *a5(OXANI+16),a14
         00005df0     01f0  
    1201 00005e00     41c0          add     a14,a0
    1202 00005e10     b6ae          move    *a5(OXVEL),a14,L
         00005e20     0020  
    1203 00005e30     2a6e          sra     16-3,a14                ;8 ticks from now
    1204 00005e40     41c0          add     a14,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   29

    1205                    
    1206 00005e50     b4a1          move    *a5(OZPOS),a1
         00005e60     00d0  
    1207 00005e70     b6ae          move    *a5(OZVEL),a14,L
         00005e80     0060  
    1208 00005e90     2a6e          sra     16-3,a14                ;8 ticks from now
    1209 00005ea0     41c1          add     a14,a1
    1210 00005eb0           hxhdsetxz
    1211 00005eb0     b00d          move    a0,*a13(plyr_d_seekx)
         00005ec0     0490  
    1212 00005ed0     b02d          move    a1,*a13(plyr_d_seeky)
         00005ee0     04a0  
    1213                    
    1214                    
    1215 00005ef0     b5ae          move    *a13(plyr_ptsdown),a14
         00005f00     0440  
    1216 00005f10     b5a0          move    *a13(plyr_d_skill),a0
         00005f20     0460  
    1217 00005f30     400e          add     a0,a14
    1218 00005f40     0b4e          cmpi    15,a14
         00005f50     fff0  
    1219 00005f60     c601          jrle    hxhdmxdnok2
    1220 00005f70     19ee          movk    15,a14
    1221 00005f80           hxhdmxdnok2
    1222 00005f80     11ee          addk    15,a14
    1223 00005f90     c501          jrge    hxhddnok2
    1224 00005fa0     57ce          clr     a14
    1225 00005fb0     248e  hxhddnok2       sll     4,a14
    1226 00005fc0     0b2e          addi    hxhdskt_t,a14
         00005fd0 00006500' 
    1227 00005ff0     85c0          move    *a14,a0
    1228                    
    1229 00006000     0d3f          callr   rndrng0
         00006010     01cf  
    1230 00006020     10a0          addk    5,a0
    1231 00006030     b00d  hxhdseek        move    a0,*a13(plyr_d_seekcnt)
         00006040     0480  
    1232                    
    1233 00006050     0d3f          callr   drone_seek
         00006060     0068  
    1234                    
    1235                    
    1236 00006070     b5a2          move    *a13(plyr_balldist),a2  ;0CHhk if I can jump at ball
         00006080     0350  
    1237 00006090     17c2          subk    30,a2
    1238 000060a0     c525          jrge    hxhdnojmp
    1239                    
    1240 000060b0     b4a0          move    *a5(OYPOS),a0
         000060c0     00b0  
    1241 000060d0     1320          addk    25,a0
    1242 000060e0     b501          move    *a8(OYPOS),a1
         000060f0     00b0  
    1243 00006100     4820          cmp     a1,a0
    1244 00006110     c41e          jrlt    hxhdnojmp
    1245                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   30

    1246 00006120     b5a0          move    *a13(plyr_num),a0
         00006130     0100  
    1247 00006140     05a1          move    @plyrnumonfire,a1
         00006150 00000000! 
    1248 00006170     4801          cmp     a0,a1
    1249 00006180     ca04          jreq    hxhdonfire                      ;On fire?
    1250                    
    1251 00006190     18e0          movk    7,a0
    1252 000061a0     0d3f          callr   rnd
         000061b0     01a7  
    1253 000061c0     cb13          jrnz    hxhdnojmp                       ;87%?
    1254 000061d0           hxhdonfire
    1255 000061d0     07a1          move    @game_time,a1,L         ;0DHon't take our own shots off the rim
         000061e0 00000000! 
    1256 00006200     0b41          cmpi    0300H,a1
         00006210     fcff  
    1257 00006220     c709          jrgt    hxhdj                   ;More than 3 secs?
    1258                    
    1259 00006230     b5a0          move    *a13(plyr_num),a0
         00006240     0100  
    1260 00006250     05a1          move    @ballpnumshot,a1
         00006260 00000000! 
    1261 00006280     2fe0          srl     1,a0
    1262 00006290     2fe1          srl     1,a1
    1263 000062a0     4801          cmp     a0,a1
    1264 000062b0     ca04          jreq    hxhdnojmp                       ;My team?
    1265                    
    1266 000062c0     8560  hxhdj   move    *a11,a0                 ;Jmp
    1267 000062d0                   ORK     BUT1_M,a14
    1268 000062f0     800b          move    a0,*a11
    1269 00006300           hxhdnojmp
    1270                    
    1271 00006300     0960          rets
    1272                    
    1273 00006310           hxhdmdsk_t                                      ;Mode switch max seek time
    1274 00006310     0050          .word   80,80,80,80,80          ;Up 15-11
    1275 00006360     0050          .word   80,70,60,55,50          ;10-6
    1276 000063b0     0021          .word   33,25,22,18,16          ;5-1
    1277 00006400     000e          .word   14                      ;Even score
    1278 00006410     000a          .word   10,8,6,4,4              ;Dn 1-5
    1279 00006460     0004          .word   4,3,3,3,2               ;6-10
    1280 000064b0     0002          .word   2,2,2,2,1               ;11-15
    1281                    
    1282 00006500           hxhdskt_t                                       ;Max seek time
    1283 00006500     0032          .word   50,50,45,45,45
    1284 00006550     0028          .word   40,40,30,30,20
    1285 000065a0     0014          .word   20,16,15,15,15
    1286 000065f0     000f          .word   15
    1287 00006600     000f          .word   15,15,15,15,15
    1288 00006650     000f          .word   15,15,15,15,15
    1289 000066a0     000f          .word   15,15,15,15,15
    1290                    
    1291                    
    1292                    
    1293 000066f0            SUBRP  drone_seek
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   31

    1294                    
    1295 000066f0     b5a0          move    *a13(plyr_d_seekx),a0
         00006700     0490  
    1296 00006710     b5a1          move    *a13(plyr_d_seeky),a1
         00006720     04a0  
    1297                    
    1298                    
    1299 00006730            SUBRP  drone_seekxy
    1300                    
    1301 00006730     4e40          move    a2,b0
    1302                    
    1303 00006740     b502          move    *a8(OXPOS),a2
         00006750     0090  
    1304 00006760     b50e          move    *a8(OXANI+16),a14
         00006770     01f0  
    1305 00006780     41c2          add     a14,a2
    1306 00006790     4402          sub     a0,a2
    1307                    
    1308 000067a0     5600          clr     a0
    1309                    
    1310 000067b0     4c4e          move    a2,a14
    1311 000067c0     0382          abs     a2
    1312 000067d0     1542          subk    10,a2
    1313 000067e0     c604          jrle    ivrnonx
    1314 000067f0     4dce          move    a14,a14
    1315 00006800     c401          jrlt    ivrnnolft
    1316 00006810     1480          subk    4,a0                    ;Left
    1317                    
    1318 00006820     1100  ivrnnolft       addk    8,a0                    ;Rgt
    1319 00006830           ivrnonx
    1320 00006830     b502          move    *a8(OZPOS),a2
         00006840     00d0  
    1321                    
    1322 00006850     4422          sub     a1,a2
    1323 00006860     4c4e          move    a2,a14
    1324 00006870     0382          abs     a2
    1325 00006880     1542          subk    10,a2
    1326 00006890     c604          jrle    ivrnonz
    1327 000068a0     4dce          move    a14,a14
    1328 000068b0     c401          jrlt    ivrnnoup
    1329 000068c0     1420          subk    1,a0                    ;Up
    1330                    
    1331 000068d0     1040  ivrnnoup        addk    2,a0                    ;Dn
    1332 000068e0           ivrnonz
    1333 000068e0     800b          move    a0,*a11
    1334                    
    1335 000068f0     4e12          move    b0,a2
    1336 00006900     4c00          move    a0,a0
    1337 00006910     0960          rets
    1338                    
    1339                    
    1340                    
    1341 00006920            SUBRP  drone_getcurskillo
    1342                    
    1343 00006920     b5a0          move    *a13(plyr_ptsdown),a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   32

         00006930     0440  
    1344 00006940     b5ae          move    *a13(plyr_d_skill),a14
         00006950     0460  
    1345 00006960     41c0          add     a14,a0
    1346 00006970     0b40          cmpi    15,a0
         00006980     fff0  
    1347 00006990     c601          jrle    tvtjmxdnok
    1348 000069a0     19e0          movk    15,a0
    1349 000069b0     11e0  tvtjmxdnok      addk    15,a0
    1350 000069c0     c501          jrge    tvtjdnok
    1351 000069d0     5600          clr     a0
    1352 000069e0     2480  tvtjdnok        sll     4,a0                    ;A7=Ptsdn+skill for indexing (*16)
    1353                    
    1354 000069f0     0960          rets
    1355                    
    1356                    
    1357                    
    1358                    
    1359 00006a00            SUBR   drone2_adjskill
    1360                    
    1361 00006a00                   PUSH    a2,a3,a4,a5,a6
    1362                    
    1363 00006a20     4c05          move    a0,a5
    1364 00006a30     1445          subk    2,a5
    1365 00006a40     0385          abs     a5
    1366 00006a50     05a1          move    @gmqrtr,a1
         00006a60 00000000! 
    1367 00006a80     0b41          cmpi    3,a1
         00006a90     fffc  
    1368 00006aa0     c201          jrls    jscnqok
    1369 00006ab0     1861          movk    3,a1                    ;Overtime
    1370 00006ac0     1860  jscnqok movk    3,a0
    1371 00006ad0     5e01          mpyu    a0,a1
    1372 00006ae0     4025          add     a1,a5                   ;A5=Quarter+minute index (0-11)
    1373                    
    1374                    
    1375 00006af0     19a0          movk    ADJDIFF,a0              ;Get difficulty level
    1376 00006b00     0d5f          calla   GET_ADJ                 ;Drone v2 is level 4 & 5
         00006b10 00000000! 
    1377 00006b30     1480          subk    4,a0                    ;-2 to 2
    1378 00006b40     4c06          move    a0,a6
    1379 00006b50     2420          sll     1,a0                    ;*2
    1380 00006b60     4006          add     a0,a6                   ;A6=Difficulty adj (0 or 3)
    1381                    
    1382 00006b70     09e4          movi    plyrproc_t,a4
         00006b80 00000000! 
    1383 00006ba0     1890          movk    4,b0
    1384 00006bb0           jscnlp
    1385 00006bb0     9683          move    *a4+,a3,L
    1386                    
    1387 00006bc0     b462          move    *a3(plyr_d_skill),a2
         00006bd0     0460  
    1388                    
    1389 00006be0     b46e          move    *a3(plyr_ptsdown),a14
         00006bf0     0440  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   33

    1390 00006c00     0b4e          cmpi    15,a14
         00006c10     fff0  
    1391 00006c20     c601          jrle    jscnmxdnok
    1392 00006c30     19ee          movk    15,a14
    1393 00006c40     11ee  jscnmxdnok      addk    15,a14
    1394 00006c50     c501          jrge    jscndnok
    1395 00006c60     57ce          clr     a14
    1396 00006c70     248e  jscndnok        sll     4,a14
    1397 00006c80     0b2e          addi    jscnadj_t,a14
         00006c90 00006fc0' 
    1398 00006cb0     85ce          move    *a14,a14
    1399 00006cc0     41c2          add     a14,a2
    1400                    
    1401 00006cd0     4cae          move    a5,a14                  ;0CHhk quarter minimum
    1402 00006ce0     246e          sll     3,a14
    1403 00006cf0     0b2e          addi    jscnmin_t,a14
         00006d00 000071b0' 
    1404 00006d20     8fce          movb    *a14,a14
    1405 00006d30     40ce          add     a6,a14
    1406 00006d40     49c2          cmp     a14,a2
    1407 00006d50     c501          jrge    jscnminok
    1408 00006d60     4dc2          move    a14,a2
    1409 00006d70           jscnminok
    1410 00006d70     b461          move    *a3(plyr_num),a1
         00006d80     0100  
    1411 00006d90                   XORK    1,a1
    1412 00006db0     05ae          move    @PSTATUS,a14
         00006dc0 00000000! 
    1413 00006de0     4a2e          btst    a1,a14
    1414 00006df0     cb15          jrnz    jscntminok                      ;Teammate is human?
    1415                    
    1416 00006e00     05a1          move    @team1,a1               ;0CHhk team minimum
         00006e10 00000000! 
    1417 00006e30     0b50          cmpi    3,b0
         00006e40     fffc  
    1418 00006e50     c503          jrge    jscnt1
    1419 00006e60     05a1          move    @team2,a1
         00006e70 00000000! 
    1420 00006e90     1980  jscnt1  movk    12,a0
    1421 00006ea0     5e01          mpyu    a0,a1
    1422                    
    1423 00006eb0     40a1          add     a5,a1
    1424 00006ec0     2461          sll     3,a1                    ;*8
    1425 00006ed0     0b21          addi    jscntdmin_t,a1
         00006ee0 00007210' 
    1426 00006f00     8e2e          movb    *a1,a14
    1427 00006f10     40ce          add     a6,a14
    1428 00006f20     49c2          cmp     a14,a2
    1429 00006f30     c501          jrge    jscntminok
    1430 00006f40     4dc2          move    a14,a2
    1431 00006f50           jscntminok
    1432 00006f50     b043          move    a2,*a3(plyr_d_skill)
         00006f60     0460  
    1433                    
    1434 00006f70     0d90          dsj     b0,jscnlp
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   34

         00006f80     ffc2  
    1435                    
    1436 00006f90                   PULL    a2,a3,a4,a5,a6
    1437 00006fb0     0960          rets
    1438                    
    1439                    
    1440 00006fc0     fffb  jscnadj_t       .word   -5,-5,-5,-5,-5
    1441 00007010     fffb          .word   -5,-5,-5,-4,-3
    1442 00007060     fffe          .word   -2,-1,0,0,0
    1443 000070b0     0000          .word   0
    1444 000070c0     0001          .word   1,1,2,2,3
    1445 00007110     0003          .word   3,4,4,5,5
    1446 00007160     0005          .word   5,6,6,6,7
    1447                    
    1448 000071b0       f1  jscnmin_t       .byte   -15,-12,-10, -8,-7,-6, -5,-4,-4, -3,-2,-3
    1449                    
    1450                    TMDIFF  .macro
    1451                            .byte   -10,-9,-8, -7,-6,-5, -4,-4,-3, -2,0,-2
    1452                            .endm
    1453 00007210           jscntdmin_t
    1454 00007210                   TMDIFF                                          ;ATL
    1455 00007270                   TMDIFF                                          ;BOST
    1456 000072d0                   TMDIFF                                          ;CHAR
    1457 00007330       06          .byte   6,7,8, 9,10,11, 12,12,13, 14,15,14      ;CHI (1)
    1458 00007390       fa          .byte   -6,-5,-5, -4,-3,-3, -2,-2,-2, -1,0,-1   ;CLEV (10)
    1459 000073f0                   TMDIFF                                          ;DAL
    1460 00007450                   TMDIFF                                          ;DEN
    1461 000074b0       fb          .byte   -5,-4,-4, -3,-2,-2, -1,-1,-1, 0,1,0     ;DET (9)
    1462 00007510                   TMDIFF                                          ;GOLD
    1463 00007570       fc          .byte   -4,-3,-3, -2,-1,-1, 0,0,0, 1,2,1        ;HOU (8)
    1464 000075d0       fd          .byte   -3,-2,-2, -1,0,0, 1,1,1, 2,3,2          ;IND (7)
    1465 00007630                   TMDIFF                                          ;LAC
    1466 00007690       ff          .byte   -1,-1,0, 1,1,1, 2,2,2, 3,4,3            ;LAL (6)
    1467 000076f0                   TMDIFF                                          ;MIAMI
    1468 00007750                   TMDIFF                                          ;MILW
    1469 000077b0                   TMDIFF                                          ;MINN
    1470 00007810                   TMDIFF                                          ;NJ
    1471 00007870       01          .byte   1,1,2, 3,3,3, 4,4,4, 5,6,5              ;NY (4)
    1472 000078d0                   TMDIFF                                          ;ORL
    1473 00007930                   TMDIFF                                          ;PHIL
    1474 00007990       04          .byte   4,4,5, 6,6,6, 7,7,7, 8,9,8              ;PHX (2)
    1475 000079f0       02          .byte   2,2,3, 4,4,4, 5,5,5, 6,7,6              ;PORT (3)
    1476 00007a50                   TMDIFF                                          ;SAC
    1477 00007ab0                   TMDIFF                                          ;SANANT
    1478 00007b10                   TMDIFF                                          ;SEA
    1479 00007b70       00          .byte   0,0,1, 2,2,2, 3,3,3, 4,5,4              ;UTAH (5)
    1480 00007bd0                   TMDIFF                                          ;WASH
    1481 00007c30                   .even
    1482                    
    1483                    
    1484                    
    1485 00007c30            SUBRP  rnd
    1486                    
    1487 00007c30     07a1          move    @RAND,a1,L
         00007c40 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:08 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   35

    1488 00007c60     6821          rl      a1,a1
    1489 00007c70     05ae          move    @HCOUNT,a14
         00007c80 c00001c0  
    1490 00007ca0     69c1          rl      a14,a1
    1491 00007cb0     41e1          add     sp,a1
    1492 00007cc0     0781          move    a1,@RAND,L
         00007cd0 00000000! 
    1493                    
    1494 00007cf0     5020          and     a1,a0
    1495 00007d00     0960          rets
    1496                    
    1497                    
    1498                    
    1499 00007d10            SUBRP  rndrng0
    1500                    
    1501 00007d10     07a1          move    @RAND,a1,L
         00007d20 00000000! 
    1502 00007d40     6821          rl      a1,a1
    1503 00007d50     05ae          move    @HCOUNT,a14
         00007d60 c00001c0  
    1504 00007d80     69c1          rl      a14,a1
    1505 00007d90     41e1          add     sp,a1
    1506 00007da0     0781          move    a1,@RAND,L
         00007db0 00000000! 
    1507                    
    1508 00007dd0     1020          addk    1,a0
    1509 00007de0     5e20          mpyu    a1,a0           ;Condition codes not valid!
    1510                    
    1511 00007df0     0960          rets
    1512                    
    1513                    
    1514                    
    1515                    
    1516                            .end

 No Errors,  No Warnings
