TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                    
       2                            .file   "plyr.asm"
       4                            .width  132
       5                            .option b,d,l,t
       6                            .mnolist
       7                    
       8                    
       9                            .include        "mproc.equ"             ;Mproc equates
      10                            .include        "disp.equ"              ;Display proc equates
      11                            .include        "gsp.equ"               ;Gsp asm equates
      12                            .include        "sys.equ"
      13                            .include        "audit.equ"
      14                            .include        "mac2.asm"
      15                            .include        "imgtbl.glo"
      16                            .include        "imgtbl2.glo"
      17                            .include        "game.equ"
      18                            .include        "shawn.hdr"             ;Macros
      19                            .asg            0,SEQT
      20                            .include        "plyr.equ"
      21                    
      22                    
      23                    
      24 00000000     f990  baddec_snd      .word   0f990H,72,081b7H,0      ;bad decision           <--change!
      25                    
      26 00000040     f3ff  win_snd         .word   0f3ffH,08H,080a5H,0     ;Winner snd
      27 00000080     fd94  swat_snd        .word   0fd94H,15,08157H,0      ;Swat ball (Steals & blocks)
      28 000000c0     fbf7  steal_snd       .word   0fbf7H,08H,08093H,0     ;Steal
      29 00000100     f584  sqk1_snd        .word   0f584H,04H,08114H,0     ;Sneaker squeek
      30 00000140     f584  sqk2_snd        .word   0f584H,04H,08115H,0
      31 00000180     f584  sqk3_snd        .word   0f584H,04H,08116H,0
      32 000001c0     f584  sqk4_snd        .word   0f584H,04H,08117H,0
      33 00000200     f894  airball_snd     .word   0f894H,038H,0814dH,0    ;crowd screams "air ball"
      34 00000240     f3a7  pass_snd        .word   0f3a7H,08H,0808cH,0     ;short pass
      35 00000280     f9f5  whstle_snd      .word   0f9f5H,030H,08148H,0    ;Ref whistle at game start
      36 000002c0     f3ff  tuneend_snd     .word   0f3ffH,08H,08003H,0     ;End game time tune
      37 00000300     f3ff  tuneend1_snd    .word   0f3ffH,08H,0800aH,0     ;End quarter 1 tune
      38 00000340     f3ff  tunehalf_snd    .word   0f3ffH,08H,08004H,0     ;Half time tune
      39                    
      40 00000380     f9f6  anncr1_snd      .word   0f9f6H,120,0818eH,0     ;He shoots from downtown
      41 000003c0     f9f6  anncr2_snd      .word   0f9f6H,110,08190H,0     ;He shoots from the outside
      42 00000400     f9f6  anncr4_snd      .word   0f9f6H,80,08183H,0      ;At the buzzer
      43 00000440     f9f6  anncr5_snd      .word   0f9f6H,70,0818bH,0      ;From long range
      44 00000480     fcb0  fball_snd       .word   0fcb0H,40,08179H,0      ;Fire ball launch
      45 000004c0     f9ff  overtime_snd    .word   0f9ffH,69,08180H,0      ;overtime!
      46 00000500     f1a0  rainbow_snd     .word   0f1a0H,99,081f0H,0      ;Rainbow
      47                    
      48                    
      49                    
      50                            .ref    p1taps
      51                            .ref    fatality
      52                            .ref    seq_stopfire
      53                            .ref    brick_count
      54                            .ref    last_power
      55                            .ref    qtr_purchased
      56                            .ref    call_scores
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    2

      57                            .ref    last_name_time
      58                    
      59                            .ref    plyrnumonfire
      60                            .ref    pushed_speech
      61                    
      62                            .ref    grand_champs_screen
      63                            .ref    show_hiscore
      64                            .ref    speech_playovrp
      65                    
      66                            .ref    rebound_delay
      67                            .ref    def_play_reward,flash_reward,sinecos_get,slamming
      68                            .ref    start_animate,pass_off,steals_off,idiot_box
      69                    
      70                            .ref    GET_ADJ
      71                    
      72                            .ref    pass_to_speech
      73                            .ref    shoots_speech
      74                            .ref    shot_type,shot_percentage,shot_distance
      75                            .ref    rejected_dnk_speech
      76                    
      77                            .ref    plyr_getattributes,snd_play1ovr
      78                    
      79                            .ref    scores,prt_top_scores
      80                            .ref    score_add,score_showtvpanel2
      81                            .ref    score_showtvpanel,tvpanelon
      82                            .ref    gmqrtr
      83                            .ref    clock_active
      84                            .ref    crplate_ptr
      85                            .ref    shot_clock,shotimer
      86                            .ref    arw_on1plyr
      87                            .ref    pushing_delay
      88                            .ref    cntrs_delay
      89                            .ref    game_time
      90                            .ref    sc_proc
      91                            .ref    stick_number
      92                            .ref    doalert_snd
      93                            .ref    flash_bigtxt
      94                    
      95                            .ref    player_data
      96                            .ref    inc_player_stat
      97                            .ref    stats_page,hint_page
      98                            .ref    stats_page2
      99                            .ref    rank_screen
     100                            .ref    save_player_records
     101                            .ref    game_purchased
     102                            .ref    team1,team2
     103                            .ref    show_ot_msg,scr1
     104                    
     105                            .ref    winner_stays_on
     106                            .ref    print_string_C2
     107                            .ref    mess_objid
     108                            .ref    setup_message
     109                            .ref    omlgmd_ascii
     110                    
     111                            .ref    pal_clean
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    3

     112                            .ref    pal_getf,pal_set
     113                            .ref    fade_down_half,fade_up_half
     114                    
     115                            .ref    SCRTST
     116                            .ref    IRQSKYE
     117                            .ref    PCNT
     118                            .ref    GAMSTATE,HALT
     119                            .ref    gndx
     120                            .ref    AUD,AUD1,GET_AUD,STORE_AUDIT
     121                            .ref    PSTATUS2
     122                            .ref    RNDPER
     123                            .ref    game_over
     124                            .ref    TWOPLAYERS
     125                            .ref    scale63_t
     126                    
     127                            .ref    ball_convfmprel
     128                            .ref    ballobj_p
     129                            .ref    ballpnum,ballpnumlast,ballpnumshot,ballfree
     130                            .ref    ballrimhitcnt,ballbbhitcnt
     131                            .ref    ballpasstime
     132                            .ref    ballscorezhit
     133                            .ref    ballptsforshot
     134                            .ref    ballprcv_p
     135                            .ref    ballgoaltcnt
     136                            .ref    ballsclastp
     137                            .ref    inbound
     138                            .ref    ballflash
     139                            .ref    t1dunkcnt
     140                            .ref    plyr_setptsdown
     141                    
     142                            .ref    halftime_showclips
     143                    
     144                            .ref    plyr_smoketrail
     145                    
     146                            .ref    drone_main,drone_adjskill
     147                            .ref    drone2on
     148                            .ref    w3run1
     149                    
     150                    
     151                    
     152 00000000                   .bss    reduce_3ptr,16
     153 00000540                   BSSX    kp_scores       ,32
     154 00000540                   BSSX    kp_team1        ,16
     155 00000540                   BSSX    kp_team2        ,16
     156                    
     157 00000540                   BSSX    pleasewt        ,16
     158 00000540                   BSSX    PSTATUS         ,16     ;Player in game bits (0-3)
     159                                                            ;/Must be in order!
     160 00000540                   BSSX    P1CTRL          ,16     ;P1 joy/but bits (0-3=UDLR, 4-6=B1-B3)
     161 00000540                   BSSX    P2CTRL          ,16     ;P2 (^ 8-14 are on for a on transition
     162 00000540                   BSSX    P3CTRL          ,16     ;P3 of 0-6)
     163 00000540                   BSSX    P4CTRL          ,16     ;P4
     164                    
     165 00000540                   BSSX    P1DATA          ,PDSIZE ;Player 1 data
     166 00000540                   BSSX    P2DATA          ,PDSIZE ;P2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    4

     167 00000540                   BSSX    P3DATA          ,PDSIZE ;P3
     168 00000540                   BSSX    P4DATA          ,PDSIZE ;P4
     169                    
     170 00000570                   .bss    pld             ,PLDSZ*4 ;Player secondary data
     171                    
     172 00000540                   BSSX    plyrobj_t       ,32*4   ;*player obj (4)
     173 00000540                   BSSX    plyrproc_t      ,32*4   ;*player process (4)
     174                    
     175 00000540                   BSSX    plyrcharge      ,16     ;!0=Dunker rammed an opponent
     176 00000540                   BSSX    plyrpasstype    ,16     ;!0=Turbo pass
     177 00000540                   BSSX    plyrairballoff  ,16     ;!0=No airball sound
     178 00000540                   BSSX    plyrbighead     ,16     ;Bit 0-3 on = plyr 0-3 has big head
     179 00000540                   BSSX    stlpower        ,16     ;Bit 0-3 on = plyr 0-3 has stl power
     180                    
     181 00000700                   .bss    plyrinautorbnd  ,16     ;!0=A plyr is in auto rebound
     182                    
     183 00000540                   BSSX    plyrpals_t      ,256*16*4 ;Assembled palette for each plyr
     184 00000540                   BSSX    assist_delay    ,16
     185 00000540                   BSSX    assist_plyr     ,16
     186 00000540                   BSSX    kp_qscrs        ,128    ;Keep scores during game play
     187 00000540                   BSSX    kp_qscrs2       ,128    ;Keep scores for attract mode
     188 00000540                   BSSX    baby_flag       ,16     ;Flag for baby size mode
     189 00000540                   BSSX    strongmen       ,16     ;Grnd champ flag 0,1 or 2 for team #
     190                    
     191                    
     192                    
     193              1eaf  PLYRMINX        .equ    WRLDMID-337             ;342
     194              2148  PLYRMAXX        .equ    WRLDMID+337-9           ;342-9
     195              1e8e  PLYRMINX2       .equ    WRLDMID-370
     196              2172  PLYRMAXX2       .equ    WRLDMID+370
     197                    
     198 00000540                   STRUCTPD
     199 00000540                   WORD    ball_anix       ;X anipt offset
     200 00000540                   WORD    ball_aniy       ;Y ^
     201 00000540                   APTR    ball_ani1st_p   ;*1st ani_l pos
     202 00000540                   APTR    ball_ani_p      ;*Current ani_l pos
     203 00000540                   WORD    ball_zsznum     ;Z size # 0-?
     204 00000540                   WORD    ball_collcnt    ;# of collisions in a row
     205 00000540                   WORD    ball_xscrllmin  ;
     206 00000540                   WORD    ball_xscrllmax  ;
     207 00000540                   WORD    ball_onfire     ;!0=Flaming
     208 00000540                   WORD    ball_numforfire ;# of consecutive pts to be hot
     209                    
     210 00000540                   .text
     211                    
     212                    
     213                    
     214 00000540            SUBR   plyr_start
     215                    
     216                    
     217 00000540     0d3f          callr   joy_read2
         00000550     0a25  
     218                    
     219 00000560     5600          clr     a0
     220 00000570     0580          move    a0,@plyrinautorbnd
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    5

         00000580 00000700- 
     221 000005a0     0580          move    a0,@plyrcharge
         000005b0 000006b0- 
     222 000005d0     0580          move    a0,@plyrairballoff
         000005e0 000006d0- 
     223 00000600     0580          move    a0,@stlpower
         00000610 000006f0- 
     224 00000630     0580          move    a0,@strongmen                   ;Grand champion playing flag
         00000640 00004840- 
     225                    
     226 00000660     1822          movk    1,a2
     227                            .ref    player1_data
     228                            .ref    player2_data
     229                            .ref    player3_data
     230                            .ref    player4_data
     231 00000670     1823          movk    1,a3
     232 00000680     07a0          move    @player1_data+PR_TEAMSDEF,a0,L
         00000690 00000160! 
     233 000006b0     0b60          cmpi    07ffffffH,a0
         000006c0 f8000000  
     234 000006e0     ca16          jrz     ufvaeasy0
     235 000006f0     07a0          move    @player2_data+PR_TEAMSDEF,a0,L
         00000700 00000160! 
     236 00000720     0b60          cmpi    07ffffffH,a0
         00000730 f8000000  
     237 00000750     ca0f          jrz     ufvaeasy0
     238 00000760     1843          movk    2,a3
     239 00000770     07a0          move    @player3_data+PR_TEAMSDEF,a0,L
         00000780 00000160! 
     240 000007a0     0b60          cmpi    07ffffffH,a0
         000007b0 f8000000  
     241 000007d0     ca07          jrz     ufvaeasy0
     242 000007e0     07a0          move    @player4_data+PR_TEAMSDEF,a0,L
         000007f0 00000160! 
     243 00000810     0b60          cmpi    07ffffffH,a0
         00000820 f8000000  
     244 00000840     cb04          jrnz    ufvanea
     245                    
     246                    
     247 00000850     0583  ufvaeasy0       move    a3,@strongmen                   ;Grand champion playing flag
         00000860 00004840- 
     248 00000880     c01e          jruc    ufvaeasy
     249                    
     250 00000890           ufvanea
     251 00000890     5642          clr     a2
     252 000008a0     19a0          movk    ADJDIFF,a0              ;Get difficulty level
     253 000008b0     0d5f          calla   GET_ADJ
         000008c0 00000000! 
     254 000008e0     1460          subk    3,a0
     255 000008f0     c601          jrle    ufvaregdrn
     256 00000900     1822          movk    1,a2
     257 00000910           ufvaregdrn
     258 00000910     05a0          move    @PSTATUS,a0
         00000920 00000060- 
     259 00000940     0b40          cmpi    1,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    6

         00000950     fffe  
     260 00000960     ca09          jrz     ufvahard
     261 00000970     0b40          cmpi    2,a0
         00000980     fffd  
     262 00000990     ca06          jrz     ufvahard
     263 000009a0     0b40          cmpi    4,a0
         000009b0     fffb  
     264 000009c0     ca03          jrz     ufvahard
     265 000009d0     0b40          cmpi    8,a0
         000009e0     fff7  
     266 000009f0     cb07          jrnz    ufvaeasy
     267 00000a00           ufvahard
     268 00000a00     09c0          movi    200,a0
         00000a10     00c8  
     269 00000a20     0d5f          calla   RNDPER
         00000a30 00000000! 
     270 00000a50     c301          jrhi    ufvaeasy
     271 00000a60     1822          movk    1,a2                    ;Give hard drones 70% of time
     272                    
     273 00000a70     0582  ufvaeasy        move    a2,@drone2on
         00000a80 00000000! 
     274                    
     275                    
     276                    
     277 00000aa0     5642          clr     a2
     278 00000ab0     1b20          movk    ADJHEADSZ,a0            ;Get head size
     279 00000ac0     0d5f          calla   GET_ADJ                 ;1-2
         00000ad0 00000000! 
     280 00000af0     1420          subk    1,a0
     281 00000b00     c601          jrle    ufvaadjoff                      ;No big heads?
     282 00000b10     19e2          movk    0fH,a2
     283 00000b20           ufvaadjoff
     284 00000b20     0582          move    a2,@plyrbighead
         00000b30 000006e0- 
     285                    
     286 00000b50                   CREATE0 plyr_referee
     287                    
     288 00000bc0     09e2          movi    plyrproc_t+4*32,a2
         00000bd0 000006b0- 
     289 00000bf0     09e9          movi    plyrobj_t+3*32,a9
         00000c00 00000610- 
     290 00000c20     1868          movk    3,a8
     291 00000c30           ufvastrtp       CREATE0 plyr_main
     292 00000ca0     a202          move    a0,-*a2,L               ;Save *proc
     293 00000cb0     1409          subk    32,a9
     294 00000cc0     3d48          dsj     a8,ufvastrtp
     295                    
     296 00000cd0     a3a2          move    a13,-*a2,L
     297                    
     298                    
     299                    
     300                    
     301                    
     302 00000ce0            SUBRP  plyr_main
     303                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    7

     304                    
     305 00000ce0     4da1          move    a13,a1                  ;0CHlr PDATA & PSDATA areas
     306 00000cf0     0b01          addi    PDATA,a1
         00000d00     0100  
     307 00000d10     09c2          movi    (PRCSIZ-PDATA)/16,a2
         00000d20     004b  
     308 00000d30     5600          clr     a0
     309 00000d40     9001  huxuclrpd       move    a0,*a1+
     310 00000d50     3c42          dsj     a2,huxuclrpd
     311                    
     312                    
     313 00000d60     4d00          move    a8,a0                   ;0CHhk if plyr wants to override headsize
     314 00000d70     2480          sll     4,a0                    ;*16
     315 00000d80     0b20          addi    P1CTRL,a0
         00000d90 00000070- 
     316 00000db0     8400          move    *a0,a0
     317 00000dc0     2720          sll     32-7,a0
     318 00000dd0     2ce0          srl     32-7,a0
     319                    
     320 00000de0     0b40          cmpi    BUT1_M|JOYD_M,a0        ;Shoot down, jostick down
         00000df0     ffed  
     321 00000e00     cb12          jrne    huxunostl
     322 00000e10     4d00          move    a8,a0
     323 00000e20     2480          sll     4,a0
     324 00000e30     0b20          addi    p1taps,a0
         00000e40 00000000! 
     325 00000e60     8400          move    *a0,a0
     326 00000e70     0b40          cmpi    5,a0
         00000e80     fffa  
     327 00000e90     c409          jrlt    huxunostl
     328 00000ea0     05a0          move    @stlpower,a0            ;Powerup intercepts (Quick hands)
         00000eb0 000006f0- 
     329 00000ed0     182e          movk    1,a14
     330 00000ee0     630e          sll     a8,a14
     331 00000ef0     57c0          xor     a14,a0                  ;Flip bit
     332 00000f00     0580          move    a0,@stlpower
         00000f10 000006f0- 
     333 00000f30           huxunostl
     334                    
     335 00000f30     0b40          cmpi    BUT3_M|BUT2_M|JOYU_M,a0
         00000f40     ff9e  
     336 00000f50     cb09          jrne    huxunohdcng
     337 00000f60     05a0          move    @plyrbighead,a0
         00000f70 000006e0- 
     338 00000f90     182e          movk    1,a14
     339 00000fa0     630e          sll     a8,a14
     340 00000fb0     57c0          xor     a14,a0                  ;Flip bit
     341 00000fc0     0580          move    a0,@plyrbighead
         00000fd0 000006e0- 
     342 00000ff0           huxunohdcng
     343                    
     344 00000ff0     09c1          movi    -1,a1
         00001000     ffff  
     345 00001010     b02d          move    a1,*a13(plyr_newdir)
         00001020     03e0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    8

     346 00001030     1820          movk    1,a0
     347 00001040     b00d          move    a0,*a13(plyr_shtbutn)
         00001050     0540  
     348                    
     349 00001060     1bc0          movk    30,a0
     350 00001070     b00d          move    a0,*a13(plyr_turndelay)
         00001080     0520  
     351                    
     352 00001090     b10d          move    a8,*a13(plyr_num)
         000010a0     0100  
     353 000010b0     4d0b          move    a8,a11
     354                    
     355 000010c0     1827          movk    1,a7
     356 000010d0     5707          xor     a8,a7
     357 000010e0     24a7          sll     5,a7                    ;*32
     358 000010f0     0b27          addi    plyrproc_t,a7
         00001100 00000630- 
     359 00001120     86e7          move    *a7,a7,L
     360 00001130     b2ed          move    a7,*a13(plyr_tmproc_p),L
         00001140     0110  
     361                    
     362 00001150     09c7          movi    P2DATA-P1DATA,a7,W
         00001160     0130  
     363 00001170     5f07          mpyu    a8,a7
     364 00001180     0b27          addi    P1DATA,a7
         00001190 000000b0- 
     365 000011b0     b2ed          move    a7,*a13(plyr_PDATA_p),L
         000011c0     0130  
     366                    
     367 000011d0     0d5f          calla   plyr_getattributes      ;Set attribute_p
         000011e0 00000000! 
     368                                                            ;A10=*Uniform attr (ignores spechds)
     369                    
     370 00001200     09c7          movi    huxupd1-huxupdat_t,a7,W
         00001210     0060  
     371 00001220     5f07          mpyu    a8,a7
     372 00001230     0b27          addi    huxupdat_t,a7
         00001240 00009ad0' 
     373                    
     374 00001260     94e0          move    *a7+,a0
     375 00001270     b00d          move    a0,*a13(PROCID)
         00001280     0020  
     376                    
     377 00001290     94e1          move    *a7+,a1                 ;Dir
     378 000012a0     b02d          move    a1,*a13(plyr_dir)
         000012b0     03d0  
     379                    
     380 000012c0     94e0          move    *a7+,a0                 ;X
     381 000012d0     05a1          move    @WORLDTLX+16,a1
         000012e0 00000010! 
     382 00001300     4020          add     a1,a0
     383                    
     384 00001310     05a3          move    @gmqrtr,a3
         00001320 00000000! 
     385 00001340     ca02          jrz     huxunot2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE    9

     386 00001350     0b00          addi    400,a0
         00001360     0190  
     387 00001370           huxunot2
     388                    
     389 00001370     2600          sll     16,a0
     390 00001380     5621          clr     a1                      ;Y
     391 00001390     94e3          move    *a7+,a3                 ;Z
     392 000013a0     86e2          move    *a7,a2,L
     393 000013b0     09e4          movi    DMAWNZ|M_3D,a4
         000013c0 00008102  
     394 000013e0     09c5          movi    CLSPLYR|TYPPLYR,a5
         000013f0     4100  
     395 00001400     56c6          clr     a6
     396 00001410     56e7          clr     a7
     397 00001420     0d5f          calla   BEGINOBJ2
         00001430 00000000! 
     398 00001450     8309          move    a8,*a9,L                ;Save *obj
     399                    
     400 00001460     09e0          movi    scale63_t,a0            ;Temp size
         00001470 00000000! 
     401 00001490     b208          move    a0,*a8(ODATA_p),L
         000014a0     01c0  
     402                    
     403 000014b0                   SLEEPK  2                       ;Wait for other plyrs init
     404                    
     405 000014f0     b7a7          move    *a13(plyr_attrib_p),a7,L
         00001500     0150  
     406 00001510     4d46          move    a10,a6
     407 00001520     86e0          move    *a7,a0,L                ;Get *scale_t
     408 00001530     b208          move    a0,*a8(ODATA_p),L
         00001540     01c0  
     409 00001550     b4e0          move    *a7(PAT_BVEL),a0
         00001560     0020  
     410 00001570     b00d          move    a0,*a13(plyr_bvel)
         00001580     0240  
     411                    
     412 00001590     b4e0          move    *a7(PAT_SKILL),a0
         000015a0     0070  
     413                    
     414 000015b0     05a1          move    @PSTATUS,a1
         000015c0 00000060- 
     415 000015e0     4b61          btst    a11,a1
     416 000015f0     cb04          jrnz    huxuhmn                 ;I'm a human?
     417                    
     418 00001600     182e          movk    1,a14                   ;Drone
     419 00001610     576e          xor     a11,a14
     420 00001620     4bc1          btst    a14,a1
     421 00001630     ca02          jrz     huxutdrn                        ;Teammate is a drone?
     422 00001640           huxuhmn
     423                    
     424 00001640     5600          clr     a0
     425                    
     426 00001650     c021          jruc    huxusetskl
     427 00001660           huxutdrn
     428 00001660     184e          movk    2,a14                   ;We are drones
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   10

     429 00001670     576e          xor     a11,a14
     430 00001680     4bc1          btst    a14,a1
     431 00001690     cb04          jrnz    huxuhumop                       ;Human opponent?
     432 000016a0     1822          movk    1,a2
     433 000016b0     564e          xor     a2,a14
     434 000016c0     4bc1          btst    a14,a1
     435 000016d0     ca19          jrz     huxusetskl                      ;All drones?
     436 000016e0           huxuhumop
     437 000016e0     24ae          sll     5,a14
     438 000016f0     0b2e          addi    player_data,a14
         00001700 00000000! 
     439 00001720     87ce          move    *a14,a14,L
     440 00001730     18c2          movk    6,a2
     441 00001740     b5c1          move    *a14(PR_COUNT),a1       ;- if no entry
         00001750     0000  
     442 00001760     ce0b          jrn     huxuwimp
     443 00001770     b5c2          move    *a14(PR_NUMDEF),a2      ;# teams defeated
         00001780     0180  
     444 00001790     1542          subk    10,a2
     445 000017a0     c403          jrlt    huxufew
     446 000017b0     0582          move    a2,@drone2on
         000017c0 00000000! 
     447 000017e0           huxufew
     448 000017e0     1882          movk    4,a2                    ;3
     449 000017f0     1481          subk    4,a1
     450 00001800     c601          jrle    huxuwimp                        ;1st couple of games?
     451 00001810     1822          movk    1,a2
     452 00001820           huxuwimp
     453 00001820     4440          sub     a2,a0
     454 00001830     b5c1          move    *a14(PR_WINSTREAK),a1
         00001840     01a0  
     455 00001850     cb01          jrnz    huxuwon                 ;Won last game?
     456 00001860     1480          subk    4,a0                    ;4 Decrease skill
     457 00001870           huxuwon
     458 00001870     b00d  huxusetskl      move    a0,*a13(plyr_d_skill)
         00001880     0460  
     459                    
     460                    
     461                    
     462 00001890     09ee          movi    team1,a14               ;0CHhk for conflicting pals
         000018a0 00000000! 
     463 000018c0     95c3          move    *a14+,a3
     464 000018d0     85c4          move    *a14,a4
     465 000018e0     1fcb          btst    1,a11
     466 000018f0     ca03          jrz     huxut1
     467 00001900                   SWAP    a3,a4
     468 00001930     2463  huxut1  sll     3,a3
     469 00001940     2464          sll     3,a4
     470 00001950     0b23          addi    huxuteam_t,a3
         00001960 0000a220' 
     471 00001980     0b24          addi    huxuteam_t,a4
         00001990 0000a220' 
     472 000019b0     8e63          movb    *a3,a3
     473 000019c0     ce0b          jrn     huxukeepc                       ;I always keep?
     474 000019d0     8e84          movb    *a4,a4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   11

     475 000019e0     4c8e          move    a4,a14
     476 000019f0     2783          sll     32-4,a3
     477 00001a00     278e          sll     32-4,a14
     478 00001a10     486e          cmp     a3,a14
     479 00001a20     cb05          jrne    huxukeepc                       ;Different colors?
     480 00001a30     4c84          move    a4,a4
     481 00001a40     ce02          jrn     huxualtc                        ;Other team always keeps?
     482 00001a50     1fcb          btst    1,a11
     483 00001a60     cb01          jrnz    huxukeepc                       ;2nd team?
     484 00001a70     1006  huxualtc        addk    32,a6                   ;*Alternates
     485 00001a80           huxukeepc
     486                    
     487 00001a80     4d62          move    a11,a2                  ;0BHuild plyr palette
     488 00001a90     2582          sll     8+4,a2
     489 00001aa0     0b22          addi    plyrpals_t,a2
         00001ab0 00000710- 
     490 00001ad0                   PUSH    a2
     491                    
     492 00001ae0     09c0          movi    255,a0
         00001af0     00ff  
     493 00001b00     9002          move    a0,*a2+                 ;Set # colors
     494                    
     495 00001b10     b4e1          move    *a7(PAT_SHOTSKILL),a1
         00001b20     0030  
     496 00001b30     0b41          cmpi    1201,a1
         00001b40     fb4e  
     497 00001b50     cb01          jrnz    huxureg
     498 00001b60     4ce6          move    a7,a6
     499                    
     500 00001b70           huxureg
     501 00001b70     b6c1          move    *a6(PAT_PALU_p),a1,L    ;Copy uniform
         00001b80     00a0  
     502 00001b90     9420          move    *a1+,a0
     503 00001ba0     9822  huxuplulp       move    *a1+,*a2+
     504 00001bb0     3c40          dsj     a0,huxuplulp
     505                    
     506 00001bc0     b6e1          move    *a7(PAT_PALF_p),a1,L    ;Copy flesh
         00001bd0     0080  
     507 00001be0     9420          move    *a1+,a0
     508 00001bf0     1201          addk    16,a1
     509 00001c00     1420          subk    1,a0
     510 00001c10     9822  huxuplflp       move    *a1+,*a2+
     511 00001c20     3c40          dsj     a0,huxuplflp
     512                    
     513 00001c30     b6c1          move    *a6(PAT_PALT_p),a1,L    ;Copy trim
         00001c40     00e0  
     514 00001c50     9420          move    *a1+,a0
     515 00001c60     1201          addk    16,a1
     516 00001c70     1420          subk    1,a0
     517 00001c80     9822  huxupltlp       move    *a1+,*a2+
     518 00001c90     3c40          dsj     a0,huxupltlp
     519                    
     520 00001ca0     09c0          movi    31<<10+31<<5+31,a0      ;White
         00001cb0     7fff  
     521 00001cc0     9002          move    a0,*a2+
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   12

     522                    
     523 00001cd0     09e1          movi    ltshoepal_t,a1          ;Copy shoes
         00001ce0 00009c50' 
     524 00001d00     18a0          movk    5,a0                    ;5 colors
     525 00001d10     9822  huxuplslp       move    *a1+,*a2+
     526 00001d20     3c40          dsj     a0,huxuplslp
     527                    
     528 00001d30     5600          clr     a0                      ;Black
     529 00001d40     9002          move    a0,*a2+
     530                    
     531 00001d50                   PULL    a0
     532 00001d60     0d5f          calla   pal_getf
         00001d70 00000000! 
     533 00001d90     b008          move    a0,*a8(OPAL)
         00001da0     0150  
     534                    
     535                    
     536 00001db0                   PUSH    a8
     537                    
     538 00001dc0     5600          clr     a0                      ;>Get head
     539 00001dd0     5621          clr     a1
     540 00001de0     b6e2          move    *a7(PAT_HEADT_p),a2,L
         00001df0     0120  
     541 00001e00     8642          move    *a2,a2,L
     542 00001e10     09c3          movi    CZMID,a3                ;Z
         00001e20     0492  
     543 00001e30     09e4          movi    DMAWNZ|M_3D|M_NOCOLL,a4
         00001e40 00008902  
     544 00001e60     09c5          movi    CLSDEAD,a5
         00001e70     2000  
     545 00001e80     56c6          clr     a6
     546 00001e90     56e7          clr     a7
     547 00001ea0     0d5f          calla   BEGINOBJ2
         00001eb0 00000000! 
     548 00001ed0     b30d          move    a8,*a13(plyr_headobj_p),L
         00001ee0     04b0  
     549 00001ef0     b7a0          move    *a13(plyr_attrib_p),a0,L
         00001f00     0150  
     550 00001f10     8600          move    *a0,a0,L                ;Get *scale_t
     551 00001f20     0b00          addi    SCALETSIZE*2+100h,a0
         00001f30     1a00  
     552                    
     553                    
     554 00001f40     b5a1          move    *a13(plyr_num),a1
         00001f50     0100  
     555 00001f60     05a2          move    @plyrbighead,a2
         00001f70 000006e0- 
     556 00001f90     4a22          btst    a1,a2
     557 00001fa0     ca0d          jrz     huxusmlhd
     558                    
     559                            
     560 00001fb0     2481          sll     4,a1
     561 00001fc0     0b21          addi    p1taps,a1
         00001fd0 00000000! 
     562 00001ff0     8421          move    *a1,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   13

     563 00002000     0b41          cmpi    6,a1
         00002010     fff9  
     564 00002020     ca03          jrz     huxubighd2
     565                    
     566                    
     567 00002030     0be0          subi    SCALETSIZE*1+200h,a0
         00002040     f17f  
     568 00002050     c002          jruc    huxusmlhd
     569                    
     570                    
     571 00002060     0be0  huxubighd2      subi    0a80H,a0                        ;Really big head
         00002070     f57f  
     572 00002080           huxusmlhd
     573 00002080     b208          move    a0,*a8(ODATA_p),L
         00002090     01c0  
     574                    
     575 000020a0     5600          clr     a0                      ;>Get shadow
     576 000020b0     5621          clr     a1
     577 000020c0     09e2          movi    shadow1,a2
         000020d0 00000000! 
     578 000020f0     b503          move    *a8(OZPOS),a3
         00002100     00d0  
     579 00002110     0be3          subi    50,a3
         00002120     ffcd  
     580 00002130     09e4          movi    DMAWNZ|M_3D|M_SHAD|M_NOCOLL,a4
         00002140 00008b02  
     581 00002160     0d5f          calla   BEGINOBJ2
         00002170 00000000! 
     582 00002190     b30d          move    a8,*a13(plyr_shadobj_p),L
         000021a0     04d0  
     583 000021b0     09c0          movi    50,a0
         000021c0     0032  
     584 000021d0     b008          move    a0,*a8(OMISC)           ;Z offset
         000021e0     0210  
     585                    
     586 000021f0                   PULL    a8
     587                    
     588                    
     589                    
     590                    
     591 00002200     5600          clr     a0
     592                    
     593 00002210     09c9          movi    PLDSZ,a9
         00002220     0010  
     594 00002230     5f69          mpyu    a11,a9
     595 00002240     0b29          addi    pld,a9                  ;A9=*Plyr secondary data struc
         00002250 00000570- 
     596 00002270     4d21          move    a9,a1
     597 00002280     09d0          movi    PLDSZ/16,b0
         00002290     0001  
     598 000022a0     9001  huxucpldlp      move    a0,*a1+
     599 000022b0     3c50          dsj     b0,huxucpldlp
     600                    
     601 000022c0     248b          sll     4,a11                   ;*16
     602 000022d0     0b2b          addi    P1CTRL,a11              ;A11=*PxCTRL
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   14

         000022e0 00000070- 
     603 00002300     800b          move    a0,*a11
     604                    
     605                    
     606 00002310     1820          movk    STND_SEQ,a0             ;Initial sequence
     607 00002320     b5ae          move    *a13(plyr_num),a14
         00002330     0100  
     608 00002340     ca08          jrz     huxupn03
     609 00002350     146e          subk    3,a14
     610 00002360     c506          jrge    huxupn03
     611 00002370     05ae          move    @gmqrtr,a14
         00002380 00000000! 
     612 000023a0     cb02          jrnz    huxupn03
     613                    
     614 000023b0     09c0          movi    TIP_SEQ,a0
         000023c0     003b  
     615 000023d0           huxupn03
     616 000023d0     b5a7          move    *a13(plyr_dir),a7
         000023e0     03d0  
     617 000023f0     0d3f          callr   plyr_setseq             ;Rets: A10=Ani cntdn
         00002400     07ef  
     618                    
     619                    
     620 00002410     09c0          movi    HOOPLX,a0
         00002420     1ec0  
     621 00002430     09c1          movi    HOOPRX,a1
         00002440     2140  
     622 00002450     b5ae          move    *a13(plyr_num),a14
         00002460     0100  
     623 00002470     144e          subk    2,a14
     624 00002480     c403          jrlt    huxu_p0or1
     625 00002490                   SWAP    a0,a1
     626 000024c0     b00d  huxu_p0or1      move    a0,*a13(plyr_myhoopx)
         000024d0     02c0  
     627 000024e0     b02d          move    a1,*a13(plyr_ohoopx)
         000024f0     02d0  
     628                    
     629                    
     630                    
     631 00002500                   SLEEPK  2                       ;Wait for others to establish data
     632                    
     633                    
     634 00002540           huxulp
     635 00002540     05a0          move    @HALT,a0
         00002550 00000000! 
     636 00002570     cb00          jrnz    huxuhalted
         00002580     0749  
     637                    
     638 00002590     5729          clr     a9
     639                    
     640                    
     641                            .if     IMGVIEW
     642                            move    *a13(plyr_num),a0
     643                            cmpi    0,a0
     644                            jrz     huxuyes
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   15

     645                            cmpi    3,a0
     646                            jrne    huxuhalted
     647                    huxuyes
     648                            movk    1,a2                    ;+=Me
     649                            jruc    huxunobl2
     650                            .endif
     651                    
     652                    
     653                    
     654 000025a0     5642          clr     a2                      ;>Set flag if we have ball
     655 000025b0     b5a0          move    *a13(plyr_num),a0
         000025c0     0100  
     656 000025d0     05a1          move    @ballpnum,a1
         000025e0 00000000! 
     657 00002600     4820          cmp     a1,a0
     658 00002610     cb4f          jrne    huxunobl1                       ;No ball?
     659 00002620     b5ae          move    *a13(plyr_seqflgs),a14
         00002630     0180  
     660 00002640     1f4e          btst    NOBALL_B,a14
     661 00002650     cb3f          jrnz    huxunohold                      ;Can't hold the ball?
     662                    
     663 00002660     b5a0          move    *a13(plyr_ownball),a0
         00002670     0260  
     664 00002680     c763          jrgt    huxuhadball             ;Already had?
     665                    
     666 00002690     07a1          move    @ballobj_p,a1,L
         000026a0 00000000! 
     667 000026c0     b420          move    *a1(OYPOS),a0
         000026d0     00b0  
     668 000026e0     0b40          cmpi    -28,a0
         000026f0     001b  
     669 00002700     c407          jrlt    huxuyesair
     670 00002710     b620          move    *a1(OYVEL),a0,L
         00002720     0040  
     671 00002730     0380          abs     a0
     672 00002740     0b60          cmpi    0c000H,a0
         00002750 ffff3fff  
     673 00002770     c41f          jrlt    huxunotinair
     674                    
     675 00002780           huxuyesair
     676 00002780     05a0          move    @rebound_delay,a0
         00002790 00000000! 
     677 000027b0     ca27          jrz     huxuinair
     678 000027c0     5600          clr     a0
     679 000027d0     0580          move    a0,@rebound_delay
         000027e0 00000000! 
     680 00002800     05a0          move    @inbound,a0
         00002810 00000000! 
     681 00002830     cf1f          jrnn    huxuinair       
     682 00002840     09c0          movi    PS_OFF_REB,a0
         00002850     0007  
     683 00002860     b5a1          move    *a13(plyr_num),a1
         00002870     0100  
     684 00002880     05ae          move    @ballpnumlast,a14
         00002890 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   16

     685 000028b0     2fe1          srl     1,a1
     686 000028c0     2fee          srl     1,a14
     687 000028d0     482e          cmp     a1,a14
     688 000028e0     ca02          jrz     huxuoffrb
     689 000028f0     09c0          movi    PS_DEF_REB,a0
         00002900     0008  
     690 00002910           huxuoffrb
     691 00002910     b5a1          move    *a13(plyr_num),a1
         00002920     0100  
     692 00002930     0d5f          calla   inc_player_stat
         00002940 00000000! 
     693 00002960     c00c          jruc    huxuinair
     694                    
     695                    
     696                    
     697 00002970           huxunotinair
     698 00002970     b5a0          move    *a13(plyr_jmpcnt),a0
         00002980     0400  
     699 00002990     cb0b          jrnz    huxunohold                      ;In air?
     700                    
     701 000029a0     0d5f          calla   seq_stopfire
         000029b0 00000000! 
     702                    
     703 000029d0     09c0          movi    PICKUP_SEQ,a0
         000029e0     0038  
     704 000029f0     b5a7          move    *a13(plyr_dir),a7
         00002a00     03d0  
     705 00002a10     0d3f          callr   plyr_setseq
         00002a20     078d  
     706 00002a30     1822  huxuinair       movk    1,a2                    ;+=Me
     707 00002a40     c011          jruc    huxunobl2
     708 00002a50           huxunohold
     709 00002a50     1422          subk    1,a2                    ;-1
     710 00002a60     0582          move    a2,@ballpnum
         00002a70 00000000! 
     711 00002a90     0582          move    a2,@ballpnumlast
         00002aa0 00000000! 
     712 00002ac0     0d5f          calla   ball_convfmprel
         00002ad0 00000000! 
     713 00002af0     5642          clr     a2
     714 00002b00     c005          jruc    huxunobl2
     715 00002b10           huxunobl1
     716 00002b10                   XORK    1,a0
     717 00002b30     4820          cmp     a1,a0
     718 00002b40     cb01          jrne    huxunobl2                       ;No ball?
     719 00002b50     1422          subk    1,a2                    ;-=Teammate
     720 00002b60           huxunobl2
     721 00002b60     b04d          move    a2,*a13(plyr_ownball)
         00002b70     0260  
     722                    
     723 00002b80     4c42          move    a2,a2
     724 00002b90     c612          jrle    huxuhadball
     725                    
     726 00002ba0                   PUSH    a10
     727 00002bb0     4daa          move    a13,a10
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   17

     728 00002bc0     0d5f          calla   arw_on1plyr             ;Guy who picks up ball gets arw
         00002bd0 00000000! 
     729 00002bf0                   PULL    a10
     730                    
     731 00002c00     b5a0          move    *a13(plyr_num),a0
         00002c10     0100  
     732 00002c20     2fe0          srl     1,a0                    ;A0=0/1 for left/rgt hoop start clock
     733 00002c30     05a1          move    @ballsclastp,a1
         00002c40 00000000! 
     734 00002c60     2fe1          srl     1,a1
     735 00002c70     4801          cmp     a0,a1
     736 00002c80     ca03          jreq    huxuhadball             ;Same team?
     737                    
     738 00002c90     0d5f          calla   shot_clock              ;New 24
         00002ca0 00000000! 
     739                    
     740                    
     741 00002cc0           huxuhadball
     742                    
     743 00002cc0     5600          clr     a0                      ;>Setup turbo flag
     744 00002cd0     b5a6          move    *a13(plyr_nojoy),a6
         00002ce0     03b0  
     745 00002cf0     ce01          jrn     huxunewjoy                      ;Override plyr input?
     746 00002d00     8566          move    *a11,a6
     747 00002d10     1f26  huxunewjoy      btst    BUT3_B,a6               ;Turbo but
     748 00002d20     ca06          jrz     huxuturboff
     749 00002d30     b7a1          move    *a13(plyr_PDATA_p),a1,L
         00002d40     0130  
     750 00002d50     b421          move    *a1(ply_turbo),a1
         00002d60     0040  
     751 00002d70     ca01          jrz     huxuturboff             ;No turbo left?
     752 00002d80     1820          movk    1,a0
     753 00002d90           huxuturboff
     754 00002d90     b00d          move    a0,*a13(plyr_turbon)
         00002da0     0250  
     755                    
     756                    
     757                    
     758 00002db0     b5a4          move    *a13(plyr_num),a4       ;0DHo 1 in 4 ticks
         00002dc0     0100  
     759 00002dd0     05a0          move    @PCNT,a0
         00002de0 00000000! 
     760 00002e00     4c81          move    a4,a1
     761 00002e10     27c0          sll     32-2,a0
     762 00002e20     27c1          sll     32-2,a1
     763 00002e30     4801          cmp     a0,a1
     764 00002e40     cb3f          jrne    huxuskip
     765                    
     766 00002e50     182e          movk    1,a14                   ;>Get teammates dir/dist
     767 00002e60     568e          xor     a4,a14
     768 00002e70     24ae          sll     5,a14                   ;*32
     769 00002e80     0b2e          addi    plyrobj_t,a14
         00002e90 000005b0- 
     770 00002eb0     87c0          move    *a14,a0,L
     771 00002ec0     0d3f          callr   seekdirdist_obob128
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   18

         00002ed0     2157  
     772 00002ee0     b00d          move    a0,*a13(plyr_tmdir)
         00002ef0     02e0  
     773 00002f00     b02d          move    a1,*a13(plyr_tmdist)
         00002f10     02f0  
     774                    
     775 00002f20     2fe4          srl     1,a4                    ;>Get opponents dir/dist
     776 00002f30     182e          movk    1,a14
     777 00002f40     57c4          xor     a14,a4
     778 00002f50     24c4          sll     6,a4                    ;*64
     779 00002f60     0b24          addi    plyrobj_t,a4
         00002f70 000005b0- 
     780 00002f90     9680          move    *a4+,a0,L
     781 00002fa0     0d3f          callr   seekdirdist_obob128
         00002fb0     2149  
     782 00002fc0     b00d          move    a0,*a13(plyr_o1dir)
         00002fd0     0300  
     783 00002fe0     b02d          move    a1,*a13(plyr_o1dist)
         00002ff0     0310  
     784                    
     785 00003000     9680          move    *a4+,a0,L
     786 00003010     0d3f          callr   seekdirdist_obob128
         00003020     2142  
     787 00003030     b00d          move    a0,*a13(plyr_o2dir)
         00003040     0320  
     788 00003050     b02d          move    a1,*a13(plyr_o2dist)
         00003060     0330  
     789                    
     790 00003070     07a0          move    @ballobj_p,a0,L
         00003080 00000000! 
     791 000030a0     0d3f          callr   seekdirdist_obob128
         000030b0     2139  
     792 000030c0     b00d          move    a0,*a13(plyr_balldir)
         000030d0     0340  
     793 000030e0     b02d          move    a1,*a13(plyr_balldist)
         000030f0     0350  
     794                    
     795 00003100     b5a6          move    *a13(plyr_myhoopx),a6
         00003110     02c0  
     796 00003120     09c7          movi    CZMID,a7
         00003130     0492  
     797 00003140     0d3f          callr   seekdirdist_obxz128
         00003150     2136  
     798 00003160     b00d          move    a0,*a13(plyr_hpdir)
         00003170     0360  
     799 00003180     b02d          move    a1,*a13(plyr_hpdist)
         00003190     0370  
     800                    
     801 000031a0     b5a6          move    *a13(plyr_ohoopx),a6
         000031b0     02d0  
     802 000031c0     09c7          movi    CZMID,a7
         000031d0     0492  
     803 000031e0     0d3f          callr   seekdirdist_obxz128
         000031f0     212c  
     804 00003200     b00d          move    a0,*a13(plyr_ohpdir)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   19

         00003210     0380  
     805 00003220     b02d          move    a1,*a13(plyr_ohpdist)
         00003230     0390  
     806                    
     807                    
     808 00003240     57ce  huxuskip        clr     a14                     ;>Setup defensive flag
     809 00003250     05a0          move    @ballpnum,a0
         00003260 00000000! 
     810 00003280     ce30          jrn     huxusetdef                      ;No owner?
     811 00003290     b5a0          move    *a13(plyr_ownball),a0
         000032a0     0260  
     812 000032b0     cb2d          jrnz    huxusetdef                      ;My team has?
     813                    
     814 000032c0     b5a0          move    *a13(plyr_hpdist),a0
         000032d0     0370  
     815                    
     816 000032e0     b5a1          move    *a13(plyr_num),a1
         000032f0     0100  
     817 00003300     05a2          move    @PSTATUS,a2
         00003310 00000060- 
     818 00003330     4a22          btst    a1,a2
     819 00003340     ca03          jrz     huxudrn
     820 00003350     0b40          cmpi    220,a0
         00003360     ff23  
     821 00003370     c002          jruc    huxundrn
     822 00003380           huxudrn
     823 00003380     0b40          cmpi    310,a0
         00003390     fec9  
     824 000033a0     c51e  huxundrn        jrge    huxusetdef                      ;Too far from my hoop?
     825                    
     826 000033b0     b5a0          move    *a13(plyr_hpdir),a0     ;Find dir difference
         000033c0     0360  
     827 000033d0     b5a1          move    *a13(plyr_balldir),a1
         000033e0     0340  
     828 000033f0     4420          sub     a1,a0
     829 00003400     0380          abs     a0
     830 00003410     0b40          cmpi    040H,a0
         00003420     ffbf  
     831 00003430     c603          jrle    huxudsml
     832 00003440     0be0          subi    080H,a0
         00003450     ff7f  
     833 00003460     0380          abs     a0
     834 00003470     1700  huxudsml        subk    24,a0
     835 00003480     c610          jrle    huxusetdef                      ;Not between ball and hoop?
     836                    
     837 00003490     b5a2          move    *a13(plyr_seq),a2
         000034a0     0170  
     838 000034b0     0b42          cmpi    RUNDRIBTURB_SEQ,a2
         000034c0     ffef  
     839 000034d0     c30b          jrhi    huxusetdef
     840 000034e0     b5a1          move    *a13(plyr_o1dist),a1
         000034f0     0310  
     841 00003500     0b41          cmpi    90,a1
         00003510     ffa5  
     842 00003520     c405          jrlt    huxudefon
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   20

     843 00003530     b5a1          move    *a13(plyr_o2dist),a1
         00003540     0330  
     844 00003550     0b41          cmpi    90,a1
         00003560     ffa5  
     845 00003570     c501          jrge    huxusetdef
     846 00003580     182e  huxudefon       movk    1,a14
     847 00003590     b1cd  huxusetdef      move    a14,*a13(plyr_indef)
         000035a0     03a0  
     848                    
     849                    
     850                    
     851                    
     852                    
     853 000035b0     b5a0          move    *a13(plyr_autoctrl),a0
         000035c0     03c0  
     854 000035d0     cb00          jrnz    huxutcc                 ;Temp computer control?
         000035e0     0175  
     855                    
     856                    
     857 000035f0     b5a0          move    *a13(plyr_seqflgs),a0
         00003600     0180  
     858 00003610     1e60          btst    NOCOLLP_B,a0
     859 00003620     cb02          jrnz    huxunocol                       ;No collide?
     860 00003630     0d3f          callr   plyr_chkpcollide
         00003640     0774  
     861 00003650           huxunocol
     862                    
     863                                                            ;>Stagger/fall
     864 00003650     b5a2          move    *a13(plyr_stagcnt),a2
         00003660     0430  
     865 00003670     c600          jrle    huxunostag
         00003680     0161  
     866 00003690     1422          subk    1,a2
     867 000036a0     b04d          move    a2,*a13(plyr_stagcnt)
         000036b0     0430  
     868 000036c0     15e2          subk    15,a2
     869 000036d0     c600          jrle    huxunostag
         000036e0     015b  
     870                    
     871 000036f0     b5ae          move    *a13(plyr_seq),a14
         00003700     0170  
     872                    
     873 00003710     15e2          subk    30-15,a2
     874 00003720     c600          jrle    huxuchkstag             ;Chk stag?
         00003730     0138  
     875                    
     876 00003740     05a1          move    @plyrnumonfire,a1
         00003750 00000000! 
     877 00003770     ce13          jrn     huxunoflm1
     878 00003780     05a2          move    @fatality,a2
         00003790 00000000! 
     879 000037b0     ca0f          jrz     huxunoflm1
     880 000037c0     b5a3          move    *a13(plyr_num),a3
         000037d0     0100  
     881 000037e0     2fe3          srl     1,a3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   21

     882 000037f0     2fe1          srl     1,a1
     883 00003800     4823          cmp     a1,a3
     884 00003810     ca09          jrz     huxunoflm1
     885 00003820     4a22          btst    a1,a2
     886 00003830     ca07          jrz     huxunoflm1
     887 00003840     09c0          movi    500,a0
         00003850     01f4  
     888 00003860     0d5f          calla   RNDPER
         00003870 00000000! 
     889 00003890     c201          jrls    huxunoflm1
     890 000038a0     1829          movk    1,a9
     891 000038b0           huxunoflm1
     892 000038b0     b5ae          move    *a13(plyr_seq),a14
         000038c0     0170  
     893                    
     894 000038d0     09c0          movi    FLYBACK_SEQ,a0
         000038e0     002f  
     895 000038f0     4d29          move    a9,a9
     896 00003900     ca02          jrz     huxunoflm2
     897 00003910     09c0          movi    FFLYBACK_SEQ,a0
         00003920     0034  
     898 00003930           huxunoflm2
     899 00003930     480e          cmp     a0,a14
     900 00003940     ca00          jreq    huxucstag
         00003950     0131  
     901                    
     902                    
     903                    
     904 00003960     0b4e          cmpi    FLYBACKWB_SEQ,a14
         00003970     ffce  
     905 00003980     ca00          jreq    huxucstag
         00003990     012d  
     906 000039a0     0b4e          cmpi    FLYBACKWB2_SEQ,a14
         000039b0     ffcd  
     907 000039c0     ca00          jreq    huxucstag
         000039d0     0129  
     908 000039e0     0b4e          cmpi    FLYBACK2_SEQ,a14
         000039f0     ffcf  
     909 00003a00     ca00          jreq    huxucstag
         00003a10     0125  
     910                    
     911 00003a20     b5a1          move    *a13(plyr_ownball),a1
         00003a30     0260  
     912 00003a40     c727          jrgt    huxuhaveball
     913                    
     914 00003a50     b7a1          move    *a13(plyr_attrib_p),a1,L
         00003a60     0150  
     915 00003a70     b421          move    *a1(PAT_POWER),a1
         00003a80     0150  
     916 00003a90     05a2          move    @last_power,a2          ;Player pushing has this power
         00003aa0 00000000! 
     917 00003ac0     4422          sub     a1,a2
     918 00003ad0     0382          abs     a2
     919                    
     920 00003ae0     09c0          movi    FLYBACK_SEQ,a0          ;If similar power, always do flyback
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   22

         00003af0     002f  
     921 00003b00     4d29          move    a9,a9
     922 00003b10     ca02          jrz     huxunoflm3
     923 00003b20     09c0          movi    FFLYBACK_SEQ,a0
         00003b30     0034  
     924 00003b40           huxunoflm3
     925 00003b40     0b42          cmpi    1,a2
         00003b50     fffe  
     926 00003b60     c600          jrle    huxufall
         00003b70     010b  
     927                            
     928 00003b80     2481          sll     4,a1
     929 00003b90                   PUSH    a14
     930 00003ba0     0b21          addi    huxunoblflail_t,a1
         00003bb0 00009ed0' 
     931 00003bd0     8420          move    *a1,a0
     932 00003be0     0d5f          calla   RNDPER
         00003bf0 00000000! 
     933 00003c10                   PULL    a14
     934 00003c20     09c0          movi    FLYBACK_SEQ,a0          ;If similar power, always do flyback
         00003c30     002f  
     935 00003c40     4d29          move    a9,a9
     936 00003c50     ca02          jrz     huxunoflm4
     937 00003c60     09c0          movi    FFLYBACK_SEQ,a0
         00003c70     0034  
     938 00003c80           huxunoflm4
     939                    
     940                    
     941 00003c80     c200          jrls    huxufall
         00003c90     00f9  
     942 00003ca0     c000          jruc    huxuflail
         00003cb0     0089  
     943                    
     944 00003cc0           huxuhaveball
     945                    
     946                    
     947 00003cc0     09c0          movi    FLYBACK_SEQ,a0          ;If similar power, always do flyback
         00003cd0     002f  
     948 00003ce0     4d29          move    a9,a9
     949 00003cf0     ca02          jrz     huxunoflm5
     950 00003d00     09c0          movi    FFLYBACK_SEQ,a0
         00003d10     0034  
     951 00003d20           huxunoflm5
     952                    
     953 00003d20     b501          move    *a8(OZPOS),a1
         00003d30     00d0  
     954 00003d40     0b41          cmpi    0410H,a1
         00003d50     fbef  
     955 00003d60     c704          jrgt    huxunot_rear
     956 00003d70     b701          move    *a8(OZVEL),a1,L
         00003d80     0060  
     957 00003d90     ce00          jrn     huxufall                        ;Heading over scores table?
         00003da0     00e8  
     958                    
     959 00003db0           huxunot_rear
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   23

     960 00003db0     05a1          move    @pushing_delay,a1
         00003dc0 00000000! 
     961 00003de0     cb3d          jrnz    huxukeepball
     962 00003df0     05a1          move    @strongmen,a1
         00003e00 00004840- 
     963 00003e20     ca0c          jrz     huxunotchamp
     964 00003e30     2fe1          srl     1,a1
     965 00003e40     b5a0          move    *a13(plyr_num),a0
         00003e50     0100  
     966 00003e60     2fe0          srl     1,a0
     967 00003e70     4801          cmp     a0,a1
     968 00003e80     ca06          jrz     huxunotchamp            ;br=champ getting pushed
     969 00003e90     09c0          movi    900,a0
         00003ea0     0384  
     970 00003eb0     0d5f          calla   RNDPER
         00003ec0 00000000! 
     971 00003ee0     c32d          jrhi    huxukeepball
     972                                    
     973 00003ef0           huxunotchamp
     974                    
     975                    
     976                    
     977 00003ef0     09c0          movi    500,a0                  ;40% chance of keeping ball if in ELBO
         00003f00     01f4  
     978 00003f10     0b4e          cmpi    ELBO_SEQ,a14            ;Could also do ELBO2_SEQ
         00003f20     ffc6  
     979 00003f30     ca24          jrz     huxufbnorm
     980                    
     981 00003f40     b7ae          move    *a13(plyr_attrib_p),a14,L
         00003f50     0150  
     982 00003f60     b5c0          move    *a14(PAT_POWER),a0
         00003f70     0150  
     983                    
     984                    
     985 00003f80     05a2          move    @last_power,a2          ;Player pushing has this power
         00003f90 00000000! 
     986 00003fb0     4402          sub     a0,a2
     987 00003fc0     0382          abs     a2
     988 00003fd0     0b42          cmpi    1,a2
         00003fe0     fffe  
     989 00003ff0     c703          jrgt    huxunorm
     990 00004000     09c0          movi    200,a0
         00004010     00c8  
     991 00004020     c005          jruc    huxunorm2
     992                    
     993 00004030           huxunorm
     994                    
     995 00004030     2480          sll     4,a0
     996 00004040     0b20          addi    huxukpball_t,a0
         00004050 00009e20' 
     997 00004070     8400          move    *a0,a0
     998 00004080           huxunorm2
     999 00004080     b5a1          move    *a13(plyr_ptsdown),a1
         00004090     0440  
    1000 000040a0     c60d          jrle    huxufbnorm                      ;!Losing?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   24

    1001 000040b0     0b41          cmpi    15,a1
         000040c0     fff0  
    1002 000040d0     c601          jrle    huxufbmok
    1003 000040e0     19e1          movk    15,a1
    1004 000040f0     2481  huxufbmok       sll     4,a1
    1005 00004100     0b21          addi    huxuflyb_t,a1
         00004110 0000a0e0' 
    1006 00004130     842e          move    *a1,a14
    1007 00004140     41c0          add     a14,a0
    1008 00004150     0b40          cmpi    1000,a0
         00004160     fc17  
    1009 00004170     c504          jrge    huxukeepball
    1010 00004180           huxufbnorm
    1011 00004180     0d5f          calla   RNDPER
         00004190 00000000! 
    1012 000041b0     c24a          jrls    huxufb
    1013                    
    1014 000041c0           huxukeepball
    1015                    
    1016 000041c0     5600          clr     a0
    1017 000041d0     b00d          move    a0,*a13(plyr_dribmode)  ;Allow dribble when he gets up
         000041e0     0210  
    1018                    
    1019                    
    1020 000041f0     0d5f          calla   pushed_speech
         00004200 00000000! 
    1021                    
    1022 00004220     09c0          movi    FLYBACKWB_SEQ,a0                ;If similar power, always do flyback
         00004230     0031  
    1023 00004240     4d29          move    a9,a9
    1024 00004250     ca02          jrz     huxunoflm6
    1025 00004260     09c0          movi    FFLYBACKWB_SEQ,a0
         00004270     0036  
    1026 00004280           huxunoflm6
    1027                    
    1028                    
    1029                    
    1030 00004280     b5ae          move    *a13(plyr_seqflgs),a14
         00004290     0180  
    1031 000042a0     1fce          btst    DUNK_B,a14
    1032 000042b0     cb00          jrnz    huxufall                        ;In dunk?
         000042c0     0096  
    1033                    
    1034                    
    1035 000042d0     b5ae          move    *a13(plyr_seq),a14
         000042e0     0170  
    1036 000042f0     16ee          subk    SHOOT_SEQ,a14           ;Am I shooting?
    1037 00004300     ca05          jrz     huxu_50_50
    1038                    
    1039 00004310     09c0          movi    50,a0
         00004320     0032  
    1040 00004330     b5a1          move    *a13(plyr_ptsdown),a1
         00004340     0440  
    1041 00004350     c614          jrle    huxui5050
    1042                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   25

    1043 00004360           huxu_50_50
    1044                    
    1045 00004360     b7ae          move    *a13(plyr_attrib_p),a14,L
         00004370     0150  
    1046 00004380     b5c0          move    *a14(PAT_POWER),a0
         00004390     0150  
    1047                    
    1048                    
    1049 000043a0     05a2          move    @last_power,a2          ;Player pushing has this power
         000043b0 00000000! 
    1050 000043d0     4402          sub     a0,a2
    1051 000043e0     0382          abs     a2
    1052 000043f0     0b42          cmpi    1,a2
         00004400     fffe  
    1053 00004410     c703          jrgt    huxunorm3
    1054 00004420     09c0          movi    250,a0
         00004430     00fa  
    1055 00004440     c005          jruc    huxui5050
    1056                    
    1057 00004450           huxunorm3
    1058 00004450     2480          sll     4,a0
    1059 00004460     0b20          addi    huxushortfly_t,a0
         00004470 00009f80' 
    1060 00004490     8400          move    *a0,a0
    1061                    
    1062 000044a0           huxui5050
    1063 000044a0     0d5f          calla   RNDPER
         000044b0 00000000! 
    1064 000044d0     c307          jrhi    huxunofall
    1065                    
    1066 000044e0     09c0          movi    FLYBACKWB_SEQ,a0                ;If similar power, always do flyback
         000044f0     0031  
    1067 00004500     4d29          move    a9,a9
    1068 00004510     ca02          jrz     huxunoflm7
    1069 00004520     09c0          movi    FFLYBACKWB_SEQ,a0
         00004530     0036  
    1070 00004540           huxunoflm7
    1071 00004540     c06e          jruc    huxufall
    1072 00004550           huxunofall
    1073                    
    1074                    
    1075                    
    1076 00004550     b700  huxuflail       move    *a8(OZVEL),a0,L
         00004560     0060  
    1077 00004570     2bc0          sra     2,a0
    1078 00004580     b208          move    a0,*a8(OZVEL),L
         00004590     0060  
    1079 000045a0     b700          move    *a8(OXVEL),a0,L
         000045b0     0020  
    1080 000045c0     2bc0          sra     2,a0
    1081 000045d0     b208          move    a0,*a8(OXVEL),L
         000045e0     0020  
    1082                    
    1083 000045f0     09c0          movi    FLYBACKWB2_SEQ,a0               ;If similar power, always do flyback
         00004600     0032  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   26

    1084 00004610     4d29          move    a9,a9
    1085 00004620     ca02          jrz     huxunoflm8
    1086 00004630     09c0          movi    FFLYBACKWB2_SEQ,a0
         00004640     0037  
    1087 00004650           huxunoflm8
    1088 00004650     c05d          jruc    huxufall
    1089                    
    1090 00004660           huxufb
    1091                    
    1092 00004660     09c0          movi    FLYBACK_SEQ,a0          ;If similar power, always do flyback
         00004670     002f  
    1093 00004680     4d29          move    a9,a9
    1094 00004690     ca02          jrz     huxunoflm9
    1095 000046a0     09c0          movi    FFLYBACK_SEQ,a0
         000046b0     0034  
    1096 000046c0           huxunoflm9
    1097                    
    1098 000046c0     b5ae          move    *a13(plyr_seqflgs),a14
         000046d0     0180  
    1099 000046e0     1fce          btst    DUNK_B,a14
    1100 000046f0     cb53          jrnz    huxufall                        ;In dunk?
    1101                    
    1102 00004700     b7ae          move    *a13(plyr_attrib_p),a14,L
         00004710     0150  
    1103 00004720     b5c0          move    *a14(PAT_POWER),a0
         00004730     0150  
    1104                    
    1105                    
    1106 00004740     05a2          move    @last_power,a2          ;Player pushing has this power
         00004750 00000000! 
    1107 00004770     4402          sub     a0,a2
    1108 00004780     0382          abs     a2
    1109 00004790     0b42          cmpi    1,a2
         000047a0     fffe  
    1110 000047b0     c707          jrgt    huxunorm5
    1111                    
    1112 000047c0     09c0          movi    FLYBACK_SEQ,a0          ;If similar power, always do flyback
         000047d0     002f  
    1113 000047e0     4d29          move    a9,a9
    1114 000047f0     ca02          jrz     huxunoflm10
    1115 00004800     09c0          movi    FFLYBACK_SEQ,a0
         00004810     0034  
    1116 00004820           huxunoflm10
    1117                    
    1118 00004820     c040          jruc    huxufall
    1119 00004830           huxunorm5
    1120                    
    1121                    
    1122                    
    1123 00004830     2480          sll     4,a0
    1124 00004840     b5a1          move    *a13(plyr_ptsdown),a1
         00004850     0440  
    1125 00004860     c605          jrle    huxuwinshortfly                 ;Br= I'm winning!
    1126 00004870     0b20          addi    huxushortfly_t,a0
         00004880 00009f80' 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   27

    1127 000048a0     8400          move    *a0,a0
    1128 000048b0     c004          jruc    huxuflyout
    1129 000048c0           huxuwinshortfly                 ;Br= I'm winning!
    1130 000048c0     0b20          addi    huxuwinshortfly_t,a0
         000048d0 0000a030' 
    1131 000048f0     8400          move    *a0,a0
    1132                    
    1133                    
    1134 00004900           huxuflyout
    1135                    
    1136 00004900     0d5f          calla   RNDPER
         00004910 00000000! 
    1137 00004930     c307          jrhi    huxufly_short
    1138                    
    1139 00004940     09c0          movi    FLYBACK_SEQ,a0          ;If similar power, always do flyback
         00004950     002f  
    1140 00004960     4d29          move    a9,a9
    1141 00004970     ca02          jrz     huxunoflm11
    1142 00004980     09c0          movi    FFLYBACK_SEQ,a0
         00004990     0034  
    1143 000049a0           huxunoflm11
    1144 000049a0     c028          jruc    huxufall
    1145                    
    1146 000049b0           huxufly_short
    1147 000049b0     b700          move    *a8(OZVEL),a0,L
         000049c0     0060  
    1148 000049d0     2bc0          sra     2,a0
    1149 000049e0     b208          move    a0,*a8(OZVEL),L
         000049f0     0060  
    1150 00004a00     b700          move    *a8(OXVEL),a0,L
         00004a10     0020  
    1151 00004a20     2bc0          sra     2,a0
    1152 00004a30     b208          move    a0,*a8(OXVEL),L
         00004a40     0020  
    1153                    
    1154 00004a50     09c0          movi    FLYBACK2_SEQ,a0         ;If similar power, always do flyback
         00004a60     0030  
    1155 00004a70     4d29          move    a9,a9
    1156 00004a80     ca02          jrz     huxunoflm12
    1157 00004a90     09c0          movi    FFLYBACK2_SEQ,a0
         00004aa0     0035  
    1158 00004ab0           huxunoflm12
    1159                    
    1160 00004ab0     c017          jruc    huxufall
    1161                    
    1162 00004ac0           huxuchkstag
    1163 00004ac0     b5a1          move    *a13(plyr_jmpcnt),a1
         00004ad0     0400  
    1164 00004ae0     ca09          jrz     huxustag                        ;On gnd?
    1165                    
    1166 00004af0     09c0          movi    FALL_SEQ,a0             ;If similar power, always do flyback
         00004b00     002e  
    1167 00004b10     4d29          move    a9,a9
    1168 00004b20     ca02          jrz     huxunoflm13
    1169 00004b30     09c0          movi    FFALL_SEQ,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   28

         00004b40     0033  
    1170 00004b50           huxunoflm13
    1171                    
    1172 00004b50     49c0          cmp     a14,a0
    1173 00004b60     cb0c          jrne    huxufall
    1174 00004b70     c00f          jruc    huxucstag
    1175                    
    1176 00004b80     0bee  huxustag        subi    STAGGER_SEQ,a14
         00004b90     ffd2  
    1177 00004ba0     ca0f          jreq    huxunostag
    1178 00004bb0     142e          subk    FALL_SEQ-STAGGER_SEQ,a14
    1179 00004bc0     ca0a          jreq    huxucstag
    1180                    
    1181 00004bd0     1860          movk    3,a0
    1182 00004be0     0d3f          callr   rnd
         00004bf0     1fc5  
    1183 00004c00     cb09          jrnz    huxunostag
    1184 00004c10     09c0          movi    STAGGER_SEQ,a0
         00004c20     002d  
    1185                    
    1186 00004c30           huxufall
    1187 00004c30     b5a7          move    *a13(plyr_dir),a7
         00004c40     03d0  
    1188 00004c50     0d3f          callr   plyr_setseq
         00004c60     0569  
    1189 00004c70     5642  huxucstag       clr     a2
    1190 00004c80     b04d          move    a2,*a13(plyr_stagcnt)
         00004c90     0430  
    1191 00004ca0           huxunostag
    1192                    
    1193                    
    1194 00004ca0     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         00004cb0 00000060- 
    1195 00004cd0     b5a1          move    *a13(plyr_num),a1
         00004ce0     0100  
    1196 00004cf0     4a20          btst    a1,a0
    1197 00004d00     cb03          jrnz    huxuhuman
    1198 00004d10     0d5f          calla   drone_main
         00004d20 00000000! 
    1199 00004d40           huxuhuman
    1200 00004d40           huxutcc
    1201                    
    1202 00004d40     b5ae          move    *a13(plyr_indef),a14
         00004d50     03a0  
    1203 00004d60     ca03          jrz     huxunodef
    1204 00004d70     b9ad          move    *a13(plyr_balldir),*a13(plyr_newdir)
         00004d80     0340  
         00004d90     03e0  
    1205                    
    1206 00004da0           huxunodef
    1207 00004da0     8566          move    *a11,a6                 ;A6=Ctrl bits
    1208                    
    1209                    
    1210 00004db0     afa0          movb    *a13(plyr_seqflgs+NOJOY_B-7),a0
         00004dc0     0186  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   29

    1211 00004dd0     ce06          jrn     huxuclrsb                       ;Joy off?
    1212                    
    1213 00004de0     b5a0          move    *a13(plyr_nojoy),a0
         00004df0     03b0  
    1214 00004e00     ca05          jrz     huxujoyon                       ;Joystick on?
    1215 00004e10     c702          jrgt    huxuclrsb
    1216 00004e20     4c06          move    a0,a6
    1217 00004e30     c002          jruc    huxujoyon
    1218 00004e40           huxuclrsb
    1219 00004e40     2f86          srl     4,a6                    ;Clr stick bits
    1220 00004e50     2486          sll     4,a6
    1221 00004e60           huxujoyon
    1222 00004e60     b5a7          move    *a13(plyr_dir),a7       ;A7=Dir
         00004e70     03d0  
    1223                    
    1224 00004e80     b5a0          move    *a13(plyr_newdir),a0
         00004e90     03e0  
    1225 00004ea0     ce07          jrn     huxustick                       ;No forced dir?
    1226 00004eb0     44e0          sub     a7,a0
    1227 00004ec0     cb00          jrnz    huxuturn
         00004ed0     0092  
    1228 00004ee0     09c0          movi    -1,a0
         00004ef0     ffff  
    1229 00004f00     b00d          move    a0,*a13(plyr_newdir)
         00004f10     03e0  
    1230                    
    1231 00004f20           huxustick
    1232 00004f20     b5a1          move    *a13(plyr_autoctrl),a1
         00004f30     03c0  
    1233 00004f40     cb00          jrnz    huxurok
         00004f50     0080  
    1234                    
    1235 00004f60     b500          move    *a8(OZPOS),a0           ;0CHlr joy bits that make us go out of bounds
         00004f70     00d0  
    1236 00004f80     4c0e          move    a0,a14
    1237 00004f90     0b40          cmpi    CZMIN+8,a0
         00004fa0     fc0f  
    1238 00004fb0     c720          jrgt    huxuupok                        ;OK?
    1239 00004fc0     1820          movk    JOYU_M,a0
    1240 00004fd0     5206          andn    a0,a6
    1241                    
    1242                    
    1243 00004fe0     b5a1          move    *a13(plyr_rcvpass),a1
         00004ff0     0230  
    1244 00005000     ca05          jrz     huxunotwaiting
    1245                    
    1246 00005010     1821          movk    1,a1
    1247 00005020     b02d          move    a1,*a13(plyr_nojoy)     ;Neg
         00005030     03b0  
    1248 00005040     b02d          move    a1,*a13(plyr_turndelay)
         00005050     0520  
    1249 00005060           huxunotwaiting
    1250                    
    1251 00005060     0b4e          cmpi    CZMIN+6,a14             ;a0
         00005070     fc11  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   30

    1252 00005080     c713          jrgt    huxuupok
    1253                    
    1254 00005090     b5ae          move    *a13(plyr_seq),a14
         000050a0     0170  
    1255 000050b0     0b4e          cmpi    RUN_SEQ,a14
         000050c0     fff2  
    1256 000050d0     ca09          jrz     huxusldin0
    1257 000050e0     0b4e          cmpi    RUNTURB_SEQ,a14
         000050f0     fff1  
    1258 00005100     ca06          jrz     huxusldin0
    1259 00005110     0b4e          cmpi    RUNDRIB_SEQ,a14
         00005120     fff0  
    1260 00005130     ca03          jrz     huxusldin0
    1261 00005140     0b4e          cmpi    RUNDRIBTURB_SEQ,a14
         00005150     ffef  
    1262 00005160     cb05          jrnz    huxuupok
    1263                    
    1264 00005170           huxusldin0
    1265 00005170     b50e          move    *a8(OZPOS),a14
         00005180     00d0  
    1266 00005190     102e          inc     a14
    1267 000051a0     b1c8          move    a14,*a8(OZPOS)
         000051b0     00d0  
    1268                    
    1269 000051c0           huxuupok
    1270 000051c0     0b40          cmpi    GZMAX-6,a0
         000051d0     fa98  
    1271 000051e0     c40a          jrlt    huxudnok                        ;OK?
    1272 000051f0     1840          movk    JOYD_M,a0
    1273 00005200     5206          andn    a0,a6
    1274                    
    1275 00005210     b5ae          move    *a13(plyr_rcvpass),a14
         00005220     0230  
    1276 00005230     ca05          jrz     huxunotwaiting1
    1277                    
    1278 00005240     182e          movk    1,a14
    1279 00005250     b1cd          move    a14,*a13(plyr_nojoy)    ;Neg
         00005260     03b0  
    1280 00005270     b1cd          move    a14,*a13(plyr_turndelay)
         00005280     0520  
    1281 00005290           huxunotwaiting1
    1282                    
    1283 00005290           huxudnok
    1284 00005290     b500          move    *a8(OXPOS),a0
         000052a0     0090  
    1285 000052b0     b50e          move    *a8(OXANI+16),a14
         000052c0     01f0  
    1286 000052d0     41c0          add     a14,a0
    1287 000052e0     4c0e          move    a0,a14
    1288 000052f0     0b40          cmpi    PLYRMINX,a0
         00005300     e150  
    1289 00005310     c720          jrgt    huxulok                 ;OK?
    1290 00005320     1880          movk    JOYL_M,a0
    1291 00005330     5206          andn    a0,a6
    1292                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   31

    1293                    
    1294                    
    1295                    
    1296 00005340     b5a1          move    *a13(plyr_rcvpass),a1
         00005350     0230  
    1297 00005360     ca05          jrz     huxunotwaiting2
    1298                    
    1299 00005370     1821          movk    1,a1
    1300 00005380     b02d          move    a1,*a13(plyr_nojoy)     ;Neg
         00005390     03b0  
    1301 000053a0     b02d          move    a1,*a13(plyr_turndelay)
         000053b0     0520  
    1302 000053c0           huxunotwaiting2
    1303                    
    1304                    
    1305                    
    1306                    
    1307                    
    1308 000053c0     0b4e          cmpi    PLYRMINX-2,a14
         000053d0     e152  
    1309 000053e0     c713          jrgt    huxulok                 ;OK?
    1310                    
    1311                    
    1312 000053f0     b5ae          move    *a13(plyr_seq),a14
         00005400     0170  
    1313 00005410     0b4e          cmpi    RUN_SEQ,a14
         00005420     fff2  
    1314 00005430     ca09          jrz     huxusldin
    1315 00005440     0b4e          cmpi    RUNTURB_SEQ,a14
         00005450     fff1  
    1316 00005460     ca06          jrz     huxusldin
    1317 00005470     0b4e          cmpi    RUNDRIB_SEQ,a14
         00005480     fff0  
    1318 00005490     ca03          jrz     huxusldin
    1319 000054a0     0b4e          cmpi    RUNDRIBTURB_SEQ,a14
         000054b0     ffef  
    1320 000054c0     cb05          jrnz    huxulok
    1321 000054d0           huxusldin
    1322                    
    1323 000054d0     b50e          move    *a8(OXPOS),a14
         000054e0     0090  
    1324 000054f0     102e          inc     a14
    1325 00005500     b1c8          move    a14,*a8(OXPOS)
         00005510     0090  
    1326                    
    1327 00005520           huxulok
    1328 00005520     4c0e          move    a0,a14
    1329 00005530     0b40          cmpi    PLYRMAXX,a0
         00005540     deb7  
    1330 00005550     c420          jrlt    huxurok                 ;OK?
    1331                            
    1332 00005560     1900          movk    JOYR_M,a0
    1333 00005570     5206          andn    a0,a6
    1334                    
    1335                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   32

    1336 00005580     b5a1          move    *a13(plyr_rcvpass),a1
         00005590     0230  
    1337 000055a0     ca05          jrz     huxunotwaiting3
    1338                    
    1339 000055b0     1821          movk    1,a1
    1340 000055c0     b02d          move    a1,*a13(plyr_nojoy)     ;Neg
         000055d0     03b0  
    1341 000055e0     b02d          move    a1,*a13(plyr_turndelay)
         000055f0     0520  
    1342 00005600           huxunotwaiting3
    1343                    
    1344                    
    1345                    
    1346 00005600     0b4e          cmpi    PLYRMAXX+2,a14
         00005610     deb5  
    1347 00005620     c413          jrlt    huxurok                 ;OK?
    1348                    
    1349 00005630     b5ae          move    *a13(plyr_seq),a14
         00005640     0170  
    1350 00005650     0b4e          cmpi    RUN_SEQ,a14
         00005660     fff2  
    1351 00005670     ca09          jrz     huxusldin2
    1352 00005680     0b4e          cmpi    RUNTURB_SEQ,a14
         00005690     fff1  
    1353 000056a0     ca06          jrz     huxusldin2
    1354 000056b0     0b4e          cmpi    RUNDRIB_SEQ,a14
         000056c0     fff0  
    1355 000056d0     ca03          jrz     huxusldin2
    1356 000056e0     0b4e          cmpi    RUNDRIBTURB_SEQ,a14
         000056f0     ffef  
    1357 00005700     cb05          jrnz    huxurok
    1358 00005710           huxusldin2
    1359                    
    1360 00005710     b50e          move    *a8(OXPOS),a14
         00005720     0090  
    1361 00005730     142e          dec     a14
    1362 00005740     b1c8          move    a14,*a8(OXPOS)
         00005750     0090  
    1363                    
    1364 00005760           huxurok
    1365                    
    1366 00005760     4cc0          move    a6,a0
    1367 00005770     2780          sll     32-4,a0
    1368 00005780     ca3f          jrz     huxusetdt                       ;No stick?
    1369                    
    1370 00005790     2ce0          srl     32-4-3,a0               ;0CHonvert to dir 0-127
    1371 000057a0     0b20          addi    huxudirc_t,a0
         000057b0 00009ca0' 
    1372 000057d0     8e00          movb    *a0,a0
    1373                    
    1374 000057e0     44e0          sub     a7,a0                   ;A0=Difference
    1375 000057f0     ca35          jrz     huxusamedir
    1376                    
    1377 00005800     4c01  huxuturn        move    a0,a1                   ;>Turn the shortest way
    1378 00005810     0380          abs     a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   33

    1379                    
    1380 00005820     14c0          subk    6,a0
    1381 00005830     c502          jrge    huxu340                 ;Far?
    1382 00005840     4027          add     a1,a7                   ;Make exact
    1383 00005850     c008          jruc    huxu380
    1384                    
    1385 00005860     0b40  huxu340 cmpi    64-6,a0
         00005870     ffc5  
    1386 00005880     c601          jrle    huxu350
    1387 00005890     03a1          neg     a1
    1388 000058a0     4c21  huxu350 move    a1,a1
    1389 000058b0     cf01          jrnn    huxu360
    1390 000058c0     1587          subk    12,a7                   ;-6
    1391 000058d0     10c7  huxu360 addk    6,a7                    ;+6
    1392                    
    1393 000058e0     2727  huxu380 sll     32-7,a7                 ;Make 0-127
    1394 000058f0     2ce7          srl     32-7,a7
    1395 00005900     b0ed          move    a7,*a13(plyr_dir)
         00005910     03d0  
    1396                    
    1397 00005920     1be0          movk    01fH,a0
    1398 00005930     0d3f          callr   rnd
         00005940     1ef0  
    1399 00005950     cb0d          jrnz    huxunosq                        ;No squeak?
    1400 00005960     05a0          move    @PCNT,a0
         00005970 00000000! 
    1401 00005990     1861          movk    3,a1
    1402 000059a0     5020          and     a1,a0
    1403 000059b0     24a0          sll     5,a0
    1404 000059c0     0b20          addi    huxusqsnds,a0
         000059d0 00009da0' 
    1405 000059f0     8600          move    *a0,a0,L
    1406 00005a00     0d5f          calla   snd_play1
         00005a10 00000000! 
    1407 00005a30           huxunosq
    1408                    
    1409 00005a30     b5a0          move    *a13(plyr_seqflgs),a0
         00005a40     0180  
    1410 00005a50     1fe0          btst    WALK_B,a0
    1411 00005a60     cb0c          jrnz    huxunodir
    1412 00005a70     b5a0          move    *a13(plyr_seqdir),a0
         00005a80     0190  
    1413 00005a90     4ce1          move    a7,a1                   ;Dir
    1414 00005aa0     1101          addk    8,a1
    1415 00005ab0     2721          sll     32-7,a1
    1416 00005ac0     2c61          srl     32-7+4,a1               ;Kill frac
    1417 00005ad0     4801          cmp     a0,a1
    1418 00005ae0     ca04          jreq    huxunodir                       ;Already in this dir?
    1419 00005af0     b5a0          move    *a13(plyr_seq),a0
         00005b00     0170  
    1420 00005b10     0d3f          callr   plyr_setseq
         00005b20     047d  
    1421 00005b30     5600  huxunodir       clr     a0
    1422 00005b40     c003          jruc    huxusetdt
    1423                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   34

    1424 00005b50           huxusamedir
    1425 00005b50     b5a0          move    *a13(plyr_dirtime),a0
         00005b60     03f0  
    1426 00005b70     1020          addk    1,a0
    1427 00005b80     b00d  huxusetdt       move    a0,*a13(plyr_dirtime)
         00005b90     03f0  
    1428                    
    1429                    
    1430                    
    1431                    
    1432                    
    1433                                                            ;>Movement/boundary check
    1434 00005ba0     b702          move    *a8(OXVEL),a2,L
         00005bb0     0020  
    1435 00005bc0     b703          move    *a8(OZVEL),a3,L
         00005bd0     0060  
    1436                    
    1437 00005be0     b5a0          move    *a13(plyr_jmpcnt),a0
         00005bf0     0400  
    1438 00005c00     cb04          jrnz    huxudrift                       ;Jumping?
    1439                    
    1440 00005c10     b5a4          move    *a13(plyr_seqflgs),a4
         00005c20     0180  
    1441 00005c30     1f04          btst    DRIFT_B,a4
    1442 00005c40     ca23          jrz     huxunodrift
    1443                    
    1444 00005c50     b504  huxudrift       move    *a8(OXPOS),a4           ;>Put drag on vel if we drift too far
         00005c60     0090  
    1445 00005c70     b500          move    *a8(OXANI+16),a0
         00005c80     01f0  
    1446 00005c90     4004          add     a0,a4
    1447 00005ca0     b505          move    *a8(OZPOS),a5
         00005cb0     00d0  
    1448                    
    1449 00005cc0     4c63          move    a3,a3
    1450 00005cd0     c504          jrge    huxuzvpos
    1451 00005ce0     0b45          cmpi    CZMIN+8,a5
         00005cf0     fc0f  
    1452 00005d00     c707          jrgt    huxuchkx                        ;OK?
    1453 00005d10     c003          jruc    huxuydrag
    1454                    
    1455 00005d20     0b45  huxuzvpos       cmpi    GZMAX-6,a5
         00005d30     fa98  
    1456 00005d40     c403          jrlt    huxuchkx                        ;OK?
    1457 00005d50     4c60  huxuydrag       move    a3,a0                   ;-1/4 from vel
    1458 00005d60     2bc0          sra     2,a0
    1459 00005d70     4403          sub     a0,a3
    1460                    
    1461 00005d80           huxuchkx
    1462 00005d80     4c42          move    a2,a2
    1463 00005d90     c505          jrge    huxuxvpos
    1464 00005da0     0b44          cmpi    PLYRMINX2,a4
         00005db0     e171  
    1465 00005dc0     c700          jrgt    huxusetvel                      ;OK?
         00005dd0     0099  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   35

    1466 00005de0     c004          jruc    huxuxdrag
    1467 00005df0           huxuxvpos
    1468 00005df0     0b44          cmpi    PLYRMAXX2,a4
         00005e00     de8d  
    1469 00005e10     c400          jrlt    huxusetvel                      ;OK?
         00005e20     0094  
    1470 00005e30     4c40  huxuxdrag       move    a2,a0                   ;-1/4 from vel
    1471 00005e40     2bc0          sra     2,a0
    1472 00005e50     4402          sub     a0,a2
    1473 00005e60     c000          jruc    huxusetvel
         00005e70     008f  
    1474                    
    1475                    
    1476 00005e80           huxunodrift
    1477 00005e80     4c40          move    a2,a0                   ;>-1/4 from XZVEL
    1478 00005e90     2bc0          sra     2,a0
    1479 00005ea0     4402          sub     a0,a2
    1480 00005eb0     4c60          move    a3,a0
    1481 00005ec0     2bc0          sra     2,a0
    1482 00005ed0     4403          sub     a0,a3
    1483                    
    1484 00005ee0     1f84          btst    NOMV_B,a4
    1485 00005ef0     cb00          jrnz    huxusetvel                      ;No moving?
         00005f00     0086  
    1486                    
    1487                    
    1488 00005f10     b5a1          move    *a13(plyr_autoctrl),a1
         00005f20     03c0  
    1489 00005f30     ca04          jrz     huxunoautoc
    1490 00005f40     09ee          movi    01a000H,a14
         00005f50 0001a000  
    1491 00005f70     c04e          jruc    huxunoturb
    1492                    
    1493 00005f80           huxunoautoc
    1494 00005f80     b5ae          move    *a13(plyr_bvel),a14
         00005f90     0240  
    1495 00005fa0     248e          sll     4,a14
    1496                    
    1497                    
    1498                    
    1499 00005fb0     b5a1          move    *a13(plyr_ownball),a1
         00005fc0     0260  
    1500 00005fd0     c612          jrle    huxunobal                       ;Have ball?
    1501                    
    1502                    
    1503 00005fe0     b5a1          move    *a13(plyr_ohpdist),a1
         00005ff0     0390  
    1504 00006000     0b41          cmpi    0174H,a1
         00006010     fe8b  
    1505 00006020     c40d          jrlt    huxunobal
    1506 00006030     07a1          move    @shotimer,a1,L
         00006040 00000000! 
    1507 00006060     ca09          jrz     huxunobal
    1508 00006070     0b61          cmpi    [1,0],a1
         00006080 fffeffff  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   36

    1509 000060a0     ca05          jrz     huxunobal
    1510                    
    1511 000060b0     b5a1          move    *a13(plyr_ptsdown),a1
         000060c0     0440  
    1512 000060d0     c702          jrgt    huxunobal                       ;If losing, don't slow down
    1513                    
    1514 000060e0     0bee          subi    03000H,a14              ;Slow him down
         000060f0     cfff  
    1515                    
    1516 00006100           huxunobal
    1517 00006100     07a1          move    @game_time,a1,L
         00006110 00000000! 
    1518 00006130     0b61          cmpi    050000h,a1
         00006140 fffaffff  
    1519 00006160     c518          jrge    huxunoxtraspd
    1520                    
    1521                    
    1522                    
    1523 00006170     b5a1          move    *a13(plyr_num),a1
         00006180     0100  
    1524 00006190     0b41          cmpi    2,a1
         000061a0     fffd  
    1525 000061b0     c509          jrge    huxutm2
    1526 000061c0     05a0          move    @scores,a0
         000061d0 00000000! 
    1527 000061f0     05a1          move    @scores+16,a1
         00006200 00000010! 
    1528 00006220     4801          cmp     a0,a1
    1529 00006230     c60b          jrle    huxunoxtraspd
    1530 00006240     c008          jruc    huxuyes
    1531                    
    1532 00006250     05a0  huxutm2 move    @scores,a0
         00006260 00000000! 
    1533 00006280     05a1          move    @scores+16,a1
         00006290 00000010! 
    1534 000062b0     4801          cmp     a0,a1
    1535 000062c0     c502          jrge    huxunoxtraspd
    1536 000062d0           huxuyes
    1537 000062d0     0b0e          addi    01c00H,a14
         000062e0     1c00  
    1538 000062f0           huxunoxtraspd
    1539                    
    1540 000062f0     b5a1          move    *a13(plyr_offscrn),a1
         00006300     04f0  
    1541 00006310     ca06          jrz     huxuonscrn
    1542 00006320     0b2e          addi    0e000H,a14              ;Speedup when offscrn on defense
         00006330 0000e000  
    1543 00006350     5621          clr     a1
    1544 00006360     b02d          move    a1,*a13(plyr_offscrn)
         00006370     04f0  
    1545 00006380           huxuonscrn
    1546                    
    1547 00006380     b5a1          move    *a13(plyr_ownball),a1
         00006390     0260  
    1548 000063a0     ca06          jrz     huxuchkturb
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   37

    1549 000063b0     0bee          subi    0e80H,a14               ;Slow offense down
         000063c0     f17f  
    1550 000063d0     4c21          move    a1,a1
    1551 000063e0     ce02          jrn     huxuchkturb             ;Buddy has ball?
    1552 000063f0     0bee          subi    01100H,a14              ;Slow him down
         00006400     eeff  
    1553 00006410           huxuchkturb
    1554 00006410     b5a0          move    *a13(plyr_turbon),a0
         00006420     0250  
    1555 00006430     ca02          jrz     huxunoturb
    1556 00006440     0b0e          addi    03e00H,a14
         00006450     3e00  
    1557 00006460           huxunoturb
    1558 00006460     1860          movk    11b,a0
    1559 00006470     50c0          and     a6,a0
    1560 00006480     ca06          jrz     huxunodiag                      ;Neither up or dn?
    1561 00006490     1980          movk    1100b,a0
    1562 000064a0     50c0          and     a6,a0
    1563 000064b0     ca03          jrz     huxunodiag                      ;Neither lft or rgt?
    1564 000064c0     4dc0          move    a14,a0
    1565 000064d0     2ba0          sra     3,a0
    1566 000064e0     440e          sub     a0,a14                  ;-12%
    1567 000064f0           huxunodiag
    1568                    
    1569                    
    1570 000064f0     b504          move    *a8(OXPOS),a4
         00006500     0090  
    1571 00006510     b500          move    *a8(OXANI+16),a0
         00006520     01f0  
    1572 00006530     4004          add     a0,a4
    1573 00006540     b505          move    *a8(OZPOS),a5
         00006550     00d0  
    1574                    
    1575 00006560     1fe6          btst    JOYU_B,a6
    1576 00006570     ca04          jrz     huxunoup
    1577 00006580     0b45          cmpi    CZMIN+8,a5
         00006590     fc0f  
    1578 000065a0     c601          jrle    huxunoup                        ;Min?
    1579 000065b0     45c3          sub     a14,a3
    1580 000065c0           huxunoup
    1581 000065c0     1fc6          btst    JOYD_B,a6
    1582 000065d0     ca04          jrz     huxunodn
    1583 000065e0     0b45          cmpi    GZMAX-6,a5
         000065f0     fa98  
    1584 00006600     c501          jrge    huxunodn                        ;Max?
    1585 00006610     41c3          add     a14,a3
    1586 00006620           huxunodn
    1587 00006620     1fa6          btst    JOYL_B,a6
    1588 00006630     ca09          jrz     huxuchkr
    1589 00006640     45c2          sub     a14,a2
    1590 00006650     0b44          cmpi    PLYRMINX,a4
         00006660     e150  
    1591 00006670     c70f          jrgt    huxusetvel                      ;In bounds?
    1592 00006680     b5a0          move    *a13(plyr_autoctrl),a0
         00006690     03c0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   38

    1593 000066a0     cb0c          jrnz    huxusetvel
    1594 000066b0     41c2          add     a14,a2
    1595 000066c0     c00a          jruc    huxusetvel
    1596 000066d0           huxuchkr
    1597 000066d0     1f86          btst    JOYR_B,a6
    1598 000066e0     ca08          jrz     huxusetvel
    1599 000066f0     41c2          add     a14,a2
    1600 00006700     0b44          cmpi    PLYRMAXX,a4
         00006710     deb7  
    1601 00006720     c404          jrlt    huxusetvel                      ;In bounds?
    1602 00006730     b5a0          move    *a13(plyr_autoctrl),a0
         00006740     03c0  
    1603 00006750     cb01          jrnz    huxusetvel
    1604 00006760     45c2          sub     a14,a2
    1605                    
    1606 00006770     b248  huxusetvel      move    a2,*a8(OXVEL),L
         00006780     0020  
    1607 00006790     b268          move    a3,*a8(OZVEL),L
         000067a0     0060  
    1608 000067b0           huxunomv
    1609                    
    1610                    
    1611                    
    1612                                                            ;0DHo turbo meters
    1613 000067b0     1f26          btst    BUT3_B,a6               ;Turbo but
    1614 000067c0     ca68          jrz     huxuturdone
    1615                    
    1616                    
    1617 000067d0     1e26          btst    BUT3_B+8,a6
    1618 000067e0     ca3f          jrz     huxunoelbo
    1619                    
    1620 000067f0     b5ae          move    *a13(plyr_tbutn),a14
         00006800     0510  
    1621 00006810     5600          clr     a0
    1622 00006820     b00d          move    a0,*a13(plyr_tbutn)
         00006830     0510  
    1623 00006840     142e          subk    1,a14
    1624 00006850     c438          jrlt    huxunoelbo                      ;Too quick?
    1625 00006860     14ee          subk    8-1,a14
    1626 00006870     c736          jrgt    huxunoelbo                      ;Too late?
    1627                    
    1628 00006880     b5ae          move    *a13(plyr_seq),a14
         00006890     0170  
    1629 000068a0     0b4e          cmpi    STNDWB_SEQ,a14
         000068b0     fffb  
    1630 000068c0     ca0b          jreq    huxuok
    1631 000068d0     0b4e          cmpi    STNDWB2_SEQ,a14
         000068e0     fffa  
    1632 000068f0     ca08          jreq    huxuok
    1633 00006900     0b4e          cmpi    STNDDRIB2_SEQ,a14
         00006910     fff8  
    1634 00006920     ca05          jreq    huxuok
    1635 00006930     0b4e          cmpi    RUNDRIB_SEQ,a14
         00006940     fff0  
    1636 00006950     ca02          jreq    huxuok
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   39

    1637 00006960     14ce          subk    STNDDRIB_SEQ,a14
    1638 00006970     cb26          jrne    huxunoelbo
    1639 00006980           huxuok
    1640                    
    1641 00006980     05a0          move    @gmqrtr,a0
         00006990 00000000! 
    1642 000069b0     cb07          jrnz    huxus1
    1643                    
    1644 000069c0     07a0          move    @game_time,a0,L
         000069d0 00000000! 
    1645 000069f0     0b60          cmpi    02040906H,a0
         00006a00 fdfbf6f9  
    1646 00006a20     c51b          jrge    huxunoelbo
    1647                    
    1648 00006a30           huxus1
    1649                                                            ;Shrink turbo meter for this plyr
    1650 00006a30     b7a2          move    *a13(plyr_PDATA_p),a2,L
         00006a40     0130  
    1651 00006a50     b441          move    *a2(ply_turbo),a1
         00006a60     0040  
    1652 00006a70     0b41          cmpi    05H,a1                  ;02fH is max
         00006a80     fffa  
    1653 00006a90     c414          jrlt    huxunoelbo                      ;Turbo too low?
    1654 00006aa0     1481          subk    04H,a1                  ;Use a bunch up!
    1655 00006ab0     b022          move    a1,*a2(ply_turbo)
         00006ac0     0040  
    1656 00006ad0     b640          move    *a2(ply_meter_imgs+40h),a0,L
         00006ae0     00c0  
    1657 00006af0     b401          move    *a0(OFSET),a1           ;Shrink meter
         00006b00     0100  
    1658 00006b10     1081          addk    04H,a1
    1659 00006b20     b020          move    a1,*a0(OFSET)
         00006b30     0100  
    1660                    
    1661 00006b40           huxunotingame
    1662 00006b40     09c0          movi    60,a0
         00006b50     003c  
    1663 00006b60     0580          move    a0,@steals_off          ;Don't allow steals for 60 ticks
         00006b70 00000000! 
    1664                    
    1665 00006b90     09c0          movi    ELBO2_SEQ,a0
         00006ba0     003a  
    1666 00006bb0     0d3f          callr   plyr_setseq
         00006bc0     0373  
    1667 00006bd0     c027          jruc    huxuturdone
    1668 00006be0           huxunoelbo
    1669                    
    1670                    
    1671                    
    1672 00006be0     b5a0          move    *a13(plyr_num),a0       ;If on fire, don't use turbo on run
         00006bf0     0100  
    1673 00006c00     05a1          move    @plyrnumonfire,a1
         00006c10 00000000! 
    1674 00006c30     4801          cmp     a0,a1
    1675 00006c40     ca20          jrz     huxuturdone
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   40

    1676                    
    1677                    
    1678 00006c50     b7a0          move    *a13(plyr_PDATA_p),a0,L
         00006c60     0130  
    1679 00006c70     b401          move    *a0(ply_turbo),a1       ;Turbo info in PxDATA (0-2f OXSIZE)
         00006c80     0040  
    1680 00006c90     ca1b          jrz     huxuturdone             ;No turbo left?
    1681 00006ca0     b402          move    *a0(ply_turbo_dl),a2    ;Cnt for delaying dec of ply_turbo
         00006cb0     0050  
    1682 00006cc0     1422          subk    1,a2
    1683 00006cd0     b040          move    a2,*a0(ply_turbo_dl)
         00006ce0     0050  
    1684 00006cf0     cb15          jrnz    huxuturdone
    1685                    
    1686 00006d00     1902          movk    8,a2                    ;Rate of decline adjustment
    1687 00006d10     b040          move    a2,*a0(ply_turbo_dl)
         00006d20     0050  
    1688 00006d30     1421          subk    1,a1
    1689 00006d40     b020          move    a1,*a0(ply_turbo)       ;Turbo meter size to get smaller
         00006d50     0040  
    1690                    
    1691 00006d60     1881          movk    4,a1
    1692 00006d70     b020          move    a1,*a0(used_turbo)      ;Cntr for replenishing meter after use
         00006d80     00e0  
    1693                    
    1694 00006d90     b401          move    *a0(ply_idiot_use),a1
         00006da0     0120  
    1695 00006db0     1021          inc     a1
    1696 00006dc0     b020          move    a1,*a0(ply_idiot_use)
         00006dd0     0120  
    1697                    
    1698 00006de0     b600          move    *a0(ply_meter_imgs+40h),a0,L    ;LITUP img 
         00006df0     00c0  
    1699 00006e00     b401          move    *a0(OFSET),a1           ;Need to shrink LITUP img
         00006e10     0100  
    1700 00006e20     1021          addk    1,a1
    1701 00006e30     b020          move    a1,*a0(OFSET)
         00006e40     0100  
    1702 00006e50           huxuturdone
    1703                    
    1704 00006e50     b5a0          move    *a13(plyr_tbutn),a0     ;Ticks since turbo button last hit
         00006e60     0510  
    1705 00006e70     1020          addk    1,a0                    
    1706 00006e80     b00d          move    a0,*a13(plyr_tbutn)
         00006e90     0510  
    1707                    
    1708                    
    1709 00006ea0     b5a0          move    *a13(plyr_shtdly),a0
         00006eb0     02b0  
    1710 00006ec0     c603          jrle    huxunodly                       ;No delay?
    1711 00006ed0     1420          subk    1,a0
    1712 00006ee0     b00d          move    a0,*a13(plyr_shtdly)
         00006ef0     02b0  
    1713 00006f00           huxunodly
    1714                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   41

    1715                    
    1716                    
    1717                    
    1718 00006f00     b5a0          move    *a13(plyr_rcvpass),a0   ;>Pass receiving
         00006f10     0230  
    1719 00006f20     c606          jrle    huxunorcvp                      ;No pass?
    1720 00006f30     1420          subk    1,a0
    1721 00006f40     b00d          move    a0,*a13(plyr_rcvpass)
         00006f50     0230  
    1722 00006f60     c702          jrgt    huxunorcvp                      ;Not yet?
    1723 00006f70     b00d          move    a0,*a13(plyr_nojoy)
         00006f80     03b0  
    1724 00006f90           huxunorcvp
    1725                    
    1726                    
    1727                    
    1728 00006f90     b5a2          move    *a13(plyr_seq),a2
         00006fa0     0170  
    1729 00006fb0     0b42          cmpi    RUNDRIBTURB_SEQ,a2
         00006fc0     ffef  
    1730 00006fd0     c300          jrhi    huxuanicnt
         00006fe0     0097  
    1731                    
    1732 00006ff0     4cc1          move    a6,a1                   ;0CHhange ani if no joy
    1733 00007000     2781          sll     32-4,a1
    1734 00007010     ca46          jrz     huxunojoy                       ;Joy neutral?
    1735                    
    1736                    
    1737 00007020     09ce          movi    38,a14                  ;Delay before auto turn toward ball
         00007030     0026  
    1738 00007040     b5a0          move    *a13(plyr_ownball),a0
         00007050     0260  
    1739 00007060     ca02          jrz     huxuindef
    1740 00007070     09ce          movi    60,a14                  ;^
         00007080     003c  
    1741 00007090     b1cd  huxuindef       move    a14,*a13(plyr_turndelay)
         000070a0     0520  
    1742                    
    1743                    
    1744 000070b0     b5ae          move    *a13(plyr_indef),a14
         000070c0     03a0  
    1745 000070d0     ca21          jrz     huxunodef2
    1746                    
    1747 000070e0     b5a0          move    *a13(plyr_seqflgs),a0
         000070f0     0180  
    1748 00007100     1fe0          btst    WALK_B,a0
    1749 00007110     cb00          jrnz    huxuanicnt
         00007120     0083  
    1750                    
    1751 00007130     2ce1          srl     32-4-3,a1               ;0CHonvert to dir 0-127
    1752 00007140     0b21          addi    huxudirc_t,a1
         00007150 00009ca0' 
    1753 00007170     8e21          movb    *a1,a1
    1754                    
    1755 00007180     44e1          sub     a7,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   42

    1756 00007190     4c2e          move    a1,a14                  ;Calc dir dist
    1757 000071a0     038e          abs     a14
    1758 000071b0     0b4e          cmpi    040H,a14
         000071c0     ffbf  
    1759 000071d0     c604          jrle    huxudiffsml
    1760 000071e0     03a1          neg     a1
    1761 000071f0     0bee          subi    080H,a14
         00007200     ff7f  
    1762 00007210     038e          abs     a14
    1763 00007220           huxudiffsml
    1764 00007220     1920          movk    WALKFDEF_SEQ,a0
    1765 00007230     0b4e          cmpi    16,a14
         00007240     ffef  
    1766 00007250     c46c          jrlt    huxusetseq
    1767 00007260     1940          movk    WALKBDEF_SEQ,a0
    1768 00007270     0b4e          cmpi    030H,a14
         00007280     ffcf  
    1769 00007290     c768          jrgt    huxusetseq
    1770 000072a0     1960          movk    WALKLDEF_SEQ,a0
    1771 000072b0     4c21          move    a1,a1
    1772 000072c0     ce65          jrn     huxusetseq
    1773 000072d0     1980          movk    WALKRDEF_SEQ,a0
    1774 000072e0     c063          jruc    huxusetseq
    1775                    
    1776 000072f0           huxunodef2
    1777                    
    1778 000072f0     5600          clr     a0
    1779 00007300     b00d          move    a0,*a13(plyr_keeppal)
         00007310     0550  
    1780                    
    1781 00007320     19a0          movk    RUN_SEQ,a0              ;>Setup run sequence
    1782 00007330     b5ae          move    *a13(plyr_ownball),a14
         00007340     0260  
    1783 00007350     c604          jrle    huxunobl
    1784 00007360     b5ae          move    *a13(plyr_dribmode),a14
         00007370     0210  
    1785 00007380     ce4f          jrn     huxustndwb                      ;Can't drib?
    1786 00007390     19e0          movk    RUNDRIB_SEQ,a0
    1787 000073a0           huxunobl
    1788 000073a0     4c01          move    a0,a1
    1789 000073b0     b5ae          move    *a13(plyr_turbon),a14
         000073c0     0250  
    1790 000073d0     ca01          jrz     huxuslow
    1791 000073e0     1020          addk    1,a0                    ;Turbo version
    1792 000073f0           huxuslow
    1793 000073f0     1021          addk    1,a1
    1794 00007400     4441          sub     a2,a1
    1795 00007410     1421          subk    1,a1
    1796 00007420     c34f          jrhi    huxusetseq                      ;Different type?
    1797                    
    1798 00007430     b7ae          move    *a13(plyr_ani_p),a14,L
         00007440     01e0  
    1799 00007450     95ce          move    *a14+,a14
    1800 00007460     cb4f          jrnz    huxuanicnt                      ;!At end?
    1801 00007470     c04a          jruc    huxusetseq
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   43

    1802                    
    1803 00007480           huxunojoy
    1804 00007480     b5a0          move    *a13(plyr_seqflgs),a0
         00007490     0180  
    1805 000074a0     1fe0          btst    WALK_B,a0
    1806 000074b0     cb4a          jrnz    huxuanicnt
    1807                    
    1808 000074c0     1860          movk    STNDDEF_SEQ,a0          ;>Setup stand sequence
    1809 000074d0     1901          movk    STNDDRIBDEF_SEQ,a1
    1810 000074e0     b5ae          move    *a13(plyr_indef),a14
         000074f0     03a0  
    1811 00007500     cb30          jrnz    huxuchkb
    1812                    
    1813 00007510     1840          movk    STND2_SEQ,a0
    1814 00007520     18c1          movk    STNDDRIB_SEQ,a1
    1815                    
    1816 00007530     b5ae          move    *a13(plyr_turndelay),a14
         00007540     0520  
    1817 00007550     ca05          jrz     huxuturnok1
    1818 00007560     142e          subk    1,a14
    1819 00007570     b1cd          move    a14,*a13(plyr_turndelay)
         00007580     0520  
    1820 00007590     168e          subk    20,a14
    1821 000075a0     c726          jrgt    huxuchkb
    1822 000075b0           huxuturnok1
    1823 000075b0     b5ae          move    *a13(plyr_o1dist),a14
         000075c0     0310  
    1824 000075d0     0b4e          cmpi    155,a14
         000075e0     ff64  
    1825 000075f0     c405          jrlt    huxustnd0
    1826 00007600     b5ae          move    *a13(plyr_o2dist),a14
         00007610     0330  
    1827 00007620     0b4e          cmpi    155,a14
         00007630     ff64  
    1828 00007640     c702          jrgt    huxustnd1
    1829 00007650           huxustnd0
    1830 00007650     1820          movk    STND_SEQ,a0
    1831 00007660     18e1          movk    STNDDRIB2_SEQ,a1
    1832 00007670           huxustnd1
    1833                    
    1834 00007670     b5ae          move    *a13(plyr_ownball),a14
         00007680     0260  
    1835 00007690     c60c          jrle    huxuchka
    1836 000076a0     b5ae          move    *a13(plyr_turndelay),a14
         000076b0     0520  
    1837 000076c0     ca04          jrz     huxuturnok0
    1838 000076d0     142e          dec     a14
    1839 000076e0     b1cd          move    a14,*a13(plyr_turndelay)
         000076f0     0520  
    1840 00007700     c010          jruc    huxuchkb
    1841                    
    1842 00007710           huxuturnok0
    1843 00007710     b5ae          move    *a13(plyr_ohpdir),a14
         00007720     0380  
    1844 00007730     b1cd          move    a14,*a13(plyr_newdir)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   44

         00007740     03e0  
    1845 00007750     c00b          jruc    huxuchkb
    1846 00007760           huxuchka
    1847 00007760     b5ae          move    *a13(plyr_turndelay),a14
         00007770     0520  
    1848 00007780     ca04          jrz     huxuturnok
    1849 00007790     142e          dec     a14
    1850 000077a0     b1cd          move    a14,*a13(plyr_turndelay)
         000077b0     0520  
    1851 000077c0     c004          jruc    huxuchkb
    1852 000077d0     b5ae  huxuturnok      move    *a13(plyr_balldir),a14
         000077e0     0340  
    1853 000077f0     b1cd          move    a14,*a13(plyr_newdir)
         00007800     03e0  
    1854                    
    1855                    
    1856                    
    1857 00007810     b5ae  huxuchkb        move    *a13(plyr_ownball),a14
         00007820     0260  
    1858 00007830     c60e          jrle    huxusetseq
    1859 00007840     4c20          move    a1,a0
    1860 00007850     b5ae          move    *a13(plyr_dribmode),a14
         00007860     0210  
    1861 00007870     c70a          jrgt    huxusetseq                      ;Dribbling?
    1862 00007880     1880  huxustndwb      movk    STNDWB_SEQ,a0
    1863 00007890     05ae          move    @inbound,a14
         000078a0 00000000! 
    1864 000078c0     cf05          jrnn    huxusetseq
    1865 000078d0     b5ae          move    *a13(plyr_num),a14
         000078e0     0100  
    1866 000078f0     1fee          btst    0,a14
    1867 00007900     cb01          jrnz    huxusetseq
    1868 00007910     18a0          movk    STNDWB2_SEQ,a0
    1869                    
    1870 00007920     4802  huxusetseq      cmp     a0,a2
    1871 00007930     ca02          jreq    huxuanicnt
    1872                    
    1873                            .if     IMGVIEW
    1874                            movi    debug_SEQ1,a0
    1875                            .endif
    1876                    
    1877 00007940     0d3f          callr   plyr_setseq
         00007950     029a  
    1878                    
    1879 00007960     0d8a  huxuanicnt      dsj     a10,huxunoani
         00007970     005c  
    1880                    
    1881 00007980     b7ae          move    *a13(plyr_ani_p),a14,L          ;>Set new ani
         00007990     01e0  
    1882 000079a0     95ca  huxugetdel      move    *a14+,a10                       ;Delay
    1883 000079b0     cf05          jrnn    huxunocode                              ;Not code?
    1884                    
    1885 000079c0     97c0          move    *a14+,a0,L                      ;*Code
    1886 000079d0     4fc4          move    a14,b4
    1887 000079e0     0920          call    a0                              ;Can trash scratch, A2-A5
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   45

    1888 000079f0     4e9e          move    b4,a14
    1889 00007a00     c0f9          jruc    huxugetdel
    1890                    
    1891 00007a10     cb07  huxunocode      jrnz    huxu100
    1892 00007a20     b7a0          move    *a13(plyr_seqcode_p),a0,L
         00007a30     01a0  
    1893 00007a40     c501          jrge    huxunoendc
    1894 00007a50     0920          call    a0                              ;Can trash scratch, A2-A5
    1895 00007a60     b7ae  huxunoendc      move    *a13(plyr_ani1st_p),a14,L       ;Head of list
         00007a70     01c0  
    1896 00007a80     95ca          move    *a14+,a10
    1897                    
    1898 00007a90     97c0  huxu100 move    *a14+,a0,L                      ;*Img
    1899 00007aa0     95c1          move    *a14+,a1                        ;Flags (OCTRL)
    1900 00007ab0     b5a2          move    *a13(plyr_anirevff),a2          ;Get reverse flip flag
         00007ac0     0200  
    1901 00007ad0     5641          xor     a2,a1
    1902 00007ae0     4c24          move    a1,a4
    1903                    
    1904 00007af0     b80d          move    *a0(IANI2Z),*a13(plyr_ballzo)
         00007b00     00b0  
         00007b10     02a0  
    1905                    
    1906 00007b20     b3cd          move    a14,*a13(plyr_ani_p),L
         00007b30     01e0  
    1907 00007b40     0d3f          callr   plyr_ani
         00007b50     04cc  
    1908                    
    1909 00007b60     0d3f          callr   anipt2_getsclxy
         00007b70     104d  
    1910 00007b80     b20d          move    a0,*a13(plyr_ballxo),L
         00007b90     0270  
    1911 00007ba0     2a01          sra     16,a1
    1912 00007bb0     4c84          move    a4,a4
    1913 00007bc0     cf02          jrnn    huxuynorm                               ;!YFree flag?
    1914 00007bd0     09c1          movi    -200,a1
         00007be0     ff38  
    1915 00007bf0     b02d  huxuynorm       move    a1,*a13(plyr_ballyo)
         00007c00     0290  
    1916                    
    1917 00007c10     b5ae          move    *a13(plyr_jmpcnt),a14
         00007c20     0400  
    1918 00007c30     cb09          jrnz    huxuinjmp                               ;Jumping?
    1919                    
    1920 00007c40     b5a1          move    *a13(plyr_aniy),a1
         00007c50     0420  
    1921 00007c60     03a1          neg     a1
    1922 00007c70     b028          move    a1,*a8(OYPOS)                   ;Set on gnd
         00007c80     00b0  
    1923                    
    1924 00007c90     0b4a          cmpi    30,a10
         00007ca0     ffe1  
    1925 00007cb0     c401          jrlt    huxuinjmp
    1926 00007cc0     188a          movk    4,a10
    1927 00007cd0           huxuinjmp
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   46

    1928                    
    1929 00007cd0     b702          move    *a8(OIMG),a2,L                  ;>Set new head img
         00007ce0     0170  
    1930 00007cf0     b441          move    *a2(IANI3ID),a1
         00007d00     0100  
    1931 00007d10     24a1          sll     5,a1                            ;*32
    1932 00007d20     b44e          move    *a2(IANI3Z),a14
         00007d30     00f0  
    1933 00007d40     03ae          neg     a14
    1934                    
    1935 00007d50     b7a0          move    *a13(plyr_attrib_p),a0,L
         00007d60     0150  
    1936 00007d70     b600          move    *a0(PAT_HEADT_p),a0,L
         00007d80     0120  
    1937 00007d90     4020          add     a1,a0
    1938 00007da0     8604          move    *a0,a4,L
    1939                    
    1940 00007db0     b7a3          move    *a13(plyr_headobj_p),a3,L
         00007dc0     04b0  
    1941 00007dd0     b1c3          move    a14,*a3(OMISC)
         00007de0     0210  
    1942 00007df0     b283          move    a4,*a3(OIMG),L                  ;Set new img
         00007e00     0170  
    1943 00007e10     868e          move    *a4,a14,L
    1944 00007e20     b3c3          move    a14,*a3(OSIZE),L
         00007e30     0130  
    1945 00007e40     ba83          move    *a4(ISAG),*a3(OSAG),L
         00007e50     0040  
         00007e60     0110  
    1946                    
    1947 00007e70     0541          setf    1,0,0
    1948 00007e80     b903          move    *a8(OCTRL+4),*a3(OCTRL+4)       ;Copy HFlip bit
         00007e90     00f4  
         00007ea0     00f4  
    1949 00007eb0     b44e          move    *a2(IFLAGS+FLIPH_IFB),a14       ;Chk reverse bit
         00007ec0     00ce  
    1950 00007ed0     ca05          jrz     huxunohflip
    1951 00007ee0     b46e          move    *a3(OCTRL+4),a14                ;Reverse hflip
         00007ef0     00f4  
    1952 00007f00     102e          addk    1,a14
    1953 00007f10     b1c3          move    a14,*a3(OCTRL+4)
         00007f20     00f4  
    1954 00007f30           huxunohflip
    1955 00007f30     0570          setf    16,1,0
    1956 00007f40           huxunoani
    1957                    
    1958                    
    1959                    
    1960 00007f40     b5a0          move    *a13(plyr_jmpcnt),a0    ;>Jumping
         00007f50     0400  
    1961 00007f60     ca00          jrz     huxunoj
         00007f70     00c2  
    1962 00007f80     1020          addk    1,a0
    1963 00007f90     b00d          move    a0,*a13(plyr_jmpcnt)
         00007fa0     0400  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   47

    1964                    
    1965 00007fb0     b5a0          move    *a13(plyr_hangcnt),a0
         00007fc0     0410  
    1966 00007fd0     c605          jrle    huxunohang                      ;Not hanging?
    1967 00007fe0     1420          subk    1,a0
    1968 00007ff0     b00d          move    a0,*a13(plyr_hangcnt)
         00008000     0410  
    1969 00008010     c000          jruc    huxupass                        ;Skip grav
         00008020     0131  
    1970 00008030           huxunohang
    1971 00008030     b700          move    *a8(OYVEL),a0,L
         00008040     0040  
    1972 00008050     b5ae          move    *a13(plyr_ownball),a14
         00008060     0260  
    1973 00008070     0300          jrgt    huxugrav                        ;Have ball?
    1974 00008080     0b00  huxugrav        addi    GRAV,a0                 ;+Gravity
         00008090     2600  
    1975 000080a0     ce0d          jrn     huxu200
    1976 000080b0     b501          move    *a8(OYPOS),a1
         000080c0     00b0  
    1977 000080d0     b5ae          move    *a13(plyr_aniy),a14
         000080e0     0420  
    1978 000080f0     41c1          add     a14,a1                  ;Ani pt position
    1979 00008100     c407          jrlt    huxu200                 ;Above gnd
    1980 00008110     03ae          neg     a14
    1981 00008120     b1c8          move    a14,*a8(OYPOS)          ;Set on gnd
         00008130     00b0  
    1982                    
    1983                            .if     DEBUG
    1984                            .endif
    1985                    
    1986 00008140     182a          movk    1,a10                   ;Run landing seq
    1987 00008150     5600          clr     a0
    1988 00008160     b00d          move    a0,*a13(plyr_jmpcnt)
         00008170     0400  
    1989 00008180     b208  huxu200 move    a0,*a8(OYVEL),L
         00008190     0040  
    1990                    
    1991 000081a0     b5a0          move    *a13(plyr_seqflgs),a0
         000081b0     0180  
    1992 000081c0     1fc0          btst    DUNK_B,a0
    1993 000081d0     cb36          jrnz    huxuznubb                       ;In dunk?
    1994                    
    1995 000081e0     b501          move    *a8(OZPOS),a1           ;Get SZ
         000081f0     00d0  
    1996 00008200     0be1          subi    CZMID,a1
         00008210     fb6d  
    1997 00008220     0381          abs     a1
    1998 00008230     0b41          cmpi    40,a1
         00008240     ffd7  
    1999 00008250     c52e          jrge    huxuznubb
    2000 00008260     b500          move    *a8(OXPOS),a0           ;Get SX
         00008270     0090  
    2001 00008280     b50e          move    *a8(OXANI+16),a14
         00008290     01f0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   48

    2002 000082a0     41c0          add     a14,a0
    2003 000082b0     0be0          subi    WRLDMID,a0
         000082c0     dfff  
    2004 000082d0     0380          abs     a0
    2005 000082e0     4c03          move    a0,a3
    2006 000082f0     09ee          movi    020000H,a14
         00008300 00020000  
    2007 00008320     0b40          cmpi    HOOPRX-WRLDMID+13,a0
         00008330     feb2  
    2008 00008340     c515          jrge    huxuundrbb                      ;Under backboard?
    2009                    
    2010 00008350     1541          subk    10,a1
    2011 00008360     c71d          jrgt    huxuznubb
    2012 00008370     0b43          cmpi    HOOPRX-WRLDMID-8,a3
         00008380     fec7  
    2013 00008390     c41a          jrlt    huxuznubb                       ;!Under rim?
    2014                    
    2015 000083a0     09ee          movi    010000H,a14
         000083b0 00010000  
    2016 000083d0     b701          move    *a8(OXVAL),a1,L
         000083e0     0080  
    2017 000083f0     0b61          cmpi    WRLDMID<<16,a1
         00008400 dfffffff  
    2018 00008420     c401          jrlt    huxurhoop
    2019 00008430     03ae          neg     a14
    2020 00008440     41c1  huxurhoop       add     a14,a1
    2021 00008450     b228          move    a1,*a8(OXVAL),L
         00008460     0080  
    2022                    
    2023 00008470     09ee          movi    010000H,a14
         00008480 00010000  
    2024 000084a0           huxuundrbb
    2025 000084a0     b701          move    *a8(OZVAL),a1,L
         000084b0     00c0  
    2026 000084c0     0b61          cmpi    CZMID<<16,a1
         000084d0 fb6dffff  
    2027 000084f0     c501          jrge    huxudzpos                       ;In front of?
    2028 00008500     03ae          neg     a14
    2029 00008510     41c1  huxudzpos       add     a14,a1
    2030 00008520     b228          move    a1,*a8(OZVAL),L
         00008530     00c0  
    2031                    
    2032 00008540           huxuznubb
    2033                    
    2034 00008540     b5a1          move    *a13(plyr_ownball),a1
         00008550     0260  
    2035 00008560     ca00          jrz     huxupass                        ;No ball?
         00008570     00dc  
    2036 00008580     c400          jrlt    huxusblk                        ;Teammate has ball?
         00008590     0084  
    2037                    
    2038 000085a0     b5a0          move    *a13(plyr_jmpcnt),a0
         000085b0     0400  
    2039 000085c0     1580          subk    12,a0
    2040 000085d0     c400          jrlt    huxupass                        ;Too soon?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   49

         000085e0     00d5  
    2041                    
    2042                    
    2043 000085f0     b501          move    *a8(OYPOS),a1
         00008600     00b0  
    2044 00008610     b5ae          move    *a13(plyr_aniy),a14
         00008620     0420  
    2045 00008630     41c1          add     a14,a1                  ;Ani pt position
    2046 00008640     11e1          addk    15,a1
    2047 00008650     c418          jrlt    huxuchkb1                       ;High enough?
    2048                    
    2049 00008660     b5a0          move    *a13(plyr_seqflgs),a0
         00008670     0180  
    2050 00008680     1fc0          btst    DUNK_B,a0
    2051 00008690     cb00          jrnz    huxuslp                 ;Already started?
         000086a0     0132  
    2052                    
    2053                    
    2054 000086b0     1ec0          btst    SHOOT_B,a0
    2055 000086c0     ca00          jrz     huxuslp
         000086d0     012f  
    2056                    
    2057 000086e0     05a0          move    @gmqrtr,a0
         000086f0 00000000! 
    2058 00008710     cb44          jrnz    huxushoot2
    2059                            
    2060 00008720     b5a0          move    *a13(plyr_seq),a0
         00008730     0170  
    2061 00008740     0b40          cmpi    QSHOOT_SEQ,a0
         00008750     ffe7  
    2062 00008760     ca3f          jrz     huxushoot2
    2063                                                            ;Force him to shoot 
    2064 00008770     18a0          movk    5,a0
    2065 00008780     b5a1          move    *a13(plyr_num),a1
         00008790     0100  
    2066 000087a0     0d5f          calla   idiot_box               ;Tell him to release ball at peak of jump
         000087b0 00000000! 
    2067                    
    2068 000087d0     c038          jruc    huxushoot2                      ;Too low?
    2069                    
    2070 000087e0           huxuchkb1
    2071                    
    2072 000087e0     b5a0          move    *a13(plyr_seq),a0
         000087f0     0170  
    2073 00008800     1680          subk    REBOUND_SEQ,a0
    2074 00008810     ca02          jreq    huxureb
    2075 00008820     1420          subk    REBOUNDA_SEQ-REBOUND_SEQ,a0
    2076 00008830     cb24          jrne    huxunoreb
    2077 00008840           huxureb
    2078 00008840     1e66          btst    BUT1_B+8,a6
    2079 00008850     ca22          jrz     huxunoreb                       ;No press?
    2080                    
    2081 00008860     b5ae          move    *a13(plyr_ohpdist),a14
         00008870     0390  
    2082 00008880     0b4e          cmpi    150,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   50

         00008890     ff69  
    2083 000088a0     c700          jrgt    huxupass                        ;Too far?
         000088b0     00a8  
    2084                    
    2085 000088c0     b5a0          move    *a13(plyr_ownball),a0
         000088d0     0260  
    2086 000088e0     c600          jrle    huxupass                        ;Don't have?
         000088f0     00a4  
    2087                    
    2088 00008900     b5a0          move    *a13(plyr_ohpdir),a0
         00008910     0380  
    2089 00008920     b5a1          move    *a13(plyr_dir),a1
         00008930     03d0  
    2090 00008940     4420          sub     a1,a0
    2091 00008950     0380          abs     a0
    2092 00008960     0b40          cmpi    040H,a0
         00008970     ffbf  
    2093 00008980     c603          jrle    huxurdsml
    2094 00008990     0be0          subi    080H,a0
         000089a0     ff7f  
    2095 000089b0     0380          abs     a0
    2096 000089c0     1400  huxurdsml       subk    32,a0
    2097 000089d0     c700          jrgt    huxupass                        ;Not between ball and hoop?
         000089e0     0095  
    2098                    
    2099 000089f0     1840          movk    2,a0
    2100 00008a00     0580          move    a0,@ballptsforshot
         00008a10 00000000! 
    2101                    
    2102 00008a30     1b80          movk    LAYUPREB_SEQ,a0
    2103 00008a40     0d3f          callr   plyr_setseq
         00008a50     018a  
    2104 00008a60     c000          jruc    huxupass
         00008a70     008c  
    2105                    
    2106 00008a80           huxunoreb
    2107                    
    2108 00008a80     1f66          btst    BUT1_B,a6
    2109 00008a90     cb00          jrnz    huxupass                        ;Holding shoot button?
         00008aa0     0089  
    2110                    
    2111 00008ab0     1e46          btst    BUT2_B+8,a6
    2112 00008ac0     cb00          jrnz    huxudopass                      ;Air dish off pass?
         00008ad0     009e  
    2113                    
    2114 00008ae0     b5a0          move    *a13(plyr_seqflgs),a0
         00008af0     0180  
    2115 00008b00     1fc0          btst    DUNK_B,a0
    2116 00008b10     cb00          jrnz    huxuslp                 ;Already started?
         00008b20     00ea  
    2117                    
    2118 00008b30     1ec0          btst    SHOOT_B,a0
    2119 00008b40     ca00          jrz     huxuslp
         00008b50     00e7  
    2120                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   51

    2121 00008b60           huxushoot2
    2122 00008b60     0d3f          callr   plyr_shoot
         00008b70     071b  
    2123 00008b80     182a          movk    1,a10
    2124 00008b90     c07a          jruc    huxupass
    2125                    
    2126                    
    2127                    
    2128                    
    2129 00008ba0     05a0  huxunoj move    @ballpnum,a0
         00008bb0 00000000! 
    2130 00008bd0     c520          jrge    huxusblk                        ;Somebody has ball?
    2131 00008be0     b5a0          move    *a13(plyr_seq),a0
         00008bf0     0170  
    2132 00008c00     0b40          cmpi    RUNDRIBTURB_SEQ,a0
         00008c10     ffef  
    2133 00008c20     c31b          jrhi    huxusblk                        ;Doing something?
    2134 00008c30     05a0          move    @ballgoaltcnt,a0
         00008c40 00000000! 
    2135 00008c60     c717          jrgt    huxusblk                        ;Going towards rim?
    2136 00008c70     b5a0          move    *a13(plyr_balldist),a0
         00008c80     0350  
    2137 00008c90     0b40          cmpi    100,a0
         00008ca0     ff9b  
    2138 00008cb0     c712          jrgt    huxusblk                        ;Too far?
    2139 00008cc0     07a1          move    @ballprcv_p,a1,L
         00008cd0 00000000! 
    2140 00008cf0     cb0e          jrnz    huxusblk                        ;Pass in progress?
    2141 00008d00     b5a0          move    *a13(plyr_seqflgs),a0
         00008d10     0180  
    2142 00008d20     1fa0          btst    NOJUMP_B,a0
    2143 00008d30     cb0a          jrnz    huxusblk                        ;No jumping?
    2144 00008d40     b5a0          move    *a13(plyr_autoctrl),a0
         00008d50     03c0  
    2145 00008d60     cb07          jrnz    huxusblk                        ;Temp computer control?
    2146 00008d70     0d3f          callr   plyr_tryrebound
         00008d80     0e24  
    2147 00008d90     b5a0          move    *a13(plyr_seqflgs),a0
         00008da0     0180  
    2148 00008db0     1fa0          btst    NOJUMP_B,a0
    2149 00008dc0     cb00          jrnz    huxuslp                 ;No jumping?
         00008dd0     00bf  
    2150                    
    2151                    
    2152                    
    2153 00008de0     1f66  huxusblk        btst    BUT1_B,a6               ;>Shoot/block (But1)
    2154 00008df0     ca54          jrz     huxupass
    2155                    
    2156 00008e00     b5a1          move    *a13(plyr_ownball),a1
         00008e10     0260  
    2157 00008e20     c42a          jrlt    huxudrnshoot
    2158                    
    2159                    
    2160 00008e30     1820          movk    1,a0
    2161 00008e40     b5ae          move    *a13(plyr_shtbutn),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   52

         00008e50     0540  
    2162 00008e60     0b4e          cmpi    2,a14
         00008e70     fffd  
    2163 00008e80     c60f          jrle    huxuscont
    2164 00008e90     0b4e          cmpi    9,a14
         00008ea0     fff6  
    2165 00008eb0     c50c          jrge    huxuscont
    2166 00008ec0     b5a0          move    *a13(plyr_seq),a0
         00008ed0     0170  
    2167 00008ee0     0b40          cmpi    QSHOOT_SEQ,a0
         00008ef0     ffe7  
    2168 00008f00     ca49          jrz     huxudblhit
    2169 00008f10     0b40          cmpi    TIP_SEQ,a0
         00008f20     ffc4  
    2170 00008f30     ca46          jrz     huxudblhit
    2171 00008f40     0b40          cmpi    TIPJ_SEQ,a0
         00008f50     ffc3  
    2172 00008f60     ca43          jrz     huxudblhit
    2173                    
    2174 00008f70     5600          clr     a0
    2175                    
    2176 00008f80     b00d  huxuscont       move    a0,*a13(plyr_shtbutn)
         00008f90     0540  
    2177                    
    2178                    
    2179 00008fa0     b5a0          move    *a13(plyr_seqflgs),a0
         00008fb0     0180  
    2180 00008fc0     1fa0          btst    NOJUMP_B,a0
    2181 00008fd0     cb36          jrnz    huxupass                        ;No jumping?
    2182 00008fe0     1fc0          btst    DUNK_B,a0
    2183 00008ff0     cb34          jrnz    huxupass                        ;Already in a dunk?
    2184                    
    2185 00009000     b5a0          move    *a13(plyr_rcvpass),a0
         00009010     0230  
    2186 00009020     c700          jrgt    huxuslp                 ;Waiting on pass?
         00009030     0099  
    2187                    
    2188 00009040     b7a0          move    *a13(plyr_tmproc_p),a0,L
         00009050     0110  
    2189 00009060     b400          move    *a0(plyr_rcvpass),a0
         00009070     0230  
    2190 00009080     c700          jrgt    huxuslp                 ;Teammate waiting on pass?
         00009090     0093  
    2191                    
    2192 000090a0     0d3f          callr   plyr_startjmp
         000090b0     03c0  
    2193 000090c0     c027          jruc    huxupass
    2194                    
    2195 000090d0           huxudrnshoot                            ;>Tell drone to shoot
    2196                    
    2197 000090d0     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         000090e0 00000060- 
    2198 00009100     b5a1          move    *a13(plyr_num),a1
         00009110     0100  
    2199 00009120                   XORK    1,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   53

    2200 00009140     4a20          btst    a1,a0
    2201 00009150     cb1e          jrnz    huxupass                        ;Teammate is a human?
    2202                    
    2203 00009160     b7a0          move    *a13(plyr_tmproc_p),a0,L
         00009170     0110  
    2204 00009180     1841          movk    DRN_SHOOT_M,a1
    2205 00009190     b020          move    a1,*a0(plyr_d_cflgs)
         000091a0     0470  
    2206                    
    2207 000091b0     b40e          move    *a0(plyr_ohpdist),a14
         000091c0     0390  
    2208 000091d0     0b4e          cmpi    350,a14
         000091e0     fea1  
    2209 000091f0     c414          jrlt    huxupass                        ;Drone is close enough?
    2210                    
    2211 00009200     05ae          move    @gmqrtr,a14
         00009210 00000000! 
    2212 00009230     cb10          jrnz    huxupass
    2213                    
    2214 00009240     b40e          move    *a0(plyr_jmpcnt),a14
         00009250     0400  
    2215 00009260     cb0d          jrnz    huxupass
    2216                    
    2217 00009270     b5ae          move    *a13(plyr_idiotbit),a14
         00009280     0530  
    2218 00009290     1fce          btst    1,a14
    2219 000092a0     cb09          jrnz    huxupass
    2220 000092b0     104e          addk    2,a14
    2221 000092c0     b1cd          move    a14,*a13(plyr_idiotbit)
         000092d0     0530  
    2222                    
    2223 000092e0     1880          movk    4,a0
    2224 000092f0     b5a1          move    *a13(plyr_num),a1
         00009300     0100  
    2225 00009310     0d5f          calla   idiot_box               ;Tell drone to shoot ball
         00009320 00000000! 
    2226                    
    2227                    
    2228                    
    2229                    
    2230 00009340           huxupass                                        ;>Pass/steal (But2)
    2231 00009340     b5a0          move    *a13(plyr_shtbutn),a0
         00009350     0540  
    2232 00009360     ca03          jrz     huxudblhit
    2233 00009370     1020          inc     a0
    2234 00009380     b00d          move    a0,*a13(plyr_shtbutn)
         00009390     0540  
    2235 000093a0           huxudblhit
    2236                    
    2237 000093a0     b5a2          move    *a13(plyr_ownball),a2
         000093b0     0260  
    2238 000093c0     ca1a          jrz     huxusteal                       ;No ball?
    2239                    
    2240 000093d0     b5a0          move    *a13(plyr_rcvpass),a0
         000093e0     0230  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   54

    2241 000093f0     c75d          jrgt    huxuslp                 ;Waiting on pass?
    2242                    
    2243 00009400     1e46          btst    BUT2_B+8,a6
    2244 00009410     ca5b          jrz     huxuslp
    2245 00009420     b5ae          move    *a13(plyr_seqflgs),a14
         00009430     0180  
    2246 00009440     1eae          btst    PASS_B,a14
    2247 00009450     cb57          jrnz    huxuslp                 ;Passing?
    2248                    
    2249 00009460     05ae          move    @pass_off,a14
         00009470 00000000! 
    2250 00009490     cb53          jrnz    huxuslp                 ;Lockout passing for now?
    2251                    
    2252 000094a0     4c42          move    a2,a2
    2253 000094b0     c403          jrlt    huxupasstome
    2254 000094c0           huxudopass
    2255                    
    2256 000094c0     0d3f          callr   plyr_startpass
         000094d0     0aef  
    2257 000094e0     c04e          jruc    huxuslp
    2258                    
    2259 000094f0           huxupasstome                            ;>Tell drone to pass
    2260 000094f0     1f26          btst    BUT3_B,a6
    2261 00009500     cb06          jrnz    huxusteal                       ;Turbo?
    2262                    
    2263 00009510     b7a0          move    *a13(plyr_tmproc_p),a0,L
         00009520     0110  
    2264 00009530     1821          movk    DRN_PASS_M,a1
    2265 00009540     b020  huxuregds       move    a1,*a0(plyr_d_cflgs)
         00009550     0470  
    2266 00009560     c046          jruc    huxuslp
    2267                    
    2268                    
    2269                    
    2270                    
    2271 00009570           huxusteal
    2272 00009570     1f46          btst    BUT2_B,a6
    2273 00009580     ca44          jrz     huxuslp                 ;No button?
    2274 00009590     b5a0          move    *a13(plyr_jmpcnt),a0
         000095a0     0400  
    2275 000095b0     cb41          jrnz    huxuslp
    2276 000095c0     b5a0          move    *a13(plyr_seq),a0
         000095d0     0170  
    2277 000095e0     1f26          btst    BUT3_B,a6
    2278 000095f0     cb19          jrnz    huxupush                        ;Turbo?
    2279                    
    2280 00009600     0be0          subi    STEAL_SEQ,a0
         00009610     ffd4  
    2281 00009620     ca3a          jreq    huxuslp
    2282                    
    2283 00009630     b5a0          move    *a13(plyr_rcvpass),a0
         00009640     0230  
    2284 00009650     c737          jrgt    huxuslp                 ;Getting pass?
    2285 00009660     b7a1          move    *a13(plyr_tmproc_p),a1,L
         00009670     0110  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   55

    2286 00009680     b420          move    *a1(plyr_rcvpass),a0
         00009690     0230  
    2287 000096a0     c732          jrgt    huxuslp                 ;Getting pass?
    2288                    
    2289 000096b0     b5a0          move    *a13(plyr_keeppal),a0   ;Getting up while on fire, on butt
         000096c0     0550  
    2290 000096d0     ca03          jrz     huxunoflames
    2291 000096e0     0d5f          calla   seq_stopfire
         000096f0 00000000! 
    2292 00009710           huxunoflames
    2293 00009710     09c0          movi    STEAL_SEQ,a0
         00009720     002b  
    2294 00009730     0d3f          callr   plyr_setseq
         00009740     00bb  
    2295 00009750     b9ad          move    *a13(plyr_balldir),*a13(plyr_newdir)
         00009760     0340  
         00009770     03e0  
    2296                    
    2297 00009780     c024          jruc    huxuslp
    2298                    
    2299 00009790           huxupush
    2300 00009790     1e46          btst    BUT2_B+8,a6
    2301 000097a0     ca22          jrz     huxuslp                 ;No button?
    2302 000097b0     b7a2          move    *a13(plyr_PDATA_p),a2,L
         000097c0     0130  
    2303 000097d0     b441          move    *a2(ply_turbo),a1
         000097e0     0040  
    2304 000097f0     0b41          cmpi    10,a1
         00009800     fff5  
    2305 00009810     c41b          jrlt    huxuslp                 ;Turbo too low?
    2306 00009820     0be0          subi    PUSH_SEQ,a0
         00009830     ffd3  
    2307 00009840     ca18          jreq    huxuslp
    2308                    
    2309                    
    2310 00009850     b5a0          move    *a13(plyr_num),a0       ;If on fire, don't use turbo on push
         00009860     0100  
    2311 00009870     05ae          move    @plyrnumonfire,a14
         00009880 00000000! 
    2312 000098a0     480e          cmp     a0,a14
    2313 000098b0     ca0a          jrz     huxunotingame2
    2314                    
    2315                    
    2316 000098c0     1501          subk    8,a1
    2317 000098d0     b022          move    a1,*a2(ply_turbo)
         000098e0     0040  
    2318 000098f0     b640          move    *a2(ply_meter_imgs+40h),a0,L
         00009900     00c0  
    2319 00009910     b401          move    *a0(OFSET),a1           ;Shrink meter
         00009920     0100  
    2320 00009930     1101          addk    8,a1
    2321 00009940     b020          move    a1,*a0(OFSET)
         00009950     0100  
    2322                    
    2323 00009960           huxunotingame2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   56

    2324 00009960     0d5f          calla   seq_stopfire
         00009970 00000000! 
    2325 00009990     09c0          movi    PUSH_SEQ,a0
         000099a0     002c  
    2326 000099b0     0d3f          callr   plyr_setseq
         000099c0     0093  
    2327                    
    2328 000099d0           huxuslp
    2329 000099d0     b5a1          move    *a13(plyr_ownball),a1
         000099e0     0260  
    2330 000099f0     c602          jrle    huxunob
    2331 00009a00     0d3f          callr   plyr_setballxyz
         00009a10     0ded  
    2332 00009a20           huxunob
    2333                    
    2334 00009a20           huxuhalted
    2335 00009a20     0d3f          callr   plyr_headalign
         00009a30     0f1b  
    2336 00009a40     0d3f          callr   plyr_setshadow
         00009a50     0eae  
    2337                    
    2338                    
    2339 00009a60                   SLOOP   1,huxulp
    2340                    
    2341                    
    2342 00009ad0     1000  huxupdat_t      .word   P1_PID,3<<4,120,CZMID-50
    2343 00009b10 00000000!         .long   w3run1
    2344 00009b30     1100  huxupd1 .word   P2_PID,2<<4,175,CZMID
    2345 00009b70 00000000!         .long   w3run1
    2346 00009b90     1200          .word   P3_PID,6<<4,215,CZMID
    2347 00009bd0 00000000!         .long   w3run1
    2348 00009bf0     1300          .word   P4_PID,7<<4,280,CZMID+50
    2349 00009c30 00000000!         .long   w3run1
    2350                    
    2351 00009c50           ltshoepal_t
    2352 00009c50                   COLORW  31,31,31, 27,27,27, 22,22,22, 18,18,18
    2353 00009c90                   COLORW  14,14,14
    2354                    
    2355                    
    2356 00009ca0       00  huxudirc_t      .byte   0,0,4<<4,0,6<<4,7<<4,5<<4,0,2<<4,1<<4,3<<4,0,0,0,0,0
    2357                    
    2358 00009d20 000000b0- pdta_l  .long   P1DATA,P2DATA,P3DATA,P4DATA
    2359                    
    2360                    
    2361 00009da0 00000100' huxusqsnds      .long   sqk1_snd,sqk2_snd,sqk3_snd,sqk4_snd
    2362                    
    2363 00009e20           huxukpball_t
    2364 00009e20     00be          .word   190,200,220,280,300,450,550,600,650,650,650
    2365                    
    2366 00009ed0           huxunoblflail_t
    2367 00009ed0     0055          .word   85,100,105,110,115,120,150,190,250,250,300
    2368                    
    2369 00009f80           huxushortfly_t
    2370 00009f80     008c          .word   140,160,180,200,250,300,400,550,650,650,650
    2371                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   57

    2372 0000a030           huxuwinshortfly_t
    2373 0000a030     0019          .word   50/2,100/2,100/2,120/2,150/2,150/2,200/2,300/2,450/2,550/2,550/2
    2374                    
    2375 0000a0e0           huxuflyb_t
    2376                    
    2377 0000a0e0     0019          .word   25,50,75,100,125,150,175,200,225,250,275
    2378 0000a190     0113          .word   275,275,275,275,275,275,275,275,275
    2379                    
    2380              0000  RED_C   .equ    0
    2381              0001  GRN_C   .equ    1
    2382              0003  BLU_C   .equ    3
    2383              0004  PUR_C   .equ    4
    2384              0003  BLK_C   .equ    3
    2385              0006  WHT_C   .equ    6
    2386                            .asg    080H,I  ;Always keeps home colors
    2387                    
    2388 0000a220       00  huxuteam_t      .byte   RED_C,GRN_C,BLU_C,RED_C,BLU_C,BLU_C,BLU_C,BLU_C
    2389 0000a260       03          .byte   BLU_C,RED_C,BLU_C,RED_C,PUR_C,BLK_C,GRN_C,BLU_C
    2390 0000a2a0       06          .byte   WHT_C,BLU_C,BLK_C,RED_C,PUR_C,BLK_C,BLU_C,BLK_C
    2391 0000a2e0       01          .byte   GRN_C,PUR_C,RED_C
    2392                    
    2393                    
    2394                    
    2395 0000a2f8            SUBR   plyr_setseq
    2396                    
    2397                    
    2398 0000a300     0b40          cmpi    TIP_SEQ,a0
         0000a310     ffc4  
    2399 0000a320     cb06          jrnz    huxubugok
    2400 0000a330     07ae          move    @scores,a14,L
         0000a340 00000000! 
    2401 0000a360     ca02          jrz     huxubugok                       ;Game start?
    2402 0000a370                   LOCKUP
    2403 0000a380     1820          movk    STND_SEQ,a0
    2404                            
    2405 0000a390           huxubugok
    2406                    
    2407 0000a390     b00d          move    a0,*a13(plyr_seq)
         0000a3a0     0170  
    2408                    
    2409 0000a3b0     24a0          sll     5,a0                    ;*32
    2410 0000a3c0     0b20          addi    pseq_t,a0
         0000a3d0 00000000! 
    2411 0000a3f0     8600          move    *a0,a0,L
    2412 0000a400     9401          move    *a0+,a1                 ;Get flags
    2413 0000a410     b02d          move    a1,*a13(plyr_seqflgs)
         0000a420     0180  
    2414                    
    2415                    
    2416 0000a430     1ee1          btst    DRIBBLE_B,a1            ;0CaHlc new dribble mode
    2417 0000a440     cb06          jrnz    huxud
    2418                    
    2419 0000a450     b5ae          move    *a13(plyr_dribmode),a14
         0000a460     0210  
    2420 0000a470     ca09          jrz     huxun
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   58

    2421 0000a480     09c1          movi    -1,a1
         0000a490     ffff  
    2422 0000a4a0     c004          jruc    huxusetd
    2423                    
    2424 0000a4b0     b5ae  huxud   move    *a13(plyr_dribmode),a14
         0000a4c0     0210  
    2425 0000a4d0     cb03          jrnz    huxun
    2426 0000a4e0     1821          movk    1,a1
    2427                    
    2428 0000a4f0     b02d  huxusetd        move    a1,*a13(plyr_dribmode)
         0000a500     0210  
    2429 0000a510           huxun
    2430                    
    2431 0000a510     9601          move    *a0+,a1,L               ;Get *code
    2432 0000a520     b22d          move    a1,*a13(plyr_seqcode_p),L
         0000a530     01a0  
    2433 0000a540     4ce1          move    a7,a1                   ;Dir
    2434 0000a550     1101          addk    8,a1                    ;Round off
    2435 0000a560     2721          sll     32-7,a1
    2436 0000a570     2c61          srl     32-7+4,a1               ;Kill frac
    2437 0000a580     b02d          move    a1,*a13(plyr_seqdir)
         0000a590     0190  
    2438                    
    2439 0000a5a0     57ce          clr     a14                     ;Dir 5-7 have reversed FLIPH
    2440 0000a5b0     0b41          cmpi    5,a1
         0000a5c0     fffa  
    2441 0000a5d0     c402          jrlt    huxunohf
    2442 0000a5e0     09ce          movi    M_FLIPH,a14
         0000a5f0     0010  
    2443 0000a600     b1cd  huxunohf        move    a14,*a13(plyr_anirevff)
         0000a610     0200  
    2444                    
    2445 0000a620     27a1          sll     32-3,a1                 ;Clr bits
    2446 0000a630     2d01          srl     32-3-5,a1               ;*32
    2447 0000a640     4020          add     a1,a0
    2448 0000a650     8600          move    *a0,a0,L
    2449 0000a660     b20d          move    a0,*a13(plyr_ani1st_p),L
         0000a670     01c0  
    2450 0000a680     b20d          move    a0,*a13(plyr_ani_p),L
         0000a690     01e0  
    2451                    
    2452 0000a6a0     182a          movk    1,a10
    2453                    
    2454 0000a6b0     0960          rets
    2455                    
    2456                    
    2457                    
    2458                    
    2459                    
    2460                    
    2461                    
    2462                    
    2463 0000a6c0            SUBR   joy_read
    2464                    
    2465 0000a6c0     05a0          move    @GAMSTATE,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   59

         0000a6d0 00000000! 
    2466 0000a6f0     1460          subk    INGAME,a0
    2467 0000a700     cb67          jrne    sljwx
    2468 0000a710     05a0          move    @HALT,a0
         0000a720 00000000! 
    2469 0000a740     cb63          jrnz    sljwx
    2470 0000a750     07a0          move    @plyrproc_t,a0,L        ;Get 1st plyr proc
         0000a760 00000630- 
    2471 0000a780     b400          move    *a0(plyr_autoctrl),a0
         0000a790     03c0  
    2472 0000a7a0     cb5d          jrnz    sljwx                   ;Temp computer control?
    2473                    
    2474 0000a7b0            SUBRP  joy_read2                       ;Called by reftip
    2475                    
    2476 0000a7b0     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         0000a7c0 00000060- 
    2477                    
    2478                            .if     TUNIT
    2479                    
    2480 0000a7e0     05ae          move    @TWOPLAYERS,a14         ;!0=2 plyr kit
         0000a7f0 00000000! 
    2481 0000a810     ca1e          jrz     sljw4p
    2482                    
    2483 0000a820     09e1          movi    P2CTRL,a1               ;A1=*PxCTRL
         0000a830 00000080- 
    2484                    
    2485 0000a850     05a2          move    @SWITCH,a2
         0000a860 01600000  
    2486 0000a880     03e2          not     a2
    2487                    
    2488 0000a890     2fc0          srl     2,a0                    ;P2
    2489 0000a8a0     c909          jrnc    sljwno2p2
    2490 0000a8b0     842e          move    *a1,a14
    2491 0000a8c0     564e          xor     a2,a14                  ;New with old. Changed bits are now on
    2492 0000a8d0     504e          and     a2,a14                  ;Keep down transitions
    2493 0000a8e0     250e          sll     8,a14
    2494 0000a8f0     4c43          move    a2,a3
    2495 0000a900     2703          sll     32-8,a3
    2496 0000a910     2d03          srl     32-8,a3
    2497 0000a920     546e          or      a3,a14
    2498 0000a930     81c1          move    a14,*a1
    2499                    
    2500 0000a940     1201  sljwno2p2       addk    16,a1                   ;P3
    2501 0000a950     2fe0          srl     1,a0
    2502 0000a960     c941          jrnc    sljwx
    2503 0000a970     0522          zext    a2
    2504 0000a980     2f02          srl     8,a2
    2505 0000a990     842e          move    *a1,a14
    2506 0000a9a0     564e          xor     a2,a14                  ;New with old. Changed bits are now on
    2507 0000a9b0     504e          and     a2,a14                  ;Keep down transitions
    2508 0000a9c0     250e          sll     8,a14
    2509 0000a9d0     544e          or      a2,a14
    2510 0000a9e0     81c1          move    a14,*a1
    2511                    
    2512 0000a9f0     c038          jruc    sljwx
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   60

    2513                    
    2514                    
    2515 0000aa00           sljw4p                                  ;04H player version
    2516 0000aa00     09e1          movi    P1CTRL,a1               ;A1=*PxCTRL
         0000aa10 00000070- 
    2517                    
    2518 0000aa30     05a2          move    @SWITCH,a2
         0000aa40 01600000  
    2519 0000aa60     03e2          not     a2
    2520                    
    2521 0000aa70     2fe0          srl     1,a0                    ;P1
    2522 0000aa80     c909          jrnc    sljwnop1
    2523 0000aa90     842e          move    *a1,a14
    2524 0000aaa0     564e          xor     a2,a14                  ;New with old. Changed bits are now on
    2525 0000aab0     504e          and     a2,a14                  ;Keep down transitions
    2526 0000aac0     250e          sll     8,a14
    2527 0000aad0     4c43          move    a2,a3
    2528 0000aae0     2703          sll     32-8,a3
    2529 0000aaf0     2d03          srl     32-8,a3
    2530 0000ab00     546e          or      a3,a14
    2531 0000ab10     81c1          move    a14,*a1
    2532                    
    2533 0000ab20     1201  sljwnop1        addk    16,a1                   ;P2
    2534 0000ab30     2fe0          srl     1,a0
    2535 0000ab40     c908          jrnc    sljwnop2
    2536 0000ab50     0522          zext    a2
    2537 0000ab60     2f02          srl     8,a2
    2538 0000ab70     842e          move    *a1,a14
    2539 0000ab80     564e          xor     a2,a14                  ;New with old. Changed bits are now on
    2540 0000ab90     504e          and     a2,a14                  ;Keep down transitions
    2541 0000aba0     250e          sll     8,a14
    2542 0000abb0     544e          or      a2,a14
    2543 0000abc0     81c1          move    a14,*a1
    2544                    
    2545 0000abd0           sljwnop2
    2546 0000abd0     05a2          move    @SWITCH2,a2
         0000abe0 01600020  
    2547 0000ac00     03e2          not     a2
    2548                    
    2549 0000ac10     1201          addk    16,a1                   ;P3
    2550 0000ac20     2fe0          srl     1,a0
    2551 0000ac30     c909          jrnc    sljwnop3
    2552 0000ac40     842e          move    *a1,a14
    2553 0000ac50     564e          xor     a2,a14                  ;New with old. Changed bits are now on
    2554 0000ac60     504e          and     a2,a14                  ;Keep down transitions
    2555 0000ac70     250e          sll     8,a14
    2556 0000ac80     4c43          move    a2,a3
    2557 0000ac90     2703          sll     32-8,a3
    2558 0000aca0     2d03          srl     32-8,a3
    2559 0000acb0     546e          or      a3,a14
    2560 0000acc0     81c1          move    a14,*a1
    2561                    
    2562 0000acd0     2fe0  sljwnop3        srl     1,a0                    ;P4
    2563 0000ace0     c909          jrnc    sljwx
    2564 0000acf0     1201          addk    16,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   61

    2565 0000ad00     0522          zext    a2
    2566 0000ad10     2f02          srl     8,a2
    2567 0000ad20     842e          move    *a1,a14
    2568 0000ad30     564e          xor     a2,a14                  ;New with old. Changed bits are now on
    2569 0000ad40     504e          and     a2,a14                  ;Keep down transitions
    2570 0000ad50     250e          sll     8,a14
    2571 0000ad60     544e          or      a2,a14
    2572 0000ad70     81c1          move    a14,*a1
    2573                    
    2574                            .else                           ;>YUNIT
    2575                    
    2576                            move    @SWITCH,a2,L
    2577                            not     a2
    2578                    
    2579                            srl     1,a0                    ;P1
    2580                            jrnc    sljwnop1
    2581                            move    *a1,a14
    2582                            xor     a2,a14                  ;New with old. Changed bits are now on
    2583                            and     a2,a14                  ;Keep down transitions
    2584                            sll     8,a14
    2585                            move    a2,a3
    2586                            sll     32-8,a3
    2587                            srl     32-8,a3
    2588                            or      a3,a14
    2589                            move    a14,*a1
    2590                    
    2591                    sljwnop1        addk    16,a1                   ;P2
    2592                            srl     8,a2
    2593                            srl     1,a0
    2594                            jrnc    sljwnop2
    2595                            move    *a1,a14
    2596                            xor     a2,a14                  ;New with old. Changed bits are now on
    2597                            and     a2,a14                  ;Keep down transitions
    2598                            sll     8,a14
    2599                            move    a2,a3
    2600                            sll     32-8,a3
    2601                            srl     32-8,a3
    2602                            or      a3,a14
    2603                            move    a14,*a1
    2604                    
    2605                    sljwnop2        addk    16,a1                   ;P3
    2606                            srl     1,a0
    2607                            jrnc    sljwnop3
    2608                            srl     16,a2
    2609                            move    a2,a14                  ;>Move bit 7 to 6 (But 3)
    2610                            sll     32-6,a2
    2611                            srl     7,a14
    2612                            or      a14,a2
    2613                            rl      6,a2
    2614                            move    *a1,a14
    2615                            xor     a2,a14                  ;New with old. Changed bits are now on
    2616                            and     a2,a14                  ;Keep down transitions
    2617                            sll     8,a14
    2618                            or      a2,a14
    2619                            move    a14,*a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   62

    2620                    
    2621                    sljwnop3        srl     1,a0                    ;P4
    2622                            jrnc    sljwx
    2623                            move    @SWITCH+020H,a2
    2624                            not     a2
    2625                            addk    16,a1
    2626                            sll     32-8,a2
    2627                            srl     32-8,a2
    2628                            move    *a1,a14
    2629                            xor     a2,a14                  ;New with old. Changed bits are now on
    2630                            and     a2,a14                  ;Keep down transitions
    2631                            sll     8,a14
    2632                            or      a2,a14
    2633                            move    a14,*a1
    2634                    
    2635                    
    2636                            .endif
    2637                    
    2638 0000ad80           sljwx
    2639 0000ad80     0960          rets
    2640                    
    2641                            .if 0
    2642                            move    @GAMSTATE,a0
    2643                            subk    INGAME,a0
    2644                            jrne    sljwx
    2645                            move    @HALT,a0
    2646                            jrnz    sljwx
    2647                            move    @plyrproc_t,a0,L        ;Get 1st plyr proc
    2648                            move    *a0(plyr_autoctrl),a0
    2649                            jrnz    sljwx                   ;Temp computer control?
    2650                    
    2651                     SUBRP  joy_read2                       ;Called by reftip
    2652                    
    2653                            move    @PSTATUS,a0             ;Plyr start bits 0-3
    2654                            movi    P1CTRL,a1               ;A1=*PxCTRL
    2655                    
    2656                            .if     TUNIT
    2657                    
    2658                            move    @SWITCH,a2
    2659                            not     a2
    2660                    
    2661                            srl     1,a0                    ;P1
    2662                            jrnc    sljwnop1
    2663                            move    *a1,a14
    2664                            xor     a2,a14                  ;New with old. Changed bits are now on
    2665                            and     a2,a14                  ;Keep down transitions
    2666                            sll     8,a14
    2667                            move    a2,a3
    2668                            sll     32-8,a3
    2669                            srl     32-8,a3
    2670                            or      a3,a14
    2671                            move    a14,*a1
    2672                    
    2673                    sljwnop1        addk    16,a1                   ;P2
    2674                            srl     1,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   63

    2675                            jrnc    sljwnop2
    2676                            zext    a2
    2677                            srl     8,a2
    2678                            move    *a1,a14
    2679                            xor     a2,a14                  ;New with old. Changed bits are now on
    2680                            and     a2,a14                  ;Keep down transitions
    2681                            sll     8,a14
    2682                            or      a2,a14
    2683                            move    a14,*a1
    2684                    
    2685                    sljwnop2
    2686                            move    @SWITCH2,a2
    2687                            not     a2
    2688                    
    2689                            addk    16,a1                   ;P3
    2690                            srl     1,a0
    2691                            jrnc    sljwnop3
    2692                            move    *a1,a14
    2693                            xor     a2,a14                  ;New with old. Changed bits are now on
    2694                            and     a2,a14                  ;Keep down transitions
    2695                            sll     8,a14
    2696                            move    a2,a3
    2697                            sll     32-8,a3
    2698                            srl     32-8,a3
    2699                            or      a3,a14
    2700                            move    a14,*a1
    2701                    
    2702                    sljwnop3        srl     1,a0                    ;P4
    2703                            jrnc    sljwx
    2704                            addk    16,a1
    2705                            zext    a2
    2706                            srl     8,a2
    2707                            move    *a1,a14
    2708                            xor     a2,a14                  ;New with old. Changed bits are now on
    2709                            and     a2,a14                  ;Keep down transitions
    2710                            sll     8,a14
    2711                            or      a2,a14
    2712                            move    a14,*a1
    2713                    
    2714                            .else
    2715                    
    2716                            move    @SWITCH,a2,L
    2717                            not     a2
    2718                    
    2719                            srl     1,a0                    ;P1
    2720                            jrnc    sljwnop1
    2721                            move    *a1,a14
    2722                            xor     a2,a14                  ;New with old. Changed bits are now on
    2723                            and     a2,a14                  ;Keep down transitions
    2724                            sll     8,a14
    2725                            move    a2,a3
    2726                            sll     32-8,a3
    2727                            srl     32-8,a3
    2728                            or      a3,a14
    2729                            move    a14,*a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   64

    2730                    
    2731                    sljwnop1        addk    16,a1                   ;P2
    2732                            srl     8,a2
    2733                            srl     1,a0
    2734                            jrnc    sljwnop2
    2735                            move    *a1,a14
    2736                            xor     a2,a14                  ;New with old. Changed bits are now on
    2737                            and     a2,a14                  ;Keep down transitions
    2738                            sll     8,a14
    2739                            move    a2,a3
    2740                            sll     32-8,a3
    2741                            srl     32-8,a3
    2742                            or      a3,a14
    2743                            move    a14,*a1
    2744                    
    2745                    sljwnop2        addk    16,a1                   ;P3
    2746                            srl     1,a0
    2747                            jrnc    sljwnop3
    2748                            srl     16,a2
    2749                            move    a2,a14                  ;>Move bit 7 to 6 (But 3)
    2750                            sll     32-6,a2
    2751                            srl     7,a14
    2752                            or      a14,a2
    2753                            rl      6,a2
    2754                            move    *a1,a14
    2755                            xor     a2,a14                  ;New with old. Changed bits are now on
    2756                            and     a2,a14                  ;Keep down transitions
    2757                            sll     8,a14
    2758                            or      a2,a14
    2759                            move    a14,*a1
    2760                    
    2761                    sljwnop3        srl     1,a0
    2762                            jrnc    sljwx
    2763                            move    @SWITCH+020H,a2
    2764                            not     a2
    2765                            addk    16,a1
    2766                            sll     32-8,a2
    2767                            srl     32-8,a2
    2768                            move    *a1,a14
    2769                            xor     a2,a14                  ;New with old. Changed bits are now on
    2770                            and     a2,a14                  ;Keep down transitions
    2771                            sll     8,a14
    2772                            or      a2,a14
    2773                            move    a14,*a1
    2774                    
    2775                    
    2776                            .endif
    2777                    
    2778                    sljwx
    2779                            rets
    2780                    
    2781                            .endif
    2782                    
    2783                    
    2784 0000ad90            SUBRP  plyr_chkpcollide
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   65

    2785                    
    2786 0000ad90                   PUSH    a2,a3,a4,a5,a6,a7,a9,a10,a11
    2787                    
    2788 0000adb0     1851          movk    2,b1
    2789 0000adc0     b504          move    *a8(OXPOS),a4
         0000add0     0090  
    2790 0000ade0     b50e          move    *a8(OXANI+16),a14
         0000adf0     01f0  
    2791 0000ae00     41c4          add     a14,a4
    2792 0000ae10     4c85          move    a4,a5
    2793 0000ae20     b50e          move    *a8(OSIZEX),a14
         0000ae30     0130  
    2794                    
    2795 0000ae40     b701          move    *a8(OIMG),a1,L
         0000ae50     0170  
    2796 0000ae60     b421          move    *a1(IFLAGS),a1
         0000ae70     00c0  
    2797 0000ae80     ce04          jrn     rmurlscl                        ;Large art?
    2798 0000ae90     4dc1          move    a14,a1                  ;*75%
    2799 0000aea0     2fc1          srl     2,a1
    2800 0000aeb0     442e          sub     a1,a14
    2801 0000aec0     242e          sll     1,a14
    2802 0000aed0     2fce  rmurlscl        srl     2,a14                   ;/4
    2803 0000aee0     45c4          sub     a14,a4                  ;A4=Box left
    2804 0000aef0     41c5          add     a14,a5                  ;A5=Box rgt
    2805 0000af00     b506          move    *a8(OZPOS),a6           ;A6=Z
         0000af10     00d0  
    2806 0000af20     19ab          movk    13,a11
    2807                    
    2808 0000af30     09e7          movi    plyrobj_t,a7
         0000af40 000005b0- 
    2809 0000af60     b5a0          move    *a13(plyr_num),a0
         0000af70     0100  
    2810 0000af80     1440          subk    2,a0
    2811 0000af90     c502          jrge    rmurlp
    2812 0000afa0     0b07          addi    64,a7
         0000afb0     0040  
    2813                    
    2814 0000afc0     96e9  rmurlp  move    *a7+,a9,L
    2815                    
    2816                    
    2817                    
    2818 0000afd0     b522          move    *a9(OZPOS),a2           ;0CHhk Z
         0000afe0     00d0  
    2819 0000aff0     44c2          sub     a6,a2
    2820 0000b000     0382          abs     a2
    2821 0000b010     b721          move    *a9(OIMG),a1,L
         0000b020     0170  
    2822 0000b030     b423          move    *a1(ICBZ),a3            ;Get Z radius
         0000b040     0110  
    2823 0000b050     cb01          jrnz    rmurtest2
    2824 0000b060     19a3          movk    13,a3
    2825 0000b070     4163  rmurtest2       add     a11,a3
    2826 0000b080     4862          cmp     a3,a2
    2827 0000b090     c500          jrge    rmurnext
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   66

         0000b0a0     0143  
    2828                    
    2829 0000b0b0     b521          move    *a9(OXPOS),a1           ;0CHhk box X
         0000b0c0     0090  
    2830 0000b0d0     b52e          move    *a9(OXANI+16),a14
         0000b0e0     01f0  
    2831 0000b0f0     41c1          add     a14,a1
    2832 0000b100     b52e          move    *a9(OSIZEX),a14
         0000b110     0130  
    2833                    
    2834 0000b120     b702          move    *a8(OIMG),a2,L
         0000b130     0170  
    2835 0000b140     b442          move    *a2(IFLAGS),a2
         0000b150     00c0  
    2836 0000b160     cf03          jrnn    rmursmlscl2             ;Small art?
    2837 0000b170     4dc2          move    a14,a2                  ;*75%
    2838 0000b180     2fc2          srl     2,a2
    2839 0000b190     444e          sub     a2,a14
    2840 0000b1a0           rmursmlscl2
    2841 0000b1a0     2fee          srl     1,a14                   ;/2
    2842 0000b1b0     41c1          add     a14,a1
    2843 0000b1c0     4481          sub     a4,a1
    2844 0000b1d0     c600          jrle    rmurnext                        ;His rgt <= my lft edge?
         0000b1e0     012f  
    2845 0000b1f0     4c2a          move    a1,a10
    2846 0000b200     4081          add     a4,a1
    2847 0000b210     45c1          sub     a14,a1
    2848 0000b220     45c1          sub     a14,a1
    2849 0000b230     44a1          sub     a5,a1
    2850 0000b240     c500          jrge    rmurnext                        ;His lft >= my rgt edge?
         0000b250     0128  
    2851                    
    2852 0000b260     4c20          move    a1,a0                   ;A10=Closer edge match
    2853 0000b270     0380          abs     a0
    2854 0000b280     480a          cmp     a0,a10
    2855 0000b290     c601          jrle    rmursmledge
    2856 0000b2a0     4c0a          move    a0,a10
    2857 0000b2b0           rmursmledge
    2858                    
    2859 0000b2b0     b500          move    *a8(OYPOS),a0
         0000b2c0     00b0  
    2860 0000b2d0     b521          move    *a9(OYPOS),a1
         0000b2e0     00b0  
    2861 0000b2f0     0b01          addi    75,a1                   ;Y difference
         0000b300     004b  
    2862 0000b310     4820          cmp     a1,a0
    2863 0000b320     c700          jrgt    rmurnext                        ;Opponent much higher?
         0000b330     011a  
    2864                    
    2865                    
    2866                                                            ;>Outer box collision
    2867 0000b340     b70e          move    *a8(OXVEL),a14,L
         0000b350     0020  
    2868 0000b360     038e          abs     a14
    2869 0000b370     2e2e          srl     15,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   67

    2870 0000b380     cb05          jrnz    rmurotrbnc                      ;Moving?
    2871 0000b390     b702          move    *a8(OZVEL),a2,L
         0000b3a0     0060  
    2872 0000b3b0     0382          abs     a2
    2873 0000b3c0     2e22          srl     15,a2
    2874 0000b3d0     ca3e          jrz     rmurchkib                       ;Not moving?
    2875                    
    2876 0000b3e0           rmurotrbnc
    2877 0000b3e0                   PUSH    a6,a7
    2878 0000b400     5600          clr     a0
    2879 0000b410     5621          clr     a1
    2880 0000b420     b706          move    *a8(OXVEL),a6,L
         0000b430     0020  
    2881 0000b440     b707          move    *a8(OZVEL),a7,L
         0000b450     0060  
    2882 0000b460     0d3f          callr   seekdir_xyxy128         ;Customize?
         0000b470     18d4  
    2883 0000b480                   PULL    a6,a7
    2884                    
    2885 0000b4a0     b5a2          move    *a13(plyr_num),a2
         0000b4b0     0100  
    2886 0000b4c0     2442          sll     2,a2                    ;*4
    2887 0000b4d0     b721          move    *a9(OPLINK),a1,L
         0000b4e0     01a0  
    2888 0000b4f0     b421          move    *a1(plyr_num),a1
         0000b500     0100  
    2889 0000b510     4022          add     a1,a2
    2890 0000b520     2482          sll     4,a2                    ;*16
    2891 0000b530     0b22          addi    rmurc_t,a2
         0000b540 0000c5e0' 
    2892 0000b560     8442          move    *a2,a2                  ;Get my dir variable offset
    2893 0000b570     41a2          add     a13,a2
    2894 0000b580     8442          move    *a2,a2                  ;Get dir
    2895                    
    2896 0000b590     4402          sub     a0,a2
    2897 0000b5a0     4c4e          move    a2,a14
    2898 0000b5b0     038e          abs     a14
    2899 0000b5c0     0b4e          cmpi    040H,a14
         0000b5d0     ffbf  
    2900 0000b5e0     c601          jrle    rmurdsml
    2901 0000b5f0     03a2          neg     a2
    2902 0000b600     4c42  rmurdsml        move    a2,a2
    2903 0000b610     c502          jrge    rmurangpos                      ;Positive angle?
    2904 0000b620     0b00          addi    028H+028H,a0
         0000b630     0050  
    2905 0000b640     0be0  rmurangpos      subi    028H,a0
         0000b650     ffd7  
    2906                    
    2907 0000b660     1080          addk    4,a0
    2908 0000b670     2720          sll     32-7,a0
    2909 0000b680     2c80          srl     32-7+3,a0               ;Leave 4 bits
    2910 0000b690     2480          sll     4,a0
    2911 0000b6a0     0b20          addi    rmurvel_t,a0
         0000b6b0 0000c6e0' 
    2912                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   68

    2913 0000b6d0     8401          move    *a0,a1
    2914 0000b6e0     b400          move    *a0(16*4),a0
         0000b6f0     0040  
    2915 0000b700     2420          sll     1,a0
    2916 0000b710     2421          sll     1,a1
    2917 0000b720     b70e          move    *a8(OXVAL),a14,L
         0000b730     0080  
    2918 0000b740     400e          add     a0,a14
    2919 0000b750     b3c8          move    a14,*a8(OXVAL),L
         0000b760     0080  
    2920 0000b770     b70e          move    *a8(OZVAL),a14,L
         0000b780     00c0  
    2921 0000b790     402e          add     a1,a14
    2922 0000b7a0     b3c8          move    a14,*a8(OZVAL),L
         0000b7b0     00c0  
    2923                    
    2924                    
    2925 0000b7c0           rmurchkib
    2926 0000b7c0     14ca          subk    6,a10
    2927 0000b7d0     c600          jrle    rmurnext                        ;X edges slightly touching?
         0000b7e0     00cf  
    2928                    
    2929 0000b7f0     b521          move    *a9(OZPOS),a1
         0000b800     00d0  
    2930 0000b810     44c1          sub     a6,a1
    2931 0000b820     0381          abs     a1                      ;Z distance
    2932 0000b830     14c3          subk    6,a3
    2933 0000b840     4861          cmp     a3,a1                   ;Z radius
    2934 0000b850     c500          jrge    rmurnext
         0000b860     00c7  
    2935                    
    2936                                                            ;>Inner box collision
    2937 0000b870     b70e          move    *a8(OXVEL),a14,L
         0000b880     0020  
    2938 0000b890     b722          move    *a9(OXVEL),a2,L
         0000b8a0     0020  
    2939 0000b8b0     4c43          move    a2,a3
    2940 0000b8c0     57c2          xor     a14,a2
    2941 0000b8d0     4c42          move    a2,a2
    2942 0000b8e0     ce07          jrn     rmurxvdif                       ;XV different dir?
    2943 0000b8f0     4dc0          move    a14,a0
    2944 0000b900     0383          abs     a3
    2945 0000b910     0380          abs     a0
    2946 0000b920     4860          cmp     a3,a0
    2947 0000b930     c407          jrlt    rmurskipxv                      ;My vel smaller?
    2948 0000b940     57c2          xor     a14,a2                  ;Fix A2
    2949 0000b950     444e          sub     a2,a14
    2950 0000b960           rmurxvdif
    2951 0000b960     b701          move    *a8(OXVAL),a1,L
         0000b970     0080  
    2952 0000b980     45c1          sub     a14,a1
    2953 0000b990     b228          move    a1,*a8(OXVAL),L
         0000b9a0     0080  
    2954 0000b9b0           rmurskipxv
    2955 0000b9b0     b70e          move    *a8(OZVEL),a14,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   69

         0000b9c0     0060  
    2956 0000b9d0     b722          move    *a9(OZVEL),a2,L
         0000b9e0     0060  
    2957 0000b9f0     4c43          move    a2,a3
    2958 0000ba00     57c2          xor     a14,a2
    2959 0000ba10     4c42          move    a2,a2
    2960 0000ba20     ce08          jrn     rmurzvdif                       ;ZV different dir?
    2961 0000ba30     4dc0          move    a14,a0
    2962 0000ba40     0383          abs     a3
    2963 0000ba50     0380          abs     a0
    2964 0000ba60     4860          cmp     a3,a0
    2965 0000ba70     c400          jrlt    rmurnext                        ;My vel smaller?
         0000ba80     00a5  
    2966 0000ba90     57c2          xor     a14,a2                  ;Fix A2
    2967 0000baa0     444e          sub     a2,a14
    2968 0000bab0           rmurzvdif
    2969 0000bab0     b701          move    *a8(OZVAL),a1,L
         0000bac0     00c0  
    2970 0000bad0     45c1          sub     a14,a1
    2971 0000bae0     b228          move    a1,*a8(OZVAL),L
         0000baf0     00c0  
    2972                    
    2973                    
    2974 0000bb00     b5a0          move    *a13(plyr_ownball),a0
         0000bb10     0260  
    2975 0000bb20     c700          jrgt    rmurnext                        ;I have ball?
         0000bb30     009a  
    2976                    
    2977 0000bb40     b5aa          move    *a13(plyr_stagcnt),a10  ;0AddH some stagger
         0000bb50     0430  
    2978 0000bb60     b72e          move    *a9(OPLINK),a14,L
         0000bb70     01a0  
    2979                    
    2980 0000bb80     b5c0          move    *a14(plyr_seqflgs),a0
         0000bb90     0180  
    2981 0000bba0     1fc0          btst    DUNK_B,a0
    2982 0000bbb0     ca7f          jrz     rmurnodunk                      ;!Dunking?
    2983 0000bbc0     1e00          btst    LAYUP_B,a0
    2984 0000bbd0     cb7d          jrnz    rmurnodunk                      ;Layup=don't disrupt ball
    2985                    
    2986 0000bbe0     102a          addk    1,a10
    2987 0000bbf0     b5a0          move    *a13(plyr_num),a0
         0000bc00     0100  
    2988 0000bc10     b5c2          move    *a14(plyr_num),a2
         0000bc20     0100  
    2989 0000bc30     2fe0          srl     1,a0
    2990 0000bc40     2fe2          srl     1,a2
    2991 0000bc50     4802          cmp     a0,a2
    2992 0000bc60     ca74          jreq    rmurnodunk                      ;Same team?
    2993                    
    2994 0000bc70     b5a0          move    *a13(plyr_jmpcnt),a0
         0000bc80     0400  
    2995 0000bc90     ca71          jrz     rmurnopop
    2996 0000bca0     b500          move    *a8(OYPOS),a0
         0000bcb0     00b0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   70

    2997 0000bcc0     b521          move    *a9(OYPOS),a1
         0000bcd0     00b0  
    2998 0000bce0     1121          addk    9,a1                    ;15
    2999                    
    3000 0000bcf0     4820          cmp     a1,a0
    3001 0000bd00     c76a          jrgt    rmurnopop                       ;Dunker is higher?
    3002                    
    3003                    
    3004 0000bd10     05a0          move    @slamming,a0            ;Ball already successfully into hoop
         0000bd20 00000000! 
    3005 0000bd40     cb66          jrnz    rmurnopop
    3006                    
    3007 0000bd50     05a0          move    @HCOUNT,a0
         0000bd60 c00001c0  
    3008 0000bd80     2780          sll     32-4,a0
    3009 0000bd90     cb03          jrnz    rmurnoflsh
    3010                    
    3011 0000bda0     0d5f          calla   flash_reward
         0000bdb0 00000000! 
    3012                    
    3013 0000bdd0           rmurnoflsh
    3014                    
    3015 0000bdd0     b7ae          move    *a13(plyr_attrib_p),a14,L
         0000bde0     0150  
    3016 0000bdf0     b5c0          move    *a14(PAT_DEFSKILL),a0
         0000be00     0050  
    3017 0000be10     2480          sll     4,a0
    3018 0000be20     0b20          addi    tryblk_t,a0
         0000be30 0000c530' 
    3019 0000be50     8400          move    *a0,a0
    3020                    
    3021                    
    3022                    
    3023 0000be60     b5ae          move    *a13(plyr_num),a14
         0000be70     0100  
    3024                    
    3025                    
    3026 0000be80     05a3          move    @PSTATUS,a3
         0000be90 00000060- 
    3027 0000beb0     4bc3          btst    a14,a3
    3028 0000bec0     cb01          jrnz    rmurcont
    3029 0000bed0     1a40          movk    18,a0                   ;Drone is less
    3030 0000bee0           rmurcont
    3031                    
    3032 0000bee0     0d5f          calla   RNDPER
         0000bef0 00000000! 
    3033 0000bf10     c249          jrls    rmurnopop
    3034                    
    3035                    
    3036 0000bf20     0d5f          calla   rejected_dnk_speech
         0000bf30 00000000! 
    3037                    
    3038 0000bf50     4da3          move    a13,a3
    3039 0000bf60     0d5f          calla   def_play_reward         ;Good defensive play reward snds, etc
         0000bf70 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   71

    3040                    
    3041                    
    3042 0000bf90     b5a0          move    *a13(plyr_seq),a0
         0000bfa0     0170  
    3043 0000bfb0     0b40          cmpi    BLOCKREJ_SEQ,a0
         0000bfc0     ffed  
    3044 0000bfd0     ca0c          jreq    rmurdisrupt
    3045 0000bfe0     0b40          cmpi    FASTBLOCKREJ_SEQ,a0
         0000bff0     ffec  
    3046 0000c000     ca09          jreq    rmurdisrupt
    3047                    
    3048 0000c010     09c0          movi    200,a0
         0000c020     00c8  
    3049 0000c030     0d5f          calla   RNDPER
         0000c040 00000000! 
    3050 0000c060     c303          jrhi    rmurdisrupt
    3051                    
    3052 0000c070     b700          move    *a8(OYVEL),a0,L
         0000c080     0040  
    3053 0000c090     ce29          jrn     rmurgvbl
    3054                    
    3055 0000c0a0           rmurdisrupt
    3056                    
    3057                    
    3058                            
    3059                    
    3060                    
    3061 0000c0a0     b5a0          move    *a13(plyr_dir),a0
         0000c0b0     03d0  
    3062 0000c0c0     0d5f          calla   sinecos_get
         0000c0d0 00000000! 
    3063                    
    3064 0000c0f0     07a2          move    @ballobj_p,a2,L
         0000c100 00000000! 
    3065                    
    3066 0000c120     2480          sll     4,a0
    3067 0000c130     2481          sll     4,a1
    3068 0000c140     b202          move    a0,*a2(OZVEL),L
         0000c150     0060  
    3069 0000c160     b222          move    a1,*a2(OXVEL),L
         0000c170     0020  
    3070 0000c180     09e1          movi    -GRAV*21,a1             ;Towards roof
         0000c190 fffce200  
    3071 0000c1b0     b222          move    a1,*a2(OYVEL),L
         0000c1c0     0040  
    3072                    
    3073 0000c1d0     09c0          movi    -1,a0
         0000c1e0     ffff  
    3074 0000c1f0     0580          move    a0,@ballpnum
         0000c200 00000000! 
    3075 0000c220     0580          move    a0,@ballpnumlast
         0000c230 00000000! 
    3076                    
    3077 0000c250     0d5f          calla   ball_convfmprel
         0000c260 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   72

    3078                    
    3079 0000c280     b72e          move    *a9(OPLINK),a14,L
         0000c290     01a0  
    3080                    
    3081 0000c2a0     5600          clr     a0
    3082 0000c2b0     b00e          move    a0,*a14(plyr_ownball)
         0000c2c0     0260  
    3083                    
    3084 0000c2d0     19e0          movk    15,a0
    3085 0000c2e0     b00d          move    a0,*a13(plyr_shtdly)
         0000c2f0     02b0  
    3086 0000c300     b00e          move    a0,*a14(plyr_shtdly)
         0000c310     02b0  
    3087                    
    3088 0000c320     c008          jruc    rmurnopop
    3089                    
    3090 0000c330           rmurgvbl
    3091 0000c330     b5a0          move    *a13(plyr_num),a0       ;Give defender the ball
         0000c340     0100  
    3092 0000c350     0580          move    a0,@ballpnum
         0000c360 00000000! 
    3093 0000c380     5600          clr     a0
    3094 0000c390     b00d          move    a0,*a13(plyr_dribmode)
         0000c3a0     0210  
    3095                    
    3096                    
    3097                    
    3098 0000c3b0           rmurnopop
    3099                    
    3100 0000c3b0     b5c3  rmurnodunk      move    *a14(plyr_jmpcnt),a3
         0000c3c0     0400  
    3101 0000c3d0     ca01          jrz     rmurongnd
    3102 0000c3e0     102a          addk    1,a10                   ;Collided with a jumper
    3103 0000c3f0           rmurongnd
    3104 0000c3f0     b5a2          move    *a13(plyr_seqflgs),a2
         0000c400     0180  
    3105 0000c410     1f62          btst    EASYSTAG_B,a2
    3106 0000c420     ca09          jrz     rmurnesy                        ;!An easy stagger?
    3107 0000c430     b5a0          move    *a13(plyr_num),a0
         0000c440     0100  
    3108 0000c450     b5c2          move    *a14(plyr_num),a2
         0000c460     0100  
    3109 0000c470     2fe0          srl     1,a0
    3110 0000c480     2fe2          srl     1,a2
    3111 0000c490     4802          cmp     a0,a2
    3112 0000c4a0     ca01          jreq    rmursetstg                      ;Same team?
    3113 0000c4b0     102a          addk    1,a10
    3114 0000c4c0           rmurnesy
    3115 0000c4c0     b14d  rmursetstg      move    a10,*a13(plyr_stagcnt)
         0000c4d0     0430  
    3116                    
    3117 0000c4e0     0d91  rmurnext        dsj     b1,rmurlp
         0000c4f0     feac  
    3118                    
    3119                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   73

    3120 0000c500           rmurx   PULL    a2,a3,a4,a5,a6,a7,a9,a10,a11
    3121 0000c520     0960          rets
    3122                    
    3123 0000c530           tryblk_t
    3124 0000c530     0001          .word   1,2,3,10,15,18,22,23,24,25,25
    3125                    
    3126 0000c5e0     0000  rmurc_t .word   0,plyr_tmdir,plyr_o1dir,plyr_o2dir
    3127 0000c620     02e0          .word   plyr_tmdir,0,plyr_o1dir,plyr_o2dir
    3128 0000c660     0300          .word   plyr_o1dir,plyr_o2dir,0,plyr_tmdir
    3129 0000c6a0     0300          .word   plyr_o1dir,plyr_o2dir,plyr_tmdir,0
    3130                    
    3131 0000c6e0           rmurvel_t
    3132 0000c6e0     c000          .word   -16384,-15137,-11585,-6270
    3133 0000c720     0000          .word   0,6270,11585,15137,16384,15137,11585,6270
    3134 0000c7a0     0000          .word   0,-6269,-11585,-15137,-16384,-15137,-11585,-6270
    3135                    
    3136                    
    3137                    
    3138                    
    3139 0000c820            SUBRP  plyr_ani
    3140                    
    3141                    
    3142 0000c820     0b60          cmpi    ROM,a0
         0000c830 007fffff  
    3143 0000c850     c83a          jrlo    krrianierr
    3144                    
    3145 0000c860     4c02          move    a0,a2
    3146 0000c870     4c23          move    a1,a3
    3147                    
    3148 0000c880     0d3f          callr   anipt_getsclxy
         0000c890     0b56  
    3149                    
    3150 0000c8a0     ac68          movb    a3,*a8(OCTRL)
         0000c8b0     00f0  
    3151                    
    3152 0000c8c0     b248          move    a2,*a8(OIMG),L
         0000c8d0     0170  
    3153 0000c8e0     ba48          move    *a2(0),*a8(OSIZE),L
         0000c8f0     0000  
         0000c900     0130  
    3154 0000c910     ba48          move    *a2(ISAG),*a8(OSAG),L
         0000c920     0040  
         0000c930     0110  
    3155                    
    3156 0000c940     b7ae          move    *a13(plyr_attrib_p),a14,L
         0000c950     0150  
    3157 0000c960     87ce          move    *a14,a14,L              ;Get *scale_t
    3158 0000c970     b442          move    *a2(IFLAGS),a2
         0000c980     00c0  
    3159 0000c990     cf09          jrnn    krrismall                       ;Bit15 = Scale
    3160                    
    3161 0000c9a0     0b0e          addi    SCALETSIZE,a14          ;0c80H
         0000c9b0     0c80  
    3162                    
    3163 0000c9c0     05a2          move    @baby_flag,a2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   74

         0000c9d0 00004830- 
    3164 0000c9f0     ca09          jrz     krricont
    3165 0000ca00     0b0e          addi    SCALETSIZE,a14          ;Funny option - small bodies
         0000ca10     0c80  
    3166 0000ca20     c006          jruc    krricont
    3167                    
    3168 0000ca30           krrismall
    3169 0000ca30     05a2          move    @baby_flag,a2
         0000ca40 00004830- 
    3170 0000ca60     ca02          jrz     krricont
    3171 0000ca70     0b0e          addi    01a00H,a14              ;Small bodies for small artwork
         0000ca80     1a00  
    3172 0000ca90           krricont
    3173 0000ca90     b3c8          move    a14,*a8(ODATA_p),L
         0000caa0     01c0  
    3174                    
    3175 0000cab0     4c02          move    a0,a2
    3176 0000cac0     4c23          move    a1,a3
    3177 0000cad0     0d3f          callr   anipt_getsclxy
         0000cae0     0b31  
    3178                    
    3179 0000caf0     4402          sub     a0,a2                   ;Subtract new from old
    3180 0000cb00     4423          sub     a1,a3
    3181                    
    3182 0000cb10     b208          move    a0,*a8(OXANI),L         ;Save scaled anipt
         0000cb20     01e0  
    3183 0000cb30     2a01          sra     16,a1
    3184 0000cb40     b02d          move    a1,*a13(plyr_aniy)
         0000cb50     0420  
    3185                    
    3186 0000cb60     4d00          move    a8,a0                   ;Get base address
    3187 0000cb70     0b00          addi    OXVAL,a0
         0000cb80     0080  
    3188 0000cb90     860e          move    *a0,a14,L               ;New OXVAL
    3189 0000cba0     404e          add     a2,a14
    3190 0000cbb0     93c0          move    a14,*a0+,L
    3191 0000cbc0     860e          move    *a0,a14,L               ;New OYVAL
    3192 0000cbd0     406e          add     a3,a14
    3193 0000cbe0     83c0          move    a14,*a0,L
    3194                    
    3195 0000cbf0     0960  krrix   rets
    3196                    
    3197                    
    3198 0000cc00           krrianierr 
    3199                            .if     DEBUG
    3200                            LOCKUP
    3201                            eint
    3202                            .else
    3203 0000cc00                   CALLERR 2,2
    3204                            .endif
    3205 0000ccb0     c0f3          jruc    krrix
    3206                    
    3207                    
    3208                    
    3209                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   75

    3210                    
    3211 0000ccc0            SUBRP  plyr_startjmp
    3212                    
    3213 0000ccc0                   PUSH    a6,a7
    3214                    
    3215 0000cce0     b5a5          move    *a13(plyr_ownball),a5
         0000ccf0     0260  
    3216 0000cd00     ca00          jrz     uefdblk                 ;We don't have ball?
         0000cd10     0211  
    3217                    
    3218                    
    3219 0000cd20     b5a6          move    *a13(plyr_ohoopx),a6
         0000cd30     02d0  
    3220 0000cd40     09c7          movi    CZMID,a7
         0000cd50     0492  
    3221 0000cd60     0d3f          callr   seekdirdist_obxz128
         0000cd70     1774  
    3222                    
    3223 0000cd80     b5a4          move    *a13(plyr_newdir),a4    ;Get old
         0000cd90     03e0  
    3224 0000cda0     b00d          move    a0,*a13(plyr_newdir)    ;Turn toward basket
         0000cdb0     03e0  
    3225                    
    3226 0000cdc0     4ca5          move    a5,a5
    3227 0000cdd0     c400          jrlt    uefdblkd                        ;Teammate has ball?
         0000cde0     0297  
    3228                    
    3229 0000cdf0     57ce          clr     a14
    3230 0000ce00     058e          move    a14,@reduce_3ptr
         0000ce10 00000000- 
    3231                    
    3232 0000ce30     0b41          cmpi    400,a1
         0000ce40     fe6f  
    3233 0000ce50     c500          jrge    uefddesp                        ;Long shot?
         0000ce60     01db  
    3234                    
    3235 0000ce70     0b41          cmpi    270,a1
         0000ce80     fef1  
    3236 0000ce90     c500          jrge    uefd3ptr                        ;3ptr
         0000cea0     01b1  
    3237                    
    3238                    
    3239 0000ceb0     0b41          cmpi    200,a1
         0000cec0     ff37  
    3240 0000ced0     c52a          jrge    uefdtag1
    3241                    
    3242 0000cee0     b5ae          move    *a13(plyr_seqdir),a14
         0000cef0     0190  
    3243 0000cf00     ca02          jrz     uefdahook
    3244 0000cf10     148e          subk    4,a14
    3245 0000cf20     cb25          jrne    uefdtag1
    3246 0000cf30           uefdahook
    3247 0000cf30     b5ae          move    *a13(plyr_ohpdir),a14
         0000cf40     0380  
    3248 0000cf50     110e          addk    8,a14                   ;Round off
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   76

    3249 0000cf60     272e          sll     32-7,a14
    3250 0000cf70     2c6e          srl     32-7+4,a14              ;Kill frac
    3251 0000cf80     ca1f          jrz     uefdtag1
    3252 0000cf90     0b4e          cmpi    4,a14
         0000cfa0     fffb  
    3253 0000cfb0     ca1c          jrz     uefdtag1
    3254                    
    3255                    
    3256                    
    3257 0000cfc0     b5a2          move    *a13(plyr_num),a2
         0000cfd0     0100  
    3258 0000cfe0     2fe2          srl     1,a2
    3259 0000cff0     ca04          jrz     uefdtg1                 ;Team1?
    3260 0000d000     0b4e          cmpi    5,a14
         0000d010     fffa  
    3261 0000d020     c415          jrlt    uefdtag1                        ;Team 2 behind hoop
    3262 0000d030     c003          jruc    uefdtgx
    3263 0000d040     0b4e  uefdtg1 cmpi    4,a14
         0000d050     fffb  
    3264 0000d060     c511          jrge    uefdtag1
    3265 0000d070           uefdtgx
    3266                    
    3267                    
    3268                    
    3269 0000d070     b5ae          move    *a13(plyr_ohpdist),a14
         0000d080     0390  
    3270 0000d090     0b4e          cmpi    40h,a14                 ;48h
         0000d0a0     ffbf  
    3271 0000d0b0     c40c          jrlt    uefdtag1                        ;Too close for hook?
    3272 0000d0c0     b50e          move    *a8(OZPOS),a14
         0000d0d0     00d0  
    3273 0000d0e0     0b4e          cmpi    0430H,a14
         0000d0f0     fbcf  
    3274 0000d100     c407          jrlt    uefdtag1
    3275 0000d110     0b4e          cmpi    04faH,a14
         0000d120     fb05  
    3276 0000d130     c704          jrgt    uefdtag1
    3277                    
    3278 0000d140     b08d          move    a4,*a13(plyr_newdir)    ;Turn toward basket
         0000d150     03e0  
    3279 0000d160     c000          jruc    uefdhs                  ;Hook shot
         0000d170     0145  
    3280 0000d180           uefdtag1
    3281                    
    3282 0000d180     4c03          move    a0,a3
    3283 0000d190     4c24          move    a1,a4
    3284                                                            ;>Skip dunks from behind the hoop
    3285 0000d1a0     1100          addk    8,a0                    ;Round off
    3286 0000d1b0     2720          sll     32-7,a0
    3287 0000d1c0     2c60          srl     32-3,a0                 ;Kill frac
    3288 0000d1d0     b5ae          move    *a13(plyr_num),a14
         0000d1e0     0100  
    3289 0000d1f0     2fee          srl     1,a14
    3290 0000d200     cb04          jrnz    uefdlhoop                       ;Team2?
    3291 0000d210     14a0          subk    5,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   77

    3292 0000d220     c407          jrlt    uefdtrydunk
    3293 0000d230     c000          jruc    uefdsj
         0000d240     0154  
    3294                    
    3295                    
    3296                    
    3297 0000d250     4c00  uefdlhoop       move    a0,a0
    3298 0000d260     ca03          jrz     uefdtrydunk
    3299 0000d270     1480          subk    4,a0
    3300 0000d280     c400          jrlt    uefdsj
         0000d290     014f  
    3301                    
    3302                    
    3303 0000d2a0           uefdtrydunk                             ;>Try a dunk
    3304 0000d2a0     0b44          cmpi    60,a4
         0000d2b0     ffc3  
    3305 0000d2c0     c61c          jrle    uefdvelok                       ;Close to hoop?
    3306                    
    3307 0000d2d0     b5ae          move    *a13(plyr_dir),a14
         0000d2e0     03d0  
    3308 0000d2f0     446e          sub     a3,a14
    3309 0000d300     038e          abs     a14
    3310 0000d310     0b4e          cmpi    040H,a14
         0000d320     ffbf  
    3311 0000d330     c603          jrle    uefdnodov
    3312 0000d340     0bee          subi    080H,a14
         0000d350     ff7f  
    3313 0000d360     038e          abs     a14
    3314 0000d370           uefdnodov
    3315 0000d370     170e          subk    24,a14
    3316 0000d380     c700          jrgt    uefdsj                  ;!Facing basket?
         0000d390     013f  
    3317                    
    3318                    
    3319 0000d3a0     0b44          cmpi    170,a4                  ;Max dunk range
         0000d3b0     ff55  
    3320 0000d3c0     c500          jrge    uefdsj                  ;Too far for dunk?
         0000d3d0     013b  
    3321                    
    3322                    
    3323 0000d3e0     b70e          move    *a8(OXVEL),a14,L        ;0CHhk velocity
         0000d3f0     0020  
    3324 0000d400     038e          abs     a14
    3325 0000d410     2e0e          srl     16,a14
    3326 0000d420     cb06          jrnz    uefdvelok
    3327 0000d430     b70e          move    *a8(OZVEL),a14,L
         0000d440     0060  
    3328 0000d450     038e          abs     a14
    3329 0000d460     2e0e          srl     16,a14
    3330 0000d470     ca00          jrz     uefdsj
         0000d480     0130  
    3331 0000d490           uefdvelok
    3332                    
    3333 0000d490     b7a0          move    *a13(plyr_attrib_p),a0,L
         0000d4a0     0150  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   78

    3334 0000d4b0     b400          move    *a0(PAT_POWER),a0
         0000d4c0     0150  
    3335 0000d4d0     2480          sll     4,a0
    3336 0000d4e0     0b20          addi    dnkthru_t,a0
         0000d4f0 0000e1b0' 
    3337 0000d510     8400          move    *a0,a0
    3338 0000d520     0d5f          calla   RNDPER
         0000d530 00000000! 
    3339 0000d550     c36f          jrhi    uefddunk                        ;Yes, jump over anybody!
    3340                    
    3341                    
    3342                    
    3343 0000d560     09c7          movi    64,a7
         0000d570     0040  
    3344 0000d580     b5ae          move    *a13(plyr_num),a14
         0000d590     0100  
    3345 0000d5a0     0b4e          cmpi    2,a14
         0000d5b0     fffd  
    3346 0000d5c0     c401          jrlt    uefdtm1
    3347 0000d5d0     56e7          clr     a7
    3348 0000d5e0           uefdtm1
    3349 0000d5e0     09ee          movi    plyrproc_t,a14,L
         0000d5f0 00000630- 
    3350 0000d610     40ee          add     a7,a14
    3351 0000d620     87ce          move    *a14,a14,L
    3352                    
    3353                    
    3354                    
    3355                    
    3356 0000d630     b5c7          move    *a14(plyr_num),a7
         0000d640     0100  
    3357 0000d650     05a0          move    @plyrnumonfire,a0
         0000d660 00000000! 
    3358 0000d680     4807          cmp     a0,a7
    3359 0000d690     cb02          jrnz    uefdnof1
    3360 0000d6a0     1960          movk    11,a0
    3361 0000d6b0     c004          jruc    uefdgdd
    3362 0000d6c0           uefdnof1
    3363 0000d6c0     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000d6d0     0150  
    3364 0000d6e0     b5c0          move    *a14(PAT_DEFSKILL),a0
         0000d6f0     0050  
    3365 0000d700           uefdgdd
    3366 0000d700     2480          sll     4,a0
    3367 0000d710     09ee          movi    uefddist_t,a14
         0000d720 0000e260' 
    3368 0000d740     400e          add     a0,a14
    3369 0000d750     85c2          move    *a14,a2                 ;Distance check
    3370 0000d760     09ee          movi    uefdwidth_t,a14
         0000d770 0000e320' 
    3371 0000d790     400e          add     a0,a14
    3372 0000d7a0     85c0          move    *a14,a0                 ;Get width of check                     ;Distance check
    3373                    
    3374                    
    3375 0000d7b0     b5ae          move    *a13(plyr_o1dist),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   79

         0000d7c0     0310  
    3376 0000d7d0     49c4          cmp     a14,a4
    3377 0000d7e0     c40f          jrlt    uefdo1dok                       ;I'm closer?
    3378                    
    3379 0000d7f0     484e          cmp     a2,a14
    3380                    
    3381 0000d800     c70d          jrgt    uefdo1dok                       ;He's too far?
    3382 0000d810     b5a2          move    *a13(plyr_o1dir),a2
         0000d820     0300  
    3383 0000d830     4462          sub     a3,a2
    3384 0000d840     0382          abs     a2
    3385 0000d850     0b42          cmpi    040H,a2
         0000d860     ffbf  
    3386 0000d870     c603          jrle    uefdo1dsml
    3387 0000d880     0be2          subi    080H,a2
         0000d890     ff7f  
    3388 0000d8a0     0382          abs     a2
    3389 0000d8b0           uefdo1dsml
    3390                    
    3391 0000d8b0     4402          sub     a0,a2
    3392                    
    3393 0000d8c0     c400          jrlt    uefdtrylyup             ;In front of me?
         0000d8d0     00b0  
    3394 0000d8e0           uefdo1dok
    3395                    
    3396 0000d8e0     09c7          movi    64,a7
         0000d8f0     0040  
    3397 0000d900     b5ae          move    *a13(plyr_num),a14
         0000d910     0100  
    3398 0000d920     0b4e          cmpi    2,a14
         0000d930     fffd  
    3399 0000d940     c401          jrlt    uefdtm1a
    3400 0000d950     56e7          clr     a7
    3401 0000d960           uefdtm1a
    3402 0000d960     09ee          movi    plyrproc_t+32,a14,L
         0000d970 00000650- 
    3403 0000d990     40ee          add     a7,a14
    3404 0000d9a0     87ce          move    *a14,a14,L
    3405                    
    3406 0000d9b0     b5c7          move    *a14(plyr_num),a7
         0000d9c0     0100  
    3407 0000d9d0     05a0          move    @plyrnumonfire,a0
         0000d9e0 00000000! 
    3408 0000da00     4807          cmp     a0,a7
    3409 0000da10     cb02          jrnz    uefdnof2
    3410 0000da20     1960          movk    11,a0
    3411 0000da30     c004          jruc    uefdgdd2
    3412 0000da40           uefdnof2
    3413                    
    3414 0000da40     b7ce          move    *a14(plyr_attrib_p),a14,L
         0000da50     0150  
    3415 0000da60     b5c0          move    *a14(PAT_DEFSKILL),a0
         0000da70     0050  
    3416 0000da80           uefdgdd2
    3417 0000da80     2480          sll     4,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   80

    3418 0000da90     09ee          movi    uefddist_t,a14
         0000daa0 0000e260' 
    3419 0000dac0     400e          add     a0,a14
    3420 0000dad0     85c2          move    *a14,a2                 ;Distance check
    3421 0000dae0     09ee          movi    uefdwidth_t,a14
         0000daf0 0000e320' 
    3422 0000db10     400e          add     a0,a14
    3423 0000db20     85c0          move    *a14,a0                 ;Get width of check                     ;Distance check
    3424                    
    3425                    
    3426                    
    3427 0000db30     b5ae          move    *a13(plyr_o2dist),a14
         0000db40     0330  
    3428 0000db50     49c4          cmp     a14,a4
    3429 0000db60     c40e          jrlt    uefdo2dok                       ;I'm closer?
    3430 0000db70     484e          cmp     a2,a14
    3431 0000db80     c70c          jrgt    uefdo2dok                       ;He's too far?
    3432 0000db90     b5a2          move    *a13(plyr_o2dir),a2
         0000dba0     0320  
    3433 0000dbb0     4462          sub     a3,a2
    3434 0000dbc0     0382          abs     a2
    3435 0000dbd0     0b42          cmpi    040H,a2
         0000dbe0     ffbf  
    3436 0000dbf0     c603          jrle    uefdo2dsml
    3437 0000dc00     0be2          subi    080H,a2
         0000dc10     ff7f  
    3438 0000dc20     0382          abs     a2
    3439 0000dc30           uefdo2dsml
    3440 0000dc30     4402          sub     a0,a2
    3441 0000dc40     c479          jrlt    uefdtrylyup             ;In front of me?
    3442 0000dc50           uefdo2dok
    3443                    
    3444 0000dc50     b06d  uefddunk        move    a3,*a13(plyr_dir)
         0000dc60     03d0  
    3445 0000dc70     09ce          movi    -1,a14
         0000dc80     ffff  
    3446 0000dc90     b1cd          move    a14,*a13(plyr_newdir)   ;Cancel turn
         0000dca0     03e0  
    3447                    
    3448 0000dcb0     1103          addk    8,a3                    ;Round off
    3449 0000dcc0     2f83          srl     4,a3                    ;Kill frac
    3450 0000dcd0     24a3          sll     5,a3                    ;*32
    3451                    
    3452                            .ref    getdunkseq
    3453 0000dce0     0d5f          calla   getdunkseq
         0000dcf0 00000000! 
    3454 0000dd10     4c00          move    a0,a0
    3455 0000dd20     cb00          jrnz    uefdsj
         0000dd30     00a5  
    3456                    
    3457 0000dd40     5600          clr     a0
    3458 0000dd50     0580          move    a0,@shot_distance
         0000dd60 00000000! 
    3459                    
    3460 0000dd80     18e0          movk    DUNK_SHORT,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   81

    3461 0000dd90     0b44          cmpi    80,a4
         0000dda0     ffaf  
    3462 0000ddb0     c605          jrle    uefdshort
    3463                    
    3464 0000ddc0     1900          movk    DUNK_MED,a0
    3465 0000ddd0     0b44          cmpi    120,a4
         0000dde0     ff87  
    3466 0000ddf0     c601          jrle    uefdmed
    3467                    
    3468 0000de00     1920          movk    DUNK_LONG,a0
    3469 0000de10           uefdshort
    3470 0000de10           uefdmed
    3471 0000de10     0580          move    a0,@shot_type
         0000de20 00000000! 
    3472                    
    3473 0000de40     8662          move    *a3,a2,L
    3474 0000de50     9440          move    *a2+,a0                 ;uefdEntries-1
    3475 0000de60     0d3f          callr   rndrng0
         0000de70     16ab  
    3476                    
    3477 0000de80     2480          sll     4,a0                    ;*16
    3478 0000de90     4040          add     a2,a0
    3479 0000dea0     8400          move    *a0,a0
    3480 0000deb0     ca00          jrz     uefdsj                  ;Null entry?
         0000dec0     008c  
    3481                    
    3482                    
    3483                    
    3484                    
    3485                            .if     DEBUG
    3486                            .bss    debug_dunk_num,16
    3487                            .ref    slowmotion
    3488                    
    3489                            move    a0,@debug_dunk_num
    3490                            clr     a1
    3491                            move    a1,@slowmotion
    3492                            .endif
    3493                    
    3494 0000ded0     4c02          move    a0,a2
    3495 0000dee0                   CREATE0 start_animate
    3496 0000df50     0b42          cmpi    DUNKX_SEQ,a2
         0000df60     ff82  
    3497 0000df70     ca06          jreq    uefdsmk
    3498 0000df80     0b42          cmpi    DUNKX2_SEQ,a2
         0000df90     ff81  
    3499 0000dfa0     ca03          jreq    uefdsmk
    3500 0000dfb0     0b42          cmpi    DUNKX3_SEQ,a2
         0000dfc0     ff80  
    3501 0000dfd0     cb09          jrne    uefdnosmk
    3502 0000dfe0           uefdsmk CREATE0 plyr_smoketrail
    3503 0000e050     b3a0          move    a13,*a0(PA10),L
         0000e060     0080  
    3504 0000e070     4c40  uefdnosmk       move    a2,a0
    3505                    
    3506                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   82

    3507 0000e080     184e          movk    2,a14
    3508 0000e090     058e          move    a14,@ballptsforshot
         0000e0a0 00000000! 
    3509                    
    3510 0000e0c0     b5a7          move    *a13(plyr_dir),a7
         0000e0d0     03d0  
    3511 0000e0e0     0d3f          callr   plyr_setseq             ;Dunk!
         0000e0f0     fc20  
    3512                    
    3513 0000e100     b5ae          move    *a13(plyr_num),a14
         0000e110     0100  
    3514 0000e120     2fee          srl     1,a14
    3515 0000e130     ca00          jrz     uefdx                   ;Team1?
         0000e140     0166  
    3516 0000e150     09ce          movi    M_FLIPH,a14
         0000e160     0010  
    3517 0000e170     b1cd          move    a14,*a13(plyr_anirevff)
         0000e180     0200  
    3518 0000e190     c000          jruc    uefdx
         0000e1a0     0160  
    3519                    
    3520                    
    3521                    
    3522 0000e1b0           dnkthru_t
    3523 0000e1b0     0000          .word   0,0,0,0,0,0,0,100,150,250,350
    3524                    
    3525                    
    3526 0000e260     0028  uefddist_t      .word   40,43,46,49,50,52,54,56,68,70,72,95
    3527 0000e320           uefdwidth_t
    3528 0000e320     001b          .word   27,29,31,33,36,37,38,39,40,43,45,70
    3529                    
    3530 0000e3e0           uefdtrylyup
    3531 0000e3e0     05ae          move    @HCOUNT,a14
         0000e3f0 c00001c0  
    3532 0000e410     1fee          btst    0,a14
    3533 0000e420     cb36          jrnz    uefdsj
    3534 0000e430     b5ae          move    *a13(plyr_ohpdist),a14
         0000e440     0390  
    3535 0000e450     0b4e          cmpi    138,a14
         0000e460     ff75  
    3536 0000e470     c731          jrgt    uefdsj
    3537 0000e480     0b4e          cmpi    35,a14
         0000e490     ffdc  
    3538 0000e4a0     c42e          jrlt    uefdsj
    3539                    
    3540                    
    3541 0000e4b0     b06d          move    a3,*a13(plyr_dir)
         0000e4c0     03d0  
    3542 0000e4d0     09ce          movi    -1,a14
         0000e4e0     ffff  
    3543 0000e4f0     b1cd          move    a14,*a13(plyr_newdir)   ;Cancel turn
         0000e500     03e0  
    3544 0000e510     1840          movk    2,a0
    3545 0000e520     0580          move    a0,@ballptsforshot
         0000e530 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   83

    3546                    
    3547 0000e550     18c0          movk    FINGER_ROLL,a0
    3548 0000e560     0580          move    a0,@shot_type
         0000e570 00000000! 
    3549                    
    3550 0000e590     09c0          movi    LAYUP_SEQ,a0
         0000e5a0     001b  
    3551 0000e5b0     c000          jruc    uefdsseq
         0000e5c0     011a  
    3552                    
    3553 0000e5d0           uefdhs
    3554 0000e5d0     1844          movk    2,a4
    3555 0000e5e0     0584          move    a4,@ballptsforshot
         0000e5f0 00000000! 
    3556                    
    3557 0000e610     1880          movk    HOOK_SHOT,a0
    3558 0000e620     0580          move    a0,@shot_type
         0000e630 00000000! 
    3559                    
    3560 0000e650     1b20          movk    HOOK_SEQ,a0
    3561 0000e660     b5a4          move    *a13(plyr_turbon),a4
         0000e670     0250  
    3562 0000e680     cb01          jrnz    uefdhs1
    3563 0000e690     1b40          movk    HOOK2_SEQ,a0            ;Not a high arc
    3564                    
    3565                    
    3566 0000e6a0     b5a7  uefdhs1 move    *a13(plyr_dir),a7
         0000e6b0     03d0  
    3567 0000e6c0     0d3f          callr   plyr_setseq
         0000e6d0     fbc2  
    3568                    
    3569 0000e6e0     b5ae          move    *a13(plyr_num),a14
         0000e6f0     0100  
    3570 0000e700     2fee          srl     1,a14
    3571 0000e710     ca00          jrz     uefdx                   ;Team1?
         0000e720     0108  
    3572 0000e730     09ce          movi    M_FLIPH,a14
         0000e740     0010  
    3573 0000e750     b1cd          move    a14,*a13(plyr_anirevff)
         0000e760     0200  
    3574 0000e770     c000          jruc    uefdx
         0000e780     0102  
    3575                    
    3576                    
    3577 0000e790           uefdsj                                  ;>Start a jump shot seq
    3578 0000e790     1844          movk    2,a4
    3579 0000e7a0     b500          move    *a8(OZPOS),a0
         0000e7b0     00d0  
    3580 0000e7c0     0be0          subi    CZMIN+18,a0
         0000e7d0     fc05  
    3581 0000e7e0     c41c          jrlt    uefd3ptra
    3582 0000e7f0     0b40          cmpi    CZMID+178-(CZMIN+18),a0
         0000e800     feb5  
    3583 0000e810     c719          jrgt    uefd3ptra
    3584 0000e820     2fc0          srl     2,a0                    ;/4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   84

    3585 0000e830     2480          sll     4,a0                    ;*16
    3586 0000e840     0b20          addi    uefd3pt_t,a0
         0000e850 0000f7e0' 
    3587 0000e870     8400          move    *a0,a0
    3588 0000e880     b502          move    *a8(OXPOS),a2
         0000e890     0090  
    3589 0000e8a0     b50e          move    *a8(OXANI+16),a14
         0000e8b0     01f0  
    3590 0000e8c0     41c2          add     a14,a2
    3591 0000e8d0     0be2          subi    WRLDMID,a2
         0000e8e0     dfff  
    3592 0000e8f0     0382          abs     a2
    3593 0000e900     4802          cmp     a0,a2
    3594 0000e910     c71f          jrgt    uefd2ptr                        ;Far from center court?
    3595                    
    3596 0000e920     4440          sub     a2,a0
    3597 0000e930     0b40          cmpi    16h,a0
         0000e940     ffe9  
    3598 0000e950     c40b          jrlt    uefd3ptrx
    3599 0000e960     1820          movk    1,a0
    3600 0000e970     0580          move    a0,@reduce_3ptr 
         0000e980 00000000- 
    3601 0000e9a0     c006          jruc    uefd3ptrx
    3602                    
    3603                    
    3604                    
    3605 0000e9b0           uefd3ptra
    3606 0000e9b0     c005          jruc    uefd3ptrx
    3607 0000e9c0     1824  uefd3ptr        movk    1,a4
    3608 0000e9d0     0584          move    a4,@reduce_3ptr
         0000e9e0 00000000- 
    3609 0000ea00     4c21          move    a1,a1
    3610 0000ea10           uefd3ptrx
    3611                    
    3612 0000ea10     1864          movk    3,a4
    3613                    
    3614 0000ea20     b5a0          move    *a13(plyr_ohpdist),a0
         0000ea30     0390  
    3615 0000ea40     0b40          cmpi    310,a0                  ;distance from hoop
         0000ea50     fec9  
    3616 0000ea60     c605          jrle    uefdnrm_3
    3617 0000ea70     1820          movk    LONG_RANGE,a0
    3618 0000ea80     0580          move    a0,@shot_type
         0000ea90 00000000! 
    3619 0000eab0     c009          jruc    uefdcontxy
    3620 0000eac0           uefdnrm_3
    3621 0000eac0     1860          movk    _3_POINTS,a0
    3622 0000ead0     0580          move    a0,@shot_type
         0000eae0 00000000! 
    3623 0000eb00     c004          jruc    uefdcontxy
    3624 0000eb10           uefd2ptr
    3625 0000eb10     1840          movk    _2_POINTS,a0
    3626 0000eb20     0580          move    a0,@shot_type
         0000eb30 00000000! 
    3627 0000eb50           uefdcontxy
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   85

    3628 0000eb50     0584          move    a4,@ballptsforshot
         0000eb60 00000000! 
    3629                    
    3630 0000eb80     1ae0          movk    SHOOT_SEQ,a0
    3631                    
    3632 0000eb90     b5ae          move    *a13(plyr_shtbutn),a14
         0000eba0     0540  
    3633 0000ebb0     cb04          jrnz    uefdnotq
    3634 0000ebc0     182e          movk    1,a14
    3635 0000ebd0     b1cd          move    a14,*a13(plyr_shtbutn)
         0000ebe0     0540  
    3636                    
    3637 0000ebf0     1b00          movk    QSHOOT_SEQ,a0
    3638 0000ec00           uefdnotq
    3639 0000ec00     c000          jruc    uefdsseq
         0000ec10     00b5  
    3640                    
    3641 0000ec20           uefddesp
    3642 0000ec20     09c0          movi    DESPERATION,a0
         0000ec30     0000  
    3643 0000ec40     0580          move    a0,@shot_type
         0000ec50 00000000! 
    3644                    
    3645 0000ec70     186e          movk    3,a14
    3646 0000ec80     058e          move    a14,@ballptsforshot
         0000ec90 00000000! 
    3647                    
    3648 0000ecb0     1bc0          movk    SHOOTDESP2_SEQ,a0       ;Heave
    3649 0000ecc0     07ae          move    @game_time,a14,L
         0000ecd0 00000000! 
    3650 0000ecf0     0b4e          cmpi    0500H,a14
         0000ed00     faff  
    3651 0000ed10     c407          jrlt    uefdheave                       ;Do it
    3652                    
    3653 0000ed20     05a0          move    @PCNT,a0
         0000ed30 00000000! 
    3654 0000ed50                   ANDK    1,a0
    3655 0000ed70     2420          sll     1,a0
    3656 0000ed80     13a0          addk    SHOOTDESP_SEQ,a0
    3657                    
    3658 0000ed90           uefdheave
    3659 0000ed90     b5ae          move    *a13(plyr_newdir),a14
         0000eda0     03e0  
    3660 0000edb0     b1cd          move    a14,*a13(plyr_dir)
         0000edc0     03d0  
    3661 0000edd0     09ce          movi    -1,a14
         0000ede0     ffff  
    3662 0000edf0     b1cd          move    a14,*a13(plyr_newdir)
         0000ee00     03e0  
    3663 0000ee10     c000          jruc    uefdsseq
         0000ee20     0094  
    3664                    
    3665 0000ee30           uefdblk
    3666 0000ee30     b5a0          move    *a13(plyr_rcvpass),a0
         0000ee40     0230  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   86

    3667 0000ee50     c700          jrgt    uefdx                   ;Waiting on pass?
         0000ee60     0094  
    3668                    
    3669 0000ee70     05ae          move    @ballpnum,a14
         0000ee80 00000000! 
    3670 0000eea0     ce42          jrn     uefdinair
    3671                    
    3672 0000eeb0     24ae          sll     5,a14                   ;*32
    3673 0000eec0     0b2e          addi    plyrproc_t,a14
         0000eed0 00000630- 
    3674 0000eef0     87ce          move    *a14,a14,L
    3675 0000ef00     b5c0          move    *a14(plyr_seqflgs),a0
         0000ef10     0180  
    3676 0000ef20     1ec0          btst    SHOOT_B,a0
    3677 0000ef30     cb39          jrnz    uefdinair
    3678                    
    3679                    
    3680 0000ef40     b700          move    *a8(OXVEL),a0,L
         0000ef50     0020  
    3681 0000ef60     2be0          sra     1,a0
    3682 0000ef70     b208          move    a0,*a8(OXVEL),L
         0000ef80     0020  
    3683 0000ef90     b700          move    *a8(OYVEL),a0,L
         0000efa0     0040  
    3684 0000efb0     2be0          sra     1,a0
    3685 0000efc0     b208          move    a0,*a8(OYVEL),L
         0000efd0     0040  
    3686 0000efe0     b700          move    *a8(OZVEL),a0,L
         0000eff0     0060  
    3687 0000f000     2be0          sra     1,a0
    3688 0000f010     b208          move    a0,*a8(OZVEL),L
         0000f020     0060  
    3689                    
    3690 0000f030     07a5          move    @ballobj_p,a5,L
         0000f040 00000000! 
    3691 0000f060     b4a6          move    *a5(OXPOS),a6
         0000f070     0090  
    3692 0000f080     10c6          addk    6,a6
    3693 0000f090     b4a7          move    *a5(OZPOS),a7
         0000f0a0     00d0  
    3694 0000f0b0                   PUSH    A0
    3695 0000f0c0     0d3f          callr   seekdirdist_obxz128
         0000f0d0     153e  
    3696 0000f0e0     b00d          move    a0,*a13(plyr_newdir)    ;Turn toward ball
         0000f0f0     03e0  
    3697 0000f100                   PULL    A0
    3698 0000f110     1fc0          btst    DUNK_B,a0
    3699 0000f120     ca63          jrz     uefdblkd
    3700 0000f130     18e0          movk    7,a0
    3701 0000f140     0d5f          calla   rndrng0
         0000f150 00024930' 
    3702 0000f170     24a0          sll     5,a0
    3703 0000f180     0b20          addi    blktype_t,a0
         0000f190 0000f1d0' 
    3704 0000f1b0     8600          move    *a0,a0,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   87

    3705 0000f1c0     c05a          jruc    uefdsseq
    3706                    
    3707 0000f1d0           blktype_t
    3708 0000f1d0 00000011          .long   BLOCK_SEQ,BLOCK_SEQ,BLOCK_SEQ,BLOCK_SEQ
    3709 0000f250 00000014          .long   REBOUND_SEQ,BLOCKREJ_SEQ
    3710 0000f290 00000014          .long   REBOUND_SEQ,FASTBLOCKREJ_SEQ
    3711                    
    3712                    
    3713 0000f2d0     07a5  uefdinair       move    @ballobj_p,a5,L
         0000f2e0 00000000! 
    3714                    
    3715 0000f300     b4a1          move    *a5(OYPOS),a1
         0000f310     00b0  
    3716 0000f320     0b41          cmpi    -20,a1
         0000f330     0013  
    3717 0000f340     c535          jrge    uefdfaceb                       ;Ball close to gnd?
    3718                    
    3719 0000f350     b6a6          move    *a5(OXVAL),a6,L
         0000f360     0080  
    3720 0000f370     b6ae          move    *a5(OXANI),a14,L
         0000f380     01e0  
    3721 0000f390     41c6          add     a14,a6
    3722 0000f3a0     b6a7          move    *a5(OZVAL),a7,L
         0000f3b0     00c0  
    3723                    
    3724 0000f3c0     05ae          move    @ballpnum,a14
         0000f3d0 00000000! 
    3725 0000f3f0     c509          jrge    uefdchkdist             ;Other team has ball?
    3726                    
    3727 0000f400     1a80          movk    20,a0
    3728 0000f410     b6a1          move    *a5(OXVEL),a1,L
         0000f420     0020  
    3729 0000f430     5c01          mpys    a0,a1
    3730 0000f440     4026          add     a1,a6
    3731 0000f450     b6a1          move    *a5(OZVEL),a1,L
         0000f460     0060  
    3732 0000f470     5c01          mpys    a0,a1
    3733 0000f480     4027          add     a1,a7
    3734                    
    3735 0000f490           uefdchkdist
    3736 0000f490     2a06          sra     16,a6
    3737 0000f4a0     2a07          sra     16,a7
    3738 0000f4b0     0d3f          callr   seekdirdist_obxz128
         0000f4c0     14ff  
    3739 0000f4d0     b00d          move    a0,*a13(plyr_newdir)    ;Turn where ball is headed
         0000f4e0     03e0  
    3740 0000f4f0     0b41          cmpi    120,a1
         0000f500     ff87  
    3741 0000f510     c524          jrge    uefdblkd                        ;Too far to jump?
    3742                    
    3743 0000f520     1820          movk    1,a0                    ;50%
    3744 0000f530     05a1          move    @ballpnum,a1
         0000f540 00000000! 
    3745 0000f560     c505          jrge    uefddornd
    3746                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   88

    3747 0000f570     05ae          move    @ballgoaltcnt,a14
         0000f580 00000000! 
    3748 0000f5a0     c60b          jrle    uefddorb                        ;Do rebound?
    3749                    
    3750 0000f5b0     1820          movk    1,a0                    ;50%
    3751 0000f5c0     0d3f  uefddornd       callr   rnd
         0000f5d0     1527  
    3752 0000f5e0     cb09          jrnz    uefddorej
    3753                    
    3754 0000f5f0     b7ae          move    *a13(plyr_attrib_p),a14,L
         0000f600     0150  
    3755 0000f610     b5c0          move    *a14(PAT_DEFSKILL),a0
         0000f620     0050  
    3756 0000f630     0b40          cmpi    5,a0
         0000f640     fffa  
    3757 0000f650     c402          jrlt    uefddorej
    3758                    
    3759 0000f660     1a80  uefddorb        movk    REBOUND_SEQ,a0
    3760 0000f670     c00f          jruc    uefdsseq
    3761 0000f680     1a40  uefddorej       movk    BLOCKREJ_SEQ,a0
    3762 0000f690     c00d          jruc    uefdsseq
    3763                    
    3764                    
    3765 0000f6a0     07a5  uefdfaceb       move    @ballobj_p,a5,L
         0000f6b0 00000000! 
    3766 0000f6d0     b4a6          move    *a5(OXPOS),a6
         0000f6e0     0090  
    3767 0000f6f0     10c6          addk    6,a6
    3768 0000f700     b4a7          move    *a5(OZPOS),a7
         0000f710     00d0  
    3769 0000f720     0d3f          callr   seekdirdist_obxz128
         0000f730     14d8  
    3770 0000f740     b00d          move    a0,*a13(plyr_newdir)    ;Turn toward ball
         0000f750     03e0  
    3771                    
    3772 0000f760     1a20  uefdblkd        movk    BLOCK_SEQ,a0
    3773                    
    3774                    
    3775 0000f770     b5a7  uefdsseq        move    *a13(plyr_dir),a7
         0000f780     03d0  
    3776 0000f790     0d3f          callr   plyr_setseq
         0000f7a0     fab5  
    3777                    
    3778                    
    3779 0000f7b0           uefdx   PULL    a6,a7
    3780 0000f7d0     0960          rets
    3781                    
    3782                    
    3783                    
    3784                    
    3785 0000f7e0           uefd3pt_t
    3786 0000f7e0     00c1          .word   193
    3787 0000f7f0     00bb          .word   187,175,166,158,153,144,138,130
    3788 0000f870     007d          .word   125,120,115,110,106,102,100,98
    3789 0000f8f0     0060          .word   96,94,92,89,86,84,82,80
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   89

    3790 0000f970     0050          .word   80,79,79,79,78,78,78,77
    3791 0000f9f0     004d          .word   77,77,77,77,77,77,77,78
    3792 0000fa70     004e          .word   78,79,81,82,83,84,85,86
    3793 0000faf0     0057          .word   87,88,89,90,91,92,94,95
    3794 0000fb70     0060          .word   96,98,100,104,108,113,116,120
    3795 0000fbf0     007c          .word   124,129,133,138,141,145,148,153
    3796 0000fc70     009d          .word   157,162,166,175,180,186,191,198
    3797 0000fcf0     00cc          .word   204,214,230,230
    3798                    
    3799                    
    3800                    
    3801 0000fd30            SUBR   plyr_shoot
    3802                    
    3803 0000fd30                   PUSH    a6,a7,a9,a10,a11
    3804                    
    3805                    
    3806 0000fd50     b5a0          move    *a13(plyr_num),a0
         0000fd60     0100  
    3807 0000fd70     05a1          move    @ballpnum,a1
         0000fd80 00000000! 
    3808 0000fda0     4801          cmp     a0,a1
    3809 0000fdb0     cb00          jrne    zvnlx
         0000fdc0     03a4  
    3810                    
    3811                    
    3812                    
    3813 0000fdd0     05ae          move    @plyrnumonfire,a14
         0000fde0 00000000! 
    3814 0000fe00     480e          cmp     a0,a14
    3815 0000fe10     cb06          jrne    zvnlcold
    3816 0000fe20     09e0          movi    fball_snd,a0
         0000fe30 00000480' 
    3817 0000fe50     0d5f          calla   snd_play1
         0000fe60 00000000! 
    3818 0000fe80           zvnlcold
    3819                    
    3820 0000fe80     0d3f          callr   plyr_setballxyz
         0000fe90     07a5  
    3821                    
    3822 0000fea0     b5a6          move    *a13(plyr_ohoopx),a6
         0000feb0     02d0  
    3823 0000fec0     09c7          movi    CZMID,a7
         0000fed0     0492  
    3824 0000fee0     0d3f          callr   seekdirdist_obxz128
         0000fef0     145c  
    3825 0000ff00     4c0a          move    a0,a10
    3826 0000ff10     4c2b          move    a1,a11                  ;A11=Hoop distance
    3827                    
    3828 0000ff20     b7a7          move    *a13(plyr_attrib_p),a7,L
         0000ff30     0150  
    3829 0000ff40     b4e9          move    *a7(PAT_SHOTSKILL),a9
         0000ff50     0030  
    3830                    
    3831                    
    3832                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   90

    3833 0000ff60     05a0          move    @ballptsforshot,a0
         0000ff70 00000000! 
    3834 0000ff90     0b40          cmpi    3,a0
         0000ffa0     fffc  
    3835 0000ffb0     cb05          jrnz    zvnloui
    3836                    
    3837 0000ffc0     0b49          cmpi    1025,a9
         0000ffd0     fbfe  
    3838 0000ffe0     c702          jrgt    zvnloui
    3839 0000fff0     0be9          subi    200,a9
         00010000     ff37  
    3840                    
    3841 00010010           zvnloui
    3842                    
    3843 00010010     05a0          move    @reduce_3ptr,a0
         00010020 00000000- 
    3844 00010040     ca02          jrz     zvnlno3
    3845 00010050     0be9          subi    15,a9                   ;150?
         00010060     fff0  
    3846 00010070           zvnlno3
    3847 00010070     0b4b          cmpi    70h,a11
         00010080     ff8f  
    3848 00010090     c702          jrgt    zvnlnotshort
    3849 000100a0     0b09          addi    250,a9
         000100b0     00fa  
    3850 000100c0           zvnlnotshort
    3851                    
    3852 000100c0     0b4b          cmpi    0130H,a11
         000100d0     fecf  
    3853 000100e0     c402          jrlt    zvnlnotlong
    3854 000100f0     0be9          subi    990,a9                  ;680 ;790 ;890
         00010100     fc21  
    3855 00010110           zvnlnotlong
    3856                    
    3857 00010110     b5a4          move    *a13(plyr_num),a4       ;>Get opponents dir/dist
         00010120     0100  
    3858 00010130     2fe4          srl     1,a4
    3859 00010140     182e          movk    1,a14
    3860 00010150     57c4          xor     a14,a4
    3861 00010160     24c4          sll     6,a4                    ;*64
    3862 00010170     0b24          addi    plyrobj_t,a4
         00010180 000005b0- 
    3863 000101a0     9680          move    *a4+,a0,L
    3864 000101b0     b403          move    *a0(OYPOS),a3
         000101c0     00b0  
    3865 000101d0     0d3f          callr   seekdirdist_obob128
         000101e0     1426  
    3866                    
    3867 000101f0     0b41          cmpi    40,a1                   ;35
         00010200     ffd7  
    3868 00010210     c702          jrgt    zvnl1far2                       ;Opponent too far?
    3869                    
    3870 00010220     0be9          subi    240,a9                  ;-24%   ;10%
         00010230     ff0f  
    3871                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   91

    3872 00010240     0b41  zvnl1far2       cmpi    75,a1                   ;70
         00010250     ffb4  
    3873 00010260     c715          jrgt    zvnl1far                        ;Opponent too far?
    3874                    
    3875 00010270     4540          sub     a10,a0
    3876 00010280     0380          abs     a0
    3877 00010290     0b40          cmpi    040H,a0
         000102a0     ffbf  
    3878 000102b0     c603          jrle    zvnl1dsml
    3879 000102c0     0be0          subi    080H,a0
         000102d0     ff7f  
    3880 000102e0     0380          abs     a0
    3881 000102f0     1680  zvnl1dsml       subk    20,a0
    3882 00010300     c50b          jrge    zvnl1far                        ;Not between me and hoop?
    3883                    
    3884 00010310     2441          sll     2,a1                    ;*4
    3885 00010320     0be1          subi    390,a1                  ;-320 to -40    ;320
         00010330     fe79  
    3886                    
    3887 00010340     b502          move    *a8(OYPOS),a2
         00010350     00b0  
    3888 00010360     4462          sub     a3,a2
    3889 00010370     c603          jrle    zvnl1ihi                        ;Shooter higher?
    3890 00010380     1102          addk    8,a2
    3891 00010390     5c41          mpys    a2,a1
    3892 000103a0     2ba1          sra     3,a1                    ;/8
    3893                    
    3894 000103b0     4029  zvnl1ihi        add     a1,a9                   ;Decrease accuracy
    3895 000103c0           zvnl1far
    3896                    
    3897 000103c0     9680          move    *a4+,a0,L
    3898 000103d0     0d3f          callr   seekdirdist_obob128
         000103e0     1406  
    3899                    
    3900 000103f0     0b41          cmpi    40,a1
         00010400     ffd7  
    3901 00010410     c702          jrgt    zvnl2far2                       ;Opponent too far?
    3902                    
    3903 00010420     0be9          subi    240,a9                  ;-25%
         00010430     ff0f  
    3904                    
    3905 00010440     0b41  zvnl2far2       cmpi    75,a1
         00010450     ffb4  
    3906 00010460     c715          jrgt    zvnl2far                        ;Opponent too far?
    3907                    
    3908 00010470     4540          sub     a10,a0
    3909 00010480     0380          abs     a0
    3910 00010490     0b40          cmpi    040H,a0
         000104a0     ffbf  
    3911 000104b0     c603          jrle    zvnl2dsml
    3912 000104c0     0be0          subi    080H,a0
         000104d0     ff7f  
    3913 000104e0     0380          abs     a0
    3914 000104f0     1680  zvnl2dsml       subk    20,a0
    3915 00010500     c50b          jrge    zvnl2far                        ;Not between me and hoop?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   92

    3916                    
    3917 00010510     2441          sll     2,a1                    ;*4
    3918 00010520     0be1          subi    390,a1                  ;-320 to -40      ;320
         00010530     fe79  
    3919                    
    3920 00010540     b502          move    *a8(OYPOS),a2
         00010550     00b0  
    3921 00010560     4462          sub     a3,a2
    3922 00010570     c603          jrle    zvnl2ihi                        ;Shooter higher?
    3923 00010580     1102          addk    8,a2
    3924 00010590     5c41          mpys    a2,a1
    3925 000105a0     2ba1          sra     3,a1                    ;/8
    3926                    
    3927 000105b0     4029  zvnl2ihi        add     a1,a9                   ;Decrease accuracy
    3928 000105c0           zvnl2far
    3929                    
    3930 000105c0     4d6e          move    a11,a14
    3931 000105d0     242e          sll     1,a14                   ;*2
    3932 000105e0     45c9          sub     a14,a9
    3933 000105f0     0b49          cmpi    50,a9
         00010600     ffcd  
    3934 00010610     c502          jrge    zvnlaccok
    3935 00010620     09c9          movi    50,a9
         00010630     0032  
    3936 00010640           zvnlaccok
    3937                    
    3938                    
    3939                    
    3940                    
    3941                    
    3942 00010640     b5a0          move    *a13(plyr_num),a0
         00010650     0100  
    3943 00010660     2480          sll     4,a0                    ;x 16
    3944 00010670     0b20          addi    brick_count,a0
         00010680 00000000! 
    3945 000106a0     8401          move    *a0,a1                  ;brick_count++
    3946 000106b0     0b41          cmpi    3,a1
         000106c0     fffc  
    3947 000106d0     c402          jrlt    zvnlnohelping
    3948 000106e0     09c9          movi    990,a9
         000106f0     03de  
    3949 00010700           zvnlnohelping
    3950                    
    3951                    
    3952 00010700     b5a1          move    *a13(plyr_ptsdown),a1   ;0AdHjust shot %
         00010710     0440  
    3953 00010720     4c22          move    a1,a2
    3954 00010730     1a80          movk    20,a0                   ;20
    3955 00010740     5c01          mpys    a0,a1
    3956 00010750     4029          add     a1,a9                   ;+/-2% per point difference
    3957 00010760     0b49          cmpi    50,a9
         00010770     ffcd  
    3958 00010780     c502          jrge    zvnlminok
    3959 00010790     09c9          movi    50,a9
         000107a0     0032  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   93

    3960 000107b0           zvnlminok
    3961                    
    3962                    
    3963                    
    3964 000107b0     09c0          movi    55,a0                   ;80
         000107c0     0037  
    3965 000107d0     0d5f          calla   RNDPER
         000107e0 00000000! 
    3966 00010800     c205          jrls    nomis
    3967 00010810     b5a1          move    *a13(plyr_ptsdown),a1   ;0AdHjust shot %
         00010820     0440  
    3968 00010830     c702          jrgt    nomis
    3969 00010840     09c9          movi    150,a9
         00010850     0096  
    3970 00010860           nomis
    3971 00010860     07a1          move    @game_time,a1,L
         00010870 00000000! 
    3972 00010890     0b41          cmpi    0400H,a1
         000108a0     fbff  
    3973 000108b0     c74d          jrgt    zvnlnohelp
    3974                    
    3975 000108c0     4c40          move    a2,a0
    3976 000108d0     cb08          jrnz    zvnltryh
    3977                    
    3978 000108e0     05a1          move    @gmqrtr,a1
         000108f0 00000000! 
    3979 00010910     1461          subk    3,a1
    3980 00010920     c446          jrlt    zvnlnohelp
    3981 00010930     09c9          movi    50,a9                   ;Last second shot of a tie game
         00010940     0032  
    3982                                                            ;should not go in at the game buzzer
    3983 00010950     c043          jruc    zvnlnohelp                      ;Not if tied
    3984                    
    3985 00010960     c70f  zvnltryh        jrgt    zvnltryhelp
    3986 00010970     0b40          cmpi    -5,a0
         00010980     0004  
    3987 00010990     c73f          jrgt    zvnlnohelp                      ;Winning by less than 5
    3988                    
    3989 000109a0     05a1          move    @gmqrtr,a1
         000109b0 00000000! 
    3990 000109d0     1461          subk    3,a1
    3991 000109e0     c43a          jrlt    zvnlnohelp
    3992                    
    3993                    
    3994 000109f0     07a1          move    @game_time,a1,L
         00010a00 00000000! 
    3995 00010a20     0b41          cmpi    0200H,a1
         00010a30     fdff  
    3996 00010a40     c72c          jrgt    zvnllosingbige
    3997                    
    3998 00010a50     c013          jruc    zvnlwilltie
    3999                    
    4000 00010a60           zvnltryhelp
    4001                    
    4002                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   94

    4003 00010a60     4c40          move    a2,a0
    4004                    
    4005 00010a70     05ae          move    @ballptsforshot,a14
         00010a80 00000000! 
    4006 00010aa0     05a1          move    @gmqrtr,a1
         00010ab0 00000000! 
    4007 00010ad0     1461          subk    3,a1
    4008 00010ae0     c50d          jrge    zvnlendg                        ;End game help?
    4009                    
    4010 00010af0     14a0          subk    5,a0
    4011 00010b00     c705          jrgt    zvnllosingbig
    4012                    
    4013 00010b10     484e          cmp     a2,a14
    4014 00010b20     ca06          jreq    zvnlwilltie             ;This shot would tie up score!
    4015                    
    4016 00010b30     09c3          movi    100,a3                  ;Losing by 1-5
         00010b40     0064  
    4017 00010b50     c020          jruc    zvnlchkper
    4018 00010b60           zvnllosingbig
    4019 00010b60     09c3          movi    120,a3                  ;Losing by more than 5 points
         00010b70     0078  
    4020 00010b80     c01d          jruc    zvnlchkper
    4021 00010b90           zvnlwilltie
    4022 00010b90     09c3          movi    120,a3                  ;This will tie game
         00010ba0     0078  
    4023 00010bb0     c01a          jruc    zvnlchkper
    4024                    
    4025 00010bc0           zvnlendg
    4026 00010bc0     1480          subk    4,a0
    4027 00010bd0     c513          jrge    zvnllosingbige
    4028                    
    4029 00010be0     484e          cmp     a2,a14
    4030 00010bf0     ca14          jrz     zvnlwilltiee            ;This shot would tie up score!
    4031                    
    4032 00010c00     b5ae          move    *a13(plyr_num),a14
         00010c10     0100  
    4033 00010c20     05a0          move    @PSTATUS,a0
         00010c30 00000060- 
    4034 00010c50     4bc0          btst    a14,a0
    4035 00010c60     cb07          jrnz    zvnlokok
    4036 00010c70                   XORK    1,a14
    4037 00010c90     4bc0          btst    a14,a0
    4038 00010ca0     cb03          jrnz    zvnlokok
    4039 00010cb0     09c3          movi    100,a3                  ;This will tie game at end
         00010cc0     0064  
    4040 00010cd0     c008          jruc    zvnlchkper
    4041 00010ce0           zvnlokok
    4042                    
    4043                    
    4044 00010ce0     09c3          movi    380,a3                  ;Losing by 1-5
         00010cf0     017c  
    4045 00010d00     c005          jruc    zvnlchkper
    4046 00010d10           zvnllosingbige                          ;Losing by more than 5 points
    4047 00010d10     09c3          movi    300,a3
         00010d20     012c  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   95

    4048 00010d30     c002          jruc    zvnlchkper
    4049 00010d40           zvnlwilltiee
    4050 00010d40     09c3          movi    800,a3                  ;This will tie game at end
         00010d50     0320  
    4051                    
    4052 00010d60     4869  zvnlchkper      cmp     a3,a9
    4053 00010d70     c501          jrge    zvnlnohelp
    4054 00010d80     4c69          move    a3,a9
    4055 00010d90           zvnlnohelp
    4056                    
    4057                            
    4058                    
    4059 00010d90     07a7          move    @ballobj_p,a7,L         ;A7=*Ball obj
         00010da0 00000000! 
    4060 00010dc0     b6e0          move    *a7(OPLINK),a0,L
         00010dd0     01a0  
    4061 00010de0     b40e          move    *a0(ball_onfire),a14
         00010df0     01a0  
    4062 00010e00     ca07          jrz     zvnlnofire
    4063                    
    4064 00010e10     0b09          addi    750,a9                  ;Player is on fire!
         00010e20     02ee  
    4065                    
    4066 00010e30     0b4b          cmpi    0148H,a11
         00010e40     feb7  
    4067 00010e50     c402          jrlt    zvnlnofire
    4068                    
    4069 00010e60     09c9          movi    100,a9                  ;Player is on fire!
         00010e70     0064  
    4070                    
    4071 00010e80           zvnlnofire
    4072                    
    4073 00010e80     b6e3          move    *a7(OIMG),a3,L          ;0CHonvert ball from player relative
         00010e90     0170  
    4074 00010ea0     b463          move    *a3(IANIOFFX),a3
         00010eb0     0020  
    4075 00010ec0     2603          sll     16,a3
    4076 00010ed0     b6ee          move    *a7(OXANI),a14,L
         00010ee0     01e0  
    4077 00010ef0     b267          move    a3,*a7(OXANI),L
         00010f00     01e0  
    4078 00010f10     45c3          sub     a14,a3                  ;Ani difference
    4079                    
    4080 00010f20     2aa3          sra     16-5,a3
    4081 00010f30     b4ee          move    *a7(OZPOS),a14          ;894 to 1379 (Z range 486)
         00010f40     00d0  
    4082 00010f50     0b0e          addi    (819-GZBASE),a14        ;768 to ?
         00010f60     ffb5  
    4083 00010f70     5dc3          mpys    a14,a3
    4084 00010f80     4c6e          move    a3,a14
    4085 00010f90     2bce          sra     2,a14                   ;/4
    4086 00010fa0     45c3          sub     a14,a3
    4087 00010fb0     2bee          sra     1,a14                   ;/2
    4088 00010fc0     45c3          sub     a14,a3
    4089 00010fd0     2423          sll     16-(14+1),a3            ;*64k /16k /2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   96

    4090                    
    4091                    
    4092 00010fe0     b5a0          move    *a13(plyr_seq),a0       ;0AdHjust pos for desp shots
         00010ff0     0170  
    4093 00011000     0b40          cmpi    DUNKLAY5_SEQ,a0
         00011010     ff7b  
    4094 00011020     cb09          jrnz    zvnlck2
    4095 00011030     09e3          movi    [-10,0],a3
         00011040 fff60000  
    4096 00011060     09ee          movi    [7,0],a14
         00011070 00070000  
    4097 00011090     0b09          addi    760,a9                  ;720
         000110a0     02f8  
    4098 000110b0     c046          jruc    zvnlfixperc
    4099 000110c0           zvnlck2
    4100 000110c0     0b40          cmpi    DUNKLAY4_SEQ,a0
         000110d0     ff7c  
    4101 000110e0     cb09          jrnz    zvnlck3
    4102 000110f0     09e3          movi    [-1,0],a3
         00011100 ffff0000  
    4103 00011120     09ee          movi    [-1,0],a14
         00011130 ffff0000  
    4104 00011150     0b09          addi    760,a9
         00011160     02f8  
    4105 00011170     c03a          jruc    zvnlfixperc
    4106 00011180           zvnlck3
    4107 00011180     0b40          cmpi    DUNKLAY3_SEQ,a0
         00011190     ff7d  
    4108 000111a0     cb09          jrnz    zvnlck4
    4109 000111b0     09e3          movi    [-10,0],a3
         000111c0 fff60000  
    4110 000111e0     09ee          movi    [10,0],a14
         000111f0 000a0000  
    4111 00011210     0b09          addi    760,a9
         00011220     02f8  
    4112 00011230     c02e          jruc    zvnlfixperc
    4113 00011240           zvnlck4
    4114                    
    4115 00011240     0b40          cmpi    DUNKLAY2_SEQ,a0
         00011250     ff7e  
    4116 00011260     cb0e          jrnz    zvnlck6
    4117 00011270     09e3          movi    [10,0],a3
         00011280 000a0000  
    4118 000112a0     0b09          addi    760,a9
         000112b0     02f8  
    4119                    
    4120 000112c0     b5ae          move    *a13(plyr_num),a14
         000112d0     0100  
    4121 000112e0     0b4e          cmpi    2,a14
         000112f0     fffd  
    4122 00011300     c427          jrlt    zvnlok1
    4123 00011310     09e3          movi    [-8,0],a3
         00011320 fff80000  
    4124 00011340     c023          jruc    zvnlok1
    4125                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   97

    4126 00011350           zvnlck6
    4127 00011350     0b40          cmpi    DUNKLAY3A_SEQ,a0
         00011360     ff89  
    4128 00011370     cb09          jrnz    zvnlck6a
    4129 00011380     09e3          movi    [-10,0],a3
         00011390 fff60000  
    4130 000113b0     09ee          movi    [5,0],a14
         000113c0 00050000  
    4131 000113e0     0b09          addi    760,a9
         000113f0     02f8  
    4132 00011400     c011          jruc    zvnlfixperc
    4133 00011410           zvnlck6a
    4134 00011410     0b40          cmpi    DUNKLAY6_SEQ,a0
         00011420     ff7a  
    4135 00011430     cb1f          jrnz    zvnlck7
    4136 00011440     09e3          movi    [15,0],a3
         00011450 000f0000  
    4137 00011470     0b09          addi    760,a9
         00011480     02f8  
    4138 00011490     b5ae          move    *a13(plyr_num),a14
         000114a0     0100  
    4139 000114b0     0b4e          cmpi    2,a14
         000114c0     fffd  
    4140 000114d0     c50a          jrge    zvnlok1
    4141 000114e0     09e3          movi    [-15,0],a3
         000114f0 fff10000  
    4142 00011510     c006          jruc    zvnlok1
    4143                    
    4144 00011520           zvnlfixperc
    4145 00011520     b5a0          move    *a13(plyr_seqdir),a0
         00011530     0190  
    4146 00011540     0b40          cmpi    5,a0
         00011550     fffa  
    4147 00011560     c501          jrge    zvnlok1
    4148 00011570     4dc3          move    a14,a3
    4149 00011580           zvnlok1
    4150                    
    4151 00011580     09c0          movi    750,a0                  ;700
         00011590     02ee  
    4152 000115a0     0d5f          calla   RNDPER
         000115b0 00000000! 
    4153 000115d0     c36e          jrhi    zvnlfixde
    4154                    
    4155                    
    4156 000115e0     09c0          movi    TSEC*2-20,a0
         000115f0     0056  
    4157 00011600     0d3f          callr   plyr_setshtdly          ;Don't block layups!
         00011610     1239  
    4158 00011620     c069          jruc    zvnlfixde
    4159                    
    4160 00011630           zvnlck7
    4161 00011630     0b40          cmpi    LAYUPREB_SEQ,a0
         00011640     ffe3  
    4162 00011650     ca06          jreq    zvnlly                  ;Layup?
    4163 00011660     0b40          cmpi    DUNKLAY_SEQ,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   98

         00011670     ff7f  
    4164 00011680     ca03          jreq    zvnlly                  ;Layup?
    4165 00011690     0b40          cmpi    LAYUP_SEQ,a0            ;Put back layup
         000116a0     ffe4  
    4166 000116b0     cb32          jrne    zvnlnoly0
    4167 000116c0           zvnlly
    4168 000116c0     0d3f          callr   lay_perc
         000116d0     0018  
    4169                    
    4170 000116e0     b5a0          move    *a13(plyr_seqdir),a0
         000116f0     0190  
    4171 00011700     24a0          sll     5,a0
    4172 00011710     0b20          addi    adjst_t,a0
         00011720 00011760' 
    4173 00011740     8603          move    *a0,a3,L
    4174                    
    4175                    
    4176 00011750     c056          jruc    zvnlfixde
    4177                    
    4178 00011760 00000000  adjst_t .long   0,[7,0],[11,0],[6,0],[0,0],[-8,0],[-8,0],[-8,0]
    4179 00011860           lay_perc
    4180 00011860     09c9          movi    870,a9                  ;800
         00011870     0366  
    4181                    
    4182 00011880     b5a1          move    *a13(plyr_ptsdown),a1   ;0AdHjust shot %
         00011890     0440  
    4183 000118a0     c708          jrgt    zvnlnoms
    4184                    
    4185                    
    4186 000118b0     09c0          movi    100,a0
         000118c0     0064  
    4187 000118d0     0d5f          calla   RNDPER
         000118e0 00000000! 
    4188 00011900     c202          jrls    zvnlnoms
    4189 00011910     09c9          movi    450,a9                  ;250
         00011920     01c2  
    4190 00011930           zvnlnoms
    4191 00011930     09c0          movi    700,a0                  ;650
         00011940     02bc  
    4192 00011950     0d5f          calla   RNDPER
         00011960 00000000! 
    4193 00011980     c304          jrhi    zvnlxx
    4194                            
    4195 00011990     09c0          movi    TSEC*2,a0
         000119a0     006a  
    4196 000119b0     0d3f          callr   plyr_setshtdly          ;Don't block layups!
         000119c0     11fe  
    4197 000119d0     0960  zvnlxx  rets
    4198                    
    4199 000119e0           zvnlnoly0
    4200 000119e0     b5ae          move    *a13(plyr_seqflgs),a14  ;0AdHjust pos for desp shots
         000119f0     0180  
    4201 00011a00     1e0e          btst    LAYUP_B,a14
    4202 00011a10     ca03          jrz     zvnlnoly
    4203 00011a20     0d3f          callr   lay_perc
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE   99

         00011a30     ffe2  
    4204 00011a40     c027          jruc    zvnlfixde
    4205                    
    4206 00011a50           zvnlnoly
    4207 00011a50     0b40          cmpi    HOOK_SEQ,a0
         00011a60     ffe6  
    4208 00011a70     ca03          jreq    zvnlextra
    4209 00011a80     0b40          cmpi    HOOK2_SEQ,a0
         00011a90     ffe5  
    4210 00011aa0     cb0c          jrne    zvnlnoextra
    4211 00011ab0           zvnlextra
    4212                    
    4213 00011ab0     09c9          movi    600,a9                  ;750
         00011ac0     0258  
    4214                    
    4215 00011ad0                   PUSH    a0
    4216 00011ae0     09c0          movi    120,a0
         00011af0     0078  
    4217 00011b00     0d5f          calla   RNDPER
         00011b10 00000000! 
    4218 00011b30     c202          jrls    zvnlnoms1
    4219 00011b40     09c9          movi    250,a9
         00011b50     00fa  
    4220 00011b60           zvnlnoms1
    4221 00011b60                   PULL    a0
    4222                    
    4223 00011b70           zvnlnoextra
    4224                    
    4225 00011b70     17a0          subk    SHOOTDESP_SEQ,a0
    4226 00011b80     cb04          jrne    zvnlfixd2
    4227 00011b90     b4e5          move    *a7(OYPOS),a5
         00011ba0     00b0  
    4228 00011bb0     1505          subk    8,a5
    4229 00011bc0     c00d          jruc    zvnlfixdy
    4230                    
    4231 00011bd0     1420  zvnlfixd2       subk    1,a0                    ;SHOOTDESP2_SEQ
    4232 00011be0     cb05          jrne    zvnlfixd3
    4233 00011bf0     5663          clr     a3
    4234 00011c00     b4e5          move    *a7(OYPOS),a5
         00011c10     00b0  
    4235 00011c20     1485          subk    4,a5
    4236 00011c30     c006          jruc    zvnlfixdy
    4237                    
    4238 00011c40     1420  zvnlfixd3       subk    1,a0                    ;SHOOTDESP3_SEQ
    4239 00011c50     cb06          jrne    zvnlfixde
    4240 00011c60     2be3          sra     1,a3
    4241 00011c70     b4e5          move    *a7(OYPOS),a5
         00011c80     00b0  
    4242 00011c90     1445          subk    2,a5
    4243                    
    4244 00011ca0     b0a7  zvnlfixdy       move    a5,*a7(OYPOS)
         00011cb0     00b0  
    4245 00011cc0           zvnlfixde
    4246                    
    4247 00011cc0     b6ee          move    *a7(OXVAL),a14,L        ;Adjust X
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  100

         00011cd0     0080  
    4248 00011ce0     446e          sub     a3,a14
    4249 00011cf0     b3c7          move    a14,*a7(OXVAL),L
         00011d00     0080  
    4250                    
    4251 00011d10     4d43          move    a10,a3
    4252 00011d20     4d61          move    a11,a1
    4253 00011d30     2743          sll     32-6,a3
    4254 00011d40     2cc3          srl     32-6,a3
    4255 00011d50     1403          subk    020H,a3
    4256 00011d60     0383          abs     a3                      ;0-32
    4257                    
    4258 00011d70     b5ae          move    *a13(plyr_ohpdist),a14  ;distance from hoop
         00011d80     0390  
    4259 00011d90     058e          move    a14,@shot_distance
         00011da0 00000000! 
    4260 00011dc0     182e          movk    1,a14
    4261 00011dd0     058e          move    a14,@shot_percentage    ;start at 100%
         00011de0 00000000! 
    4262                    
    4263 00011e00     05ae          move    @show_shot,a14
         00011e10 00000000! 
    4264                            .ref    show_shot
    4265 00011e30     ca0c          jrz     zvnlnosp
    4266 00011e40                   PUSH    a1,a7
    4267 00011e60                   CREATE  06000H,plyr_showshotpercent
    4268 00011ee0                   PULL    a1,a7
    4269 00011f00           zvnlnosp
    4270                    
    4271 00011f00     182a          movk    1,a10                   ;A10=At hoop
    4272                    
    4273 00011f10                   PUSH    a1
    4274 00011f20     09c0          movi    16,a0
         00011f30     0010  
    4275 00011f40     0d5f          calla   RNDPER
         00011f50 00000000! 
    4276 00011f70     c201          jrls    zvnlnoflat0
    4277 00011f80     574a          clr     a10
    4278 00011f90           zvnlnoflat0
    4279 00011f90     b5ae          move    *a13(plyr_seqflgs),a14
         00011fa0     0180  
    4280 00011fb0     1e0e          btst    LAYUP_B,a14
    4281 00011fc0     ca07          jrz     zvnlnoflat
    4282 00011fd0     09c0          movi    100,a0
         00011fe0     0064  
    4283 00011ff0     0d5f          calla   RNDPER
         00012000 00000000! 
    4284 00012020     c201          jrls    zvnlnoflat
    4285 00012030     574a          clr     a10
    4286                    
    4287 00012040           zvnlnoflat
    4288 00012040                   PULL    a1
    4289                    
    4290                    
    4291                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  101

    4292 00012050     1703          subk    24,a3
    4293 00012060     c54a          jrge    zvnlathoop                      ;At bad backboard angle?
    4294                    
    4295 00012070     0b41          cmpi    100,a1
         00012080     ff9b  
    4296 00012090     c735          jrgt    zvnllongshot            ;Too far for bank?
    4297                    
    4298                    
    4299                    
    4300                    
    4301 000120a0     b5ae          move    *a13(plyr_seq),a14
         000120b0     0170  
    4302 000120c0     0b4e          cmpi    DUNKLAY5_SEQ,a14
         000120d0     ff7b  
    4303 000120e0     ca08          jrz     zvnloffbb
    4304                    
    4305                    
    4306                    
    4307 000120f0     1880          movk    4,a0                    ;20%
    4308 00012100     1103          addk    24-16,a3
    4309 00012110     c401          jrlt    zvnlfmfront
    4310 00012120     1860          movk    3,a0                    ;25%
    4311 00012130           zvnlfmfront
    4312 00012130     0d3f          callr   rndrng0
         00012140     127e  
    4313 00012150     4c00          move    a0,a0
    4314 00012160     cb3a          jrnz    zvnlathoop
    4315                    
    4316 00012170           zvnloffbb                                       ;0CHlose bank shot
    4317                    
    4318 00012170     05a0          move    @plyrnumonfire,a0
         00012180 00000000! 
    4319 000121a0     cf36          jrnn    zvnlathoop                      ;cont
    4320                    
    4321                    
    4322 000121b0           zvnlcont
    4323                    
    4324 000121b0     574a          clr     a10
    4325                    
    4326 000121c0     b4e0          move    *a7(OZPOS),a0
         000121d0     00d0  
    4327 000121e0     0be0          subi    CZMID,a0                ;Z delta
         000121f0     fb6d  
    4328 00012200     4c03          move    a0,a3
    4329 00012210     2503          sll     8,a3
    4330                    
    4331 00012220     b5a1          move    *a13(plyr_ohoopx),a1
         00012230     02d0  
    4332 00012240     b4ee          move    *a7(OXPOS),a14
         00012250     0090  
    4333 00012260     45c1          sub     a14,a1
    4334 00012270     b4ee          move    *a7(OXANI+16),a14
         00012280     01f0  
    4335 00012290     45c1          sub     a14,a1                  ;X delta
    4336 000122a0     0381          abs     a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  102

    4337 000122b0     2541          sll     8+2,a1
    4338 000122c0     0380          abs     a0
    4339 000122d0     ca01          jrz     zvnlnodiv                       ;Same Z?
    4340 000122e0     5a01          divu    a0,a1
    4341 000122f0           zvnlnodiv
    4342 000122f0     0b01          addi    512,a1                  ;2
         00012300     0200  
    4343 00012310     5823          divs    a1,a3
    4344 00012320     4c62          move    a3,a2                   ;Z
    4345                    
    4346 00012330     09c0          movi    999,a0
         00012340     03e7  
    4347 00012350     0d3f          callr   rndrng0
         00012360     125c  
    4348 00012370     4809          cmp     a0,a9
    4349 00012380     0300          jrgt    zvnlbgood
    4350                    
    4351                    
    4352 00012390           zvnlbgood
    4353 00012390     09c0          movi    -10,a0                  ;X
         000123a0     fff6  
    4354 000123b0     09c1          movi    -18,a1                  ;Y
         000123c0     ffee  
    4355 000123d0     c000          jruc    zvnlcalcshot
         000123e0     0089  
    4356                    
    4357 000123f0           zvnllongshot
    4358 000123f0     1860          movk    3,a0
    4359 00012400     0d3f          callr   rnd
         00012410     1243  
    4360 00012420     cb0e          jrnz    zvnlathoop                      ;75%?
    4361                    
    4362 00012430     09c0          movi    999,a0                  ;>Long bank shot
         00012440     03e7  
    4363 00012450     0d3f          callr   rndrng0
         00012460     124c  
    4364 00012470     4809          cmp     a0,a9
    4365 00012480     c652          jrle    zvnlmiss
    4366                    
    4367 00012490     09c0          movi    -10,a0                  ;X
         000124a0     fff6  
    4368 000124b0     09c1          movi    -30,a1                  ;Y
         000124c0     ffe2  
    4369 000124d0     5642          clr     a2                      ;Z
    4370 000124e0     1103          addk    24-16,a3
    4371 000124f0     c478          jrlt    zvnlcalcshot            ;In front of board?
    4372 00012500     c06c          jruc    zvnlgood                        ;Do good shot at hoop
    4373                    
    4374 00012510           zvnlathoop
    4375 00012510     0b49          cmpi    55,a9                   ;25
         00012520     ffc8  
    4376 00012530     c50a          jrge    zvnlnotlng
    4377 00012540     0b4b          cmpi    0148H,a11
         00012550     feb7  
    4378 00012560     c407          jrlt    zvnlnotlng
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  103

    4379                    
    4380 00012570     09c0          movi    120,a0                  ;250
         00012580     0078  
    4381 00012590     0d5f          calla   RNDPER
         000125a0 00000000! 
    4382 000125c0     c238          jrls    zvnlnoairb
    4383 000125d0     c01b          jruc    zvnlairok
    4384 000125e0           zvnlnotlng
    4385 000125e0     1be0          movk    01fH,a0                 ;3%
    4386 000125f0     0b4b          cmpi    55,a11
         00012600     ffc8  
    4387 00012610     c502          jrge    zvnlchkairb             ;Not a close shot?
    4388 00012620     09c0          movi    07fH,a0                 ;1.5%
         00012630     007f  
    4389 00012640           zvnlchkairb
    4390 00012640     0d3f          callr   rnd
         00012650     121f  
    4391 00012660     cb2e          jrnz    zvnlnoairb                      ;No air ball?
    4392                    
    4393 00012670     b5a0          move    *a13(plyr_ptsdown),a0
         00012680     0440  
    4394 00012690     1440          subk    2,a0
    4395 000126a0     c52a          jrge    zvnlnoairb                      ;Losing by 2 or more? No airball
    4396                    
    4397 000126b0     05ae          move    @plyrnumonfire,a14
         000126c0 00000000! 
    4398 000126e0     cf26          jrnn    zvnlnoairb
    4399                    
    4400                    
    4401 000126f0     b5ae          move    *a13(plyr_o1dist),a14   ;Totally open shot?
         00012700     0310  
    4402 00012710     0b4e          cmpi    50,a14
         00012720     ffcd  
    4403 00012730     c405          jrlt    zvnlairok
    4404 00012740     b5ae          move    *a13(plyr_o2dist),a14
         00012750     0330  
    4405 00012760     0b4e          cmpi    50,a14
         00012770     ffcd  
    4406 00012780     c71c          jrgt    zvnlnoairb
    4407 00012790           zvnlairok
    4408                    
    4409 00012790     09c0          movi    -1,a0
         000127a0     ffff  
    4410 000127b0     0580          move    a0,@plyrairballoff
         000127c0 000006d0- 
    4411                    
    4412 000127e0     4ce2          move    a7,a2
    4413 000127f0                   CREATE0 plyr_airballsnd
    4414 00012860     09c0          movi    -1,a0
         00012870     ffff  
    4415 00012880     0580          move    a0,@shot_percentage     ;miss
         00012890 00000000! 
    4416 000128b0     4c47          move    a2,a7
    4417                    
    4418 000128c0     1a82          movk    20,a2                   ;0AHir ball ;18
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  104

    4419 000128d0     1820          movk    1,a0
    4420 000128e0     0d3f          callr   rnd
         000128f0     11f5  
    4421 00012900     cb01          jrnz    zvnlairf
    4422 00012910     03a2          neg     a2                      ;-Z
    4423 00012920           zvnlairf
    4424                    
    4425 00012920     5600          clr     a0                      ;X
    4426 00012930     5621          clr     a1                      ;Y
    4427                    
    4428 00012940     c033          jruc    zvnlcalcshot
    4429                    
    4430                    
    4431 00012950           zvnlnoairb
    4432 00012950     09c0          movi    999,a0                  ;>Shoot at hoop
         00012960     03e7  
    4433 00012970     0d3f          callr   rndrng0
         00012980     11fa  
    4434 00012990     4809          cmp     a0,a9
    4435 000129a0     c722          jrgt    zvnlgood
    4436                    
    4437 000129b0           zvnlmiss
    4438 000129b0     5600          clr     a0
    4439 000129c0     0580          move    a0,@shot_percentage     ;miss
         000129d0 00000000! 
    4440                    
    4441 000129f0     1be0          movk    01fH,a0                 ;Miss
    4442 00012a00     0d3f          callr   rnd
         00012a10     11e3  
    4443 00012a20     2480          sll     4,a0
    4444 00012a30     0b20          addi    zvnlmisszx_t,a0
         00012a40 00013890' 
    4445 00012a60     8405          move    *a0,a5
    4446 00012a70     b403          move    *a0(8*16),a3
         00012a80     0080  
    4447                    
    4448 00012a90     1820          movk    1,a0                    ;50%
    4449 00012aa0     0d3f          callr   rnd
         00012ab0     11d9  
    4450 00012ac0     cb05          jrnz    zvnlmiss2
    4451                    
    4452 00012ad0     1840          movk    2,a0                    ;More towards rim edge
    4453 00012ae0     0d3f          callr   rndrng0
         00012af0     11e3  
    4454 00012b00     10e0          addk    7,a0
    4455 00012b10     c004          jruc    zvnlmiss3
    4456 00012b20           zvnlmiss2
    4457 00012b20     1860          movk    3,a0                    ;Regular miss (they go in a fair amount)
    4458 00012b30     0d3f          callr   rnd
         00012b40     11d0  
    4459 00012b50     10c0          addk    6,a0
    4460 00012b60           zvnlmiss3
    4461 00012b60     5c03          mpys    a0,a3
    4462 00012b70     5c05          mpys    a0,a5
    4463 00012b80     4c60          move    a3,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  105

    4464 00012b90     4ca2          move    a5,a2
    4465 00012ba0     2a80          sra     12,a0                   ;X
    4466 00012bb0     2a82          sra     12,a2                   ;Z
    4467                    
    4468 00012bc0     c009          jruc    zvnlcyo
    4469                    
    4470                    
    4471 00012bd0     1880  zvnlgood        movk    4,a0                    ;Hit
    4472 00012be0     0d3f          callr   rndrng0
         00012bf0     11d3  
    4473 00012c00     1440          subk    2,a0
    4474 00012c10     4c02          move    a0,a2                   ;Z
    4475                    
    4476 00012c20     1880          movk    4,a0
    4477 00012c30     0d3f          callr   rndrng0
         00012c40     11ce  
    4478 00012c50     1440          subk    2,a0                    ;X
    4479                    
    4480 00012c60           zvnlcyo
    4481 00012c60     09c1          movi    -3,a1                   ;Y
         00012c70     fffd  
    4482                    
    4483                    
    4484                    
    4485 00012c80           zvnlcalcshot
    4486 00012c80     b5a3          move    *a13(plyr_ohoopx),a3
         00012c90     02d0  
    4487 00012ca0     0b43          cmpi    WRLDMID,a3
         00012cb0     dfff  
    4488 00012cc0     c401          jrlt    zvnllhoop
    4489 00012cd0     03a0          neg     a0
    4490 00012ce0     4003  zvnllhoop       add     a0,a3                   ;Add X offset
    4491 00012cf0     b4ee          move    *a7(OXPOS),a14
         00012d00     0090  
    4492 00012d10     45c3          sub     a14,a3
    4493 00012d20     b4ee          move    *a7(OXANI+16),a14
         00012d30     01f0  
    4494 00012d40     45c3          sub     a14,a3                  ;X delta
    4495                    
    4496 00012d50     09c5          movi    CZMID,a5
         00012d60     0492  
    4497 00012d70     4045          add     a2,a5
    4498 00012d80     b4ee          move    *a7(OZPOS),a14
         00012d90     00d0  
    4499 00012da0     45c5          sub     a14,a5                  ;Z delta
    4500                    
    4501 00012db0     4c22          move    a1,a2
    4502                    
    4503 00012dc0     4c64          move    a3,a4                   ;0CaHlc distance (long+short/2.667)
    4504 00012dd0     4cae          move    a5,a14
    4505 00012de0     0384          abs     a4
    4506 00012df0     038e          abs     a14
    4507 00012e00     49c4          cmp     a14,a4
    4508 00012e10     c903          jrhs    zvnlxbig
    4509 00012e20                   SWAP    a14,a4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  106

    4510 00012e50     2bee  zvnlxbig        sra     1,a14                   ;/2
    4511 00012e60     41c4          add     a14,a4
    4512 00012e70     2bce          sra     2,a14                   ;/8
    4513 00012e80     45c4          sub     a14,a4
    4514                    
    4515 00012e90     0b44          cmpi    170,a4
         00012ea0     ff55  
    4516 00012eb0     c206          jrls    zvnldistok
    4517 00012ec0     4c8e          move    a4,a14                  ;>Reduce excess
    4518 00012ed0     09c4          movi    170,a4
         00012ee0     00aa  
    4519 00012ef0     448e          sub     a4,a14
    4520 00012f00     2bae          sra     3,a14                   ;/8
    4521 00012f10     41c4          add     a14,a4
    4522 00012f20           zvnldistok
    4523 00012f20     4c81          move    a4,a1
    4524 00012f30     09ce          movi    110,a14                 ;120
         00012f40     006e  
    4525 00012f50     5dc1          mpys    a14,a1
    4526 00012f60     4c24          move    a1,a4
    4527 00012f70     2b04          sra     8,a4                    ;/256
    4528                    
    4529 00012f80     4d4a          move    a10,a10
    4530 00012f90     cb09          jrnz    zvnlathp                        ;At hoop?
    4531 00012fa0     4c81          move    a4,a1                   ;Time*.75
    4532 00012fb0     2bc1          sra     2,a1
    4533 00012fc0     4424          sub     a1,a4
    4534 00012fd0     0b44          cmpi    35,a4
         00012fe0     ffdc  
    4535 00012ff0     c508          jrge    zvnldivok
    4536 00013000     09c4          movi    35,a4
         00013010     0023  
    4537 00013020     c005          jruc    zvnldivok
    4538 00013030           zvnlathp
    4539 00013030     0b44          cmpi    50,a4
         00013040     ffcd  
    4540 00013050     c502          jrge    zvnldivok
    4541 00013060     09c4          movi    50,a4                   ;Min
         00013070     0032  
    4542 00013080           zvnldivok
    4543                    
    4544 00013080     b5a1          move    *a13(plyr_seq),a1
         00013090     0170  
    4545 000130a0     0b41          cmpi    HOOK_SEQ,a1
         000130b0     ffe6  
    4546 000130c0     cb02          jrnz    zvnlhky
    4547 000130d0     11e4          addk    15,a4                   ;Make hook shot go a bit higher
    4548 000130e0     c004          jruc    zvnlhko
    4549 000130f0           zvnlhky
    4550 000130f0     0b41          cmpi    HOOK2_SEQ,a1
         00013100     ffe5  
    4551 00013110     cb01          jrnz    zvnlhko
    4552 00013120     1544          subk    10,a4
    4553 00013130           zvnlhko
    4554                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  107

    4555                    
    4556                    
    4557                    
    4558 00013130     1044          addk    2,a4
    4559 00013140     09c0          movi    10,a0
         00013150     000a  
    4560 00013160     0d5f          calla   RNDPER
         00013170 00000000! 
    4561 00013190     c20d          jrls    zvnlregshot
    4562 000131a0     05a0          move    @shot_distance,a0
         000131b0 00000000! 
    4563 000131d0     0b40          cmpi    0104H,a0
         000131e0     fefb  
    4564 000131f0     c707          jrgt    zvnlregshot
    4565 00013200     1284          addk    20,a4
    4566                    
    4567 00013210     09e0          movi    rainbow_snd,a0
         00013220 00000500' 
    4568 00013240     0d5f          calla   snd_play1ovr
         00013250 00000000! 
    4569                    
    4570 00013270           zvnlregshot
    4571                    
    4572                    
    4573 00013270     2603          sll     16,a3
    4574 00013280     2605          sll     16,a5
    4575 00013290     5883          divs    a4,a3
    4576 000132a0     5885          divs    a4,a5
    4577                    
    4578                    
    4579                    
    4580                    
    4581 000132b0     05a0          move    @plyrairballoff,a0
         000132c0 000006d0- 
    4582 000132e0     cf0b          jrnn    zvnlnobrick
    4583 000132f0     5600          clr     a0
    4584 00013300     0580          move    a0,@plyrairballoff
         00013310 000006d0- 
    4585                    
    4586 00013330     5600          clr     a0
    4587 00013340     0580          move    a0,@ballgoaltcnt
         00013350 00000000! 
    4588                    
    4589 00013370     4c60          move    a3,a0
    4590 00013380     2bc0          sra     2,a0
    4591 00013390     4403          sub     a0,a3
    4592 000133a0           zvnlnobrick
    4593                    
    4594 000133a0     b267          move    a3,*a7(OXVEL),L
         000133b0     0020  
    4595                    
    4596                    
    4597                    
    4598                    
    4599 000133c0     b2a7          move    a5,*a7(OZVEL),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  108

         000133d0     0060  
    4600                    
    4601 000133e0     09c1          movi    -GRAVB/2,a1
         000133f0     ed00  
    4602 00013400     5c81          mpys    a4,a1
    4603 00013410     b6e3          move    *a7(OYVAL),a3,L         ;Adjust for hgt difference
         00013420     00a0  
    4604 00013430     0b02          addi    HOOPY-8,a2
         00013440     ff80  
    4605 00013450     2602          sll     16,a2
    4606 00013460     4443          sub     a2,a3                   ;- if above
    4607 00013470     5883          divs    a4,a3
    4608 00013480     4461          sub     a3,a1
    4609                    
    4610 00013490     b227          move    a1,*a7(OYVEL),L
         000134a0     0040  
    4611                    
    4612 000134b0     1044          addk    2,a4
    4613                    
    4614 000134c0     0584          move    a4,@ballgoaltcnt
         000134d0 00000000! 
    4615                    
    4616 000134f0     b5a1          move    *a13(plyr_num),a1       ;A1=Plyr #
         00013500     0100  
    4617 00013510     0581          move    a1,@ballpnumshot
         00013520 00000000! 
    4618 00013540     0581          move    a1,@ballpnumlast
         00013550 00000000! 
    4619 00013570     0581          move    a1,@ballsclastp
         00013580 00000000! 
    4620                    
    4621 000135a0     09c0          movi    -1,a0
         000135b0     ffff  
    4622 000135c0     0580          move    a0,@ballpnum            ;No owner
         000135d0 00000000! 
    4623 000135f0     5600          clr     a0
    4624 00013600     0580          move    a0,@ballscorezhit
         00013610 00000000! 
    4625                    
    4626 00013630     0580          move    a0,@ballrimhitcnt
         00013640 00000000! 
    4627 00013660     0580          move    a0,@ballbbhitcnt
         00013670 00000000! 
    4628                    
    4629 00013690     b00d          move    a0,*a13(plyr_ownball)
         000136a0     0260  
    4630 000136b0     0580          move    a0,@plyrcharge
         000136c0 000006b0- 
    4631 000136e0     09c0          movi    50,a0                   ;40
         000136f0     0032  
    4632 00013700     b00d          move    a0,*a13(plyr_shtdly)
         00013710     02b0  
    4633                                                            ;>Inc try shot stat
    4634                    
    4635 00013720     b5a0          move    *a13(plyr_seqflgs),a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  109

         00013730     0180  
    4636 00013740     1e00          btst    LAYUP_B,a0
    4637 00013750     cb0b          jrnz    zvnlx
    4638                    
    4639 00013760     09c0          movi    PS_2PTS_TRY,a0
         00013770     0000  
    4640 00013780     05ae          move    @ballptsforshot,a14
         00013790 00000000! 
    4641 000137b0     144e          subk    2,a14
    4642 000137c0     ca01          jreq    zvnl2ptr
    4643 000137d0     1840          movk    PS_3PTS_TRY,a0
    4644 000137e0     0d5f  zvnl2ptr        calla   inc_player_stat
         000137f0 00000000! 
    4645                    
    4646 00013810           zvnlx
    4647 00013810     b5a0          move    *a13(plyr_num),a0       ;Plyr # shooting
         00013820     0100  
    4648 00013830     0d5f          calla   shoots_speech
         00013840 00000000! 
    4649                    
    4650 00013860                   PULL    a6,a7,a9,a10,a11
    4651 00013880     0960          rets
    4652                    
    4653 00013890           zvnlmisszx_t
    4654 00013890     f000          .word   -4096,-4017,-3784,-3406,-2896,-2275,-1567,-799
    4655 00013910     0000          .word   0,799,1567,2275,2896,3406,3784,4017
    4656 00013990     1000          .word   4096,4017,3784,3406,2896,2275,1567,799
    4657 00013a10     0000          .word   0,-799,-1567,-2275,-2896,-3406,-3784,-4017
    4658 00013a90     f000          .word   -4096,-4017,-3784,-3406,-2896,-2275,-1567,-799
    4659                    
    4660                    
    4661                    
    4662                    
    4663 00013b10            SUBRP  plyr_showshotpercent
    4664                    
    4665 00013b10     b36d          move    a11,*a13(PDATA),L
         00013b20     0100  
    4666                    
    4667 00013b30     1941          movk    10,a1
    4668 00013b40     5a29          divu    a1,a9
    4669                    
    4670 00013b50     0b49          cmpi    99,a9
         00013b60     ff9c  
    4671 00013b70     c202          jrls    qldgmaxok
    4672 00013b80     09c9          movi    99,a9
         00013b90     0063  
    4673 00013ba0           qldgmaxok
    4674 00013ba0     5708          clr     a8
    4675 00013bb0     5a28          divu    a1,a8
    4676 00013bc0     24a8          sll     5,a8
    4677 00013bd0     0b28          addi    qldgf_t,a8
         00013be0 000140c0' 
    4678 00013c00     8702          move    *a8,a2,L
    4679 00013c10     09e0          movi    [191,0],a0
         00013c20 00bf0000  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  110

    4680 00013c40     09e1          movi    [11,0],a1
         00013c50 000b0000  
    4681 00013c70     09c3          movi    950,a3                  ;Z
         00013c80     03b6  
    4682 00013c90     09e4          movi    DMAWNZ|M_NOCOLL|M_SCRNREL,a4
         00013ca0 0000a802  
    4683 00013cc0     09c5          movi    CLSDEAD,a5
         00013cd0     2000  
    4684 00013ce0     56c6          clr     a6
    4685 00013cf0     56e7          clr     a7
    4686 00013d00     0d5f          calla   BEGINOBJ2
         00013d10 00000000! 
    4687 00013d30     4d0a          move    a8,a10
    4688                    
    4689 00013d40     24a9          sll     5,a9
    4690 00013d50     0b29          addi    qldgf_t,a9
         00013d60 000140c0' 
    4691 00013d80     8722          move    *a9,a2,L
    4692 00013d90     09e0          movi    [196,0],a0
         00013da0 00c40000  
    4693 00013dc0     09e1          movi    [11,0],a1
         00013dd0 000b0000  
    4694 00013df0     09c3          movi    950,a3                  ;Z
         00013e00     03b6  
    4695 00013e10     09e4          movi    DMAWNZ|M_NOCOLL|M_SCRNREL,a4
         00013e20 0000a802  
    4696 00013e40     09c5          movi    CLSDEAD,a5
         00013e50     2000  
    4697 00013e60     56c6          clr     a6
    4698 00013e70     56e7          clr     a7
    4699 00013e80     0d5f          calla   BEGINOBJ2
         00013e90 00000000! 
    4700                    
    4701                    
    4702 00013eb0                   PUSHP   a8
    4703 00013ec0     09e0          movi    crplate2,a0             ;0CHhange credit plate
         00013ed0 00000000! 
    4704 00013ef0     07a8          move    @crplate_ptr,a8,L
         00013f00 00000000! 
    4705 00013f20     b501          move    *a8(OCTRL),a1
         00013f30     00f0  
    4706 00013f40     0d5f          calla   obj_aniq
         00013f50 00000000! 
    4707                    
    4708 00013f70                   SLEEP   TSEC*2
    4709                    
    4710 00013fc0     09e0          movi    crplate,a0
         00013fd0 00000000! 
    4711 00013ff0     b501          move    *a8(OCTRL),a1
         00014000     00f0  
    4712 00014010     0d5f          calla   obj_aniq
         00014020 00000000! 
    4713 00014040                   PULLP   a8
    4714                    
    4715                            .if     DEBUG
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  111

    4716                            move    *a13(PDATA),a0,L
    4717                            cmp     a0,a11
    4718                            jrz     qldgdb
    4719                            LOCKUP
    4720                    qldgdb
    4721                            .endif
    4722                    
    4723 00014050     4d40          move    a10,a0
    4724 00014060     0d5f          calla   DELOBJ
         00014070 00000000! 
    4725 00014090     c080          jauc    DELOBJDIE
         000140a0 00000000! 
    4726                    
    4727                    
    4728 000140c0           qldgf_t
    4729 000140c0 00000000!         .long   font60,font61,font62,font63,font64
    4730 00014160 00000000!         .long   font65,font66,font67,font68,font69
    4731                    
    4732                    
    4733                    
    4734 00014200            SUBRP  plyr_airballsnd
    4735                    
    4736 00014200                   SLEEP   65
    4737                    
    4738 00014250     05a0          move    @plyrairballoff,a0
         00014260 000006d0- 
    4739 00014280     cb11          jrnz    orhax
    4740                    
    4741 00014290     09e0          movi    airball_snd,a0
         000142a0 00000200' 
    4742 000142c0     0d5f          calla   snd_play1
         000142d0 00000000! 
    4743 000142f0                   SLEEP   90
    4744 00014340     09e0          movi    airball_snd,a0
         00014350 00000200' 
    4745 00014370     0d5f          calla   snd_play1
         00014380 00000000! 
    4746 000143a0           orhax   DIE
    4747                    
    4748                    
    4749                    
    4750                    
    4751                    
    4752 000143d0            SUBRP  plyr_startpass
    4753                    
    4754 000143d0                   PUSH    a6,a7
    4755                    
    4756 000143f0     b7a4          move    *a13(plyr_tmproc_p),a4,L
         00014400     0110  
    4757 00014410     b480          move    *a4(plyr_jmpcnt),a0
         00014420     0400  
    4758 00014430     cb00          jrnz    yubgx                   ;Teammate in air?
         00014440     01a1  
    4759                    
    4760 00014450     b5a0          move    *a13(plyr_keeppal),a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  112

         00014460     0550  
    4761 00014470     ca03          jrz     yubgno
    4762 00014480     0d5f          calla   seq_stopfire
         00014490 00000000! 
    4763 000144b0           yubgno
    4764                    
    4765 000144b0     b5a1          move    *a13(plyr_num),a1
         000144c0     0100  
    4766 000144d0     1021          inc     a1
    4767 000144e0     0581          move    a1,@assist_plyr
         000144f0 00004720- 
    4768 00014510     09c0          movi    3*60+30,a0
         00014520     00d2  
    4769 00014530     0580          move    a0,@assist_delay
         00014540 00004710- 
    4770                    
    4771                    
    4772                    
    4773 00014560     4d42          move    a10,a2
    4774 00014570     4c8a          move    a4,a10
    4775 00014580     0d5f          calla   arw_on1plyr             ;Guy who picks up ball gets arw
         00014590 00000000! 
    4776 000145b0     4c4a          move    a2,a10
    4777 000145c0     0784          move    a4,@ballprcv_p,L
         000145d0 00000000! 
    4778                    
    4779 000145f0     b682          move    *a4(PA8),a2,L           ;Get teammates obj
         00014600     00c0  
    4780 00014610     b446          move    *a2(OXPOS),a6
         00014620     0090  
    4781 00014630     b44e          move    *a2(OXANI+16),a14
         00014640     01f0  
    4782 00014650     41c6          add     a14,a6
    4783 00014660     b447          move    *a2(OZPOS),a7
         00014670     00d0  
    4784                    
    4785                    
    4786                    
    4787                    
    4788                    
    4789 00014680     05a0          move    @inbound,a0
         00014690 00000000! 
    4790 000146b0     cf5b          jrnn    yubgnotnl4                      ;Inbounding the ball?
    4791                    
    4792 000146c0     18e0          movk    7,a0                    ;>Try no look pass
    4793 000146d0     0d3f          callr   rnd
         000146e0     1016  
    4794 000146f0     cb57          jrnz    yubgnotnl4
    4795                    
    4796 00014700     b5ae          move    *a13(plyr_jmpcnt),a14
         00014710     0400  
    4797 00014720     cb54          jrnz    yubgnotnl4                      ;In air?
    4798                    
    4799 00014730     b5ae          move    *a13(plyr_tmdist),a14
         00014740     02f0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  113

    4800 00014750     0b4e          cmpi    70,a14
         00014760     ffb9  
    4801 00014770     c44f          jrlt    yubgnotnl4                      ;Too short?
    4802 00014780     0bee          subi    320,a14
         00014790     febf  
    4803 000147a0     c74c          jrgt    yubgnotnl4                      ;Too far?
    4804                    
    4805 000147b0     0d3f          callr   seekdirdist_obxz128
         000147c0     0fcf  
    4806 000147d0     4c22          move    a1,a2
    4807                    
    4808 000147e0     4c0e          move    a0,a14
    4809 000147f0     0b0e          addi    040H,a14
         00014800     0040  
    4810 00014810     272e          sll     32-7,a14
    4811 00014820     2cee          srl     32-7,a14
    4812                    
    4813 00014830     1100          addk    8,a0                    ;Round off
    4814 00014840     2720          sll     32-7,a0
    4815 00014850     2c60          srl     32-7+4,a0               ;Kill frac
    4816                    
    4817 00014860     b5a1          move    *a13(plyr_seqdir),a1
         00014870     0190  
    4818 00014880     0b41          cmpi    3,a1
         00014890     fffc  
    4819 000148a0     c40a          jrlt    yubgdir2n
    4820 000148b0     0b41          cmpi    6,a1
         000148c0     fff9  
    4821 000148d0     c418          jrlt    yubgnotnl
    4822 000148e0     0b40          cmpi    6,a0
         000148f0     fff9  
    4823 00014900     ca0d          jrz     yubgdonl
    4824 00014910     0b40          cmpi    1,a0
         00014920     fffe  
    4825 00014930     ca07          jrz     yubgdir3
    4826 00014940     c011          jruc    yubgnotnl
    4827                    
    4828 00014950     0b40  yubgdir2n       cmpi    2,a0
         00014960     fffd  
    4829 00014970     ca06          jrz     yubgdonl
    4830 00014980     0b40          cmpi    7,a0
         00014990     fff8  
    4831 000149a0     cb0b          jrnz    yubgnotnl
    4832 000149b0     09c0  yubgdir3        movi    PASSNL2_SEQ,a0
         000149c0     0029  
    4833 000149d0     c002          jruc    yubgdon1
    4834                    
    4835 000149e0           yubgdonl
    4836 000149e0     09c0          movi    PASSNL_SEQ,a0
         000149f0     0028  
    4837 00014a00     b1c4  yubgdon1        move    a14,*a4(plyr_newdir)
         00014a10     03e0  
    4838 00014a20     b5a7          move    *a13(plyr_dir),a7
         00014a30     03d0  
    4839 00014a40     c000          jruc    yubgbhpas
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  114

         00014a50     00c4  
    4840                    
    4841                    
    4842 00014a60           yubgnotnl
    4843                    
    4844 00014a60     0b41          cmpi    2,a1
         00014a70     fffd  
    4845 00014a80     c41e          jrlt    yubgnotnl4
    4846 00014a90     0b41          cmpi    5,a1
         00014aa0     fffa  
    4847 00014ab0     c407          jrlt    yubgdir2n4
    4848                    
    4849 00014ac0     0b41          cmpi    7,a1
         00014ad0     fff8  
    4850 00014ae0     ca18          jrz     yubgnotnl4
    4851                    
    4852 00014af0     0b40          cmpi    6,a0
         00014b00     fff9  
    4853 00014b10     ca07          jrz     yubgdir34
    4854 00014b20     c014          jruc    yubgnotnl4
    4855                    
    4856 00014b30     0b40  yubgdir2n4      cmpi    5,a0
         00014b40     fffa  
    4857 00014b50     ca0e          jrz     yubgdonl4a
    4858 00014b60     0b40          cmpi    2,a0
         00014b70     fffd  
    4859 00014b80     cb0e          jrnz    yubgnotnl4
    4860 00014b90     09c0  yubgdir34       movi    PASSNL2_SEQ,a0
         00014ba0     0029  
    4861 00014bb0     c002          jruc    yubgdon14
    4862                    
    4863 00014bc0           yubgdonl4
    4864 00014bc0     09c0          movi    PASSNL_SEQ,a0
         00014bd0     0028  
    4865 00014be0     b1c4  yubgdon14       move    a14,*a4(plyr_newdir)
         00014bf0     03e0  
    4866 00014c00     b5a7          move    *a13(plyr_dir),a7
         00014c10     03d0  
    4867 00014c20     c000          jruc    yubgbhpas
         00014c30     00a6  
    4868 00014c40           yubgdonl4a
    4869 00014c40     09c0          movi    PASSNL3_SEQ,a0
         00014c50     002a  
    4870 00014c60     c0f7          jruc    yubgdon14
    4871                    
    4872 00014c70           yubgnotnl4
    4873                    
    4874                    
    4875                    
    4876 00014c70     09c0          movi    350,a0
         00014c80     015e  
    4877 00014c90     0d5f          calla   RNDPER
         00014ca0 00000000! 
    4878 00014cc0     c253          jrls    yubgnotbh
    4879                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  115

    4880                    
    4881 00014cd0     b5ae          move    *a13(plyr_jmpcnt),a14
         00014ce0     0400  
    4882 00014cf0     cb50          jrnz    yubgnotbh                       ;In air?
    4883                    
    4884 00014d00     b5ae          move    *a13(plyr_tmdist),a14
         00014d10     02f0  
    4885 00014d20     0b4e          cmpi    90,a14
         00014d30     ffa5  
    4886 00014d40     c44b          jrlt    yubgnotbh                       ;Too short?
    4887 00014d50     0bee          subi    360,a14
         00014d60     fe97  
    4888 00014d70     c748          jrgt    yubgnotbh                       ;Too far?
    4889                    
    4890 00014d80     b7ae          move    *a13(plyr_attrib_p),a14,L
         00014d90     0150  
    4891 00014da0     b5ce          move    *a14(PAT_PASS),a14
         00014db0     0140  
    4892 00014dc0     0b4e          cmpi    5,a14
         00014dd0     fffa  
    4893 00014de0     c441          jrlt    yubgnotbh
    4894                    
    4895 00014df0     b5a1          move    *a13(plyr_o1dist),a1
         00014e00     0310  
    4896 00014e10     0b41          cmpi    078H,a1
         00014e20     ff87  
    4897 00014e30     c43c          jrlt    yubgnotbh
    4898 00014e40     b5a1          move    *a13(plyr_o2dist),a1
         00014e50     0330  
    4899 00014e60     0b41          cmpi    078H,a1
         00014e70     ff87  
    4900 00014e80     c437          jrlt    yubgnotbh
    4901                     
    4902                    
    4903 00014e90     05a0          move    @inbound,a0
         00014ea0 00000000! 
    4904 00014ec0     ce05          jrn     yubgbhcont                      ;Inbounding the ball?
    4905                    
    4906                    
    4907 00014ed0     b5a1          move    *a13(plyr_ptsdown),a1
         00014ee0     0440  
    4908 00014ef0     c730          jrgt    yubgnotbh                       ;If losing, don't bhpass
    4909 00014f00     10c1          addk    6,a1
    4910 00014f10     c52e          jrge    yubgnotbh                       ;If ahead by 7 or more, allow attempt
    4911 00014f20           yubgbhcont
    4912                     
    4913                    
    4914                    
    4915 00014f20     0d3f          callr   seekdirdist_obxz128
         00014f30     0f58  
    4916 00014f40     4c22          move    a1,a2
    4917                    
    4918 00014f50     4c0e          move    a0,a14
    4919 00014f60     0b0e          addi    040H,a14
         00014f70     0040  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  116

    4920 00014f80     272e          sll     32-7,a14
    4921 00014f90     2cee          srl     32-7,a14
    4922                    
    4923 00014fa0     1100          addk    8,a0                    ;Round off
    4924 00014fb0     2720          sll     32-7,a0
    4925 00014fc0     2c60          srl     32-7+4,a0               ;Kill frac
    4926                    
    4927 00014fd0     b5a1          move    *a13(plyr_seqdir),a1
         00014fe0     0190  
    4928 00014ff0     0b41          cmpi    2,a1
         00015000     fffd  
    4929 00015010     c40d          jrlt    yubgdir2
    4930 00015020     0b41          cmpi    7,a1
         00015030     fff8  
    4931 00015040     ca0a          jrz     yubgdir2
    4932                                                            ;4 direction possibility
    4933 00015050     14a1          subk    5,a1
    4934 00015060     c505          jrge    yubgflp4
    4935 00015070     4c00          move    a0,a0                   ;Unflipped 4
    4936 00015080     ca17          jrz     yubgnotbh                       ;Not in 0 direction
    4937 00015090     1460          subk    3,a0
    4938 000150a0     c515          jrge    yubgnotbh
    4939 000150b0     c009          jruc    yubgdobh2
    4940 000150c0           yubgflp4
    4941 000150c0     14c0          subk    6,a0
    4942 000150d0     c412          jrlt    yubgnotbh
    4943 000150e0     c006          jruc    yubgdobh2
    4944                    
    4945 000150f0           yubgdir2                                        ;2 direction possibility
    4946 000150f0     14e1          subk    7,a1
    4947 00015100     ca0b          jreq    yubgflp2
    4948 00015110     1440          subk    2,a0
    4949 00015120     ca02          jreq    yubgdobh2
    4950 00015130     1420          subk    3-2,a0
    4951 00015140     cb0b          jrne    yubgnotbh
    4952 00015150           yubgdobh2
    4953                    
    4954                    
    4955 00015150     09c0          movi    PASSBH_SEQ,a0           ;Will do a yubg2 behind the back pass
         00015160     0027  
    4956 00015170     b1c4          move    a14,*a4(plyr_newdir)
         00015180     03e0  
    4957 00015190     b5a7          move    *a13(plyr_dir),a7
         000151a0     03d0  
    4958 000151b0     c04e          jruc    yubgbhpas
    4959                    
    4960 000151c0     14a0  yubgflp2        subk    5,a0
    4961 000151d0     caf7          jreq    yubgdobh2
    4962 000151e0     1420          subk    6-5,a0
    4963 000151f0     caf5          jreq    yubgdobh2
    4964                    
    4965                    
    4966 00015200           yubgnotbh
    4967                    
    4968                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  117

    4969 00015200     0d3f          callr   seekdirdist_obxz128     ;>Turn toward teammate
         00015210     0f2a  
    4970 00015220     b00d          move    a0,*a13(plyr_dir)
         00015230     03d0  
    4971                    
    4972 00015240     b00d          move    a0,*a13(plyr_newdir)
         00015250     03e0  
    4973                    
    4974 00015260     4c07          move    a0,a7
    4975 00015270     4c03          move    a0,a3
    4976                    
    4977 00015280     0b00          addi    040H,a0
         00015290     0040  
    4978 000152a0     2720          sll     32-7,a0
    4979 000152b0     2ce0          srl     32-7,a0
    4980 000152c0     b004          move    a0,*a4(plyr_newdir)
         000152d0     03e0  
    4981 000152e0     4c22          move    a1,a2
    4982                    
    4983                    
    4984                    
    4985                    
    4986 000152f0     09c0          movi    PASSDO_SEQ,a0
         00015300     0025  
    4987                    
    4988 00015310     b5ae          move    *a13(plyr_jmpcnt),a14
         00015320     0400  
    4989 00015330     ca1b          jrz     yubgcontpass
    4990                    
    4991                    
    4992                    
    4993 00015340     b5ae          move    *a13(plyr_seqflgs),a14
         00015350     0180  
    4994 00015360     1fce          btst    DUNK_B,a14
    4995 00015370     ca0f          jrz     yubgnodnk
    4996                    
    4997 00015380                   PUSH    a0
    4998                    
    4999 00015390     1880          movk    PS_DUNKS_TRY,a0         ;0DecH dunk stats
    5000 000153a0     b5a1          move    *a13(plyr_num),a1
         000153b0     0100  
    5001                            .ref    dec_player_stat
    5002 000153c0     0d5f          calla   dec_player_stat
         000153d0 00000000! 
    5003 000153f0     09c0          movi    PS_2PTS_TRY,a0
         00015400     0000  
    5004 00015410     b5a1          move    *a13(plyr_num),a1
         00015420     0100  
    5005 00015430     0d5f          calla   dec_player_stat
         00015440 00000000! 
    5006                    
    5007 00015460                   PULL    a0
    5008                    
    5009 00015470           yubgnodnk
    5010                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  118

    5011                    
    5012 00015470     b5ae          move    *a13(plyr_tmdist),a14
         00015480     02f0  
    5013 00015490     0b4e          cmpi    110,a14
         000154a0     ff91  
    5014 000154b0     c71e          jrgt    yubgss
    5015 000154c0     09c0          movi    PASSDO2_SEQ,a0
         000154d0     0026  
    5016 000154e0     cb1b          jrnz    yubgss                  ;Air dish off pass?
    5017 000154f0           yubgcontpass
    5018                    
    5019 000154f0     1800          movk    PASSS_SEQ,a0
    5020 00015500     0b42          cmpi    170,a2                  ;50
         00015510     ff55  
    5021 00015520     c617          jrle    yubgss
    5022                    
    5023                    
    5024 00015530     09c3          movi    PASSC_SEQ,a3
         00015540     0021  
    5025                    
    5026 00015550     b7ae          move    *a13(plyr_attrib_p),a14,L
         00015560     0150  
    5027 00015570     b5c5          move    *a14(PAT_PASS),a5
         00015580     0140  
    5028 00015590     0b45          cmpi    6,a5
         000155a0     fff9  
    5029 000155b0     c402          jrlt    yubgnormp
    5030 000155c0     09c3          movi    FASTPASSC_SEQ,a3
         000155d0     0022  
    5031 000155e0           yubgnormp
    5032 000155e0     18e0          movk    7,a0
    5033 000155f0     0d3f          callr   rnd
         00015600     0f24  
    5034 00015610     cb07          jrnz    yubgnormchest           ;12% regular chest?
    5035 00015620     09c3          movi    PASSNEWOH_SEQ,a3
         00015630     0023  
    5036 00015640     0b45          cmpi    6,a5
         00015650     fff9  
    5037 00015660     c402          jrlt    yubgnormchest
    5038 00015670     09c3          movi    FASTPASSNEWOH_SEQ,a3
         00015680     0024  
    5039 00015690           yubgnormchest
    5040 00015690     4c60          move    a3,a0
    5041                    
    5042 000156a0           yubgss
    5043 000156a0           yubgbhpas
    5044 000156a0     4c03          move    a0,a3
    5045 000156b0     0d3f          callr   plyr_setseq
         000156c0     f4c3  
    5046                    
    5047                    
    5048 000156d0     0b43          cmpi    PASSNL_SEQ,a3
         000156e0     ffd7  
    5049 000156f0     ca03          jrz     yubglead_nl
    5050 00015700     0b43          cmpi    PASSNL2_SEQ,a3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  119

         00015710     ffd6  
    5051 00015720     cb05          jrnz    yubgnoleadnl
    5052                    
    5053 00015730           yubglead_nl
    5054 00015730     b481          move    *a4(plyr_dirtime),a1
         00015740     03f0  
    5055 00015750     ca1f          jrz     yubgnolead_nl
    5056 00015760     1541          subk    10,a1
    5057 00015770     c41d          jrlt    yubgnolead_nl
    5058                    
    5059 00015780           yubgnoleadnl
    5060                    
    5061                    
    5062 00015780     b481          move    *a4(plyr_dirtime),a1
         00015790     03f0  
    5063 000157a0     ca13          jrz     yubgnolead_notm
    5064                    
    5065                    
    5066 000157b0     1501          subk    8,a1                    ;4
    5067 000157c0     c71e          jrgt    yubgleadingpass
    5068                    
    5069 000157d0     b480          move    *a4(plyr_o1dist),a0
         000157e0     0310  
    5070 000157f0     0b40          cmpi    25,a0
         00015800     ffe6  
    5071 00015810     c414          jrlt    yubgnolead_ocls         ;Opponent too close?
    5072 00015820     b480          move    *a4(plyr_o2dist),a0
         00015830     0330  
    5073 00015840     0b40          cmpi    25,a0
         00015850     ffe6  
    5074 00015860     c514          jrge    yubgleadingpass
    5075                    
    5076                    
    5077                    
    5078 00015870     0b42          cmpi    30,a2                   ;40
         00015880     ffe1  
    5079 00015890     c40d          jrlt    yubgnolead_tm           ;Too close?
    5080 000158a0     b481          move    *a4(plyr_dirtime),a1
         000158b0     03f0  
    5081 000158c0     1481          subk    4,a1
    5082 000158d0     c70d          jrgt    yubgleadingpass
    5083                    
    5084                    
    5085 000158e0           yubgnolead_notm
    5086 000158e0     05a0          move    @PCNT,a0
         000158f0 00000000! 
    5087 00015910                   ANDK    1,a0
    5088 00015930     cb03          jrnz    yubgnolead
    5089 00015940     c006          jruc    yubgleadingpass
    5090                    
    5091 00015950           yubgnolead_nl
    5092 00015950     c001          jruc    yubgnolead
    5093                    
    5094 00015960           yubgnolead_ocls
    5095 00015960     0300          jruc    yubgnolead
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  120

    5096                    
    5097 00015970           yubgnolead_tm
    5098                    
    5099                    
    5100 00015970           yubgnolead
    5101 00015970     1820          movk    1,a0
    5102 00015980     b004          move    a0,*a4(plyr_nojoy)
         00015990     03b0  
    5103                    
    5104 000159a0     c040          jruc    yubgend
    5105                    
    5106                    
    5107 000159b0           yubgleadingpass
    5108 000159b0     b481          move    *a4(plyr_jmpcnt),a1
         000159c0     0400  
    5109 000159d0     cbf9          jrnz    yubgnolead                      ;He's jumping?
    5110                    
    5111                    
    5112                    
    5113 000159e0     05ae          move    @PCNT,a14
         000159f0 00000000! 
    5114 00015a10                   ANDK    3,a14
    5115 00015a30     cb12          jrnz    yubgnotst
    5116                    
    5117 00015a40     0b43          cmpi    PASSBH_SEQ,a3
         00015a50     ffd8  
    5118 00015a60     cb0f          jrne    yubgnotst
    5119 00015a70     b5a1          move    *a13(plyr_seqdir),a1
         00015a80     0190  
    5120 00015a90     b480          move    *a4(plyr_seqdir),a0
         00015aa0     0190  
    5121 00015ab0     0b41          cmpi    5,a1
         00015ac0     fffa  
    5122 00015ad0     c504          jrge    yubgck1
    5123 00015ae0     0b40          cmpi    2,a0
         00015af0     fffd  
    5124 00015b00     ca1e          jrz     yubgbhin
    5125 00015b10     c0e5          jruc    yubgnolead
    5126 00015b20     0b40  yubgck1 cmpi    6,a0
         00015b30     fff9  
    5127 00015b40     cbe2          jrne    yubgnolead
    5128 00015b50     c019          jruc    yubgbhin
    5129 00015b60           yubgnotst               
    5130                    
    5131                    
    5132                    
    5133 00015b60     b7a4          move    *a13(plyr_tmproc_p),a4,L
         00015b70     0110  
    5134 00015b80     b682          move    *a4(PA8),a2,L           ;Get teammates obj
         00015b90     00c0  
    5135 00015ba0     b446          move    *a2(OXPOS),a6
         00015bb0     0090  
    5136 00015bc0     b44e          move    *a2(OXANI+16),a14
         00015bd0     01f0  
    5137 00015be0     41c6          add     a14,a6
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  121

    5138 00015bf0     b447          move    *a2(OZPOS),a7
         00015c00     00d0  
    5139                    
    5140 00015c10     b640          move    *a2(OXVEL),a0,L         ;Where will teammate be in 32 ticks?
         00015c20     0020  
    5141 00015c30     2aa0          sra     16-5,a0
    5142 00015c40     4006          add     a0,a6
    5143 00015c50     b640          move    *a2(OZVEL),a0,L
         00015c60     0060  
    5144 00015c70     2aa0          sra     16-5,a0
    5145 00015c80     4007          add     a0,a7
    5146                    
    5147 00015c90     0d3f          callr   seekdirdist_obxz128     ;>Turn toward where teammate will be
         00015ca0     0e81  
    5148 00015cb0     b00d          move    a0,*a13(plyr_dir)
         00015cc0     03d0  
    5149 00015cd0     b00d          move    a0,*a13(plyr_newdir)
         00015ce0     03e0  
    5150                    
    5151                    
    5152 00015cf0           yubgbhin
    5153 00015cf0     b680          move    *a4(PA11),a0,L          ;>Keep teammate moving in same dir
         00015d00     0060  
    5154 00015d10     8400          move    *a0,a0
    5155 00015d20     2780          sll     32-4,a0
    5156 00015d30     2c80          srl     32-4,a0
    5157 00015d40     0ba0          ori     08000H,a0
         00015d50 00008000  
    5158 00015d70     b004          move    a0,*a4(plyr_nojoy)      ;Neg
         00015d80     03b0  
    5159 00015d90     b004          move    a0,*a4(plyr_newdir)
         00015da0     03e0  
    5160                    
    5161 00015db0           yubgend
    5162 00015db0     1bc0          movk    30,a0
    5163 00015dc0     b004          move    a0,*a4(plyr_rcvpass)
         00015dd0     0230  
    5164                    
    5165 00015de0     b480          move    *a4(plyr_seqflgs),a0
         00015df0     0180  
    5166 00015e00     1e20          btst    SAMEDIR_B,a0
    5167 00015e10     ca04          jrz     yubgx
    5168 00015e20     09c0          movi    -1,a0
         00015e30     ffff  
    5169 00015e40     b004          move    a0,*a4(plyr_newdir)     ;Kill dir change
         00015e50     03e0  
    5170                    
    5171                    
    5172 00015e60           yubgx   PULL    a6,a7
    5173 00015e80     0960          rets
    5174                    
    5175                    
    5176                    
    5177                    
    5178 00015e90            SUBR   plyr_pass
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  122

    5179                    
    5180 00015e90                   PUSH    a6
    5181                    
    5182 00015ea0     05a0          move    @ballpnum,a0
         00015eb0 00000000! 
    5183 00015ed0     b5a1          move    *a13(plyr_num),a1
         00015ee0     0100  
    5184 00015ef0     4801          cmp     a0,a1
    5185 00015f00     cb00          jrne    pgytx                   ;I don't have ball?
         00015f10     00e8  
    5186                    
    5187                    
    5188 00015f20     0d5f          calla   ball_convfmprel
         00015f30 00000000! 
    5189                    
    5190 00015f50     07a0          move    @ballobj_p,a0,L
         00015f60 00000000! 
    5191                    
    5192 00015f80     b7a6          move    *a13(plyr_tmproc_p),a6,L
         00015f90     0110  
    5193 00015fa0     b6c2          move    *a6(PA8),a2,L           ;Get * teammates obj
         00015fb0     00c0  
    5194                    
    5195 00015fc0     b443          move    *a2(OXPOS),a3
         00015fd0     0090  
    5196 00015fe0     b44e          move    *a2(OXANI+16),a14
         00015ff0     01f0  
    5197 00016000     41c3          add     a14,a3
    5198 00016010     b445          move    *a2(OZPOS),a5
         00016020     00d0  
    5199                    
    5200 00016030     b401          move    *a0(OXPOS),a1
         00016040     0090  
    5201 00016050     b40e          move    *a0(OXANI+16),a14
         00016060     01f0  
    5202 00016070     41c1          add     a14,a1
    5203 00016080     4423          sub     a1,a3                   ;X delta
    5204 00016090     b401          move    *a0(OZPOS),a1
         000160a0     00d0  
    5205 000160b0     4425          sub     a1,a5                   ;Y delta
    5206                    
    5207 000160c0     4c64          move    a3,a4                   ;0CaHlc distance (long+short/2.667)
    5208 000160d0     4cae          move    a5,a14
    5209 000160e0     0384          abs     a4
    5210 000160f0     038e          abs     a14
    5211 00016100     49c4          cmp     a14,a4
    5212 00016110     c903          jrhs    pgytxbig
    5213 00016120                   SWAP    a14,a4
    5214 00016150     2bee  pgytxbig        sra     1,a14                   ;/2
    5215 00016160     41c4          add     a14,a4
    5216 00016170     2bce          sra     2,a14                   ;/8
    5217 00016180     45c4          sub     a14,a4
    5218                    
    5219                    
    5220 00016190                   PUSH    a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  123

    5221                    
    5222 000161a0     05a0          move    @inbound,a0
         000161b0 00000000! 
    5223 000161d0     cf08          jrnn    pgytno_speech
    5224                    
    5225 000161e0     0b44          cmpi    100,a4                  ;too close to call
         000161f0     ff9b  
    5226 00016200     c405          jrlt    pgytno_speech
    5227                    
    5228 00016210     b5a1          move    *a13(plyr_num),a1
         00016220     0100  
    5229 00016230     0d5f          calla   pass_to_speech
         00016240 00000000! 
    5230                    
    5231 00016260           pgytno_speech
    5232 00016260                   PULL    a0
    5233                    
    5234 00016270     b7ae          move    *a13(plyr_attrib_p),a14,L
         00016280     0150  
    5235 00016290     b5c2          move    *a14(PAT_PASS),a2
         000162a0     0140  
    5236 000162b0     2482          sll     4,a2
    5237 000162c0     09e1          movi    pgytlongpas_t,a1
         000162d0 00016dc0' 
    5238 000162f0     4041          add     a2,a1
    5239 00016300     8421          move    *a1,a1  
    5240                    
    5241                    
    5242 00016310     0b44          cmpi    300,a4
         00016320     fed3  
    5243 00016330     c705          jrgt    pgytct
    5244                    
    5245 00016340     09e1          movi    pgytshortpas_t,a1
         00016350 00016e70' 
    5246 00016370     4041          add     a2,a1
    5247 00016380     8421          move    *a1,a1  
    5248                    
    5249                    
    5250                    
    5251 00016390     b5ae  pgytct  move    *a13(plyr_turbon),a14
         000163a0     0250  
    5252 000163b0     ca05          jrz     pgytnoturb                      ;No turbo?
    5253 000163c0     0b22          addi    pgytturbopas_t,a2
         000163d0 00016f20' 
    5254 000163f0     8442          move    *a2,a2
    5255 00016400     4441          sub     a2,a1
    5256                    
    5257                    
    5258 00016410           pgytnoturb
    5259 00016410     058e          move    a14,@plyrpasstype       ;0=Normal, !0=Turbo
         00016420 000006c0- 
    5260                    
    5261 00016440     5c81          mpys    a4,a1
    5262 00016450     2ac1          sra     10,a1                   ;/1024
    5263 00016460     4c24          move    a1,a4
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  124

    5264 00016470     1601          subk    16,a1
    5265 00016480     c501          jrge    pgytnshrt                       ;!Short?
    5266 00016490     1a04          movk    16,a4                   ;Min
    5267 000164a0           pgytnshrt
    5268 000164a0     b6c2          move    *a6(PA8),a2,L           ;Get * teammates obj
         000164b0     00c0  
    5269 000164c0     b4ce          move    *a6(plyr_nojoy),a14
         000164d0     03b0  
    5270 000164e0     cf2b          jrnn    pgytnolead
    5271                    
    5272                    
    5273                    
    5274                    
    5275                    
    5276                    
    5277                    
    5278                    
    5279 000164f0     4e80          move    a4,b0                   ;0CaHlc where ball should go
    5280 00016500     b643          move    *a2(OXVAL),a3,L
         00016510     0080  
    5281 00016520     b64e          move    *a2(OXANI),a14,L
         00016530     01e0  
    5282 00016540     41c3          add     a14,a3
    5283 00016550     b645          move    *a2(OZVAL),a5,L
         00016560     00c0  
    5284                    
    5285 00016570     b641          move    *a2(OXVEL),a1,L
         00016580     0020  
    5286 00016590     b64e          move    *a2(OZVEL),a14,L
         000165a0     0060  
    5287                    
    5288 000165b0     4023  pgytbndlp       add     a1,a3                   ;Walk through movements
    5289 000165c0     41c5          add     a14,a5  
    5290 000165d0     0b63          cmpi    (PLYRMINX)<<16,a3
         000165e0 e150ffff  
    5291 00016600     c60e          jrle    pgytoutb
    5292 00016610     0b63          cmpi    (PLYRMAXX)<<16,a3
         00016620 deb7ffff  
    5293 00016640     c50a          jrge    pgytoutb
    5294 00016650     0b65          cmpi    (CZMIN+8)<<16,a5
         00016660 fc0fffff  
    5295 00016680     c606          jrle    pgytoutb
    5296 00016690     0b65          cmpi    (GZMAX-6)<<16,a5
         000166a0 fa98ffff  
    5297 000166c0     c502          jrge    pgytoutb
    5298                    
    5299 000166d0     1430          subk    1,b0                    ;1 step
    5300 000166e0     c7ec          jrgt    pgytbndlp
    5301                    
    5302 000166f0           pgytoutb
    5303 000166f0     2a03          sra     16,a3
    5304 00016700     2a05          sra     16,a5
    5305                    
    5306 00016710     b401          move    *a0(OXPOS),a1
         00016720     0090  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  125

    5307 00016730     b40e          move    *a0(OXANI+16),a14
         00016740     01f0  
    5308 00016750     41c1          add     a14,a1
    5309 00016760     4423          sub     a1,a3                   ;X delta
    5310 00016770     b401          move    *a0(OZPOS),a1
         00016780     00d0  
    5311 00016790     4425          sub     a1,a5                   ;Y delta
    5312                    
    5313                    
    5314 000167a0           pgytnolead
    5315 000167a0     2603          sll     16,a3
    5316 000167b0     2605          sll     16,a5
    5317 000167c0     5883          divs    a4,a3
    5318 000167d0     5885          divs    a4,a5
    5319                    
    5320 000167e0     b260          move    a3,*a0(OXVEL),L
         000167f0     0020  
    5321 00016800     b2a0          move    a5,*a0(OZVEL),L
         00016810     0060  
    5322                    
    5323 00016820     b603          move    *a0(OYVAL),a3,L         ;Adjust for hgt difference
         00016830     00a0  
    5324 00016840     b64e          move    *a2(OYVAL),a14,L
         00016850     00a0  
    5325 00016860     45c3          sub     a14,a3                  ;- if ball above dest
    5326 00016870     4dc1          move    a14,a1
    5327 00016880     2bc1          sra     2,a1
    5328 00016890     4023          add     a1,a3
    5329                    
    5330 000168a0     4c85          move    a4,a5
    5331 000168b0     b4c2          move    *a6(plyr_nojoy),a2
         000168c0     03b0  
    5332 000168d0     ce01          jrn     pgytnopoh                       ;Leading pass?
    5333                    
    5334 000168e0     1485          subk    4,a5
    5335                    
    5336 000168f0           pgytnopoh
    5337 000168f0     09c1          movi    -GRAVB/2,a1
         00016900     ed00  
    5338 00016910     b5a2          move    *a13(plyr_jmpcnt),a2
         00016920     0400  
    5339 00016930     cb1c          jrnz    pgytlevel                       ;In jump?
    5340                    
    5341 00016940     05ae          move    @PCNT,a14
         00016950 00000000! 
    5342 00016970     0b8e          andi    0fh,a14
         00016980 fffffff0  
    5343 000169a0     cb15          jrnz    pgytlevel
    5344                    
    5345 000169b0     b5ae          move    *a13(plyr_seq),a14      ;0CHhk for overhead pass
         000169c0     0170  
    5346 000169d0     0bee          subi    PASSNEWOH_SEQ,a14
         000169e0     ffdc  
    5347 000169f0     ca10          jrz     pgytlevel
    5348 00016a00     b5ae          move    *a13(plyr_seqdir),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  126

         00016a10     0190  
    5349 00016a20     0b4e          cmpi    0,a14
         00016a30     ffff  
    5350 00016a40     ca0b          jrz     pgytlevel
    5351 00016a50     0b4e          cmpi    1,a14
         00016a60     fffe  
    5352 00016a70     ca08          jrz     pgytlevel
    5353 00016a80     0b4e          cmpi    7,a14
         00016a90     fff8  
    5354 00016aa0     ca05          jrz     pgytlevel
    5355                    
    5356 00016ab0     b603          move    *a0(OYVAL),a3,L         ;Adjust for hgt difference
         00016ac0     00a0  
    5357 00016ad0     09c1          movi    -GRAVB/2,a1
         00016ae0     ed00  
    5358 00016af0     2fe4          srl     1,a4
    5359 00016b00           pgytlevel
    5360 00016b00     5c81          mpys    a4,a1
    5361 00016b10     5883          divs    a4,a3
    5362 00016b20     4461          sub     a3,a1
    5363 00016b30     b220          move    a1,*a0(OYVEL),L
         00016b40     0040  
    5364                    
    5365 00016b50     b5a0          move    *a13(plyr_num),a0
         00016b60     0100  
    5366 00016b70     0580          move    a0,@ballpnumshot
         00016b80 00000000! 
    5367 00016ba0     0580          move    a0,@ballpnumlast
         00016bb0 00000000! 
    5368 00016bd0     0580          move    a0,@ballsclastp
         00016be0 00000000! 
    5369 00016c00     09c0          movi    -1,a0
         00016c10     ffff  
    5370 00016c20     0580          move    a0,@ballpnum            ;No owner
         00016c30 00000000! 
    5371 00016c50     5600          clr     a0
    5372 00016c60     0580          move    a0,@ballscorezhit
         00016c70 00000000! 
    5373 00016c90     0580          move    a0,@ballpasstime
         00016ca0 00000000! 
    5374 00016cc0     b00d          move    a0,*a13(plyr_ownball)
         00016cd0     0260  
    5375 00016ce0     1bc0          movk    30,a0
    5376 00016cf0     b00d          move    a0,*a13(plyr_shtdly)
         00016d00     02b0  
    5377                    
    5378 00016d10     10a5          addk    5,a5
    5379 00016d20     b0a6          move    a5,*a6(plyr_rcvpass)    ;Tell teammate when to expect pass
         00016d30     0230  
    5380                    
    5381 00016d40     09e0          movi    pass_snd,a0
         00016d50 00000240' 
    5382 00016d70     0d5f          calla   snd_play1
         00016d80 00000000! 
    5383                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  127

    5384                    
    5385 00016da0           pgytx   PULL    a6
    5386 00016db0     0960          rets
    5387                    
    5388 00016dc0           pgytlongpas_t
    5389 00016dc0     0067          .word   103,101,99,97,95,93
    5390 00016e20     005b          .word   91,89,87,85,83
    5391 00016e70           pgytshortpas_t
    5392 00016e70     007f          .word   127,124,121,118,115,112
    5393 00016ed0     006d          .word   109,106,103,100,97
    5394 00016f20           pgytturbopas_t
    5395 00016f20     001c          .word   28,29,30,31,32,33
    5396 00016f80     0023          .word   35,38,41,44,44
    5397                    
    5398                    
    5399                    
    5400                    
    5401              0019  RTIME   .equ    25
    5402                    
    5403 00016fd0            SUBRP  plyr_tryrebound
    5404                    
    5405 00016fd0                   PUSH    a6,a7
    5406                    
    5407 00016ff0     05a1          move    @plyrinautorbnd,a1
         00017000 00000700- 
    5408 00017020     cb00          jrnz    aakqx                   ;Someone else doing?
         00017030     0083  
    5409                    
    5410 00017040     07ae          move    @game_time,a14,L
         00017050 00000000! 
    5411 00017070     0b4e          cmpi    0500H,a14
         00017080     faff  
    5412 00017090     c50c          jrge    aakqheave                       ;Do it
    5413                            
    5414 000170a0     b5a0          move    *a13(plyr_num),a0
         000170b0     0100  
    5415 000170c0     05a1          move    @ballpnumshot,a1
         000170d0 00000000! 
    5416 000170f0     4801          cmp     a0,a1
    5417 00017100     ca76          jrz     aakqx
    5418 00017110     0bc1          XORI    1,a1
         00017120 00000001  
    5419 00017140     4820          cmp     a1,a0
    5420 00017150     ca71          jrz     aakqx                   ;Br=teammate shot
    5421                    
    5422 00017160           aakqheave
    5423                                                            ;0CHhk my start
    5424 00017160     b501          move    *a8(OZPOS),a1           ;Get SZ
         00017170     00d0  
    5425 00017180     0be1          subi    CZMID,a1
         00017190     fb6d  
    5426 000171a0     0381          abs     a1
    5427 000171b0     0b41          cmpi    40,a1
         000171c0     ffd7  
    5428 000171d0     c710          jrgt    aakqposok
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  128

    5429 000171e0     b500          move    *a8(OXPOS),a0           ;Get SX
         000171f0     0090  
    5430 00017200     b50e          move    *a8(OXANI+16),a14
         00017210     01f0  
    5431 00017220     41c0          add     a14,a0
    5432 00017230     0be0          subi    WRLDMID,a0
         00017240     dfff  
    5433 00017250     0380          abs     a0
    5434 00017260     0b40          cmpi    HOOPRX-WRLDMID+13,a0
         00017270     feb2  
    5435 00017280     c55e          jrge    aakqx                   ;Under backboard?
    5436                    
    5437 00017290     1581          subk    12,a1
    5438 000172a0     c703          jrgt    aakqposok
    5439 000172b0     0b43          cmpi    HOOPRX-WRLDMID-8,a3
         000172c0     fec7  
    5440 000172d0     c559          jrge    aakqx                   ;Under rim?
    5441                    
    5442                    
    5443 000172e0           aakqposok
    5444 000172e0     07a5          move    @ballobj_p,a5,L
         000172f0 00000000! 
    5445                    
    5446                    
    5447 00017310     1b20          movk    RTIME,a0                ;0FHind new Y pos in x ticks
    5448 00017320     b6a4          move    *a5(OYVAL),a4,L
         00017330     00a0  
    5449 00017340     b6a2          move    *a5(OYVEL),a2,L
         00017350     0040  
    5450 00017360     09c1          movi    GRAVB,a1
         00017370     2600  
    5451 00017380           aakqnewblp
    5452 00017380     4044          add     a2,a4
    5453 00017390     4022          add     a1,a2
    5454 000173a0     3c60          dsj     a0,aakqnewblp
    5455                    
    5456 000173b0     2a04          sra     16,a4
    5457                    
    5458 000173c0     0b44          cmpi    -140,a4
         000173d0     008b  
    5459 000173e0     c448          jrlt    aakqx                   ;Too hi?
    5460                    
    5461 000173f0     13c4          addk    30,a4
    5462 00017400     b500          move    *a8(OYPOS),a0
         00017410     00b0  
    5463 00017420     4804          cmp     a0,a4
    5464 00017430     c543          jrge    aakqx                   ;Ball lower than plyr?
    5465                    
    5466                    
    5467                    
    5468 00017440     b6a6          move    *a5(OXVAL),a6,L         ;0FHind new XZ pos in x ticks
         00017450     0080  
    5469 00017460     b6ae          move    *a5(OXANI),a14,L
         00017470     01e0  
    5470 00017480     41c6          add     a14,a6
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  129

    5471 00017490     b6a7          move    *a5(OZVAL),a7,L
         000174a0     00c0  
    5472                    
    5473 000174b0     4cc0          move    a6,a0                   ;0CHhk ball pos
    5474 000174c0     4ce1          move    a7,a1
    5475 000174d0     2a00          sra     16,a0
    5476 000174e0     2a01          sra     16,a1
    5477                    
    5478 000174f0     0be1          subi    CZMID,a1
         00017500     fb6d  
    5479 00017510     0381          abs     a1
    5480 00017520     1581          subk    12,a1
    5481 00017530     c706          jrgt    aakqbposok
    5482 00017540     0be0          subi    WRLDMID,a0
         00017550     dfff  
    5483 00017560     0380          abs     a0
    5484 00017570     0b43          cmpi    HOOPRX-WRLDMID-10,a3
         00017580     fec9  
    5485 00017590     c52d          jrge    aakqx                   ;Under rim or backboard?
    5486 000175a0           aakqbposok
    5487                    
    5488 000175a0     1b20          movk    RTIME,a0
    5489 000175b0     b6a1          move    *a5(OXVEL),a1,L
         000175c0     0020  
    5490 000175d0     5c01          mpys    a0,a1
    5491 000175e0     4026          add     a1,a6
    5492 000175f0     b6a1          move    *a5(OZVEL),a1,L
         00017600     0060  
    5493 00017610     5c01          mpys    a0,a1
    5494 00017620     4027          add     a1,a7
    5495                    
    5496 00017630     2a06          sra     16,a6
    5497 00017640     2a07          sra     16,a7
    5498                    
    5499 00017650     4cc0          move    a6,a0                   ;0CHhk my destination
    5500 00017660     4ce1          move    a7,a1
    5501                    
    5502 00017670     0be1          subi    CZMID,a1
         00017680     fb6d  
    5503 00017690     0381          abs     a1
    5504 000176a0     0b41          cmpi    40,a1
         000176b0     ffd7  
    5505 000176c0     c70b          jrgt    aakqeposok
    5506 000176d0     0be0          subi    WRLDMID,a0
         000176e0     dfff  
    5507 000176f0     0380          abs     a0
    5508 00017700     0b40          cmpi    HOOPRX-WRLDMID+13,a0
         00017710     feb2  
    5509 00017720     c514          jrge    aakqx                   ;Under backboard?
    5510 00017730     15c1          subk    14,a1
    5511 00017740     c703          jrgt    aakqeposok
    5512 00017750     0b43          cmpi    HOOPRX-WRLDMID-10,a3
         00017760     fec9  
    5513 00017770     c50f          jrge    aakqx                   ;Under rim?
    5514 00017780           aakqeposok
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  130

    5515                    
    5516 00017780     0d3f          callr   seekdirdist_obxz128
         00017790     0cd2  
    5517 000177a0     0b41          cmpi    60,a1
         000177b0     ffc3  
    5518 000177c0     c50a          jrge    aakqx                   ;Too far to jump?
    5519                    
    5520 000177d0     b00d          move    a0,*a13(plyr_newdir)    ;Turn where ball is headed
         000177e0     03e0  
    5521                    
    5522 000177f0     1aa0          movk    REBOUNDA_SEQ,a0
    5523 00017800     0580          move    a0,@plyrinautorbnd
         00017810 00000700- 
    5524                    
    5525 00017830     b5a7          move    *a13(plyr_dir),a7
         00017840     03d0  
    5526 00017850     0d3f          callr   plyr_setseq
         00017860     f2a9  
    5527                    
    5528                    
    5529 00017870           aakqx   PULL    a6,a7
    5530 00017890     0960          rets
    5531                    
    5532                    
    5533                    
    5534 000178a0            SUBR   clr_autorbnd
    5535                    
    5536 000178a0     5600          clr     a0
    5537 000178b0     0580          move    a0,@plyrinautorbnd
         000178c0 00000700- 
    5538 000178e0     0960          rets
    5539                    
    5540                    
    5541                    
    5542 000178f0            SUBRP  plyr_setballxyz
    5543                    
    5544 000178f0     07a0          move    @ballobj_p,a0,L
         00017900 00000000! 
    5545                    
    5546 00017920     b501          move    *a8(OZPOS),a1           ;>Set Z
         00017930     00d0  
    5547 00017940     b5ae          move    *a13(plyr_ballzo),a14
         00017950     02a0  
    5548 00017960     41c1          add     a14,a1
    5549 00017970     b020          move    a1,*a0(OZPOS)
         00017980     00d0  
    5550                    
    5551 00017990     b701          move    *a8(OXVAL),a1,L         ;>Set X
         000179a0     0080  
    5552 000179b0     4e20          move    a1,b0
    5553 000179c0     b7ae          move    *a13(plyr_ballxo),a14,L
         000179d0     0270  
    5554 000179e0     41c1          add     a14,a1
    5555 000179f0     b60e          move    *a0(OIMG),a14,L
         00017a00     0170  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  131

    5556 00017a10     b5ce          move    *a14(IANIOFFX),a14
         00017a20     0020  
    5557 00017a30     260e          sll     16,a14
    5558 00017a40     45c1          sub     a14,a1
    5559 00017a50     b220          move    a1,*a0(OXVAL),L
         00017a60     0080  
    5560                    
    5561 00017a70     b70e          move    *a8(OXANI),a14,L        ;Make 3D ball X+ani = plyr X+ani
         00017a80     01e0  
    5562 00017a90     45c1          sub     a14,a1
    5563 00017aa0     4e1e          move    b0,a14
    5564 00017ab0     442e          sub     a1,a14
    5565 00017ac0     b3c0          move    a14,*a0(OXANI),L
         00017ad0     01e0  
    5566                    
    5567 00017ae0     b5a1          move    *a13(plyr_ballyo),a1
         00017af0     0290  
    5568 00017b00     0b41          cmpi    -200,a1
         00017b10     00c7  
    5569 00017b20     ca15          jreq    pninbfree                       ;Ball Y free?
    5570                    
    5571 00017b30     b60e          move    *a0(OIMG),a14,L         ;>Set Y
         00017b40     0170  
    5572 00017b50     b5ce          move    *a14(IANIOFFY),a14
         00017b60     0030  
    5573 00017b70     45c1          sub     a14,a1
    5574 00017b80     b50e          move    *a8(OYPOS),a14
         00017b90     00b0  
    5575 00017ba0     41c1          add     a14,a1
    5576 00017bb0     b020          move    a1,*a0(OYPOS)
         00017bc0     00b0  
    5577 00017bd0     5621          clr     a1
    5578 00017be0     b220          move    a1,*a0(OYVEL),L         ;Stop grav from accumulating
         00017bf0     0040  
    5579 00017c00     b220          move    a1,*a0(OXVEL),L
         00017c10     0020  
    5580 00017c20     b220          move    a1,*a0(OZVEL),L
         00017c30     0060  
    5581 00017c40     0581          move    a1,@ballfree            ;!Free
         00017c50 00000000! 
    5582                    
    5583 00017c70     0960          rets
    5584                    
    5585 00017c80           pninbfree
    5586 00017c80     05ae          move    @ballfree,a14
         00017c90 00000000! 
    5587 00017cb0     cb13          jrnz    pninx                   ;Already free?
    5588 00017cc0     182e          movk    1,a14
    5589 00017cd0     058e          move    a14,@ballfree           ;Free
         00017ce0 00000000! 
    5590 00017d00     b401          move    *a0(OYPOS),a1
         00017d10     00b0  
    5591 00017d20     b60e          move    *a0(OIMG),a14,L
         00017d30     0170  
    5592 00017d40     b5ce          move    *a14(IANIOFFY),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  132

         00017d50     0030  
    5593 00017d60     41c1          add     a14,a1
    5594 00017d70     09ce          movi    -0a00H,a14              ;Push it towards gnd
         00017d80     f600  
    5595 00017d90     5dc1          mpys    a14,a1
    5596 00017da0     0b21          addi    016000H,a1
         00017db0 00016000  
    5597 00017dd0     b220          move    a1,*a0(OYVEL),L
         00017de0     0040  
    5598 00017df0     0960  pninx   rets
    5599                    
    5600                    
    5601                    
    5602 00017e00            SUBR   anipt_getsclxy
    5603                    
    5604 00017e00     4e40          move    a2,b0
    5605                    
    5606 00017e10     b50e          move    *a8(OZPOS),a14          ;894 to 1379 (Z range 486)
         00017e20     00d0  
    5607 00017e30     0bee          subi    GZBASE,a14              ;-Base
         00017e40     fc81  
    5608 00017e50     c501          jrge    rouxzok
    5609 00017e60     57ce          clr     a14
    5610 00017e70     2f8e  rouxzok srl     4,a14                   ;/16
    5611 00017e80     24ce          sll     6,a14                   ;*64
    5612 00017e90     b700          move    *a8(ODATA_p),a0,L
         00017ea0     01c0  
    5613 00017eb0     1000          addk    32,a0
    5614 00017ec0     41c0          add     a14,a0
    5615                    
    5616 00017ed0     940e          move    *a0+,a14
    5617 00017ee0     248e          sll     4,a14                   ;*16
    5618 00017ef0     b702          move    *a8(OIMG),a2,L
         00017f00     0170  
    5619                    
    5620 00017f10     b441          move    *a2(IANIOFFX),a1
         00017f20     0020  
    5621 00017f30     5dc1          mpys    a14,a1
    5622 00017f40     840e          move    *a0,a14
    5623 00017f50     248e          sll     4,a14                   ;*16
    5624 00017f60     4c20          move    a1,a0
    5625                    
    5626 00017f70     b441          move    *a2(IANIOFFY),a1
         00017f80     0030  
    5627 00017f90     5dc1          mpys    a14,a1
    5628                    
    5629                    
    5630 00017fa0     b50e          move    *a8(OCTRL),a14
         00017fb0     00f0  
    5631 00017fc0     1f6e          btst    B_FLIPH,a14
    5632 00017fd0     ca05          jrz     rouxx                   ;No flip?
    5633                    
    5634 00017fe0     8442          move    *a2,a2                  ;ISIZEX
    5635 00017ff0     1422          subk    1,a2
    5636 00018000     2602          sll     16,a2                   ;*64K
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  133

    5637 00018010     03a0          neg     a0
    5638 00018020     4040          add     a2,a0                   ;+size
    5639                    
    5640                    
    5641 00018030     4e12  rouxx   move    b0,a2
    5642 00018040     0960          rets
    5643                    
    5644                    
    5645                    
    5646 00018050            SUBRP  anipt2_getsclxy
    5647                    
    5648 00018050     4e40          move    a2,b0
    5649                    
    5650 00018060     b50e          move    *a8(OZPOS),a14          ;894 to 1379 (Z range 486)
         00018070     00d0  
    5651 00018080     0bee          subi    GZBASE,a14              ;-Base
         00018090     fc81  
    5652 000180a0     c501          jrge    ygupzok
    5653 000180b0     57ce          clr     a14
    5654 000180c0     2f8e  ygupzok srl     4,a14                   ;/16
    5655 000180d0     24ce          sll     6,a14                   ;*64
    5656 000180e0     b700          move    *a8(ODATA_p),a0,L
         000180f0     01c0  
    5657 00018100     1000          addk    32,a0
    5658 00018110     41c0          add     a14,a0
    5659                    
    5660 00018120     940e          move    *a0+,a14
    5661 00018130     248e          sll     4,a14                   ;*16
    5662 00018140     b702          move    *a8(OIMG),a2,L
         00018150     0170  
    5663                    
    5664 00018160     b441          move    *a2(IANI2X),a1
         00018170     0090  
    5665 00018180     5dc1          mpys    a14,a1
    5666 00018190     840e          move    *a0,a14
    5667 000181a0     248e          sll     4,a14                   ;*16
    5668 000181b0     4c20          move    a1,a0
    5669                    
    5670 000181c0     b441          move    *a2(IANI2Y),a1
         000181d0     00a0  
    5671 000181e0     0b41          cmpi    -200,a1
         000181f0     00c7  
    5672 00018200     cb02          jrne    ygupynorm
    5673 00018210     2601          sll     16,a1
    5674 00018220     c001          jruc    ygupcflip
    5675 00018230     5dc1  ygupynorm       mpys    a14,a1
    5676                    
    5677                    
    5678 00018240     b50e  ygupcflip       move    *a8(OCTRL),a14
         00018250     00f0  
    5679 00018260     1f6e          btst    B_FLIPH,a14
    5680 00018270     ca05          jrz     ygupx                   ;No flip?
    5681                    
    5682 00018280     8442          move    *a2,a2                  ;ISIZEX
    5683 00018290     1422          subk    1,a2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  134

    5684 000182a0     2602          sll     16,a2                   ;*64K
    5685 000182b0     03a0          neg     a0
    5686 000182c0     4040          add     a2,a0                   ;+size
    5687                    
    5688                    
    5689 000182d0     4e12  ygupx   move    b0,a2
    5690 000182e0     0960          rets
    5691                    
    5692                    
    5693                    
    5694                    
    5695 000182f0            SUBR   anipt3_getsclxy
    5696                    
    5697 000182f0     4e40          move    a2,b0
    5698                    
    5699 00018300     b50e          move    *a8(OZPOS),a14          ;894 to 1379 (Z range 486)
         00018310     00d0  
    5700 00018320     0bee          subi    GZBASE,a14              ;-Base
         00018330     fc81  
    5701 00018340     c501          jrge    hkomzok
    5702 00018350     57ce          clr     a14
    5703 00018360     2f8e  hkomzok srl     4,a14                   ;/16
    5704 00018370     24ce          sll     6,a14                   ;*64
    5705 00018380     b700          move    *a8(ODATA_p),a0,L
         00018390     01c0  
    5706 000183a0     1000          addk    32,a0
    5707 000183b0     41c0          add     a14,a0
    5708                    
    5709 000183c0     940e          move    *a0+,a14
    5710 000183d0     248e          sll     4,a14                   ;*16
    5711 000183e0     b702          move    *a8(OIMG),a2,L
         000183f0     0170  
    5712                    
    5713 00018400     b441          move    *a2(IANI3X),a1
         00018410     00d0  
    5714 00018420     5dc1          mpys    a14,a1
    5715 00018430     840e          move    *a0,a14
    5716 00018440     248e          sll     4,a14                   ;*16
    5717 00018450     4c20          move    a1,a0
    5718                    
    5719                    
    5720 00018460     b441          move    *a2(IANI3Y),a1
         00018470     00e0  
    5721 00018480     5dc1          mpys    a14,a1
    5722                    
    5723                    
    5724 00018490     b50e  hkomcflip       move    *a8(OCTRL),a14
         000184a0     00f0  
    5725 000184b0     1f6e          btst    B_FLIPH,a14
    5726 000184c0     ca05          jrz     hkomx                   ;No flip?
    5727                    
    5728 000184d0     8442          move    *a2,a2                  ;ISIZEX
    5729 000184e0     1422          subk    1,a2
    5730 000184f0     2602          sll     16,a2                   ;*64K
    5731 00018500     03a0          neg     a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  135

    5732 00018510     4040          add     a2,a0                   ;+size
    5733                    
    5734                    
    5735 00018520     4e12  hkomx   move    b0,a2
    5736 00018530     0960          rets
    5737                    
    5738                    
    5739                    
    5740                    
    5741 00018540            SUBRP  plyr_setshadow
    5742                    
    5743 00018540     b7a4          move    *a13(plyr_shadobj_p),a4,L
         00018550     04d0  
    5744                    
    5745 00018560     b500          move    *a8(OZPOS),a0
         00018570     00d0  
    5746 00018580     4c01          move    a0,a1
    5747 00018590     0be1          subi    50,a1                   ;Adjust
         000185a0     ffcd  
    5748 000185b0     b024          move    a1,*a4(OZPOS)
         000185c0     00d0  
    5749                    
    5750 000185d0     0be0          subi    CZMIN,a0                ;-Base
         000185e0     fc17  
    5751 000185f0     c501          jrge    czwezok
    5752 00018600     5600          clr     a0
    5753 00018610     2f60  czwezok srl     5,a0                    ;/32
    5754 00018620     b501          move    *a8(OYPOS),a1
         00018630     00b0  
    5755 00018640     b5ae          move    *a13(plyr_aniy),a14
         00018650     0420  
    5756 00018660     41c1          add     a14,a1                  ;Ani pt position
    5757 00018670     2b81          sra     4,a1                    ;/16 (Neg)
    5758 00018680     4020          add     a1,a0
    5759 00018690     24a0          sll     5,a0                    ;*32
    5760 000186a0     0b20          addi    czweani_t,a0
         000186b0 00018a10' 
    5761 000186d0     8602          move    *a0,a2,L
    5762 000186e0     b244          move    a2,*a4(OIMG),L          ;Set new img
         000186f0     0170  
    5763 00018700     864e          move    *a2,a14,L
    5764 00018710     b3c4          move    a14,*a4(OSIZE),L
         00018720     0130  
    5765 00018730     ba44          move    *a2(ISAG),*a4(OSAG),L
         00018740     0040  
         00018750     0110  
    5766                    
    5767 00018760     0d3f          callr   anipt_getsclxy
         00018770     ff68  
    5768                    
    5769 00018780     b443          move    *a2(IANIOFFX),a3
         00018790     0020  
    5770 000187a0     2603          sll     16,a3
    5771 000187b0     b264          move    a3,*a4(OXANI),L
         000187c0     01e0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  136

    5772                    
    5773 000187d0     b70e          move    *a8(OXVAL),a14,L
         000187e0     0080  
    5774 000187f0     400e          add     a0,a14                  ;Ani X
    5775 00018800     446e          sub     a3,a14
    5776 00018810     b3c4          move    a14,*a4(OXVAL),L
         00018820     0080  
    5777                    
    5778 00018830     b443          move    *a2(IANIOFFY),a3
         00018840     0030  
    5779 00018850     03a3          neg     a3
    5780 00018860     b064          move    a3,*a4(OYPOS)
         00018870     00b0  
    5781                    
    5782 00018880     0960          rets
    5783                    
    5784                    
    5785 00018890 00000000!         .long   shadow15,shadow15,shadow15,shadow15
    5786 00018910 00000000!         .long   shadow15,shadow15,shadow15,shadow15
    5787 00018990 00000000!         .long   shadow15,shadow14,shadow13,shadow12
    5788 00018a10 00000000! czweani_t       .long   shadow11,shadow10,shadow9,shadow8
    5789 00018a90 00000000!         .long   shadow7,shadow6,shadow5,shadow4
    5790 00018b10 00000000!         .long   shadow3,shadow2,shadow1,shadow1
    5791 00018b90 00000000!         .long   shadow1,shadow1,shadow1
    5792                    
    5793                    
    5794                    
    5795                    
    5796 00018bf0            SUBRP  plyr_headalign
    5797                    
    5798 00018bf0     b7a6          move    *a13(plyr_headobj_p),a6,L ;0A6H=*Head obj
         00018c00     04b0  
    5799                    
    5800 00018c10     b700          move    *a8(OIMG),a0,L          ;>Set Z
         00018c20     0170  
    5801 00018c30     b50e          move    *a8(OZPOS),a14
         00018c40     00d0  
    5802 00018c50     b401          move    *a0(IANI3Z),a1
         00018c60     00f0  
    5803 00018c70     402e          add     a1,a14
    5804 00018c80     b1c6          move    a14,*a6(OZPOS)
         00018c90     00d0  
    5805 00018ca0     442e          sub     a1,a14
    5806 00018cb0     03a1          neg     a1
    5807 00018cc0     b026          move    a1,*a6(OMISC)           ;Z offset
         00018cd0     0210  
    5808                    
    5809                                                            ;0CaHlc head scale anixy (A3,A5)
    5810 00018ce0     0bee          subi    GZBASE,a14              ;-Base
         00018cf0     fc81  
    5811 00018d00     c501          jrge    krbazok
    5812 00018d10     57ce          clr     a14
    5813 00018d20     2f8e  krbazok srl     4,a14                   ;/16
    5814 00018d30     24ce          sll     6,a14                   ;*64
    5815 00018d40     b6c0          move    *a6(ODATA_p),a0,L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  137

         00018d50     01c0  
    5816 00018d60     1000          addk    32,a0
    5817 00018d70     41c0          add     a14,a0
    5818                    
    5819 00018d80     940e          move    *a0+,a14
    5820 00018d90     248e          sll     4,a14                   ;*16
    5821 00018da0     b6c2          move    *a6(OIMG),a2,L
         00018db0     0170  
    5822                    
    5823 00018dc0     b443          move    *a2(IANIOFFX),a3
         00018dd0     0020  
    5824 00018de0     5dc3          mpys    a14,a3
    5825                    
    5826 00018df0     840e          move    *a0,a14
    5827 00018e00     248e          sll     4,a14                   ;*16
    5828                    
    5829 00018e10     b445          move    *a2(IANIOFFY),a5
         00018e20     0030  
    5830 00018e30     5dc5          mpys    a14,a5
    5831                    
    5832 00018e40     b4ce          move    *a6(OCTRL),a14
         00018e50     00f0  
    5833 00018e60     1f6e          btst    B_FLIPH,a14
    5834 00018e70     ca05          jrz     krbanohf                        ;No flip?
    5835                    
    5836 00018e80     8442          move    *a2,a2                  ;ISIZEX
    5837 00018e90     1422          subk    1,a2
    5838 00018ea0     2602          sll     16,a2                   ;*64K
    5839 00018eb0     03a3          neg     a3
    5840 00018ec0     4043          add     a2,a3                   ;+size
    5841 00018ed0           krbanohf
    5842                    
    5843 00018ed0     0d3f          callr   anipt3_getsclxy
         00018ee0     ff40  
    5844                    
    5845 00018ef0     b70e          move    *a8(OYVAL),a14,L
         00018f00     00a0  
    5846 00018f10     402e          add     a1,a14                  ;Ani3 Y
    5847 00018f20     44ae          sub     a5,a14
    5848 00018f30     b3c6          move    a14,*a6(OYVAL),L
         00018f40     00a0  
    5849                    
    5850 00018f50     b70e          move    *a8(OXVAL),a14,L
         00018f60     0080  
    5851 00018f70     4dc1          move    a14,a1
    5852 00018f80     400e          add     a0,a14                  ;Ani3 X
    5853 00018f90     446e          sub     a3,a14
    5854 00018fa0     b3c6          move    a14,*a6(OXVAL),L
         00018fb0     0080  
    5855                    
    5856 00018fc0     b700          move    *a8(OXANI),a0,L         ;Make head X+ani = plyr X+ani
         00018fd0     01e0  
    5857 00018fe0     4001          add     a0,a1
    5858 00018ff0     45c1          sub     a14,a1
    5859 00019000     b226          move    a1,*a6(OXANI),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  138

         00019010     01e0  
    5860                    
    5861 00019020     0960          rets
    5862                    
    5863                    
    5864                    
    5865                    
    5866 00019030            SUBRP  plyr_referee
    5867                    
    5868 00019030     1820          movk    1,a0
    5869 00019040     0d3f          callr   plyr_setac
         00019050     0a8c  
    5870                    
    5871 00019060     09e0          movi    [WRLDMID,0],a0
         00019070 20000000  
    5872 00019090     5621          clr     a1
    5873 000190a0     09e2          movi    shadow7,a2
         000190b0 00000000! 
    5874 000190d0     09c3          movi    CZMID-30-1,a3
         000190e0     0473  
    5875 000190f0     09e4          movi    DMAWNZ|M_3D|M_SHAD|M_NOCOLL,a4
         00019100 00008b02  
    5876 00019120     09c5          movi    CLSDEAD,a5
         00019130     2000  
    5877 00019140     56c6          clr     a6
    5878 00019150     56e7          clr     a7
    5879 00019160     0d5f          calla   BEGINOBJ2
         00019170 00000000! 
    5880 00019190     4d0b          move    a8,a11
    5881                    
    5882 000191a0     09e0          movi    [WRLDMID,0],a0
         000191b0 20000000  
    5883 000191d0     5621          clr     a1
    5884 000191e0     09e2          movi    reftip1,a2
         000191f0 00000000! 
    5885 00019210     09c3          movi    CZMID-30,a3
         00019220     0474  
    5886 00019230     09e4          movi    DMAWNZ|M_3D|M_NOCOLL,a4
         00019240 00008902  
    5887 00019260     0d5f          calla   BEGINOBJ2
         00019270 00000000! 
    5888                    
    5889 00019290     09e0          movi    wvujatt_t,a0
         000192a0 00019880' 
    5890 000192c0     b20d          move    a0,*a13(plyr_attrib_p),L
         000192d0     0150  
    5891                    
    5892 000192e0     09e0          movi    scale63_t,a0
         000192f0 00000000! 
    5893 00019310     b208          move    a0,*a8(ODATA_p),L
         00019320     01c0  
    5894                    
    5895 00019330                   SLEEPK  5
    5896                    
    5897 00019370     1820          movk    1,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  139

    5898 00019380     b00d          move    a0,*a13(plyr_ownball)           ;!0=Ref has ball
         00019390     0260  
    5899 000193a0     1b20          movk    25,a0
    5900 000193b0     b00d          move    a0,*a13(plyr_ballzo)
         000193c0     02a0  
    5901                    
    5902 000193d0     09e9          movi    wvujani_l,a9
         000193e0 000198c0' 
    5903 00019400     182a          movk    1,a10
    5904 00019410           wvujlp
    5905 00019410     3aca          dsj     a10,wvujnoani
    5906                    
    5907 00019420     952a  wvujgetwt       move    *a9+,a10
    5908 00019430     ca35          jrz     wvujrefdone
    5909 00019440     cf03          jrnn    wvujnocode
    5910                            
    5911 00019450     9720          move    *a9+,a0,L                       ;Call function
    5912 00019460     0920          call    a0
    5913 00019470     c0fa          jruc    wvujgetwt
    5914 00019480           wvujnocode
    5915 00019480     9720          move    *a9+,a0,L
    5916 00019490     1841          movk    M_WRNONZ,a1
    5917 000194a0     0d3f          callr   plyr_ani
         000194b0     f336  
    5918                    
    5919 000194c0     0d3f          callr   anipt2_getsclxy
         000194d0     feb7  
    5920 000194e0     b20d          move    a0,*a13(plyr_ballxo),L
         000194f0     0270  
    5921 00019500     2a01          sra     16,a1
    5922 00019510     b02d          move    a1,*a13(plyr_ballyo)
         00019520     0290  
    5923                    
    5924 00019530     b5a1          move    *a13(plyr_aniy),a1
         00019540     0420  
    5925 00019550     03a1          neg     a1
    5926 00019560     b028          move    a1,*a8(OYPOS)                   ;Set on gnd
         00019570     00b0  
    5927                    
    5928 00019580           wvujnoani
    5929 00019580     b5a0          move    *a13(plyr_ownball),a0
         00019590     0260  
    5930 000195a0     ca02          jrz     wvujnoball                              ;Tossed up?
    5931                    
    5932 000195b0     0d3f          callr   plyr_setballxyz
         000195c0     fe32  
    5933 000195d0           wvujnoball
    5934 000195d0     0d3f          callr   joy_read2                       ;Scan buttons since ac is on
         000195e0     f11c  
    5935                    
    5936 000195f0     5600          clr     a0
    5937 00019600     0580          move    a0,@P1CTRL
         00019610 00000070- 
    5938 00019630     0580          move    a0,@P4CTRL
         00019640 000000a0- 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  140

    5939                    
    5940 00019660     09e1          movi    P1CTRL,a1                       ;>Kill unwanted bits
         00019670 00000070- 
    5941 00019690     1890          movk    4,b0
    5942 000196a0     8420  wvujjlp move    *a1,a0
    5943 000196b0     0b80          andi    BUT1_M<<8+BUT1_M,a0
         000196c0 ffffefef  
    5944 000196e0     9001          move    a0,*a1+
    5945 000196f0     3cd0          dsj     b0,wvujjlp
    5946                    
    5947 00019700                   SLEEPK  1
    5948 00019740     05a0          move    @HALT,a0
         00019750 00000000! 
    5949 00019770     cbe5          jrnz    wvujnoball
    5950 00019780     c0c8          jruc    wvujlp
    5951                    
    5952 00019790           wvujrefdone
    5953 00019790                   SLEEPK  5
    5954 000197d0     0d5f          calla   SCRTST
         000197e0 00000000! 
    5955 00019800     caf8          jrz     wvujrefdone                     ;Still on screen?
    5956 00019810     4d60          move    a11,a0
    5957 00019820     0d5f          calla   DELOBJ
         00019830 00000000! 
    5958 00019850     c080          jauc    DELOBJDIE
         00019860 00000000! 
    5959                    
    5960                    
    5961 00019880 00000000! wvujatt_t       .long   scale63_t,Ref_p
    5962                    
    5963                    
    5964 000198c0           wvujani_l       WL      TSEC,reftip1
    5965 000198f0                   WL      10,reftip2
    5966 00019920                   WL      10,reftip1
    5967 00019950                   WL      10,reftip3
    5968 00019980                   WL      10,reftip4
    5969 000199b0                   WL      10,reftip5
    5970 000199e0                   WL      -1,wvujdo_whstle
    5971 00019a10                   WL      10,reftip6
    5972 00019a40                   WL      10,reftip7
    5973 00019a70                   WL      10,reftip8
    5974 00019aa0                   WL      8,reftip9
    5975 00019ad0                   WL      7,reftip10
    5976 00019b00                   WL      7,reftip11
    5977 00019b30                   WL      7,reftip12
    5978 00019b60                   WL      -1,wvujtossball
    5979 00019b90                   WL      7,reftip13
    5980 00019bc0                   WL      7,reftip14
    5981 00019bf0                   WL      6,reftip15
    5982 00019c20                   WL      5,reftip16
    5983                    
    5984 00019c50                   WL      -1,wvujstep_back
    5985 00019c80                   WL      3,refbk1
    5986 00019cb0                   WL      3,refbk2
    5987 00019ce0                   WL      3,refbk3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  141

    5988 00019d10                   WL      3,refbk4
    5989 00019d40                   WL      3,refbk5
    5990 00019d70                   WL      3,refbk6
    5991 00019da0                   WL      3,refbk7
    5992 00019dd0                   WL      3,refbk8
    5993 00019e00                   WL      3,refbk1
    5994 00019e30                   WL      3,refbk2
    5995 00019e60                   WL      3,refbk3
    5996 00019e90                   WL      3,refbk4
    5997 00019ec0                   WL      3,refbk5
    5998 00019ef0                   WL      3,refbk6
    5999 00019f20                   WL      3,refbk7
    6000 00019f50                   WL      3,refbk8
    6001 00019f80                   WL      3,refbk1
    6002 00019fb0                   WL      3,refbk2
    6003 00019fe0                   WL      3,refbk3
    6004 0001a010                   WL      3,refbk4
    6005 0001a040                   WL      -1,wvujac_off
    6006 0001a070                   WL      3,refbk5
    6007 0001a0a0                   WL      3,refbk6
    6008 0001a0d0                   WL      3,refbk7
    6009 0001a100                   WL      3,refbk8
    6010 0001a130                   WL      3,refbk1
    6011 0001a160                   WL      3,refbk2
    6012 0001a190                   WL      3,refbk3
    6013 0001a1c0                   WL      3,refbk4
    6014 0001a1f0                   WL      3,refbk5
    6015 0001a220                   WL      3,refbk6
    6016 0001a250                   WL      3,refbk7
    6017 0001a280                   WL      3,refbk8
    6018 0001a2b0                   WL      3,refbk1
    6019 0001a2e0                   WL      3,refbk2
    6020 0001a310                   WL      3,refbk3
    6021 0001a340                   WL      3,refbk4
    6022 0001a370                   WL      3,refbk5
    6023 0001a3a0                   WL      3,refbk6
    6024 0001a3d0                   WL      3,refbk7
    6025 0001a400                   WL      -1,wvujstop_back
    6026 0001a430                   WL      5,refsqt5
    6027 0001a460                   W0
    6028                    
    6029                    
    6030 0001a470           wvujdo_whstle
    6031 0001a470     09e0          movi    whstle_snd,a0
         0001a480 00000280' 
    6032 0001a4a0     c080          jauc    snd_play1ovr
         0001a4b0 00000000! 
    6033                    
    6034                    
    6035 0001a4d0           wvujtossball
    6036 0001a4d0     07a1          move    @ballobj_p,a1,L
         0001a4e0 00000000! 
    6037 0001a500     09e0          movi    -GRAVB*44,a0
         0001a510 fff97800  
    6038 0001a530     b201          move    a0,*a1(OYVEL),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  142

         0001a540     0040  
    6039 0001a550     5600          clr     a0
    6040 0001a560     0580          move    a0,@clock_active                ;Turn on clock
         0001a570 00000000! 
    6041 0001a590     b00d          move    a0,*a13(plyr_ownball)           ;Let go
         0001a5a0     0260  
    6042 0001a5b0     0960          rets
    6043                    
    6044                    
    6045 0001a5c0           wvujstep_back
    6046 0001a5c0     09e0          movi    -14000h,a0
         0001a5d0 fffec000  
    6047 0001a5f0     b208          move    a0,*a8(OZVEL),L
         0001a600     0060  
    6048 0001a610     b20b          move    a0,*a11(OZVEL),L
         0001a620     0060  
    6049                    
    6050 0001a630     4d62          move    a11,a2
    6051                    
    6052 0001a640     07ab          move    @plyrproc_t+32,a11,L
         0001a650 00000650- 
    6053 0001a670                   CREATE  TIPID,plyr_tip
    6054                    
    6055 0001a6f0     07ab          move    @plyrproc_t+32*2,a11,L
         0001a700 00000670- 
    6056 0001a720                   CREATE  TIPID,plyr_tip
    6057                    
    6058 0001a7a0     4c4b          move    a2,a11
    6059                    
    6060 0001a7b0     0960          rets
    6061                    
    6062 0001a7c0           wvujac_off
    6063 0001a7c0     5600          clr     a0
    6064 0001a7d0     c000          jruc    plyr_setac
         0001a7e0     0913  
    6065                    
    6066                    
    6067 0001a7f0           wvujstop_back
    6068 0001a7f0     5600          clr     a0
    6069 0001a800     b208          move    a0,*a8(OZVEL),L
         0001a810     0060  
    6070 0001a820     b20b          move    a0,*a11(OZVEL),L
         0001a830     0060  
    6071 0001a840     0960          rets
    6072                    
    6073                    
    6074 00004850                   .bss    t1bcnt  ,16     ;Team1 (p1) # button hits
    6075 00004860                   .bss    t2bcnt  ,16     ;Team2 (p2) ^
    6076                    
    6077 0001a850            SUBRP  plyr_tip
    6078                    
    6079 0001a850     b768          move    *a11(PA8),a8,L
         0001a860     00c0  
    6080                    
    6081 0001a870                   PUSH    a13
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  143

    6082 0001a880     4d6d          move    a11,a13
    6083                    
    6084 0001a890     09c0          movi    TIPJ_SEQ,a0
         0001a8a0     003c  
    6085 0001a8b0     b5a7          move    *a13(plyr_dir),a7
         0001a8c0     03d0  
    6086 0001a8d0     0d3f          callr   plyr_setseq
         0001a8e0     efa1  
    6087 0001a8f0     b34d          move    a10,*a13(PA10),L
         0001a900     0080  
    6088                    
    6089 0001a910                   PULL    a13
    6090 0001a920                   SLEEPK  6
    6091                    
    6092                    
    6093 0001a960     09e0          movi    -GRAVB*30,a0
         0001a970 fffb8c00  
    6094 0001a990     b208          move    a0,*a8(OYVEL),L
         0001a9a0     0040  
    6095 0001a9b0     1820          movk    1,a0                    ;Start jump
    6096 0001a9c0     b00b          move    a0,*a11(plyr_jmpcnt)
         0001a9d0     0400  
    6097                    
    6098 0001a9e0     09e9          movi    t1bcnt,a9               ;0CHount button1 down presses
         0001a9f0 00004850- 
    6099 0001aa10     b561          move    *a11(plyr_num),a1
         0001aa20     0100  
    6100 0001aa30     1fc1          btst    1,a1
    6101 0001aa40     ca01          jrz     iodtt1
    6102 0001aa50     1209          addk    16,a9
    6103 0001aa60     5600  iodtt1  clr     a0
    6104 0001aa70     05ae          move    @PSTATUS,a14
         0001aa80 00000060- 
    6105 0001aaa0     4a2e          btst    a1,a14
    6106 0001aab0     cb01          jrnz    iodthuman                       ;Human opponent?
    6107 0001aac0     1860          movk    3,a0                    ;Drones # presses
    6108 0001aad0     8009  iodthuman       move    a0,*a9
    6109                    
    6110 0001aae0     1b2a          movk    25,a10
    6111 0001aaf0           iodtlp
    6112 0001aaf0     b760          move    *a11(PA11),a0,L
         0001ab00     0060  
    6113 0001ab10     8400          move    *a0,a0
    6114 0001ab20     1e60          btst    BUT1_B+8,a0
    6115 0001ab30     ca03          jrz     iodtnoprs                       ;No down transition?
    6116 0001ab40     8520          move    *a9,a0                  ;+1 cnt
    6117 0001ab50     1020          addk    1,a0
    6118 0001ab60     8009          move    a0,*a9
    6119 0001ab70           iodtnoprs
    6120 0001ab70                   SLEEPK  1
    6121 0001abb0     3daa          dsj     a10,iodtlp
    6122                    
    6123 0001abc0     b565          move    *a11(plyr_num),a5
         0001abd0     0100  
    6124                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  144

    6125 0001abe0     09e2          movi    t1bcnt,a2
         0001abf0 00004850- 
    6126 0001ac10     9440          move    *a2+,a0
    6127 0001ac20     9441          move    *a2+,a1
    6128 0001ac30     1fc5          btst    1,a5
    6129 0001ac40     ca03          jrz     iodttm1
    6130 0001ac50                   SWAP    a0,a1
    6131 0001ac80           iodttm1
    6132 0001ac80     4820          cmp     a1,a0
    6133 0001ac90     c423          jrlt    iodtx                   ;Less presses than opponent?
    6134                    
    6135 0001aca0     09e0          movi    -018000H,a0
         0001acb0 fffe8000  
    6136 0001acd0     09e1          movi    -0f000H,a1
         0001ace0 ffff1000  
    6137 0001ad00     09c3          movi    -20,a3
         0001ad10     ffec  
    6138 0001ad20     1fc5          btst    1,a5
    6139 0001ad30     ca03          jrz     iodttm1a
    6140                    
    6141 0001ad40     03a0          neg     a0
    6142 0001ad50     03a1          neg     a1
    6143 0001ad60     03a3          neg     a3
    6144 0001ad70           iodttm1a
    6145 0001ad70     07a2          move    @ballobj_p,a2,L
         0001ad80 00000000! 
    6146                    
    6147 0001ada0     b444          move    *a2(OXPOS),a4
         0001adb0     0090  
    6148 0001adc0     4064          add     a3,a4
    6149 0001add0     b082          move    a4,*a2(OXPOS)
         0001ade0     0090  
    6150 0001adf0     b202          move    a0,*a2(OXVEL),L
         0001ae00     0020  
    6151 0001ae10     b222          move    a1,*a2(OZVEL),L
         0001ae20     0060  
    6152                    
    6153 0001ae30     09e0          movi    -GRAVB*10,a0
         0001ae40 fffe8400  
    6154 0001ae60     b202          move    a0,*a2(OYVEL),L
         0001ae70     0040  
    6155                    
    6156 0001ae80     09c0          movi    TIPID,a0
         0001ae90     0091  
    6157 0001aea0     0d5f          calla   KIL1C
         0001aeb0 00000000! 
    6158                    
    6159 0001aed0           iodtx
    6160                    
    6161 0001aed0     09e0          movi    swat_snd,a0
         0001aee0 00000080' 
    6162 0001af00     0d5f          calla   snd_play1
         0001af10 00000000! 
    6163                    
    6164 0001af30                   DIE
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  145

    6165                    
    6166                    
    6167                    
    6168 0001af60            SUBR   plyr_endofqrtr
    6169                    
    6170 0001af60     09c0          movi    1000,a0
         0001af70     03e8  
    6171 0001af80     0580          move    a0,@cntrs_delay         ;Delay credit timers
         0001af90 00000000! 
    6172                    
    6173 0001afb0     05a0          move    @gmqrtr,a0              ;Next quarter
         0001afc0 00000000! 
    6174 0001afe0     1020          addk    1,a0
    6175 0001aff0     0580          move    a0,@gmqrtr
         0001b000 00000000! 
    6176 0001b020     1420          subk    1,a0
    6177 0001b030     cb34          jrne    fbmhnot1st
    6178                    
    6179                    
    6180 0001b040     09c0          movi    AUD_1STQUARTR,a0        ;01Hst guarter
         0001b050     0027  
    6181 0001b060     0d5f          calla   AUD1
         0001b070 00000000! 
    6182                    
    6183 0001b090                   JSRP    plyr_endqfinishshot
    6184                    
    6185 0001b100     5600          clr     a0
    6186 0001b110     0780          move    a0,@kp_qscrs,L
         0001b120 00004730- 
    6187 0001b140     0780          move    a0,@kp_qscrs+32,L
         0001b150 00004750- 
    6188 0001b170     0780          move    a0,@kp_qscrs+64,L
         0001b180 00004770- 
    6189 0001b1a0     0780          move    a0,@kp_qscrs+96,L
         0001b1b0 00004790- 
    6190                    
    6191 0001b1d0     05a0          move    @scores,a0
         0001b1e0 00000000! 
    6192 0001b200     0580          move    a0,@kp_qscrs
         0001b210 00004730- 
    6193 0001b230     05a0          move    @scores+16,a0
         0001b240 00000010! 
    6194 0001b260     0580          move    a0,@kp_qscrs+16
         0001b270 00004740- 
    6195                    
    6196 0001b290     09e0          movi    tuneend1_snd,a0
         0001b2a0 00000300' 
    6197 0001b2c0     0d5f          calla   snd_play1ovr
         0001b2d0 00000000! 
    6198                    
    6199 0001b2f0                   JSRP    hint_page
    6200 0001b360     c000          jruc    fbmhtob
         0001b370     0267  
    6201                    
    6202                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  146

    6203 0001b380           fbmhnot1st
    6204 0001b380     1420          subk    1,a0
    6205 0001b390     cb00          jrne    fbmhnothalf
         0001b3a0     0117  
    6206                    
    6207 0001b3b0     09c0          movi    AUD_HALFTIME,a0         ;02Hnd quarter
         0001b3c0     0028  
    6208 0001b3d0     0d5f          calla   AUD1
         0001b3e0 00000000! 
    6209                    
    6210 0001b400                   JSRP    plyr_endqfinishshot
    6211                    
    6212 0001b470     05a0          move    @scores,a0
         0001b480 00000000! 
    6213 0001b4a0     05ae          move    @kp_qscrs,a14
         0001b4b0 00004730- 
    6214 0001b4d0     45c0          sub     a14,a0
    6215 0001b4e0     0580          move    a0,@kp_qscrs+32
         0001b4f0 00004750- 
    6216 0001b510     05a0          move    @scores+16,a0
         0001b520 00000010! 
    6217 0001b540     05ae          move    @kp_qscrs+16,a14
         0001b550 00004740- 
    6218 0001b570     45c0          sub     a14,a0
    6219 0001b580     0580          move    a0,@kp_qscrs+48
         0001b590 00004760- 
    6220                    
    6221 0001b5b0     09e0          movi    tunehalf_snd,a0
         0001b5c0 00000340' 
    6222 0001b5e0     0d5f          calla   snd_play1ovr
         0001b5f0 00000000! 
    6223                    
    6224 0001b610                   JSRP    halftime_showclips
    6225                    
    6226                    
    6227 0001b680     5600          clr     a0
    6228 0001b690                   JSRP    stats_page2
    6229                    
    6230 0001b700     09e2          movi    t1dunkcnt,a2            ;>Setup most dunking team for board shatter
         0001b710 00000000! 
    6231 0001b730     8441          move    *a2,a1
    6232 0001b740     0b41          cmpi    3,a1
         0001b750     fffc  
    6233 0001b760     c403          jrlt    fbmhnobrk                       ;!Enough dunks?
    6234 0001b770     1441          subk    2,a1
    6235 0001b780     03a1          neg     a1
    6236 0001b790     8022          move    a1,*a2                  ;New cnt
    6237 0001b7a0           fbmhnobrk
    6238 0001b7a0     09e2          movi    t1dunkcnt+16,a2         ;>Setup most dunking team for board shatter
         0001b7b0 00000010! 
    6239 0001b7d0     8441          move    *a2,a1
    6240 0001b7e0     0b41          cmpi    3,a1
         0001b7f0     fffc  
    6241 0001b800     c403          jrlt    fbmhnobrk2                      ;!Enough dunks?
    6242 0001b810     1441          subk    2,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  147

    6243 0001b820     03a1          neg     a1
    6244 0001b830     8022          move    a1,*a2                  ;New cnt
    6245 0001b840           fbmhnobrk2
    6246                    
    6247                    
    6248 0001b840     07a8          move    @plyrproc_t,a8,L
         0001b850 00000630- 
    6249 0001b870     b700          move    *a8(plyr_headobj_p),a0,L
         0001b880     04b0  
    6250 0001b890     0d5f          calla   DELOBJ
         0001b8a0 00000000! 
    6251 0001b8c0     b700          move    *a8(plyr_shadobj_p),a0,L
         0001b8d0     04d0  
    6252 0001b8e0     0d5f          calla   DELOBJ
         0001b8f0 00000000! 
    6253 0001b910     4d00          move    a8,a0
    6254 0001b920     0d5f          calla   KILL
         0001b930 00000000! 
    6255                    
    6256 0001b950     07a8          move    @plyrproc_t+32,a8,L
         0001b960 00000650- 
    6257 0001b980     b700          move    *a8(plyr_headobj_p),a0,L
         0001b990     04b0  
    6258 0001b9a0     0d5f          calla   DELOBJ
         0001b9b0 00000000! 
    6259 0001b9d0     b700          move    *a8(plyr_shadobj_p),a0,L
         0001b9e0     04d0  
    6260 0001b9f0     0d5f          calla   DELOBJ
         0001ba00 00000000! 
    6261 0001ba20     4d00          move    a8,a0
    6262 0001ba30     0d5f          calla   KILL
         0001ba40 00000000! 
    6263                    
    6264 0001ba60     07a8          move    @plyrproc_t+64,a8,L
         0001ba70 00000670- 
    6265 0001ba90     b700          move    *a8(plyr_headobj_p),a0,L
         0001baa0     04b0  
    6266 0001bab0     0d5f          calla   DELOBJ
         0001bac0 00000000! 
    6267 0001bae0     b700          move    *a8(plyr_shadobj_p),a0,L
         0001baf0     04d0  
    6268 0001bb00     0d5f          calla   DELOBJ
         0001bb10 00000000! 
    6269 0001bb30     4d00          move    a8,a0
    6270 0001bb40     0d5f          calla   KILL
         0001bb50 00000000! 
    6271                    
    6272 0001bb70     07a8          move    @plyrproc_t+96,a8,L
         0001bb80 00000690- 
    6273 0001bba0     b700          move    *a8(plyr_headobj_p),a0,L
         0001bbb0     04b0  
    6274 0001bbc0     0d5f          calla   DELOBJ
         0001bbd0 00000000! 
    6275 0001bbf0     b700          move    *a8(plyr_shadobj_p),a0,L
         0001bc00     04d0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  148

    6276 0001bc10     0d5f          calla   DELOBJ
         0001bc20 00000000! 
    6277 0001bc40     4d00          move    a8,a0
    6278 0001bc50     0d5f          calla   KILL
         0001bc60 00000000! 
    6279                    
    6280                    
    6281 0001bc80     07a0          move    @plyrobj_t,a0,L
         0001bc90 000005b0- 
    6282 0001bcb0     0d5f          calla   DELOBJ
         0001bcc0 00000000! 
    6283 0001bce0     07a0          move    @plyrobj_t+32,a0,L
         0001bcf0 000005d0- 
    6284 0001bd10     0d5f          calla   DELOBJ
         0001bd20 00000000! 
    6285 0001bd40     07a0          move    @plyrobj_t+64,a0,L
         0001bd50 000005f0- 
    6286 0001bd70     0d5f          calla   DELOBJ
         0001bd80 00000000! 
    6287 0001bda0     07a0          move    @plyrobj_t+96,a0,L
         0001bdb0 00000610- 
    6288 0001bdd0     0d5f          calla   DELOBJ
         0001bde0 00000000! 
    6289                    
    6290 0001be00     09c0          movi    P1_PID,a0
         0001be10     1000  
    6291 0001be20     0d5f          calla   KIL1C
         0001be30 00000000! 
    6292 0001be50     09c0          movi    P2_PID,a0
         0001be60     1100  
    6293 0001be70     0d5f          calla   KIL1C
         0001be80 00000000! 
    6294 0001bea0     09c0          movi    P3_PID,a0
         0001beb0     1200  
    6295 0001bec0     0d5f          calla   KIL1C
         0001bed0 00000000! 
    6296 0001bef0     09c0          movi    P4_PID,a0
         0001bf00     1300  
    6297 0001bf10     0d5f          calla   KIL1C
         0001bf20 00000000! 
    6298 0001bf40     09c0          movi    P1_PID,a0
         0001bf50     1000  
    6299 0001bf60     0d5f          calla   obj_del1c
         0001bf70 00000000! 
    6300 0001bf90     09c0          movi    P2_PID,a0
         0001bfa0     1100  
    6301 0001bfb0     0d5f          calla   obj_del1c
         0001bfc0 00000000! 
    6302 0001bfe0     09c0          movi    P3_PID,a0
         0001bff0     1200  
    6303 0001c000     0d5f          calla   obj_del1c
         0001c010 00000000! 
    6304 0001c030     09c0          movi    P4_PID,a0
         0001c040     1300  
    6305 0001c050     0d5f          calla   obj_del1c
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  149

         0001c060 00000000! 
    6306 0001c080                   CREATE0 doplyrs
    6307                     
    6308 0001c0f0     09c0          movi    ARWPID,a0
         0001c100     0092  
    6309 0001c110     0d5f          calla   KIL1C
         0001c120 00000000! 
    6310 0001c140     09c0          movi    arwid,a0
         0001c150     008c  
    6311 0001c160     0d5f          calla   obj_del1c
         0001c170 00000000! 
    6312 0001c190     09c0          movi    ARWPID,a0
         0001c1a0     0092  
    6313 0001c1b0     0d5f          calla   obj_del1c
         0001c1c0 00000000! 
    6314                    
    6315 0001c1e0                   CREATE0 delay_arws
    6316                    
    6317 0001c250     1820          movk    1,a0
    6318 0001c260     0580          move    a0,@HALT
         0001c270 00000000! 
    6319                    
    6320                    
    6321 0001c290     c000          jruc    fbmhtob
         0001c2a0     0174  
    6322                    
    6323 0001c2b0           delay_arws
    6324                    
    6325                    
    6326 0001c2b0                   SLEEPK  10
    6327                    
    6328                            .ref    start_arws
    6329 0001c2f0     0d5f          calla   start_arws
         0001c300 00000000! 
    6330                    
    6331 0001c320                   SLEEPK  8
    6332                    
    6333 0001c360     5600          clr     a0
    6334 0001c370     0580          move    a0,@HALT
         0001c380 00000000! 
    6335                    
    6336 0001c3a0                   DIE
    6337                    
    6338 0001c3d0           doplyrs
    6339                    
    6340 0001c3d0     09e2          movi    plyrproc_t+4*32,a2
         0001c3e0 000006b0- 
    6341 0001c400     09e9          movi    plyrobj_t+3*32,a9
         0001c410 00000610- 
    6342 0001c430     1868          movk    3,a8
    6343 0001c440           fbmhstrtp       CREATE  1000h,plyr_main
    6344 0001c4c0     a202          move    a0,-*a2,L               ;Save *proc
    6345 0001c4d0     1409          subk    32,a9
    6346 0001c4e0     3d68          dsj     a8,fbmhstrtp
    6347                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  150

    6348 0001c4f0     a3a2          move    a13,-*a2,L
    6349 0001c500     c000          jruc    plyr_main               ;fbmh0
         0001c510     e47c  
    6350                    
    6351                    
    6352 0001c520           fbmhnothalf
    6353 0001c520     1420          subk    1,a0
    6354 0001c530     cb37          jrne    fbmhnot3rd
    6355                    
    6356 0001c540     09c0          movi    AUD_3RDQUARTR,a0        ;03Hrd quarter
         0001c550     0029  
    6357 0001c560     0d5f          calla   AUD1
         0001c570 00000000! 
    6358 0001c590                   JSRP    plyr_endqfinishshot
    6359                    
    6360 0001c600     05a0          move    @scores,a0
         0001c610 00000000! 
    6361 0001c630     05ae          move    @kp_qscrs,a14
         0001c640 00004730- 
    6362 0001c660     05a1          move    @kp_qscrs+32,a1
         0001c670 00004750- 
    6363 0001c690     402e          add     a1,a14
    6364 0001c6a0     45c0          sub     a14,a0
    6365 0001c6b0     0580          move    a0,@kp_qscrs+64
         0001c6c0 00004770- 
    6366 0001c6e0     05a0          move    @scores+16,a0
         0001c6f0 00000010! 
    6367 0001c710     05ae          move    @kp_qscrs+16,a14
         0001c720 00004740- 
    6368 0001c740     05a1          move    @kp_qscrs+48,a1
         0001c750 00004760- 
    6369 0001c770     402e          add     a1,a14
    6370 0001c780     45c0          sub     a14,a0
    6371 0001c790     0580          move    a0,@kp_qscrs+80
         0001c7a0 00004780- 
    6372                    
    6373 0001c7c0     09e0          movi    tuneend1_snd,a0
         0001c7d0 00000300' 
    6374 0001c7f0     0d5f          calla   snd_play1ovr
         0001c800 00000000! 
    6375                    
    6376 0001c820                   JSRP    hint_page
    6377 0001c890     c000          jruc    fbmhtob
         0001c8a0     0114  
    6378                    
    6379                    
    6380 0001c8b0           fbmhnot3rd
    6381                    
    6382                    
    6383 0001c8b0     1420          subk    1,a0
    6384 0001c8c0     cb00          jrne    fbmhnot4th
         0001c8d0     00a5  
    6385                    
    6386 0001c8e0     09c0          movi    AUD_4THQUARTR,a0        ;04Hth quarter
         0001c8f0     0059  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  151

    6387 0001c900     0d5f          calla   AUD1
         0001c910 00000000! 
    6388                    
    6389 0001c930                   JSRP    plyr_endqfinishshot
    6390                    
    6391                    
    6392 0001c9a0     05a0          move    @scores,a0
         0001c9b0 00000000! 
    6393 0001c9d0     05ae          move    @kp_qscrs,a14
         0001c9e0 00004730- 
    6394 0001ca00     05a1          move    @kp_qscrs+32,a1
         0001ca10 00004750- 
    6395 0001ca30     05a2          move    @kp_qscrs+64,a2
         0001ca40 00004770- 
    6396 0001ca60     402e          add     a1,a14
    6397 0001ca70     404e          add     a2,a14
    6398 0001ca80     45c0          sub     a14,a0
    6399 0001ca90     0580          move    a0,@kp_qscrs+96
         0001caa0 00004790- 
    6400 0001cac0     05a0          move    @scores+16,a0
         0001cad0 00000010! 
    6401 0001caf0     05ae          move    @kp_qscrs+16,a14
         0001cb00 00004740- 
    6402 0001cb20     05a1          move    @kp_qscrs+48,a1
         0001cb30 00004760- 
    6403 0001cb50     05a2          move    @kp_qscrs+80,a2
         0001cb60 00004780- 
    6404 0001cb80     402e          add     a1,a14
    6405 0001cb90     404e          add     a2,a14
    6406 0001cba0     45c0          sub     a14,a0
    6407 0001cbb0     0580          move    a0,@kp_qscrs+112
         0001cbc0 000047a0- 
    6408                    
    6409 0001cbe0     05a0          move    @scores,a0
         0001cbf0 00000000! 
    6410 0001cc10     05a1          move    @scores+16,a1
         0001cc20 00000010! 
    6411 0001cc40     4801          cmp     a0,a1
    6412 0001cc50     ca7c          jreq    fbmhtie
    6413                    
    6414                    
    6415 0001cc60     0d3f  fbmhendofg      callr   endgame_audits          ;0EHnd of game
         0001cc70     016b  
    6416                    
    6417 0001cc80                   SLEEP   TSEC*3-30
    6418                    
    6419                            .ref    victory_speech
    6420 0001ccd0     0d5f          calla   victory_speech
         0001cce0 00000000! 
    6421                    
    6422 0001cd00                   SLEEP   TSEC*2+30
    6423                    
    6424                    
    6425 0001cd50     1820          movk    1,a0
    6426 0001cd60                   JSRP    stats_page
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  152

    6427                    
    6428 0001cdd0     5600          clr     a0
    6429 0001cde0     0580          move    a0,@IRQSKYE
         0001cdf0 00000000! 
    6430                    
    6431 0001ce10     0d5f          calla   display_blank
         0001ce20 00000000! 
    6432 0001ce40     0d5f          calla   save_player_records
         0001ce50 00000000! 
    6433 0001ce70     0d5f          calla   display_unblank
         0001ce80 00000000! 
    6434                    
    6435 0001cea0                   JSRP    rank_screen
    6436                    
    6437 0001cf10                   JSRP    grand_champs_screen     ;if a champ is found then
    6438                    
    6439                    
    6440                    
    6441 0001cf80     5600          clr     a0
    6442                    
    6443 0001cf90     0780          move    a0,@qtr_purchased,L     ;clr 4x16
         0001cfa0 00000000! 
    6444 0001cfc0     0780          move    a0,@qtr_purchased+20h,L
         0001cfd0 00000020! 
    6445                    
    6446 0001cff0     05a0          move    @team1,a0
         0001d000 00000000! 
    6447 0001d020     0580          move    a0,@kp_team1
         0001d030 00000030- 
    6448 0001d050     05a0          move    @team2,a0
         0001d060 00000000! 
    6449 0001d080     0580          move    a0,@kp_team2
         0001d090 00000040- 
    6450 0001d0b0     07a0          move    @scores,a0,L
         0001d0c0 00000000! 
    6451 0001d0e0     0780          move    a0,@kp_scores,L
         0001d0f0 00000010- 
    6452                    
    6453 0001d110     07a0          move    @kp_qscrs,a0,L
         0001d120 00004730- 
    6454 0001d140     0780          move    a0,@kp_qscrs2,L
         0001d150 000047b0- 
    6455 0001d170     07a0          move    @kp_qscrs+32,a0,L
         0001d180 00004750- 
    6456 0001d1a0     0780          move    a0,@kp_qscrs2+32,L
         0001d1b0 000047d0- 
    6457 0001d1d0     07a0          move    @kp_qscrs+64,a0,L
         0001d1e0 00004770- 
    6458 0001d200     0780          move    a0,@kp_qscrs2+64,L
         0001d210 000047f0- 
    6459 0001d230     07a0          move    @kp_qscrs+96,a0,L
         0001d240 00004790- 
    6460 0001d260     0780          move    a0,@kp_qscrs2+96,L
         0001d270 00004810- 
    6461                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  153

    6462 0001d290                   JSRP    winner_stays_on
    6463                    
    6464                    
    6465 0001d300     c080          jauc    game_over
         0001d310 00000000! 
    6466                    
    6467                    
    6468                    
    6469 0001d330           fbmhnot4th
    6470 0001d330                   JSRP    plyr_endqfinishshot     ;>Overtime
    6471                    
    6472 0001d3a0     05a0          move    @scores,a0
         0001d3b0 00000000! 
    6473 0001d3d0     05a1          move    @scores+16,a1
         0001d3e0 00000010! 
    6474 0001d400     4801          cmp     a0,a1
    6475 0001d410     cb84          jrne    fbmhendofg
    6476                    
    6477                    
    6478                    
    6479 0001d420           fbmhtie                                 ;>Tie
    6480                    
    6481 0001d420     09c0          movi    AUD_OVERTIME,a0
         0001d430     002b  
    6482 0001d440     0d5f          calla   AUD1
         0001d450 00000000! 
    6483                    
    6484 0001d470     09e0          movi    tuneend1_snd,a0
         0001d480 00000300' 
    6485 0001d4a0     0d5f          calla   snd_play1ovr
         0001d4b0 00000000! 
    6486                    
    6487 0001d4d0     1820          movk    1,a0
    6488 0001d4e0     0580          move    a0,@HALT
         0001d4f0 00000000! 
    6489                    
    6490 0001d510     09cb          movi    6*TSEC+10-70+60-20,a11
         0001d520     012a  
    6491 0001d530                   CREATE0 scr1
    6492 0001d5a0                   CREATE0 show_ot_msg
    6493                    
    6494 0001d610                   SLEEP   160
    6495                    
    6496 0001d660     09e0          movi    overtime_snd,a0
         0001d670 000004c0' 
    6497 0001d690     0d5f          calla   snd_play1ovr
         0001d6a0 00000000! 
    6498                    
    6499 0001d6c0                   SLEEP   120
    6500                    
    6501 0001d710     1981          movk    12,a1                   ;Free time into OT for
    6502 0001d720     09e2          movi    P1DATA,a2
         0001d730 000000b0- 
    6503                    
    6504 0001d750     05a0          move    @game_purchased,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  154

         0001d760 00000000! 
    6505 0001d780     1890          movk    4,b0
    6506 0001d790     5663          clr     a3
    6507                    
    6508 0001d7a0     4a60  fbmhtlp btst    a3,a0
    6509 0001d7b0     ca02          jrz     fbmhnx                  ;No full game?
    6510 0001d7c0     b022          move    a1,*a2(ply_time)        ;Give xtra time
         0001d7d0     0060  
    6511 0001d7e0     0b02  fbmhnx  addi    PDSIZE,a2
         0001d7f0     0130  
    6512 0001d800     1023          addk    1,a3
    6513 0001d810     3d10          dsj     b0,fbmhtlp
    6514                    
    6515 0001d820     0590          move    b0,@game_purchased
         0001d830 00000000! 
    6516                    
    6517 0001d850     05a0          move    @team1,a0
         0001d860 00000000! 
    6518 0001d880     0580          move    a0,@kp_team1
         0001d890 00000030- 
    6519 0001d8b0     05a0          move    @team2,a0
         0001d8c0 00000000! 
    6520 0001d8e0     0580          move    a0,@kp_team2
         0001d8f0 00000040- 
    6521 0001d910     07a0          move    @scores,a0,L
         0001d920 00000000! 
    6522 0001d940     0780          move    a0,@kp_scores,L
         0001d950 00000010- 
    6523                    
    6524 0001d970                   JSRP    hint_page
    6525 0001d9e0     0300          jruc    fbmhtob
    6526                    
    6527                    
    6528                    
    6529 0001d9f0           fbmhtob
    6530                            .ref    random_ads
    6531 0001d9f0     0d5f          calla   random_ads
         0001da00 00000000! 
    6532                    
    6533 0001da20     09ea          movi    nofade_t,a10
         0001da30 0001f990' 
    6534 0001da50                   CREATE0 fade_up_half
    6535                    
    6536 0001dac0                   CREATE0 fix_floor
    6537                    
    6538 0001db30     05ab          move    @gmqrtr,a11
         0001db40 00000000! 
    6539 0001db60     27eb          sll     32-1,a11
    6540 0001db70     05a0          move    @gmqrtr,a0
         0001db80 00000000! 
    6541 0001dba0     0b40          cmpi    2,a0
         0001dbb0     fffd  
    6542 0001dbc0     cb09          jrnz    fbmhnot2
    6543 0001dbd0                   CREATE  takepid,plyr_takeoutball
    6544 0001dc50     c007          jruc    fbmhtob2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  155

    6545 0001dc60           fbmhnot2        CREATE0 plyr_takeoutball2
    6546                    
    6547 0001dcd0           fbmhtob2
    6548 0001dcd0     5600          clr     a0
    6549 0001dce0     0580          move    a0,@cntrs_delay         ;Delay credit timers
         0001dcf0 00000000! 
    6550 0001dd10     05ae          move    @gmqrtr,a14
         0001dd20 00000000! 
    6551 0001dd40     0b4e          cmpi    2,a14
         0001dd50     fffd  
    6552 0001dd60     ca03          jrz     fbmhskp
    6553 0001dd70     0580          move    a0,@HALT
         0001dd80 00000000! 
    6554 0001dda0     09c0  fbmhskp movi    2<<10+4<<5+9,a0
         0001ddb0     0889  
    6555 0001ddc0     0580          move    a0,@IRQSKYE
         0001ddd0 00000000! 
    6556                    
    6557 0001ddf0     05ae          move    @gmqrtr,a14
         0001de00 00000000! 
    6558 0001de20     0b4e          cmpi    2,a14
         0001de30     fffd  
    6559 0001de40     cb0a          jrnz    fbmhskpz
    6560 0001de50                   CREATE0 delay_numbs
    6561 0001dec0                   RETP
    6562 0001def0           fbmhskpz
    6563 0001def0     09ea          movi    P1DATA,a10
         0001df00 000000b0- 
    6564 0001df20     0d5f          calla   stick_number
         0001df30 00000000! 
    6565 0001df50     09ea          movi    P2DATA,a10
         0001df60 000001e0- 
    6566 0001df80     0d5f          calla   stick_number
         0001df90 00000000! 
    6567 0001dfb0     09ea          movi    P3DATA,a10
         0001dfc0 00000310- 
    6568 0001dfe0     0d5f          calla   stick_number
         0001dff0 00000000! 
    6569 0001e010     09ea          movi    P4DATA,a10
         0001e020 00000440- 
    6570 0001e040     0d5f          calla   stick_number
         0001e050 00000000! 
    6571                    
    6572 0001e070                   RETP
    6573                    
    6574 0001e0a0           delay_numbs
    6575 0001e0a0                   SLEEPK  20
    6576 0001e0e0     09ea          movi    P1DATA,a10
         0001e0f0 000000b0- 
    6577 0001e110     0d5f          calla   stick_number
         0001e120 00000000! 
    6578 0001e140     09ea          movi    P2DATA,a10
         0001e150 000001e0- 
    6579 0001e170     0d5f          calla   stick_number
         0001e180 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  156

    6580 0001e1a0     09ea          movi    P3DATA,a10
         0001e1b0 00000310- 
    6581 0001e1d0     0d5f          calla   stick_number
         0001e1e0 00000000! 
    6582 0001e200     09ea          movi    P4DATA,a10
         0001e210 00000440- 
    6583 0001e230     0d5f          calla   stick_number
         0001e240 00000000! 
    6584 0001e260                   DIE
    6585                    
    6586 0001e290           fix_floor
    6587 0001e290                   SLEEPK  12
    6588                            .ref    fix_floorclr
    6589 0001e2d0     0d5f          calla   fix_floorclr
         0001e2e0 00000000! 
    6590 0001e300                   DIE
    6591                    
    6592                    
    6593 0001e330            SUBRP  endgame_audits
    6594                    
    6595                    
    6596                    
    6597 0001e330     09c0          movi    AUD_COMPLETED,a0        ;04Hth quarter
         0001e340     002a  
    6598 0001e350     0d5f          calla   AUD1
         0001e360 00000000! 
    6599                    
    6600 0001e380     05a0          move    @scores,a0
         0001e390 00000000! 
    6601 0001e3b0     05a1          move    @scores+10h,a1
         0001e3c0 00000010! 
    6602 0001e3e0     4820          cmp     a1,a0
    6603 0001e3f0     c311          jrhi    htowt1_wins
    6604 0001e400           htowt2_wins
    6605 0001e400     09c0          movi    AUD_LOS_SCORE,a0
         0001e410     0031  
    6606 0001e420     05a1          move    @scores,a1
         0001e430 00000000! 
    6607 0001e450     0d5f          calla   AUD
         0001e460 00000000! 
    6608                    
    6609 0001e480     09c0          movi    AUD_WIN_SCORE,a0
         0001e490     0030  
    6610 0001e4a0     05a1          move    @scores+10h,a1
         0001e4b0 00000010! 
    6611 0001e4d0     0d5f          calla   AUD
         0001e4e0 00000000! 
    6612                    
    6613 0001e500     c010          jruc    htowcont
    6614                    
    6615 0001e510           htowt1_wins
    6616 0001e510     09c0          movi    AUD_WIN_SCORE,a0
         0001e520     0030  
    6617 0001e530     05a1          move    @scores,a1
         0001e540 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  157

    6618 0001e560     0d5f          calla   AUD
         0001e570 00000000! 
    6619                    
    6620 0001e590     09c0          movi    AUD_LOS_SCORE,a0
         0001e5a0     0031  
    6621 0001e5b0     05a1          move    @scores+10h,a1
         0001e5c0 00000010! 
    6622 0001e5e0     0d5f          calla   AUD
         0001e5f0 00000000! 
    6623 0001e610           htowcont
    6624                    
    6625 0001e610     05a0          move    @PSTATUS2,a0
         0001e620 00000000! 
    6626 0001e640     0b80          andi    011b,a0
         0001e650 fffffffc  
    6627 0001e670     cb14          jrnz    htowteam1_human
    6628 0001e680     05a4          move    @scores,a4              ;CPU SCORE
         0001e690 00000000! 
    6629 0001e6b0     05a5          move    @scores+10h,a5          ;HUMAN SCORE
         0001e6c0 00000010! 
    6630                    
    6631 0001e6e0     09c0          movi    AUD_CPUGAMES,a0         ;a cpu team
         0001e6f0     0039  
    6632 0001e700     0d5f          calla   AUD1
         0001e710 00000000! 
    6633 0001e730     09c0          movi    AUD_CPUSCORES,a0
         0001e740     003a  
    6634 0001e750     4c81          move    a4,a1                   ;cpu score
    6635 0001e760     0d5f          calla   AUD
         0001e770 00000000! 
    6636 0001e790     0d3f          callr   do_cpu_stats
         0001e7a0     0057  
    6637 0001e7b0     c00d          jruc    htowcont2
    6638                    
    6639 0001e7c0           htowteam1_human
    6640 0001e7c0     09c0          movi    AUD_HUMGAMES,a0         ;a human team
         0001e7d0     0057  
    6641 0001e7e0     0d5f          calla   AUD1
         0001e7f0 00000000! 
    6642 0001e810     09c0          movi    AUD_HUMSCORES,a0
         0001e820     0058  
    6643 0001e830     05a1          move    @scores,a1              ;human score
         0001e840 00000000! 
    6644 0001e860     0d5f          calla   AUD
         0001e870 00000000! 
    6645                    
    6646                    
    6647 0001e890           htowcont2
    6648 0001e890     05a0          move    @PSTATUS2,a0
         0001e8a0 00000000! 
    6649 0001e8c0     0b80          andi    01100b,a0
         0001e8d0 fffffff3  
    6650 0001e8f0     cb14          jrnz    htowteam2_human
    6651 0001e900     05a4          move    @scores+10h,a4          ;CPU SCORE
         0001e910 00000010! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  158

    6652 0001e930     05a5          move    @scores,a5              ;HUMAN SCORE
         0001e940 00000000! 
    6653                    
    6654                    
    6655 0001e960     09c0          movi    AUD_CPUGAMES,a0         ;a cpu team
         0001e970     0039  
    6656 0001e980     0d5f          calla   AUD1
         0001e990 00000000! 
    6657 0001e9b0     09c0          movi    AUD_CPUSCORES,a0
         0001e9c0     003a  
    6658 0001e9d0     4c81          move    a4,a1                   ;cpu score
    6659 0001e9e0     0d5f          calla   AUD
         0001e9f0 00000000! 
    6660 0001ea10     0d3f          callr   do_cpu_stats
         0001ea20     002f  
    6661 0001ea30     0960          rets
    6662                    
    6663 0001ea40           htowteam2_human
    6664 0001ea40     09c0          movi    AUD_HUMGAMES,a0         ;a human team
         0001ea50     0057  
    6665 0001ea60     0d5f          calla   AUD1
         0001ea70 00000000! 
    6666 0001ea90     09c0          movi    AUD_HUMSCORES,a0
         0001eaa0     0058  
    6667 0001eab0     05a1          move    @scores+10h,a1          ;human score
         0001eac0 00000010! 
    6668 0001eae0     0d5f          calla   AUD
         0001eaf0 00000000! 
    6669                    
    6670                    
    6671                    
    6672 0001eb10     05a0          move    @PSTATUS2,a0
         0001eb20 00000000! 
    6673 0001eb40     0b80          andi    011b,a0
         0001eb50 fffffffc  
    6674 0001eb70     ca19          jrz     htownovs
    6675 0001eb80     05a0          move    @PSTATUS2,a0
         0001eb90 00000000! 
    6676 0001ebb0     0b80          andi    01100b,a0
         0001ebc0 fffffff3  
    6677 0001ebe0     ca12          jrz     htownovs
    6678 0001ebf0     09c0          movi    AUD_HUMANVSHUMAN,a0
         0001ec00     005e  
    6679 0001ec10     0d5f          calla   AUD1
         0001ec20 00000000! 
    6680 0001ec40     05a0          move    @scores,a0
         0001ec50 00000000! 
    6681 0001ec70     05a1          move    @scores+10h,a1
         0001ec80 00000010! 
    6682 0001eca0     4820          cmp     a1,a0
    6683 0001ecb0     c805          jrlo    htowtm2_wins
    6684 0001ecc0     09c0          movi    AUD_WINSONLEFT,a0
         0001ecd0     005f  
    6685 0001ece0     0d5f          calla   AUD1
         0001ecf0 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  159

    6686 0001ed10           htowtm2_wins
    6687 0001ed10           htownovs
    6688 0001ed10     0960          rets
    6689                    
    6690                    
    6691                    
    6692 0001ed20           do_cpu_stats
    6693                    
    6694 0001ed20     4885          cmp     a4,a5
    6695 0001ed30     c314          jrhi    fbmscpu_loses
    6696                    
    6697 0001ed40     09c0          movi    AUD_CPUWINS,a0          ;CPU victories + 1
         0001ed50     0032  
    6698 0001ed60     0d5f          calla   AUD1
         0001ed70 00000000! 
    6699                    
    6700 0001ed90     09c0          movi    AUD_CPUWINMARG,a0
         0001eda0     0033  
    6701 0001edb0     0d5f          calla   GET_AUD                 ;RET in A1
         0001edc0 00000000! 
    6702                    
    6703 0001ede0     44a4          sub     a5,a4
    6704 0001edf0     4824          cmp     a1,a4
    6705 0001ee00     c215          jrls    fbmsnot_higher
    6706 0001ee10     4c81          move    a4,a1
    6707 0001ee20     09c0          movi    AUD_CPUWINMARG,a0       ;new win margin
         0001ee30     0033  
    6708 0001ee40     0d5f          calla   STORE_AUDIT
         0001ee50 00000000! 
    6709 0001ee70     0960          rets
    6710                    
    6711 0001ee80           fbmscpu_loses
    6712 0001ee80     09c0          movi    AUD_CPULOSMARG,a0
         0001ee90     0034  
    6713 0001eea0     0d5f          calla   GET_AUD                 ;RET in A1
         0001eeb0 00000000! 
    6714                    
    6715 0001eed0     4485          sub     a4,a5                   ;HUMAN - CPU SCORE
    6716 0001eee0     4825          cmp     a1,a5
    6717 0001eef0     c206          jrls    fbmsnot_higher
    6718 0001ef00     4ca1          move    a5,a1
    6719 0001ef10     09c0          movi    AUD_CPULOSMARG,a0       ;new loss margin
         0001ef20     0034  
    6720 0001ef30     0d5f          calla   STORE_AUDIT
         0001ef40 00000000! 
    6721 0001ef60           fbmsnot_higher
    6722 0001ef60     0960          rets
    6723                    
    6724                    
    6725                    
    6726                    
    6727 0001ef70            SUBRP  plyr_endqfinishshot
    6728                    
    6729 0001ef70     09ca          movi    TSEC*5/2,a10
         0001ef80     0084  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  160

    6730 0001ef90           sgywlp
    6731 0001ef90     05a0          move    @ballpnum,a0
         0001efa0 00000000! 
    6732 0001efc0     cf0d          jrnn    sgywstop                        ;Somebody has ball?
    6733 0001efd0     07a2          move    @ballobj_p,a2,L
         0001efe0 00000000! 
    6734 0001f000     b440          move    *a2(OYPOS),a0
         0001f010     00b0  
    6735 0001f020     0b40          cmpi    -15,a0
         0001f030     000e  
    6736 0001f040     c705          jrgt    sgywstop                        ;Ball near gnd?
    6737                    
    6738 0001f050                   SLEEPK  2
    6739                    
    6740 0001f090     3e2a  sgywgbcnt       dsj     a10,sgywlp
    6741                    
    6742 0001f0a0           sgywstop
    6743 0001f0a0     05a0          move    @ballpnum,a0
         0001f0b0 00000000! 
    6744 0001f0d0     ce15          jrn     sgywno_owner
    6745 0001f0e0     24a0          sll     5,a0                    ;*32
    6746 0001f0f0     0b20          addi    plyrproc_t,a0
         0001f100 00000630- 
    6747 0001f120     8600          move    *a0,a0,L
    6748 0001f130     b401          move    *a0(plyr_seqflgs),a1
         0001f140     0180  
    6749 0001f150     1fc1          btst    DUNK_B,a1
    6750 0001f160     ca0c          jrz     sgywno_owner
    6751 0001f170     b401          move    *a0(plyr_jmpcnt),a1
         0001f180     0400  
    6752 0001f190     0b41          cmpi    15,a1
         0001f1a0     fff0  
    6753 0001f1b0     c407          jrlt    sgywno_owner
    6754                    
    6755 0001f1c0                   CREATE0 dobad
    6756 0001f230           sgywno_owner
    6757                    
    6758 0001f230     1820          movk    1,a0
    6759 0001f240     0d3f          callr   plyr_setac
         0001f250     046c  
    6760                    
    6761 0001f260     5600          clr     a0                      ;0CHlr ctrl bits
    6762 0001f270     09e1          movi    P1CTRL,a1
         0001f280 00000070- 
    6763 0001f2a0     1850          movk    2,b0
    6764 0001f2b0     9201  sgywstlp        move    a0,*a1+,L
    6765 0001f2c0     3c50          dsj     b0,sgywstlp
    6766                    
    6767 0001f2d0     09c0          movi    clockid,a0
         0001f2e0     0084  
    6768 0001f2f0     0d5f          calla   KIL1C                   ;Kill existing shot clock proc
         0001f300 00000000! 
    6769 0001f320     09c0          movi    CLSDEAD|clockid,a0
         0001f330     2084  
    6770 0001f340     0d5f          calla   obj_del1c               ;Delete any 24 second shot clock imgs
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  161

         0001f350 00000000! 
    6771 0001f370     5600          clr     a0
    6772 0001f380     0780          move    a0,@sc_proc,L
         0001f390 00000000! 
    6773 0001f3b0     0780          move    a0,@game_time,L
         0001f3c0 00000000! 
    6774                    
    6775 0001f3e0     1820          movk    1,a0
    6776 0001f3f0     0580          move    a0,@HALT
         0001f400 00000000! 
    6777                    
    6778 0001f420     07a0          move    @tvpanelon,a0,L
         0001f430 00000000! 
    6779 0001f450     ca0e          jrz     sgywturnon
    6780                    
    6781 0001f460     09c0          movi    CLSDEAD|tvid,a0
         0001f470     2085  
    6782 0001f480     5621          clr     a1
    6783 0001f490     0d5f          calla   EXISTOBJ
         0001f4a0 00000000! 
    6784 0001f4c0     ca07          jrz     sgywturnon
    6785                    
    6786 0001f4d0     07a0          move    @tvpanelon,a0,L
         0001f4e0 00000000! 
    6787 0001f500     09c1          movi    6*TSEC,a1
         0001f510     013e  
    6788 0001f520     b020          move    a1,*a0(PTIME)
         0001f530     0030  
    6789 0001f540           sgywturnon
    6790                    
    6791 0001f540                   CREATE0 score_showtvpanel2
    6792                    
    6793 0001f5b0     05a0          move    @gmqrtr,a0              ;Ran out of time
         0001f5c0 00000000! 
    6794 0001f5e0     1480          subk    4,a0
    6795 0001f5f0     c41b          jrlt    sgywfade
    6796 0001f600     05a0          move    @scores,a0
         0001f610 00000000! 
    6797 0001f630     05a1          move    @scores+16,a1
         0001f640 00000010! 
    6798 0001f660     4801          cmp     a0,a1
    6799 0001f670     ca13          jreq    sgywfade
    6800                    
    6801 0001f680                   SLEEP   90
    6802                    
    6803                    
    6804                    
    6805 0001f6d0     09e0          movi    tuneend_snd,a0
         0001f6e0 000002c0' 
    6806 0001f700     0d5f          calla   snd_play1ovr
         0001f710 00000000! 
    6807                    
    6808                            .ref    winning_msg
    6809 0001f730                   CREATE0 winning_msg
    6810 0001f7a0     0300          jruc    sgywfade
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  162

    6811                    
    6812                    
    6813                    
    6814                    
    6815 0001f7b0           sgywfade
    6816                    
    6817 0001f7b0     0d5f          calla   pal_clean
         0001f7c0 00000000! 
    6818                    
    6819 0001f7e0     09ea          movi    nofade_t,a10
         0001f7f0 0001f990' 
    6820 0001f810                   CREATE0 fade_down_half
    6821                    
    6822 0001f880           sgywx   RETP
    6823                    
    6824 0001f8b0           dobad   SLEEP   100
    6825 0001f900     09e0          movi    baddec_snd,a0
         0001f910 00000000' 
    6826 0001f930     0d5f          calla   speech_playovrp
         0001f940 00000000! 
    6827 0001f960                   DIE
    6828                    
    6829 0001f990           nofade_t                        ;Pals not to fade
    6830 0001f990 00000000!         .long   scorepr,metprp_p
    6831 0001f9d0 00000000!         .long   scorep
    6832 0001f9f0 00000000!         .long   scorepb
    6833 0001fa10 00000000!         .long   scorepy
    6834 0001fa30 00000000!         .long   GROWBOX
    6835 0001fa50 00000000!         .long   SGMD8RED
    6836 0001fa70 00000000!         .long   SGMD8WHT
    6837 0001fa90 00000000!         .long   textp
    6838 0001fab0 00000000!         .long   ledw
    6839 0001fad0 00000000!         .long   ledr
    6840 0001faf0 00000000!         .long   MD_16
    6841 0001fb10 00000000!         .long   MD_16r
    6842 0001fb30 00000000!         .long   LED_P
    6843 0001fb50 00000000!         .long   GROWBOXr,GROWBOXy,GROWBOXg,GROWBOXb
    6844 0001fbd0 00000000!         .long   LGMDRED2,LGMDPURP
    6845 0001fc10 00000000!         .long   LGMDWHT,WHITE2PAL,PURPLE
    6846 0001fc70 00000000!         .long   P_NUGS,P_BLAZ,P_76RS,P_HAWKS,P_MAGIC,P_SONICS,P_SPURS,P_SUNS
    6847 0001fd70 00000000!         .long   P_CAVS,P_BUCKS,P_HEAT,P_CLIPS,P_PACER
    6848 0001fe10 00000000!         .long   P_BULTS,P_WARS,P_HORS,P_PISS             
    6849 0001fe90 00000000!         .long   P_LAKS,P_TWOV,P_CELTS,P_JAZZ             
    6850 0001ff10 00000000!         .long   P_KINGS,P_NETS,P_MAVS,P_ROCKS            
    6851 0001ff90 00000000!         .long   P_KNIKS,P_BULS,GREENPAL
    6852 0001fff0 00000000          .long   0
    6853                    
    6854                    
    6855                    
    6856                    
    6857                    
    6858 00020010            SUBR   plyr_goaltending
    6859                    
    6860 00020010     b76b          move    *a11(OPLINK),a11,L
         00020020     01a0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  163

    6861 00020030     b560          move    *a11(plyr_num),a0
         00020040     0100  
    6862                    
    6863 00020050     2fe0          srl     1,a0
    6864 00020060     4c0b          move    a0,a11
    6865 00020070                   XORK    1,a0
    6866 00020090     2480          sll     4,a0                    ;0 or 16
    6867                    
    6868 000200a0     0b20          addi    scores,a0               ;+Base
         000200b0 00000000! 
    6869 000200d0     05a1          move    @ballptsforshot,a1
         000200e0 00000000! 
    6870 00020100     4c23          move    a1,a3
    6871 00020110     0d5f          calla   score_add
         00020120 00000000! 
    6872                    
    6873 00020140     0d5f          calla   plyr_setptsdown
         00020150 00000000! 
    6874                    
    6875                    
    6876 00020170     1820          movk    PS_2PTS_MADE,a0         ;>Inc try shot stat
    6877 00020180     1443          subk    2,a3
    6878 00020190     ca01          jreq    tjdq2ptr
    6879 000201a0     1860          movk    PS_3PTS_MADE,a0
    6880 000201b0     05a1  tjdq2ptr        move    @ballpnumshot,a1
         000201c0 00000000! 
    6881 000201e0     0d5f          calla   inc_player_stat
         000201f0 00000000! 
    6882                    
    6883 00020210     0d5f          calla   prt_top_scores          ;Update scores at scrn top
         00020220 00000000! 
    6884                    
    6885 00020240     09c0          movi    TSEC*2,a0
         00020250     006a  
    6886 00020260     0d3f          callr   plyr_setshtdly
         00020270     0373  
    6887                    
    6888 00020280                   CREATE0 goaltend_text
    6889                    
    6890 000202f0     09e0          movi    whstle_snd,a0
         00020300 00000280' 
    6891 00020320     0d5f          calla   snd_play1
         00020330 00000000! 
    6892                    
    6893 00020350     07a0          move    @tvpanelon,a0,L
         00020360 00000000! 
    6894 00020380     ca05          jrz     tjdqturnon
    6895 00020390     09c1          movi    4*TSEC+10-70,a1
         000203a0     0098  
    6896 000203b0     b020          move    a1,*a0(PTIME)
         000203c0     0030  
    6897 000203d0     c007          jruc    tjdqalrdyon
    6898 000203e0           tjdqturnon
    6899 000203e0                   CREATE0 score_showtvpanel
    6900 00020450           tjdqalrdyon
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  164

    6901                    
    6902 00020450     09ea          movi    P1DATA,a10
         00020460 000000b0- 
    6903 00020480     0d5f          calla   stick_number
         00020490 00000000! 
    6904 000204b0     09ea          movi    P2DATA,a10
         000204c0 000001e0- 
    6905 000204e0     0d5f          calla   stick_number
         000204f0 00000000! 
    6906 00020510     09ea          movi    P3DATA,a10
         00020520 00000310- 
    6907 00020540     0d5f          calla   stick_number
         00020550 00000000! 
    6908 00020570     09ea          movi    P4DATA,a10
         00020580 00000440- 
    6909 000205a0     0d5f          calla   stick_number
         000205b0 00000000! 
    6910                    
    6911 000205d0                   SLEEP   30
    6912                    
    6913 00020620     5600          clr     a0
    6914 00020630     0580          move    a0,@ballptsforshot
         00020640 00000000! 
    6915                    
    6916 00020660     c000          jruc    plyr_takeoutball3
         00020670     0283  
    6917                    
    6918                    
    6919 00020680            SUBRP  goaltend_text
    6920                    
    6921                    
    6922                    
    6923 00020680     186a          movk    3,a10
    6924 00020690                   CREATE0 doalert_snd
    6925                    
    6926 00020700     07a0          move    @game_time,a0,L
         00020710 00000000! 
    6927 00020730     ca80          jaz     SUCIDE
         00020740 00000000! 
    6928                    
    6929 00020760     09e2          movi    dnpuln0_setup,a2
         00020770 00020a00' 
    6930 00020790     0d5f          calla   setup_message
         000207a0 00000000! 
    6931                    
    6932 000207c0     09c0          movi    CLSDEAD|123,a0
         000207d0     207b  
    6933 000207e0     0580          move    a0,@mess_objid
         000207f0 00000000! 
    6934                    
    6935 00020810     09e4          movi    dnpustr_goaltend,a4
         00020820 00020aa0' 
    6936 00020840     0d5f          calla   print_string_C2
         00020850 00000000! 
    6937                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  165

    6938                    
    6939 00020870                   CREATE0 flash_bigtxt
    6940 000208e0     4c09          move    a0,a9
    6941                    
    6942                    
    6943 000208f0                   SLEEP   TSEC*2
    6944                    
    6945 00020940     4d20          move    a9,a0
    6946 00020950     0d5f          calla   KILL
         00020960 00000000! 
    6947                    
    6948 00020980     09c0          movi    CLSDEAD|123,a0
         00020990     207b  
    6949 000209a0     0d5f          calla   obj_del1c               ;delete text
         000209b0 00000000! 
    6950                    
    6951                    
    6952 000209d0                   DIE
    6953                    
    6954                    
    6955 00020a00           dnpuln0_setup
    6956 00020a00                   RJR_STR omlgmd_ascii,12,2,200,120-44/2,LGMDRED2,0
    6957                    
    6958 00020aa0           dnpustr_goaltend
    6959 00020aa0       47          .string "GOAL TENDING",0
    6960 00020b10                   .even
    6961                    
    6962                    
    6963                    
    6964 00020b10                   STRUCTPD
    6965 00020b10                   WORD    ptob_pball      ;Plyr # (0-3) who gets ball
    6966 00020b10                   WORD    ptob_pball2     ;P# who gets ball passed to him
    6967                    
    6968                    
    6969 00020b10            SUBR   plyr_takeoutball
    6970                    
    6971                    
    6972                    
    6973 00020b10     09c0          movi    TOB_PID,a0              ;Kill any other plyr_takeoutball
         00020b20     2400  
    6974 00020b30     b00d          move    a0,*a13(PROCID)
         00020b40     0020  
    6975 00020b50     0d5f          calla   KIL1C
         00020b60 00000000! 
    6976                    
    6977 00020b80     1900          movk    8,a0
    6978 00020b90     0580          move    a0,@ballsclastp
         00020ba0 00000000! 
    6979                    
    6980 00020bc0     09c0          movi    TSEC+20,a0
         00020bd0     0049  
    6981 00020be0     0d3f          callr   plyr_setshtdly
         00020bf0     02db  
    6982 00020c00     5600          clr     a0
    6983 00020c10     0780          move    a0,@P1CTRL,L                    ;clear p1 & p2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  166

         00020c20 00000070- 
    6984 00020c40     0780          move    a0,@P3CTRL,L                    ;p3 & p4
         00020c50 00000090- 
    6985                    
    6986 00020c70                   SLEEPK  1
    6987                    
    6988 00020cb0     09c0          movi    -1,a0
         00020cc0     ffff  
    6989 00020cd0     0580          move    a0,@ballpnum
         00020ce0 00000000! 
    6990 00020d00     0580          move    a0,@ballpnumlast
         00020d10 00000000! 
    6991                    
    6992                    
    6993 00020d30     1820          movk    1,a0
    6994 00020d40     0d3f          callr   plyr_setac
         00020d50     02bc  
    6995                    
    6996 00020d60     5600          clr     a0                      ;Clr staggers
    6997 00020d70     09c1          movi    plyr_stagcnt,a1
         00020d80     0430  
    6998 00020d90     0d3f          callr   plyr_setprocword
         00020da0     02c9  
    6999                    
    7000                    
    7001 00020db0     09e0          movi    plyrproc_t,a0
         00020dc0 00000630- 
    7002 00020de0     5621          clr     a1
    7003 00020df0     5642          clr     a2
    7004 00020e00     05a3          move    @PSTATUS,a3
         00020e10 00000060- 
    7005 00020e30     1849          movk    2,a9
    7006 00020e40     4d6b          move    a11,a11
    7007 00020e50     ca06          jrz     ipeat1
    7008 00020e60     0b00          addi    32*2,a0
         00020e70     0040  
    7009 00020e80     1821          movk    1,a1
    7010 00020e90     1842          movk    2,a2
    7011 00020ea0     2fc3          srl     2,a3
    7012 00020eb0     5729          clr     a9
    7013 00020ec0           ipeat1
    7014 00020ec0     9608          move    *a0+,a8,L               ;A8=*Proc of plyr who gets ball
    7015 00020ed0     9607          move    *a0+,a7,L
    7016 00020ee0     0581          move    a1,@inbound             ;Inbounding team (0-1)
         00020ef0 00000000! 
    7017                    
    7018 00020f10     4c63          move    a3,a3                   ;if human and CPU
    7019 00020f20     ca08          jrz     ipeano_players          ;always make CPU
    7020 00020f30     0b43          cmpi    011b,a3                 ;pass ball to human
         00020f40     fffc  
    7021 00020f50     ca05          jreq    ipeatwo_players
    7022 00020f60     0b83          andi    1,a3
         00020f70 fffffffe  
    7023 00020f90     ca09          jrz     ipea1st
    7024 00020fa0     c006          jruc    ipea2nd
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  167

    7025                    
    7026 00020fb0           ipeatwo_players
    7027 00020fb0           ipeano_players
    7028 00020fb0     b500          move    *a8(plyr_balldist),a0
         00020fc0     0350  
    7029 00020fd0     b4e1          move    *a7(plyr_balldist),a1
         00020fe0     0350  
    7030                    
    7031 00020ff0     4820          cmp     a1,a0
    7032 00021000     c602          jrle    ipea1st                 ;Closer?
    7033 00021010           ipea2nd
    7034 00021010     4ce8          move    a7,a8
    7035 00021020     1022          addk    1,a2                    ;2nd in team
    7036 00021030           ipea1st
    7037 00021030     b04d          move    a2,*a13(ptob_pball)
         00021040     0100  
    7038 00021050                   XORK    1,a2
    7039 00021070     b04d          move    a2,*a13(ptob_pball2)
         00021080     0110  
    7040                    
    7041                    
    7042 00021090     09ca          movi    TSEC*3,a10              ;>Get ball
         000210a0     009f  
    7043 000210b0           ipeagblp1
    7044 000210b0     09c0          movi    -1,a0
         000210c0     ffff  
    7045 000210d0     0580          move    a0,@ballpnum
         000210e0 00000000! 
    7046 00021100     0580          move    a0,@ballpnumlast
         00021110 00000000! 
    7047                    
    7048 00021130                   SLEEPK  1
    7049                    
    7050 00021170     0d3f          callr   plyrtob_moveo3
         00021180     0296  
    7051                    
    7052 00021190     07a3          move    @ballobj_p,a3,L
         000211a0 00000000! 
    7053 000211c0     b460          move    *a3(OXPOS),a0
         000211d0     0090  
    7054 000211e0     10c0          addk    6,a0
    7055 000211f0     b461          move    *a3(OZPOS),a1
         00021200     00d0  
    7056 00021210     b5a2          move    *a13(ptob_pball),a2
         00021220     0100  
    7057 00021230     0d3f          callr   plyrtob_seekxy
         00021240     02b0  
    7058 00021250     ca02          jrz     ipeaatball
    7059 00021260     3f8a          dsj     a10,ipeagblp1
    7060 00021270     c003          jruc    ipeaatball2
    7061 00021280           ipeaatball
    7062 00021280     b500          move    *a8(plyr_jmpcnt),a0
         00021290     0400  
    7063 000212a0     cbe0          jrnz    ipeagblp1
    7064 000212b0           ipeaatball2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  168

    7065                    
    7066 000212b0     5600          clr     a0
    7067 000212c0     b008          move    a0,*a8(plyr_shtdly)
         000212d0     02b0  
    7068                    
    7069 000212e0     09ca          movi    TSEC*1,a10              ;>Get ball
         000212f0     0035  
    7070 00021300           ipeagblp2
    7071 00021300     09c0          movi    -1,a0
         00021310     ffff  
    7072 00021320     0580          move    a0,@ballpnum
         00021330 00000000! 
    7073 00021350     0580          move    a0,@ballpnumlast
         00021360 00000000! 
    7074 00021380                   SLEEPK  1
    7075 000213c0     05a0          move    @ballpnum,a0
         000213d0 00000000! 
    7076 000213f0     ce04          jrn     ipeagbcnt2
    7077 00021400     b5a2          move    *a13(ptob_pball),a2
         00021410     0100  
    7078 00021420     4802          cmp     a0,a2
    7079 00021430     ca10          jreq    ipeagotball
    7080 00021440           ipeagbcnt2
    7081 00021440     0d3f          callr   plyrtob_moveo3
         00021450     0269  
    7082 00021460     07a3          move    @ballobj_p,a3,L
         00021470 00000000! 
    7083 00021490     b460          move    *a3(OXPOS),a0
         000214a0     0090  
    7084 000214b0     10c0          addk    6,a0
    7085 000214c0     b461          move    *a3(OZPOS),a1
         000214d0     00d0  
    7086 000214e0     b5a2          move    *a13(ptob_pball),a2
         000214f0     0100  
    7087 00021500     0d3f          callr   plyrtob_seekxy
         00021510     0283  
    7088 00021520     0d8a          dsj     a10,ipeagblp2
         00021530     ffdc  
    7089                    
    7090 00021540           ipeagotball
    7091 00021540     b5a0          move    *a13(ptob_pball),a0
         00021550     0100  
    7092 00021560     0580          move    a0,@ballpnum
         00021570 00000000! 
    7093 00021590     5600          clr     a0
    7094 000215a0     b008          move    a0,*a8(plyr_dribmode)
         000215b0     0210  
    7095                    
    7096                    
    7097 000215c0     09ca          movi    TSEC*3,a10              ;>Run out of bounds
         000215d0     009f  
    7098                    
    7099 000215e0           ipeaoutlp
    7100 000215e0                   SLEEPK  1
    7101                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  169

    7102 00021620     0d3f          callr   plyrtob_moveo3
         00021630     024b  
    7103                    
    7104 00021640     09c0          movi    -355,a0
         00021650     fe9d  
    7105 00021660     4d6b          move    a11,a11
    7106 00021670     ca01          jrz     ipeaoutl                        ;Team2 on def
    7107 00021680     03a0          neg     a0
    7108 00021690     0b00  ipeaoutl        addi    WRLDMID,a0
         000216a0     2000  
    7109 000216b0     4c03          move    a0,a3
    7110 000216c0     09c1          movi    CZMID-20,a1
         000216d0     047e  
    7111 000216e0     b5a2          move    *a13(ptob_pball),a2
         000216f0     0100  
    7112 00021700     0582          move    a2,@ballpnum
         00021710 00000000! 
    7113 00021730     0d3f          callr   plyrtob_seekxy
         00021740     0260  
    7114 00021750     ca01          jrz     ipeaoutofb
    7115 00021760     3f2a          dsj     a10,ipeaoutlp
    7116                    
    7117 00021770           ipeaoutofb
    7118                    
    7119 00021770     09c0          movi    -1,a0
         00021780     ffff  
    7120 00021790     b008          move    a0,*a8(plyr_dribmode)
         000217a0     0210  
    7121 000217b0     0d5f          calla   call_scores
         000217c0 00000000! 
    7122                    
    7123                    
    7124 000217e0     09ca          movi    TSEC*3,a10              ;>Wait for other 3 to get in place
         000217f0     009f  
    7125                    
    7126 00021800           ipeawtlp        SLEEPK  1
    7127 00021840     0d3f          callr   plyrtob_moveo3
         00021850     0229  
    7128 00021860     ca01          jrz     ipeainpos
    7129 00021870     3d0a          dsj     a10,ipeawtlp
    7130 00021880           ipeainpos
    7131 00021880                   SLEEPK  30
    7132                    
    7133 000218c0     1a80          movk    20,a0
    7134 000218d0     0580          move    a0,@last_name_time      ;don't call pass on inbound
         000218e0 00000000! 
    7135                    
    7136 00021900     b5aa          move    *a13(ptob_pball),a10    ;>Pass with turbo
         00021910     0100  
    7137 00021920     248a          sll     4,a10                   ;*16
    7138 00021930     0b2a          addi    P1CTRL,a10
         00021940 00000070- 
    7139 00021960     09c0          movi    (BUT2_M|BUT3_M)<<8|BUT2_M|BUT3_M,a0
         00021970     6060  
    7140 00021980     800a          move    a0,*a10
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  170

    7141                    
    7142 00021990     b5a0          move    *a13(ptob_pball),a0
         000219a0     0100  
    7143 000219b0     0580          move    a0,@ballpnum
         000219c0 00000000! 
    7144 000219e0     09c2          movi    TSEC*2,a2               ;>Wait for pass to start
         000219f0     006a  
    7145 00021a00           ipeawaitp       PUSHP   a2
    7146 00021a10                   SLEEPK  1
    7147 00021a50                   PULLP   a2
    7148 00021a60     b500          move    *a8(plyr_seqflgs),a0
         00021a70     0180  
    7149 00021a80     1ea0          btst    PASS_B,a0
    7150 00021a90     cb01          jrnz    ipeapassing
    7151 00021aa0     3d62          dsj     a2,ipeawaitp
    7152 00021ab0           ipeapassing
    7153                    
    7154 00021ab0     5600          clr     a0
    7155 00021ac0     800a          move    a0,*a10
    7156 00021ad0     09c0          movi    -1,a0
         00021ae0     ffff  
    7157 00021af0     0580          move    a0,@inbound             ;Inbounding off
         00021b00 00000000! 
    7158                    
    7159 00021b20                   SLEEPK  30
    7160 00021b60           ipearuninlp
    7161 00021b60                   SLEEPK  1
    7162 00021ba0     09c0          movi    -345,a0
         00021bb0     fea7  
    7163 00021bc0     4d6b          move    a11,a11
    7164 00021bd0     ca01          jrz     ipeaoutl2                       ;Team2 on def
    7165 00021be0     03a0          neg     a0
    7166 00021bf0     0b00  ipeaoutl2       addi    WRLDMID,a0
         00021c00     2000  
    7167 00021c10     09c1          movi    CZMID-20,a1
         00021c20     047e  
    7168 00021c30     b5a2          move    *a13(ptob_pball),a2
         00021c40     0100  
    7169 00021c50     0d3f          callr   plyrtob_seekxy
         00021c60     020e  
    7170 00021c70     cbee          jrnz    ipearuninlp
    7171                    
    7172                    
    7173 00021c80           plyr_tobend
    7174 00021c80     4d60          move    a11,a0
    7175 00021c90     0d5f          calla   shot_clock              ;New 24
         00021ca0 00000000! 
    7176 00021cc0     5600          clr     a0
    7177 00021cd0     0580          move    a0,@clock_active        ;Start game clock again
         00021ce0 00000000! 
    7178 00021d00     0580          move    a0,@plyrinautorbnd      ;In case seq didn't clr
         00021d10 00000700- 
    7179 00021d30     0580          move    a0,@ballflash
         00021d40 00000000! 
    7180 00021d60     0580          move    a0,@pass_off
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  171

         00021d70 00000000! 
    7181 00021d90     0580          move    a0,@steals_off
         00021da0 00000000! 
    7182 00021dc0     0580          move    a0,@slamming
         00021dd0 00000000! 
    7183                    
    7184 00021df0     0d3f          callr   plyr_setac
         00021e00     01b1  
    7185                    
    7186 00021e10     5600          clr     a0                      ;Clr staggers
    7187 00021e20     09c1          movi    plyr_stagcnt,a1
         00021e30     0430  
    7188 00021e40     0d3f          callr   plyr_setprocword
         00021e50     01be  
    7189                    
    7190 00021e60     5600          clr     a0
    7191 00021e70     09c1          movi    plyr_d_cflgs,a1
         00021e80     0470  
    7192 00021e90     0d3f          callr   plyr_setprocword
         00021ea0     01b9  
    7193                    
    7194                            .ref    drone_setuptob
    7195 00021eb0     0d5f          calla   drone_setuptob
         00021ec0 00000000! 
    7196                    
    7197 00021ee0                   DIE
    7198                    
    7199                    
    7200                    
    7201                            .asg    60h,FACE_LEFT
    7202                            .asg    20h,FACE_RIGHT
    7203                    
    7204 00021f10            SUBR   plyr_takeoutball2
    7205                    
    7206 00021f10     09c0          movi    TOB_PID,a0              ;Kill any other plyr_takeoutball
         00021f20     2400  
    7207 00021f30     b00d          move    a0,*a13(PROCID)
         00021f40     0020  
    7208 00021f50     0d5f          calla   KIL1C
         00021f60 00000000! 
    7209                    
    7210 00021f80     1900          movk    8,a0
    7211 00021f90     0580          move    a0,@ballsclastp
         00021fa0 00000000! 
    7212                    
    7213 00021fc0     1820          movk    1,a0
    7214 00021fd0     0d3f          callr   plyr_setac
         00021fe0     0193  
    7215                    
    7216 00021ff0     5600          clr     a0
    7217 00022000     0780          move    a0,@P1CTRL,L                    ;clear p1 & p2
         00022010 00000070- 
    7218 00022030     0780          move    a0,@P3CTRL,L                    ;p3 & p4
         00022040 00000090- 
    7219                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  172

    7220 00022060     5600          clr     a0
    7221 00022070     0780          move    a0,@WORLDTLY,L
         00022080 00000000! 
    7222 000220a0     09e1          movi    [WRLDMID-200-MAX_VIEW1,0],a1
         000220b0 1e020000  
    7223 000220d0     5642          clr     a2                              ;player 1 has ball
    7224 000220e0     09ea          movi    ylnvt1_setup_table,a10
         000220f0 00022890' 
    7225 00022110     4d6b          move    a11,a11
    7226 00022120     ca08          jrz     ylnvsetib
    7227 00022130     1820          movk    1,a0
    7228 00022140     09e1          movi    [WRLDMID-200+MAX_VIEW1,0],a1
         00022150 206e0000  
    7229 00022170     1862          movk    3,a2                            ;player 4 has ball
    7230 00022180     09ea          movi    ylnvt2_setup_table,a10
         00022190 00022990' 
    7231 000221b0     0580  ylnvsetib       move    a0,@inbound                     ;Inbounding team
         000221c0 00000000! 
    7232 000221e0     0781          move    a1,@WORLDTLX,L
         000221f0 00000000! 
    7233 00022210     0d01          subi    [WRLDMID-200,0],a1
         00022220 e0c7ffff  
    7234 00022240     0781          move    a1,@gndx,L
         00022250 00000000! 
    7235 00022270     0582          move    a2,@ballpnum
         00022280 00000000! 
    7236 000222a0     09c0          movi    -1,a0
         000222b0     ffff  
    7237 000222c0     0580          move    a0,@ballpnumlast
         000222d0 00000000! 
    7238 000222f0     b04d          move    a2,*a13(ptob_pball)             ;0,3
         00022300     0100  
    7239 00022310     4c40          move    a2,a0
    7240 00022320                   XORK    1,a0
    7241 00022340     b00d          move    a0,*a13(ptob_pball2)            ;1,2
         00022350     0110  
    7242                    
    7243                    
    7244 00022360                   PUSH    a13
    7245 00022370     24a2          sll     5,a2                            ;x 32 bits
    7246 00022380     09e8          movi    plyrobj_t,a8
         00022390 000005b0- 
    7247 000223b0     4048          add     a2,a8
    7248 000223c0     8708          move    *a8,a8,L                        ;*Plyr obj
    7249 000223d0     0b22          addi    plyrproc_t,a2
         000223e0 00000630- 
    7250 00022400     864d          move    *a2,a13,L                       ;*Plyr process
    7251 00022410     0d3f          callr   plyr_setballxyz
         00022420     f54c  
    7252 00022430                   PULL    a13
    7253                    
    7254 00022440     188e          movk    4,a14
    7255 00022450           ylnvinit_loop
    7256 00022450                   PUSH    a14
    7257 00022460     9540          move    *a10+,a0                        ;player (0-3)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  173

    7258 00022470     9544          move    *a10+,a4
    7259 00022480     2604          sll     16,a4                           ;player Z VAL
    7260 00022490     9545          move    *a10+,a5
    7261 000224a0     2605          sll     16,a5                           ;player X VAL
    7262 000224b0     9547          move    *a10+,a7                        ;player direction (right)
    7263 000224c0     0d3f          callr   plyr_init
         000224d0     005b  
    7264 000224e0                   PULL    a14
    7265 000224f0     3d6e          dsj     a14,ylnvinit_loop
    7266                    
    7267 00022500                   SLEEP   1*60
    7268                    
    7269 00022550     1a80          movk    20,a0
    7270 00022560     0580          move    a0,@last_name_time      ;don't call pass on inbound
         00022570 00000000! 
    7271                    
    7272 00022590     b5aa          move    *a13(ptob_pball),a10    ;>Pass with turbo
         000225a0     0100  
    7273 000225b0     248a          sll     4,a10                   ;*16
    7274 000225c0     0b2a          addi    P1CTRL,a10
         000225d0 00000070- 
    7275 000225f0     09c0          movi    (BUT2_M|BUT3_M)<<8|BUT2_M|BUT3_M,a0
         00022600     6060  
    7276 00022610     800a          move    a0,*a10
    7277                    
    7278 00022620           ylnvwaitp       SLEEPK  1
    7279 00022660     b500          move    *a8(plyr_seqflgs),a0
         00022670     0180  
    7280 00022680     1ea0          btst    PASS_B,a0
    7281 00022690     caf8          jrz     ylnvwaitp
    7282                    
    7283 000226a0     5600          clr     a0
    7284 000226b0     800a          move    a0,*a10
    7285 000226c0     09c0          movi    -1,a0
         000226d0     ffff  
    7286 000226e0     0580          move    a0,@inbound             ;Inbounding off
         000226f0 00000000! 
    7287                    
    7288 00022710                   SLEEPK  30
    7289 00022750           ylnvruninlp
    7290 00022750                   SLEEPK  1
    7291 00022790     09c0          movi    -345,a0
         000227a0     fea7  
    7292 000227b0     4d6b          move    a11,a11
    7293 000227c0     ca01          jrz     ylnvoutl2                       ;Team2 on def
    7294 000227d0     03a0          neg     a0
    7295 000227e0     0b00  ylnvoutl2       addi    WRLDMID,a0
         000227f0     2000  
    7296 00022800     09c1          movi    CZMID-20,a1
         00022810     047e  
    7297 00022820     b5a2          move    *a13(ptob_pball),a2
         00022830     0100  
    7298 00022840     0d3f          callr   plyrtob_seekxy
         00022850     014f  
    7299 00022860     cbee          jrnz    ylnvruninlp
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  174

    7300                    
    7301 00022870     c000          jruc    plyr_tobend
         00022880     ff3f  
    7302                    
    7303                    
    7304                    
    7305 00022890           ylnvt1_setup_table
    7306 00022890     0000          .word   0,CZMID-20,     WRLDMID-365,    20h     ;ply,z,x,face
    7307 000228d0     0001          .word   1,CZMID+15,     WRLDMID-280,    60h     ;ply,z,x,face
    7308 00022910     0002          .word   2,CZMID-50,     WRLDMID-160,    60h     ;ply,z,x,face
    7309 00022950     0003          .word   3,CZMID+70,     WRLDMID-160,    60h     ;ply,z,x,face
    7310                    
    7311 00022990           ylnvt2_setup_table
    7312 00022990     0003          .word   3,CZMID-20,     WRLDMID+365,    60h     ;ply,z,x,face
    7313 000229d0     0002          .word   2,CZMID+15,     WRLDMID+280,    20h     ;ply,z,x,face
    7314 00022a10     0000          .word   0,CZMID-50,     WRLDMID+160,    20h     ;ply,z,x,face
    7315 00022a50     0001          .word   1,CZMID+70,     WRLDMID+160,    20h     ;ply,z,x,face
    7316                    
    7317                    
    7318                    
    7319 00022a90            SUBR   plyr_init
    7320                    
    7321 00022a90                   PUSH    a8,a10,a13
    7322                    
    7323 00022ab0     24a0          sll     5,a0                    ;x 32 bits
    7324 00022ac0     09ed          movi    plyrproc_t,a13
         00022ad0 00000630- 
    7325 00022af0     400d          add     a0,a13
    7326 00022b00     87ad          move    *a13,a13,L              ;*plyr process
    7327                    
    7328 00022b10     0b20          addi    plyrobj_t,a0
         00022b20 000005b0- 
    7329 00022b40     8608          move    *a0,a8,L                ;*plyr object
    7330                    
    7331 00022b50     b288          move    a4,*a8(OZVAL),L
         00022b60     00c0  
    7332 00022b70     0d3f          callr   anipt_getsclxy          ;a0 = anix, a1 = aniy
         00022b80     f527  
    7333 00022b90     b208          move    a0,*a8(OXANI),L
         00022ba0     01e0  
    7334 00022bb0     03a1          neg     a1
    7335 00022bc0     b228          move    a1,*a8(OYVAL),L
         00022bd0     00a0  
    7336 00022be0     4405          sub     a0,a5
    7337 00022bf0     b2a8          move    a5,*a8(OXVAL),L
         00022c00     0080  
    7338                    
    7339 00022c10     1820          movk    STND_SEQ,a0
    7340 00022c20     0d3f          callr   plyr_setseq
         00022c30     e76c  
    7341                    
    7342 00022c40     5600          clr     a0
    7343                    
    7344 00022c50     b208          move    a0,*a8(OXVEL),L
         00022c60     0020  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  175

    7345 00022c70     b208          move    a0,*a8(OYVEL),L
         00022c80     0040  
    7346 00022c90     b208          move    a0,*a8(OZVEL),L
         00022ca0     0060  
    7347                    
    7348 00022cb0     b00d          move    a0,*a13(plyr_jmpcnt)
         00022cc0     0400  
    7349 00022cd0     b00d          move    a0,*a13(plyr_dribmode)
         00022ce0     0210  
    7350 00022cf0     b00d          move    a0,*a13(plyr_offscrn)
         00022d00     04f0  
    7351 00022d10     b00d          move    a0,*a13(plyr_d_cflgs)
         00022d20     0470  
    7352 00022d30     b00d          move    a0,*a13(plyr_hangcnt)
         00022d40     0410  
    7353 00022d50     b00d          move    a0,*a13(plyr_nojoy)
         00022d60     03b0  
    7354 00022d70     b00d          move    a0,*a13(plyr_shtdly)
         00022d80     02b0  
    7355 00022d90     b00d          move    a0,*a13(plyr_passbtime)
         00022da0     0220  
    7356 00022db0     b00d          move    a0,*a13(plyr_rcvpass)
         00022dc0     0230  
    7357 00022dd0     b00d          move    a0,*a13(plyr_ownball)
         00022de0     0260  
    7358 00022df0     b00d          move    a0,*a13(plyr_stagcnt)
         00022e00     0430  
    7359                    
    7360 00022e10     09c0          movi    -1,a0
         00022e20     ffff  
    7361 00022e30     b00d          move    a0,*a13(plyr_newdir)
         00022e40     03e0  
    7362                    
    7363 00022e50     1820          movk    1,a0
    7364 00022e60     b20d          move    a0,*a13(PA10),L         ;reset sequence wake count
         00022e70     0080  
    7365                    
    7366 00022e80                   PULL    a8,a10,a13
    7367 00022ea0     0960          rets
    7368                    
    7369                    
    7370                    
    7371                    
    7372 00022eb0            SUBR   plyr_takeoutball3
    7373                    
    7374 00022eb0     09c0          movi    TOB_PID,a0              ;Kill any other plyr_takeoutball
         00022ec0     2400  
    7375 00022ed0     b00d          move    a0,*a13(PROCID)
         00022ee0     0020  
    7376 00022ef0     0d5f          calla   KIL1C
         00022f00 00000000! 
    7377                    
    7378 00022f20     1900          movk    8,a0
    7379 00022f30     0580          move    a0,@ballsclastp
         00022f40 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  176

    7380                    
    7381 00022f60     1b20          movk    25,a0
    7382 00022f70     0d3f          callr   plyr_setshtdly
         00022f80     00a2  
    7383                    
    7384 00022f90                   SLEEPK  1
    7385                    
    7386 00022fd0     09c0          movi    -1,a0
         00022fe0     ffff  
    7387 00022ff0     0580          move    a0,@ballpnum
         00023000 00000000! 
    7388 00023020     0580          move    a0,@ballpnumlast
         00023030 00000000! 
    7389                    
    7390                    
    7391 00023050     5600          clr     a0
    7392 00023060     4d6b          move    a11,a11
    7393 00023070     ca01          jrz     onvvsetib
    7394 00023080     1820          movk    1,a0
    7395 00023090     0580  onvvsetib       move    a0,@inbound             ;Inbounding team
         000230a0 00000000! 
    7396                    
    7397                    
    7398 000230c0     1820          movk    1,a0
    7399 000230d0     0d3f          callr   plyr_setac
         000230e0     0083  
    7400                    
    7401 000230f0     5600          clr     a0                      ;Clr staggers
    7402 00023100     09c1          movi    plyr_stagcnt,a1
         00023110     0430  
    7403 00023120     0d3f          callr   plyr_setprocword
         00023130     0090  
    7404                    
    7405                    
    7406 00023140     5642          clr     a2
    7407 00023150     1849          movk    2,a9                    ;A9=1st p# of team on defense
    7408 00023160     09e0          movi    plyrproc_t,a0
         00023170 00000630- 
    7409 00023190     4d6b          move    a11,a11
    7410 000231a0     ca04          jrz     onvvt1
    7411 000231b0     1842          movk    2,a2
    7412 000231c0     5729          clr     a9
    7413 000231d0     0b00          addi    32*2,a0
         000231e0     0040  
    7414 000231f0           onvvt1
    7415 000231f0     9608          move    *a0+,a8,L               ;A8=*Proc of plyr who gets ball
    7416 00023200     9607          move    *a0+,a7,L
    7417 00023210     b500          move    *a8(plyr_hpdist),a0
         00023220     0370  
    7418 00023230     b4e1          move    *a7(plyr_hpdist),a1
         00023240     0370  
    7419 00023250     4820          cmp     a1,a0
    7420 00023260     c602          jrle    onvv1st                 ;Closer?
    7421 00023270     4ce8          move    a7,a8
    7422 00023280     1022          addk    1,a2                    ;2nd in team
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  177

    7423 00023290           onvv1st
    7424 00023290     b04d          move    a2,*a13(ptob_pball)
         000232a0     0100  
    7425 000232b0     0582          move    a2,@ballpnum
         000232c0 00000000! 
    7426 000232e0                   XORK    1,a2
    7427 00023300     b04d          move    a2,*a13(ptob_pball2)
         00023310     0110  
    7428 00023320     09c0          movi    -1,a0
         00023330     ffff  
    7429 00023340     0580          move    a0,@ballpnumlast
         00023350 00000000! 
    7430                    
    7431 00023370           onvvoutlp
    7432 00023370                   SLEEPK  1
    7433                    
    7434 000233b0     b5a0          move    *a13(ptob_pball),a0
         000233c0     0100  
    7435 000233d0     0580          move    a0,@ballpnum
         000233e0 00000000! 
    7436 00023400     5600          clr     a0
    7437 00023410     b008          move    a0,*a8(plyr_dribmode)
         00023420     0210  
    7438                    
    7439 00023430     0d3f          callr   plyrtob_moveo3
         00023440     006a  
    7440                    
    7441 00023450     09c0          movi    -355,a0
         00023460     fe9d  
    7442 00023470     4d6b          move    a11,a11
    7443 00023480     ca01          jrz     onvvoutl                        ;Team2 on def
    7444 00023490     03a0          neg     a0
    7445 000234a0     0b00  onvvoutl        addi    WRLDMID,a0
         000234b0     2000  
    7446 000234c0     09c1          movi    CZMID-20,a1
         000234d0     047e  
    7447 000234e0     b5a2          move    *a13(ptob_pball),a2
         000234f0     0100  
    7448 00023500     0d3f          callr   plyrtob_seekxy
         00023510     0083  
    7449 00023520     cbe4          jrnz    onvvoutlp
    7450                    
    7451                    
    7452 00023530     09ca          movi    TSEC*3,a10              ;>Wait for other 3 to get in place
         00023540     009f  
    7453                    
    7454 00023550           onvvwtlp        SLEEPK  1
    7455 00023590     0d3f          callr   plyrtob_moveo3
         000235a0     0054  
    7456 000235b0     ca01          jrz     onvvinpos
    7457 000235c0     3d0a          dsj     a10,onvvwtlp
    7458 000235d0           onvvinpos
    7459                    
    7460 000235d0                   SLEEP   60
    7461                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  178

    7462 00023620     b5aa          move    *a13(ptob_pball),a10    ;>Pass with turbo
         00023630     0100  
    7463 00023640     248a          sll     4,a10                   ;*16
    7464 00023650     0b2a          addi    P1CTRL,a10
         00023660 00000070- 
    7465 00023680     09c0          movi    (BUT2_M|BUT3_M)<<8|BUT2_M|BUT3_M,a0
         00023690     6060  
    7466 000236a0     800a          move    a0,*a10
    7467                    
    7468                    
    7469 000236b0           onvvwaitp       SLEEPK  1
    7470 000236f0     b500          move    *a8(plyr_seqflgs),a0
         00023700     0180  
    7471 00023710     1ea0          btst    PASS_B,a0
    7472 00023720     caf8          jrz     onvvwaitp
    7473                    
    7474 00023730     5600          clr     a0
    7475 00023740     800a          move    a0,*a10
    7476                    
    7477 00023750     09c0          movi    -1,a0
         00023760     ffff  
    7478 00023770     0580          move    a0,@inbound             ;Inbounding off
         00023780 00000000! 
    7479                    
    7480 000237a0                   SLEEPK  30
    7481 000237e0           onvvruninlp
    7482 000237e0                   SLEEPK  1
    7483 00023820     09c0          movi    -345,a0
         00023830     fea7  
    7484 00023840     4d6b          move    a11,a11
    7485 00023850     ca01          jrz     onvvoutl2                       ;Team2 on def
    7486 00023860     03a0          neg     a0
    7487 00023870     0b00  onvvoutl2       addi    WRLDMID,a0
         00023880     2000  
    7488 00023890     09c1          movi    CZMID-20,a1
         000238a0     047e  
    7489 000238b0     b5a2          move    *a13(ptob_pball),a2
         000238c0     0100  
    7490 000238d0     0d3f          callr   plyrtob_seekxy
         000238e0     0046  
    7491 000238f0     cbee          jrnz    onvvruninlp
    7492                    
    7493 00023900     c000          jruc    plyr_tobend
         00023910     fe36  
    7494                    
    7495                    
    7496                    
    7497                    
    7498 00023920            SUBRP  plyr_setac
    7499                    
    7500 00023920     09ee          movi    plyrproc_t,a14
         00023930 00000630- 
    7501 00023950     1890          movk    4,b0
    7502 00023960     97c1  onvvaclp        move    *a14+,a1,L
    7503 00023970     b001          move    a0,*a1(plyr_autoctrl)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  179

         00023980     03c0  
    7504 00023990     3c90          dsj     b0,onvvaclp
    7505 000239a0     0960          rets
    7506                    
    7507                    
    7508 000239b0            SUBR   plyr_setshtdly
    7509                    
    7510 000239b0     09ee          movi    plyrproc_t,a14
         000239c0 00000630- 
    7511 000239e0     1890          movk    4,b0
    7512 000239f0     97c1  bzdgaclp        move    *a14+,a1,L
    7513 00023a00     b001          move    a0,*a1(plyr_shtdly)
         00023a10     02b0  
    7514 00023a20     3c90          dsj     b0,bzdgaclp
    7515 00023a30     0960          rets
    7516                    
    7517                    
    7518 00023a40            SUBRP  plyr_setprocword
    7519                    
    7520 00023a40     4e41          move    a2,b1
    7521 00023a50     09ee          movi    plyrproc_t,a14
         00023a60 00000630- 
    7522 00023a80     1890          movk    4,b0
    7523 00023a90     97c2  sdtkaclp        move    *a14+,a2,L
    7524 00023aa0     4022          add     a1,a2
    7525 00023ab0     8002          move    a0,*a2
    7526 00023ac0     3c90          dsj     b0,sdtkaclp
    7527 00023ad0     4e32          move    b1,a2
    7528 00023ae0     0960          rets
    7529                    
    7530                    
    7531                    
    7532                    
    7533 00023af0            SUBRP  plyrtob_moveo3
    7534                    
    7535 00023af0     09c0          movi    -150,a0                 ;>Send defenders to their spot
         00023b00     ff6a  
    7536 00023b10     09c4          movi    -270,a4
         00023b20     fef2  
    7537 00023b30     4d6b          move    a11,a11
    7538 00023b40     ca02          jrz     wiuft2                  ;Team1 gets?
    7539 00023b50     03a0          neg     a0
    7540 00023b60     03a4          neg     a4
    7541 00023b70     0b00  wiuft2  addi    WRLDMID,a0
         00023b80     2000  
    7542 00023b90     4c03          move    a0,a3
    7543 00023ba0     09c1          movi    CZMID-50,a1
         00023bb0     0460  
    7544 00023bc0     4d22          move    a9,a2
    7545 00023bd0     0d3f          callr   plyrtob_seekxy
         00023be0     0016  
    7546 00023bf0                   PUSH    a0
    7547                    
    7548 00023c00     4c60          move    a3,a0
    7549 00023c10     09c1          movi    CZMID+70,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  180

         00023c20     04d8  
    7550 00023c30     1022          addk    1,a2
    7551 00023c40     0d3f          callr   plyrtob_seekxy
         00023c50     000f  
    7552 00023c60                   PUSH    a0
    7553                    
    7554 00023c70     4c80          move    a4,a0                   ;>Send teammate to spot
    7555 00023c80     0b00          addi    WRLDMID,a0
         00023c90     2000  
    7556 00023ca0     09c1          movi    CZMID+10,a1
         00023cb0     049c  
    7557 00023cc0     b5a2          move    *a13(ptob_pball2),a2
         00023cd0     0110  
    7558 00023ce0     0d3f          callr   plyrtob_seekxy
         00023cf0     0005  
    7559 00023d00                   PULL    a1
    7560 00023d10     5420          or      a1,a0
    7561 00023d20                   PULL    a1
    7562 00023d30     5420          or      a1,a0
    7563                    
    7564 00023d40     0960          rets
    7565                    
    7566                    
    7567                    
    7568 00023d50            SUBRP  plyrtob_seekxy
    7569                    
    7570 00023d50                   PUSH    a2,a8,a11
    7571                    
    7572 00023d70     4e00          move    a0,b0
    7573                    
    7574 00023d80     2482          sll     4,a2                    ;*16
    7575 00023d90     4c4b          move    a2,a11
    7576 00023da0     0b2b          addi    P1CTRL,a11
         00023db0 00000070- 
    7577 00023dd0     2422          sll     1,a2
    7578 00023de0     0b22          addi    plyrobj_t,a2
         00023df0 000005b0- 
    7579 00023e10     8648          move    *a2,a8,L
    7580                    
    7581                    
    7582 00023e20     b502          move    *a8(OXPOS),a2
         00023e30     0090  
    7583 00023e40     b50e          move    *a8(OXANI+16),a14
         00023e50     01f0  
    7584 00023e60     41c2          add     a14,a2
    7585 00023e70     4402          sub     a0,a2
    7586                    
    7587 00023e80     5600          clr     a0
    7588                    
    7589 00023e90     4c4e          move    a2,a14
    7590 00023ea0     0382          abs     a2
    7591 00023eb0     1542          subk    10,a2
    7592 00023ec0     c604          jrle    lghconx
    7593 00023ed0     4dce          move    a14,a14
    7594 00023ee0     c401          jrlt    lghcnolft
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  181

    7595 00023ef0     1480          subk    4,a0                    ;Left
    7596                    
    7597 00023f00     1100  lghcnolft       addk    8,a0                    ;Rgt
    7598 00023f10           lghconx
    7599 00023f10     b502          move    *a8(OZPOS),a2
         00023f20     00d0  
    7600                    
    7601 00023f30     4422          sub     a1,a2
    7602 00023f40     4c4e          move    a2,a14
    7603 00023f50     0382          abs     a2
    7604 00023f60     1542          subk    10,a2
    7605 00023f70     c604          jrle    lghconz
    7606 00023f80     4dce          move    a14,a14
    7607 00023f90     c401          jrlt    lghcnoup
    7608 00023fa0     1420          subk    1,a0                    ;Up
    7609                    
    7610 00023fb0     1040  lghcnoup        addk    2,a0                    ;Dn
    7611 00023fc0           lghconz
    7612 00023fc0     800b          move    a0,*a11
    7613 00023fd0     4c00          move    a0,a0
    7614 00023fe0     cb12          jrnz    lghcx
    7615                    
    7616 00023ff0     4e1e          move    b0,a14
    7617 00024000     b502          move    *a8(OXANI+16),a2
         00024010     01f0  
    7618 00024020     444e          sub     a2,a14
    7619 00024030     b1c8          move    a14,*a8(OXPOS)
         00024040     0090  
    7620                    
    7621 00024050     b028          move    a1,*a8(OZPOS)
         00024060     00d0  
    7622                    
    7623 00024070     b701          move    *a8(OXVEL),a1,L
         00024080     0020  
    7624 00024090     2be1          sra     1,a1
    7625 000240a0     b228          move    a1,*a8(OXVEL),L
         000240b0     0020  
    7626 000240c0     b701          move    *a8(OZVEL),a1,L
         000240d0     0060  
    7627 000240e0     2be1          sra     1,a1
    7628 000240f0     b228          move    a1,*a8(OZVEL),L
         00024100     0060  
    7629                    
    7630 00024110           lghcx   PULL    a2,a8,a11
    7631 00024130     4c00          move    a0,a0
    7632 00024140     0960          rets
    7633                    
    7634                    
    7635                     .if 0
    7636                    
    7637                    
    7638                            STRUCTPD
    7639                            WORD    pft_pball       ;Plyr # (0-3) who gets ball
    7640                            WORD    pft_pball2      ;P# who gets ball passed to him
    7641                            APTR    pft_bbobj       ;*Backboard/crowd object
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  182

    7642                    
    7643                    
    7644                     SUBR   plyr_freethrow
    7645                    
    7646                            jruc    plyr_takeoutball
    7647                    
    7648                            movi    TSEC,a10                ;>Let shot finish
    7649                    wurtlp  movi    -1,a0
    7650                            move    a0,@ballpnum
    7651                            SLEEPK  1
    7652                            dsj     a10,wurtlp
    7653                    
    7654                    
    7655                            movi    [20,0],a0
    7656                            movi    [20,0],a1
    7657                            movi    [500,0],a3              ;Z
    7658                            movi    DMAWNZ|M_NOCOLL|M_SCRNREL,a4
    7659                            movi    CLSDEAD,a5
    7660                            clr     a6
    7661                            clr     a7
    7662                            calla   BEGINOBJ2
    7663                            move    a8,*a13(pft_bbobj),L
    7664                    
    7665                    
    7666                            movk    1,a0
    7667                            callr   plyr_setac
    7668                    
    7669                            clr     a2
    7670                            movk    2,a9                    ;A9=1st p# of team on defense
    7671                            movi    plyrproc_t,a0
    7672                            move    a11,a11
    7673                            jrz     wurtt1
    7674                            movk    2,a2
    7675                            clr     a9
    7676                            addi    32*2,a0
    7677                    wurtt1
    7678                            move    *a0+,a8,L               ;A8=*Proc of plyr who gets ball
    7679                            move    *a0+,a7,L
    7680                            move    *a8(plyr_balldist),a0
    7681                            move    *a7(plyr_balldist),a1
    7682                            cmp     a1,a0
    7683                            jrle    wurt1st                 ;Closer?
    7684                            move    a7,a8
    7685                            addk    1,a2                    ;2nd in team
    7686                    wurt1st
    7687                            move    a2,*a13(pft_pball)
    7688                            XORK    1,a2
    7689                            move    a2,*a13(pft_pball2)
    7690                    
    7691                    
    7692                            movi    TSEC*4,a10              ;>Get ball
    7693                    
    7694                    wurtgblp
    7695                            movi    -1,a0
    7696                            move    a0,@ballpnum
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  183

    7697                            SLEEPK  1
    7698                    
    7699                            callr   plyrtob_moveo3
    7700                    
    7701                            move    @ballobj_p,a3,L
    7702                            move    *a3(OXPOS),a0
    7703                            addk    6,a0
    7704                            move    *a3(OZPOS),a1
    7705                            move    *a13(pft_pball),a2
    7706                            callr   plyrtob_seekxy
    7707                    
    7708                            move    @ballpnum,a0
    7709                            jrn     wurtgbcnt
    7710                            cmp     a0,a2
    7711                            jreq    wurtgotball
    7712                    
    7713                    wurtgbcnt       dsj     a10,wurtgblp
    7714                    
    7715                    wurtgotball
    7716                            move    *a13(pft_pball),a0
    7717                            move    a0,@ballpnum
    7718                    
    7719                    
    7720                            movi    TSEC*3,a10              ;>Run out of bounds
    7721                    
    7722                    wurtoutlp
    7723                            SLEEPK  1
    7724                    
    7725                            callr   plyrtob_moveo3
    7726                    
    7727                            movi    -370,a0
    7728                            move    a11,a11
    7729                            jrz     wurtoutl                        ;Team2 on def
    7730                            neg     a0
    7731                    wurtoutl        addi    WRLDMID,a0
    7732                            move    a0,a3
    7733                            movi    CZMID-20,a1
    7734                            move    *a13(pft_pball),a2
    7735                            callr   plyrtob_seekxy
    7736                            jrz     wurtoutofb
    7737                    
    7738                    
    7739                            dsj     a10,wurtoutlp
    7740                    
    7741                    wurtoutofb
    7742                            movi    TSEC*3,a10              ;>Wait for other 3 to get in place
    7743                    
    7744                    wurtwtlp        SLEEPK  1
    7745                            callr   plyrtob_moveo3
    7746                            jrz     wurtinpos
    7747                            dsj     a10,wurtwtlp
    7748                    wurtinpos
    7749                    
    7750                            move    *a13(pft_pball),a10     ;>Pass with turbo
    7751                            sll     4,a10                   ;*16
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  184

    7752                            addi    P1CTRL,a10
    7753                            movi    060H,a0
    7754                            move    a0,*a10
    7755                    
    7756                            SLEEPK  10
    7757                            clr     a0
    7758                            move    a0,*a10
    7759                    
    7760                            SLEEP   40
    7761                    
    7762                            clr     a0
    7763                            callr   plyr_setac
    7764                    
    7765                            move    *a13(pft_bbobj),a0,L
    7766                            calla   DELOBJ
    7767                    
    7768                            DIE
    7769                    
    7770                    
    7771                     SUBR   gnd_aligndots
    7772                    
    7773                            .ref    hoopl_t,hoopr_t
    7774                    
    7775                            movi    hoopl_t,a11             ;>Setup left hoop dots
    7776                            jruc    gmwshlstrt
    7777                    gmwshllp
    7778                            sll     16,a0
    7779                            move    *a11+,a1                ;Y
    7780                            sll     16,a1
    7781                            move    *a11+,a3                ;Z
    7782                            addi    300,a3
    7783                            movi    alignimg_t,a2
    7784                            movi    0800cH|M_NOCOLL|M_3D|M_NOSCALE,a4
    7785                            movi    CLSDEAD,a5
    7786                            clr     a6
    7787                            clr     a7
    7788                            calla   BEGINOBJ2
    7789                            movi    0101H,a0
    7790                            move    a0,*a8(OCONST)
    7791                            movi    -300,a0
    7792                            move    a0,*a8(OMISC)           ;Z offset
    7793                            addk    16,a11
    7794                    gmwshlstrt      move    *a11+,a0                ;X
    7795                            jrnz    gmwshllp                        ;!End?
    7796                    
    7797                    
    7798                            movi    hoopr_t,a11             ;>Setup rgt hoop dots
    7799                            jruc    gmwshrstrt
    7800                    gmwshrlp
    7801                            sll     16,a0
    7802                            move    *a11+,a1                ;Y
    7803                            sll     16,a1
    7804                            move    *a11+,a3                ;Z
    7805                            addi    300,a3
    7806                            movi    alignimg_t,a2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  185

    7807                            movi    0800cH|M_NOCOLL|M_3D|M_NOSCALE,a4
    7808                            movi    CLSDEAD,a5
    7809                            clr     a6
    7810                            clr     a7
    7811                            calla   BEGINOBJ2
    7812                            movi    0101H,a0
    7813                            move    a0,*a8(OCONST)
    7814                            movi    -300,a0
    7815                            move    a0,*a8(OMISC)           ;Z offset
    7816                            addk    16,a11
    7817                    gmwshrstrt      move    *a11+,a0                ;X
    7818                            jrnz    gmwshrlp                        ;!End?
    7819                    
    7820                    
    7821                            movi    gmwsinit_t,a11          ;>Setup gnd dot images
    7822                            jruc    gmws5
    7823                    gmwslp
    7824                            addi    200,a0
    7825                            sll     16,a0
    7826                            clr     a1                      ;Y
    7827                            move    *a11+,a3                ;Z
    7828                            movi    alignimg_t,a2
    7829                            movi    0800cH|M_NOCOLL|M_3D|M_NOSCALE,a4
    7830                            movi    CLSDEAD,a5
    7831                            clr     a6
    7832                            clr     a7
    7833                            calla   BEGINOBJ
    7834                            movi    0101H,a0
    7835                            move    a0,*a8(OCONST)
    7836                    gmws5   move    *a11+,a0                ;X
    7837                            cmpi    4000,a0
    7838                            jrne    gmwslp                  ;!End?
    7839                    
    7840                            move    *a8(OPAL),a9
    7841                            sll     8,a9
    7842                            addk    1,a9                    ;Color 1
    7843                            clr     a10
    7844                    gmwsplp
    7845                            move    a10,a0
    7846                            addi    gmwscolor_t,a0
    7847                            move    a9,a1
    7848                            movk    1,a2                    ;gmwsColors
    7849                            calla   pal_set
    7850                            SLEEPK  10
    7851                            addk    16,a10
    7852                            sll     32-6,a10                ;0-3 color #
    7853                            srl     32-6,a10
    7854                            jruc    gmwsplp
    7855                    
    7856                    
    7857                    gmwsz0  .equ    GZBASE
    7858                    gmwsz1  .equ    1000
    7859                    gmwsz2  .equ    1095
    7860                    gmwsz3  .equ    1190
    7861                    gmwsz4  .equ    1284
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  186

    7862                    gmwsz5  .equ    GZMAX
    7863                    
    7864                    gmwsinit_t
    7865                            .word   4000
    7866                    
    7867                    gmwscolor_t
    7868                            COLORW  0,0,0, 0,16,0, 0,31,0, 0,16,0
    7869                    
    7870                    
    7871                    
    7872                    
    7873                    alignimg_t
    7874                            .word   1,1,0,0
    7875                            .long   0
    7876                            .word   01000H
    7877                            .long   gmwstest_p
    7878                    
    7879                    
    7880                    gmwstest_p      .word   1, 0
    7881                    
    7882                    
    7883                     SUBRP  plyr_getgndaligndot
    7884                    
    7885                            PUSH    a2,a3,a4,a5,a6,a7,a8
    7886                    
    7887                            clr     a0                      ;X
    7888                            clr     a1                      ;Y
    7889                            movi    CZMIN,a3                ;Z
    7890                            movi    alignimg_t,a2
    7891                            movi    0800cH|M_NOCOLL|M_3D|M_NOSCALE,a4
    7892                            movi    CLSDEAD,a5
    7893                            clr     a6
    7894                            clr     a7
    7895                            calla   BEGINOBJ
    7896                            movi    0101H,a0
    7897                            move    a0,*a8(OCONST)
    7898                            movi    -300,a0
    7899                            move    a0,*a8(OMISC)           ;Z offset
    7900                    
    7901                            move    a8,*a13(plyr_aligndot_p),L
    7902                    
    7903                            PULL    a2,a3,a4,a5,a6,a7,a8
    7904                            rets
    7905                    
    7906                    
    7907                    
    7908                     SUBRP  plyr_setgndaligndot
    7909                    
    7910                            PUSH    a2,a3,a4,a5,a6,a7
    7911                    
    7912                            callr   anipt_getsclxy
    7913                            move    *a8(OXVAL),a14,L
    7914                            add     a14,a0
    7915                            move    *a13(plyr_aligndot_p),a2,L
    7916                            move    a0,*a2(OXVAL),L
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  187

    7917                    
    7918                            move    *a8(OZPOS),a14
    7919                            addi    300,a14
    7920                            move    a14,*a2(OZPOS)
    7921                    
    7922                            PULL    a2,a3,a4,a5,a6,a7
    7923                            rets
    7924                    
    7925                    
    7926                     .endif
    7927                    
    7928                    
    7929                    
    7930 00024150            SUBRP  seekdir_obxz128
    7931                    
    7932 00024150     b500          move    *a8(OXPOS),a0           ;Get SX
         00024160     0090  
    7933 00024170     b50e          move    *a8(OXANI+16),a14
         00024180     01f0  
    7934 00024190     41c0          add     a14,a0
    7935 000241a0     b501          move    *a8(OZPOS),a1           ;Get SZ
         000241b0     00d0  
    7936                    
    7937                    
    7938 000241c0            SUBR   seekdir_xyxy128
    7939                    
    7940 000241c0     5642          clr     a2                      ;Octant 0-1
    7941 000241d0     44c0          sub     a6,a0                   ;A0=SrcX-DestX
    7942 000241e0     c706          jrgt    wnca100
    7943 000241f0     0380          abs     a0
    7944 00024200     44e1          sub     a7,a1                   ;A1=SrcY-DestY
    7945 00024210     cf0c          jrnn    wncaoct01
    7946 00024220     1902          movk    8,a2                    ;Oct 2-3
    7947 00024230     0381          abs     a1
    7948 00024240     c005          jruc    wnca160
    7949                    
    7950 00024250     1a02  wnca100 movk    16,a2                   ;Oct 4-5
    7951 00024260     44e1          sub     a7,a1                   ;A1=SrcY-DestX
    7952 00024270     0381          abs     a1
    7953 00024280     cf04          jrnn    wnca200
    7954 00024290     1b02          movk    16+8,a2                 ;Oct 6-7
    7955 000242a0           wnca160 SWAP    a0,a1
    7956                    
    7957 000242d0     2442  wnca200 sll     2,a2                    ;Oct*4
    7958 000242e0     57ce  wncaoct01       clr     a14
    7959 000242f0     4820          cmp     a1,a0                   ;0CHmp slope
    7960 00024300     c908          jrhs    wnca300
    7961                    
    7962 00024310     2f81          srl     2+2,a1                  ;Bigger/16
    7963 00024320     cb03          jrnz    wnca250
    7964 00024330     c00d          jruc    wncax
    7965 00024340     1022  wncalp1 addk    1,a2                    ;Next 1/16 oct
    7966 00024350     402e          add     a1,a14                  ;+1/16
    7967 00024360     480e  wnca250 cmp     a0,a14
    7968 00024370     c8fc          jrlo    wncalp1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  188

    7969 00024380     c008          jruc    wncax
    7970                    
    7971 00024390     13e2  wnca300 addk    31,a2                   ;End of next octant
    7972 000243a0     2f80          srl     2+2,a0                  ;Bigger/16
    7973 000243b0     cb03          jrnz    wnca350
    7974 000243c0     c004          jruc    wncax
    7975 000243d0     1422  wncalp2 subk    1,a2                    ;Next 1/16 oct
    7976 000243e0     400e          add     a0,a14                  ;+1/16
    7977 000243f0     482e  wnca350 cmp     a1,a14
    7978 00024400     c8fc          jrlo    wncalp2
    7979                    
    7980                    
    7981 00024410     09c0  wncax   movi    07fH,a0
         00024420     007f  
    7982 00024430     5040          and     a2,a0
    7983 00024440     0960          rets
    7984                    
    7985                    
    7986                    
    7987                    
    7988                    
    7989 00024450            SUBRP  seekdirdist_obob128
    7990                    
    7991 00024450     b406          move    *a0(OXPOS),a6           ;Get SX
         00024460     0090  
    7992 00024470     b40e          move    *a0(OXANI+16),a14
         00024480     01f0  
    7993 00024490     41c6          add     a14,a6
    7994 000244a0     b407          move    *a0(OZPOS),a7           ;Get SZ
         000244b0     00d0  
    7995                    
    7996                    
    7997 000244c0            SUBR   seekdirdist_obxz128
    7998                    
    7999 000244c0     b500          move    *a8(OXPOS),a0           ;Get SX
         000244d0     0090  
    8000 000244e0     b50e          move    *a8(OXANI+16),a14
         000244f0     01f0  
    8001 00024500     41c0          add     a14,a0
    8002 00024510     b501          move    *a8(OZPOS),a1           ;Get SZ
         00024520     00d0  
    8003                    
    8004                    
    8005 00024530     5642          clr     a2                      ;Octant 0-1
    8006 00024540     44c0          sub     a6,a0                   ;A0=SrcX-DestX
    8007 00024550     c706          jrgt    pvgo100
    8008 00024560     0380          abs     a0
    8009 00024570     44e1          sub     a7,a1                   ;A1=SrcY-DestY
    8010 00024580     cf0c          jrnn    pvgooct01
    8011 00024590     1902          movk    8,a2                    ;Oct 2-3
    8012 000245a0     0381          abs     a1
    8013 000245b0     c005          jruc    pvgo160
    8014                    
    8015 000245c0     1a02  pvgo100 movk    16,a2                   ;Oct 4-5
    8016 000245d0     44e1          sub     a7,a1                   ;A1=SrcY-DestX
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  189

    8017 000245e0     0381          abs     a1
    8018 000245f0     cf04          jrnn    pvgo200
    8019 00024600     1b02          movk    16+8,a2                 ;Oct 6-7
    8020 00024610           pvgo160 SWAP    a0,a1
    8021                    
    8022 00024640     2442  pvgo200 sll     2,a2                    ;Oct*4
    8023 00024650     57ce  pvgooct01       clr     a14
    8024 00024660     4820          cmp     a1,a0                   ;0CHmp slope
    8025 00024670     c90a          jrhs    pvgo300
    8026                    
    8027 00024680     4e00          move    a0,b0                   ;Save distance
    8028 00024690     4e21          move    a1,b1
    8029                    
    8030 000246a0     2f81          srl     2+2,a1                  ;Bigger/16
    8031 000246b0     cb03          jrnz    pvgo250
    8032 000246c0     c00f          jruc    pvgox
    8033 000246d0     1022  pvgolp1 addk    1,a2                    ;Next 1/16 oct
    8034 000246e0     402e          add     a1,a14                  ;+1/16
    8035 000246f0     480e  pvgo250 cmp     a0,a14
    8036 00024700     c8fc          jrlo    pvgolp1
    8037 00024710     c00a          jruc    pvgox
    8038                    
    8039 00024720     4e01  pvgo300 move    a0,b1                   ;Save distance
    8040 00024730     4e20          move    a1,b0
    8041                    
    8042 00024740     13e2          addk    31,a2                   ;End of next octant
    8043 00024750     2f80          srl     2+2,a0                  ;Bigger/16
    8044 00024760     cb03          jrnz    pvgo350
    8045 00024770     c004          jruc    pvgox
    8046 00024780     1422  pvgolp2 subk    1,a2                    ;Next 1/16 oct
    8047 00024790     400e          add     a0,a14                  ;+1/16
    8048 000247a0     482e  pvgo350 cmp     a1,a14
    8049 000247b0     c8fc          jrlo    pvgolp2
    8050                    
    8051 000247c0           pvgox                                   ;0CaHlc distance (long+short/2.667)
    8052 000247c0     2ff0          srl     1,b0                    ;Shorter/2
    8053 000247d0     4011          add     b0,b1
    8054 000247e0     2fd0          srl     2,b0                    ;Shorter/8
    8055 000247f0     4411          sub     b0,b1
    8056 00024800     4e31          move    b1,a1
    8057                    
    8058 00024810     09c0          movi    07fH,a0
         00024820     007f  
    8059 00024830     5040          and     a2,a0
    8060 00024840     0960          rets
    8061                    
    8062                    
    8063                    
    8064                    
    8065 00024850            SUBRP  rnd
    8066                    
    8067 00024850     07a1          move    @RAND,a1,L
         00024860 00000000! 
    8068 00024880     6821          rl      a1,a1
    8069 00024890     05ae          move    @HCOUNT,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:01 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball player code                                               PAGE  190

         000248a0 c00001c0  
    8070 000248c0     69c1          rl      a14,a1
    8071 000248d0     41e1          add     sp,a1
    8072 000248e0     0781          move    a1,@RAND,L
         000248f0 00000000! 
    8073                    
    8074 00024910     5020          and     a1,a0
    8075 00024920     0960          rets
    8076                    
    8077                    
    8078                    
    8079 00024930            SUBR   rndrng0
    8080                    
    8081 00024930     07a1          move    @RAND,a1,L
         00024940 00000000! 
    8082 00024960     6821          rl      a1,a1
    8083 00024970     05ae          move    @HCOUNT,a14
         00024980 c00001c0  
    8084 000249a0     69c1          rl      a14,a1
    8085 000249b0     41e1          add     sp,a1
    8086 000249c0     0781          move    a1,@RAND,L
         000249d0 00000000! 
    8087                    
    8088 000249f0     1020          addk    1,a0
    8089 00024a00     5e20          mpyu    a1,a0           ;Condition codes not valid!
    8090                    
    8091 00024a10     0960          rets
    8092                    
    8093                    
    8094                    
    8095                    
    8096                            .end

 No Errors,  No Warnings
