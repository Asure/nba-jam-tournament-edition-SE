TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .file   "drone.asm"
       3                            .width  132
       4                            .option b,d,l,t
       5                            .mnolist
       6                    
       7                    
       8                            .include        "mproc.equ"             ;Mproc equates
       9                            .include        "disp.equ"              ;Display proc equates
      10                            .include        "gsp.equ"               ;Gsp asm equates
      11                            .include        "sys.equ"
      12                            .include        "audit.equ"
      13                            .include        "shawn.hdr"             ;Macros
      14                            .asg            0,SEQT
      15                            .include        "plyr.equ"
      16                    
      17                    
      18                    
      19                    
      20                    
      21                            .ref    plyrobj_t,plyrproc_t
      22                            .ref    ballobj_p
      23                            .ref    ballpnum
      24                            .ref    seekdirdist_obxz128
      25                    
      26                            .ref    drone2on
      27                            .ref    drone2_main,drone2_adjskill,drone2_setuptob
      28                    
      29                            .ref    game_time,gmqrtr
      30                            .ref    shotimer
      31                    
      32                            .ref    team1,team2
      33                    
      34                            .ref    RNDPER
      35                            .ref    PSTATUS
      36                            .ref    GET_ADJ
      37                    
      38                    
      39                    
      40                    
      41                    
      42 00000000                   .bss    drnzzcnt        ,16     ;Drone zigzag mode cntdn
      43 00000010                   .bss    drnzzmode       ,16     ;Drone zigzag mode (0-?)
      44                    
      45                    
      46                    
      47                    
      48                    
      49 00000000                   .text
      50                    
      51                    
      52                    
      53                    
      54 00000000            SUBR   drone_main
      55                    
      56 00000000     05b0          move    @drone2on,b0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    2

         00000010 00000000! 
      57 00000030     cb00          jrnz    drone2_main
         00000040     fffb! 
      58                    
      59                    
      60 00000050     05ae          move    @ballpnum,a14
         00000060 00000000! 
      61 00000080     ce00          jrn     drone_chaseball         ;No owner?
         00000090     04f4  
      62                    
      63 000000a0     b5a1          move    *a13(plyr_ownball),a1
         000000b0     0260  
      64 000000c0     ca00          jrz     drone_defence           ;We don't have ball?
         000000d0     02f7  
      65 000000e0     ce00          jrn     drone_offwoball         ;Teammate has ball?
         000000f0     01cc  
      66                    
      67                    
      68                    
      69 00000100     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         00000110 00000000! 
      70 00000130     b5a1          move    *a13(plyr_num),a1
         00000140     0100  
      71 00000150                   XORK    1,a1
      72 00000170     4a20          btst    a1,a0
      73 00000180     ca1b          jrz     iuretmdrone             ;Teammate is a drone?
      74                    
      75 00000190     b5a2          move    *a13(plyr_d_cflgs),a2
         000001a0     0470  
      76 000001b0     1fe2          btst    DRN_PASS_B,a2
      77 000001c0     ca03          jrz     iurenopass
      78                    
      79 000001d0     09ce          movi    BUT2_M<<8+BUT2_M,a14    ;>Make him pass
         000001e0     2020  
      80 000001f0     c007          jruc    iuredocmd
      81                    
      82 00000200           iurenopass
      83 00000200     1fc2          btst    DRN_SHOOT_B,a2
      84 00000210     ca12          jrz     iurenoshoot
      85 00000220     09ce          movi    BUT1_M|BUT3_M,a14       ;>Make him shoot
         00000230     0050  
      86 00000240     1860          movk    3,a0
      87 00000250     b00d          move    a0,*a13(plyr_d_seekcnt)
         00000260     0480  
      88 00000270           iuredocmd
      89 00000270     8560          move    *a11,a0
      90 00000280     2780          sll     32-4,a0
      91 00000290     2c80          srl     32-4,a0
      92 000002a0     0ba0          ori     BUT3_M,a0               ;+turbo
         000002b0 00000040  
      93 000002d0           iurenoturb
      94 000002d0     55c0          or      a14,a0
      95 000002e0     800b          move    a0,*a11
      96 000002f0     5600          clr     a0
      97 00000300     b00d          move    a0,*a13(plyr_d_cflgs)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    3

         00000310     0470  
      98 00000320     c000          jruc    iurex
         00000330     0197  
      99                    
     100 00000340           iurenoshoot
     101 00000340           iuretmdrone
     102                    
     103 00000340     1820          movk    1,a0
     104 00000350     b00d          move    a0,*a13(plyr_d_mode)
         00000360     0450  
     105                    
     106                    
     107 00000370     b5a2          move    *a13(plyr_seqflgs),a2
         00000380     0180  
     108 00000390     1ea2          btst    PASS_B,a2
     109 000003a0     cb00          jrnz    iurekilbuts
         000003b0     018d  
     110                    
     111 000003c0     b5ae          move    *a13(plyr_jmpcnt),a14
         000003d0     0400  
     112 000003e0     cb00          jrnz    iureinjmp
         000003f0     015a  
     113                    
     114 00000400     8560          move    *a11,a0
     115 00000410     1f60          btst    BUT1_B,a0
     116 00000420     cb00          jrnz    iurefake                        ;Shoot button down?
         00000430     0133  
     117                    
     118                    
     119 00000440     1ec2          btst    SHOOT_B,a2
     120 00000450     cb00          jrnz    iureinjmp
         00000460     0153  
     121                    
     122                    
     123 00000470     b5ae          move    *a13(plyr_dribmode),a14
         00000480     0210  
     124 00000490     ce46          jrn     iurenodrib
     125                    
     126 000004a0     b5ae          move    *a13(plyr_num),a14      ;0CHhk for breakaway
         000004b0     0100  
     127 000004c0     2fee          srl     1,a14
     128 000004d0     1820          movk    1,a0
     129 000004e0     560e          xor     a0,a14
     130 000004f0     24ce          sll     6,a14                   ;*64
     131 00000500     0b2e          addi    plyrproc_t,a14
         00000510 00000000! 
     132 00000530     97c2          move    *a14+,a2,L
     133 00000540     97c3          move    *a14+,a3,L
     134                    
     135 00000550     b442          move    *a2(plyr_hpdist),a2
         00000560     0370  
     136 00000570     b463          move    *a3(plyr_hpdist),a3
         00000580     0370  
     137 00000590     b5a4          move    *a13(plyr_ohpdist),a4
         000005a0     0390  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    4

     138                    
     139 000005b0     4882          cmp     a4,a2
     140 000005c0     c444          jrlt    iureshootrnd            ;He's closer?
     141 000005d0     4883          cmp     a4,a3
     142 000005e0     c442          jrlt    iureshootrnd            ;He's closer?
     143                    
     144 000005f0     b5a0          move    *a13(plyr_ohoopx),a0
         00000600     02d0  
     145 00000610     09c1          movi    CZMID,a1
         00000620     0492  
     146 00000630     0d3f          callr   drone_seekxy
         00000640     055b  
     147 00000650     b5ae          move    *a13(plyr_d_skill),a14
         00000660     0460  
     148 00000670     0b4e          cmpi    -11-3,a14
         00000680     000d  
     149 00000690     c604          jrle    iurenoturb2
     150 000006a0     0ba0          ori     BUT3_M,a0               ;Push turbo
         000006b0 00000040  
     151 000006d0     800b          move    a0,*a11
     152 000006e0           iurenoturb2
     153                    
     154 000006e0     07a1          move    @game_time,a1,L
         000006f0 00000000! 
     155 00000710     0b41          cmpi    0200H,a1
         00000720     fdff  
     156 00000730     c400          jrlt    iureshoot2                      ;Less than 2 secs?
         00000740     00f9  
     157 00000750     05a1          move    @shotimer+16,a1         ;Tens
         00000760 00000010! 
     158 00000780     cb06          jrnz    iurescok
     159 00000790     05a1          move    @shotimer,a1            ;Ones
         000007a0 00000000! 
     160 000007c0     1441          subk    2,a1
     161 000007d0     c400          jrlt    iureshoot2                      ;Less than 2 secs?
         000007e0     00ef  
     162 000007f0           iurescok
     163 000007f0     b5ae          move    *a13(plyr_ohpdist),a14
         00000800     0390  
     164 00000810     0b4e          cmpi    170,a14
         00000820     ff55  
     165 00000830     c500          jrge    iurex                   ;Too far?
         00000840     0146  
     166 00000850     0b4e          cmpi    50,a14
         00000860     ffcd  
     167 00000870     c400          jrlt    iureshoot2                      ;Close?
         00000880     00e5  
     168 00000890     1be0          movk    01fH,a0
     169 000008a0     0d3f          callr   rnd
         000008b0     0619  
     170 000008c0     cb00          jrnz    iurex
         000008d0     013d  
     171 000008e0     c000          jruc    iureshoot2
         000008f0     00de  
     172                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    5

     173                    
     174 00000900           iurenodrib                                      ;0CaHn't dribble
     175 00000900     b5a0          move    *a13(plyr_ohpdist),a0
         00000910     0390  
     176 00000920     0b40          cmpi    230,a0
         00000930     ff19  
     177 00000940     c400          jrlt    iureshoot2
         00000950     00d8  
     178 00000960     0d3f          callr   drone_pass
         00000970     022f  
     179 00000980     cb00          jrnz    iurex                   ;Pass OK?
         00000990     0131  
     180 000009a0     1be0          movk    01fH,a0
     181 000009b0     0d3f          callr   rnd
         000009c0     0608  
     182 000009d0     cb00          jrnz    iurex                   ;97%?
         000009e0     012c  
     183 000009f0     c000          jruc    iureshoot2
         00000a00     00cd  
     184                    
     185                    
     186 00000a10           iureshootrnd
     187 00000a10     07a1          move    @game_time,a1,L
         00000a20 00000000! 
     188 00000a40     0b41          cmpi    0200H,a1
         00000a50     fdff  
     189 00000a60     c400          jrlt    iureshoot2                      ;Less than 2 secs?
         00000a70     00c6  
     190 00000a80     05a1          move    @shotimer+16,a1
         00000a90 00000010! 
     191 00000ab0     cb06          jrnz    iurescok2
     192 00000ac0     05a1          move    @shotimer,a1
         00000ad0 00000000! 
     193 00000af0     1441          subk    2,a1
     194 00000b00     c400          jrlt    iureshoot2                      ;Less than 2 secs?
         00000b10     00bc  
     195 00000b20           iurescok2
     196 00000b20                   PUSH    a6,a7
     197 00000b40     b5a6          move    *a13(plyr_ohoopx),a6
         00000b50     02d0  
     198 00000b60     09c7          movi    CZMID,a7
         00000b70     0492  
     199 00000b80     0d5f          calla   seekdirdist_obxz128
         00000b90 00000000! 
     200 00000bb0                   PULL    a6,a7
     201                    
     202 00000bd0     b5ae          move    *a13(plyr_o1dist),a14
         00000be0     0310  
     203 00000bf0     0b4e          cmpi    80,a14
         00000c00     ffaf  
     204 00000c10     c70e          jrgt    iureo1dok                       ;He's too far?
     205 00000c20     49c1          cmp     a14,a1
     206 00000c30     c40c          jrlt    iureo1dok                       ;I'm closer?
     207 00000c40     b5a2          move    *a13(plyr_o1dir),a2
         00000c50     0300  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    6

     208 00000c60     4402          sub     a0,a2
     209 00000c70     0382          abs     a2
     210 00000c80     0b42          cmpi    040H,a2
         00000c90     ffbf  
     211 00000ca0     c603          jrle    iureo1dsml
     212 00000cb0     0be2          subi    080H,a2
         00000cc0     ff7f  
     213 00000cd0     0382          abs     a2
     214 00000ce0     1402  iureo1dsml      subk    32,a2
     215 00000cf0     c414          jrlt    iuregoaround            ;In front of me?
     216 00000d00           iureo1dok
     217 00000d00     b5ae          move    *a13(plyr_o2dist),a14
         00000d10     0330  
     218 00000d20     0b4e          cmpi    80,a14
         00000d30     ffaf  
     219 00000d40     c70e          jrgt    iureo2dok                       ;He's too far?
     220 00000d50     49c1          cmp     a14,a1
     221 00000d60     c40c          jrlt    iureo2dok                       ;I'm closer?
     222 00000d70     b5a2          move    *a13(plyr_o2dir),a2
         00000d80     0320  
     223 00000d90     4402          sub     a0,a2
     224 00000da0     0382          abs     a2
     225 00000db0     0b42          cmpi    040H,a2
         00000dc0     ffbf  
     226 00000dd0     c603          jrle    iureo2dsml
     227 00000de0     0be2          subi    080H,a2
         00000df0     ff7f  
     228 00000e00     0382          abs     a2
     229 00000e10     1402  iureo2dsml      subk    32,a2
     230 00000e20     c401          jrlt    iuregoaround            ;In front of me?
     231 00000e30           iureo2dok
     232 00000e30     c030          jruc    iurerunath
     233                    
     234 00000e40           iuregoaround                            ;>Opponent in my way
     235 00000e40     b5a0          move    *a13(plyr_tmdist),a0
         00000e50     02f0  
     236 00000e60     0b40          cmpi    70,a0
         00000e70     ffb9  
     237 00000e80     c404          jrlt    iuregoa                 ;Teammate too close?
     238                    
     239 00000e90     0d3f          callr   drone_pass
         00000ea0     01dc  
     240 00000eb0     cb00          jrnz    iurex                   ;Pass OK?
         00000ec0     00de  
     241                    
     242 00000ed0           iuregoa
     243 00000ed0     09e2          movi    drnzzcnt,a2
         00000ee0 00000000- 
     244 00000f00     8440          move    *a2,a0
     245 00000f10     1420          subk    1,a0
     246 00000f20     c70a          jrgt    iurezzsame
     247                    
     248 00000f30     1820          movk    1,a0                    ;New mode
     249 00000f40     0d3f          callr   rnd
         00000f50     05af  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    7

     250 00000f60     b002          move    a0,*a2(drnzzmode-drnzzcnt)
         00000f70     0010  
     251 00000f80     09c0          movi    TSEC-10,a0
         00000f90     002b  
     252 00000fa0     0d3f          callr   rndrng0
         00000fb0     05b7  
     253 00000fc0     1140          addk    10,a0
     254 00000fd0           iurezzsame
     255 00000fd0     8002          move    a0,*a2
     256                    
     257 00000fe0     b5a0          move    *a13(plyr_ohoopx),a0
         00000ff0     02d0  
     258 00001000     09c1          movi    CZMID,a1
         00001010     0492  
     259 00001020     0d3f          callr   drone_seekxy
         00001030     04bc  
     260 00001040     ca69          jrz     iureshoot2                      ;In position?
     261 00001050     2460          sll     3,a0                    ;*8
     262 00001060     0b20          addi    iurejbits_t,a0
         00001070 00001cc0' 
     263                    
     264 00001090     b44e          move    *a2(drnzzmode-drnzzcnt),a14
         000010a0     0010  
     265 000010b0     ca02          jrz     iuremd1
     266 000010c0     0b00          addi    16*8,a0
         000010d0     0080  
     267 000010e0     8e00  iuremd1 movb    *a0,a0
     268 000010f0     800b          move    a0,*a11
     269                    
     270 00001100     0b44          cmpi    80,a4
         00001110     ffaf  
     271 00001120     c45b          jrlt    iureshoot2                      ;Close enough for jam?
     272                    
     273 00001130     c019          jruc    iuretryshot
     274                    
     275                    
     276 00001140           iurerunath                                      ;>I have a clr path to hoop!
     277 00001140     b5ae          move    *a13(plyr_o1dist),a14
         00001150     0310  
     278 00001160     0b4e          cmpi    65,a14
         00001170     ffbe  
     279 00001180     c4d4          jrlt    iuregoa                 ;He's too close?
     280 00001190     b5ae          move    *a13(plyr_o2dist),a14
         000011a0     0330  
     281 000011b0     0b4e          cmpi    65,a14
         000011c0     ffbe  
     282 000011d0     c4cf          jrlt    iuregoa                 ;He's too close?
     283                    
     284 000011e0     b5a0          move    *a13(plyr_ohoopx),a0
         000011f0     02d0  
     285 00001200     09c1          movi    CZMID,a1
         00001210     0492  
     286 00001220     0d3f          callr   drone_seekxy
         00001230     049c  
     287 00001240     b5ae          move    *a13(plyr_d_skill),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    8

         00001250     0460  
     288 00001260     0b4e          cmpi    -11-3,a14
         00001270     000d  
     289 00001280     c604          jrle    iuretryshot
     290 00001290     0ba0          ori     BUT3_M,a0               ;Turbo
         000012a0 00000040  
     291 000012c0     800b          move    a0,*a11
     292                    
     293                    
     294 000012d0           iuretryshot
     295 000012d0     0b44          cmpi    50,a4
         000012e0     ffcd  
     296 000012f0     c43e          jrlt    iureshoot2                      ;Close enough for jam?
     297                    
     298 00001300     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         00001310 00000000! 
     299 00001330     b5a1          move    *a13(plyr_num),a1
         00001340     0100  
     300 00001350                   XORK    1,a1
     301 00001370     4a20          btst    a1,a0
     302 00001380     cb00          jrnz    iurex                   ;Teammate is a human?
         00001390     0091  
     303                    
     304 000013a0     0b44          cmpi    230,a4                  ;0CHhk if we need 3ptrs
         000013b0     ff19  
     305 000013c0     c420          jrlt    iureno3
     306 000013d0     0b44          cmpi    290,a4
         000013e0     fedd  
     307 000013f0     c71d          jrgt    iureno3
     308                    
     309 00001400     18c1          movk    6,a1
     310 00001410     07a2          move    @game_time,a2,L
         00001420 00000000! 
     311 00001440     0b62          cmpi    01010000H,a2
         00001450 fefeffff  
     312 00001470     c701          jrgt    iurehvtime                      ;Enough time?
     313 00001480     1861          movk    3,a1
     314 00001490           iurehvtime
     315 00001490     b5ae          move    *a13(plyr_ptsdown),a14
         000014a0     0440  
     316 000014b0     482e          cmp     a1,a14
     317 000014c0     c410          jrlt    iureno3
     318                    
     319 000014d0     0b62          cmpi    040000H,a2
         000014e0 fffbffff  
     320 00001500     c41d          jrlt    iureshoot2                      ;Less than 40 secs?
     321                    
     322 00001510     1900          movk    8,a0
     323 00001520     b5ae          move    *a13(plyr_o1dist),a14
         00001530     0310  
     324 00001540     0b4e          cmpi    70,a14
         00001550     ffb9  
     325 00001560     c40e          jrlt    iurerndsht                      ;He's close?
     326 00001570     b5ae          move    *a13(plyr_o2dist),a14
         00001580     0330  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE    9

     327 00001590     0b4e          cmpi    70,a14
         000015a0     ffb9  
     328 000015b0     c409          jrlt    iurerndsht                      ;He's close?
     329 000015c0     c011          jruc    iureshoot2
     330                    
     331 000015d0           iureno3
     332 000015d0     09c0          movi    50,a0
         000015e0     0032  
     333 000015f0     b5ae          move    *a13(plyr_d_skill),a14
         00001600     0460  
     334 00001610     0b4e          cmpi    -8,a14
         00001620     0007  
     335 00001630     c701          jrgt    iurerndsht
     336 00001640     1bc0          movk    30,a0
     337 00001650     0d3f  iurerndsht      callr   rndrng0
         00001660     054c  
     338 00001670     4c00          move    a0,a0
     339 00001680     cb62          jrnz    iurex
     340                    
     341 00001690           iureshoot
     342 00001690     b5ae          move    *a13(plyr_ohpdist),a14
         000016a0     0390  
     343 000016b0     0b4e          cmpi    240,a14
         000016c0     ff0f  
     344 000016d0     c55d          jrge    iurex                   ;Too far?
     345                    
     346 000016e0     8560  iureshoot2      move    *a11,a0                 ;>Shoot
     347 000016f0     0ba0          ori     BUT1_M|BUT3_M,a0
         00001700 00000050  
     348 00001720     800b          move    a0,*a11
     349 00001730     1820          movk    1,a0                    ;Max fakes
     350 00001740     b00d          move    a0,*a13(plyr_d_seekcnt)
         00001750     0480  
     351 00001760     c054          jruc    iurex
     352                    
     353                    
     354                    
     355 00001770           iurefake                                        ;>Jumping but still on gnd
     356 00001770     b5a2          move    *a13(plyr_d_seekcnt),a2
         00001780     0480  
     357 00001790     c651          jrle    iurex                   ;No fakes?
     358 000017a0     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         000017b0 00000000! 
     359 000017d0     b5a1          move    *a13(plyr_num),a1
         000017e0     0100  
     360 000017f0                   XORK    1,a1
     361 00001810     4a20          btst    a1,a0
     362 00001820     cb48          jrnz    iurex                   ;Teammate is a human?
     363 00001830     1be0          movk    01fH,a0
     364 00001840     0d3f          callr   rnd
         00001850     051f  
     365 00001860     cb44          jrnz    iurex
     366                    
     367 00001870     07a1          move    @game_time,a1,L
         00001880 00000000! 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   10

     368 000018a0     0b41          cmpi    0200H,a1
         000018b0     fdff  
     369 000018c0     c43e          jrlt    iurex                   ;Less than 2 secs?
     370 000018d0     05a1          move    @shotimer+16,a1         ;Tens
         000018e0 00000010! 
     371 00001900     cb05          jrnz    iurefk
     372 00001910     05a1          move    @shotimer,a1            ;Ones
         00001920 00000000! 
     373 00001940     1441          subk    2,a1
     374 00001950     c435          jrlt    iurex                   ;Less than 2 secs?
     375 00001960           iurefk
     376 00001960     1422          subk    1,a2
     377 00001970     b04d          move    a2,*a13(plyr_d_seekcnt)
         00001980     0480  
     378 00001990     c02f          jruc    iurekilbuts
     379                    
     380                    
     381 000019a0           iureinjmp
     382 000019a0     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         000019b0 00000000! 
     383 000019d0     b5a1          move    *a13(plyr_num),a1
         000019e0     0100  
     384 000019f0                   XORK    1,a1
     385 00001a10     4a20          btst    a1,a0
     386 00001a20     ca08          jrz     iuretmdrn                       ;Teammate is a drone?
     387                    
     388 00001a30     b7a0          move    *a13(plyr_tmproc_p),a0,L
         00001a40     0110  
     389 00001a50     b600          move    *a0(PA11),a0,L
         00001a60     0060  
     390 00001a70     8400          move    *a0,a0                  ;Get teammates ctrl bits
     391 00001a80     1f60          btst    BUT1_B,a0
     392 00001a90     cb21          jrnz    iurex                   ;Holding shoot button?
     393 00001aa0     c01e          jruc    iurekilbuts
     394 00001ab0           iuretmdrn
     395 00001ab0     b460          move    *a3(plyr_seqflgs),a0
         00001ac0     0180  
     396 00001ad0     1f20          btst    BLOCKREB_B,a0
     397 00001ae0     cb1a          jrnz    iurekilbuts             ;Got a rebound?
     398                    
     399 00001af0     19e0          movk    15,a0
     400 00001b00     0d3f          callr   rndrng0
         00001b10     0501  
     401 00001b20     4c00          move    a0,a0
     402 00001b30     ca15          jrz     iurekilbuts             ;Cause shoot?
     403                    
     404 00001b40     18e0          movk    7,a0
     405 00001b50     0d3f          callr   rnd
         00001b60     04ee  
     406 00001b70     cb13          jrnz    iurex                   ;88%?
     407                    
     408 00001b80     b5ae          move    *a13(plyr_ptsdown),a14
         00001b90     0440  
     409 00001ba0     10ae          addk    5,a14
     410 00001bb0     c40a          jrlt    iurepss                 ;Winning by 05H?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   11

     411 00001bc0     b5ae          move    *a13(plyr_seqflgs),a14
         00001bd0     0180  
     412 00001be0     1fce          btst    DUNK_B,a14
     413 00001bf0     cb0b          jrnz    iurex                   ;In a dunk?
     414 00001c00     07a1          move    @game_time,a1,L
         00001c10 00000000! 
     415 00001c30     0b41          cmpi    0200H,a1
         00001c40     fdff  
     416 00001c50     c405          jrlt    iurex                   ;Less than 2 secs?
     417                    
     418 00001c60     0d3f  iurepss callr   drone_pass
         00001c70     00ff  
     419                    
     420 00001c80     c002          jruc    iurex
     421                    
     422                    
     423                    
     424 00001c90           iurekilbuts
     425 00001c90     5600          clr     a0                      ;>Let go of shoot button
     426 00001ca0     800b          move    a0,*a11
     427                    
     428                    
     429 00001cb0     0960  iurex   rets
     430                    
     431                    
     432 00001cc0           iurejbits_t
     433 00001cc0       00          .byte   0,JOYL_M,JOYR_M,0
     434 00001ce0       02          .byte   JOYD_M,JOYD_M|JOYL_M,JOYD_M|JOYR_M,0
     435 00001d00       01          .byte   JOYU_M,JOYU_M|JOYL_M,JOYU_M|JOYR_M,0
     436 00001d20       00          .byte   0,0,0,0
     437                    
     438 00001d40       00          .byte   0,JOYR_M,JOYL_M,0
     439 00001d60       01          .byte   JOYU_M,JOYU_M|JOYR_M,JOYU_M|JOYL_M,0
     440 00001d80       02          .byte   JOYD_M,JOYD_M|JOYR_M,JOYD_M|JOYL_M,0
     441 00001da0       00          .byte   0,0,0,0
     442                    
     443                    
     444                    
     445                    
     446 00001dc0            SUBRP  drone_offwoball
     447                    
     448 00001dc0     5600          clr     a0
     449 00001dd0     b00d          move    a0,*a13(plyr_d_cflgs)
         00001de0     0470  
     450                    
     451                    
     452 00001df0     b5ae          move    *a13(plyr_d_mode),a14
         00001e00     0450  
     453 00001e10     c70e          jrgt    xiylinmd                        ;Already in mode?
     454                    
     455 00001e20     1820          movk    1,a0
     456 00001e30     b00d          move    a0,*a13(plyr_d_mode)
         00001e40     0450  
     457                    
     458 00001e50     0d3f          callr   drone_getcurskillo
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   12

         00001e60     03f8  
     459 00001e70     0b20          addi    xiylmdsk_t,a0
         00001e80 00002670' 
     460 00001ea0     8400          move    *a0,a0
     461 00001eb0     0d3f          callr   rndrng0
         00001ec0     04c6  
     462 00001ed0     1020          addk    1,a0
     463 00001ee0     b00d          move    a0,*a13(plyr_d_seekcnt)
         00001ef0     0480  
     464 00001f00           xiylinmd
     465                    
     466                    
     467 00001f00     b5a3          move    *a13(plyr_dir),a3
         00001f10     03d0  
     468                    
     469 00001f20     b5ae          move    *a13(plyr_o1dist),a14
         00001f30     0310  
     470 00001f40     0bee          subi    50,a14
         00001f50     ffcd  
     471 00001f60     c70c          jrgt    xiylo1far                               ;Too far?
     472 00001f70     b5a2          move    *a13(plyr_o1dir),a2
         00001f80     0300  
     473 00001f90     4462          sub     a3,a2
     474 00001fa0     0382          abs     a2
     475 00001fb0     0b42          cmpi    040H,a2
         00001fc0     ffbf  
     476 00001fd0     c603          jrle    xiylo1dsml
     477 00001fe0     0be2          subi    080H,a2
         00001ff0     ff7f  
     478 00002000     0382          abs     a2
     479 00002010     1602  xiylo1dsml      subk    16,a2
     480 00002020     c411          jrlt    xiylpusho                               ;In front of me?
     481 00002030           xiylo1far
     482 00002030     b5ae          move    *a13(plyr_o2dist),a14
         00002040     0330  
     483 00002050     0bee          subi    50,a14
         00002060     ffcd  
     484 00002070     c729          jrgt    xiylnopush                              ;Too far?
     485 00002080     b5a2          move    *a13(plyr_o2dir),a2
         00002090     0320  
     486 000020a0     4462          sub     a3,a2
     487 000020b0     0382          abs     a2
     488 000020c0     0b42          cmpi    040H,a2
         000020d0     ffbf  
     489 000020e0     c603          jrle    xiylo2dsml
     490 000020f0     0be2          subi    080H,a2
         00002100     ff7f  
     491 00002110     0382          abs     a2
     492 00002120     1602  xiylo2dsml      subk    16,a2
     493 00002130     c51d          jrge    xiylnopush                              ;!In front?
     494 00002140           xiylpusho
     495 00002140     09c0          movi    99,a0
         00002150     0063  
     496 00002160     0d3f          callr   rndrng0
         00002170     049b  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   13

     497                    
     498 00002180     b5ae          move    *a13(plyr_ptsdown),a14
         00002190     0440  
     499 000021a0     b5a1          move    *a13(plyr_d_skill),a1
         000021b0     0460  
     500 000021c0     402e          add     a1,a14
     501 000021d0     0b4e          cmpi    15,a14
         000021e0     fff0  
     502 000021f0     c601          jrle    xiylmxdnok
     503 00002200     19ee          movk    15,a14
     504 00002210     11ee  xiylmxdnok      addk    15,a14
     505 00002220     c501          jrge    xiyldnok
     506 00002230     57ce          clr     a14
     507 00002240     248e  xiyldnok        sll     4,a14
     508 00002250     0b2e          addi    xiylp_t,a14
         00002260 00002860' 
     509 00002280     85c1          move    *a14,a1
     510                    
     511 00002290     4820          cmp     a1,a0
     512 000022a0     c50f          jrge    xiylnewseek                     ;Skip push?
     513                    
     514 000022b0     8560          move    *a11,a0                         ;Push
     515 000022c0     0ba0          ori     BUT2_M<<8|BUT2_M|BUT3_M,a0
         000022d0 00002060  
     516 000022f0     800b          move    a0,*a11
     517 00002300     c035          jruc    xiylx
     518 00002310           xiylnopush
     519                    
     520                    
     521 00002310     09c0          movi    07fH,a0
         00002320     007f  
     522 00002330     0d3f          callr   rnd
         00002340     0470  
     523 00002350     ca04          jrz     xiylnewseek
     524                    
     525 00002360     b5a0          move    *a13(plyr_d_seekcnt),a0
         00002370     0480  
     526 00002380     1420          subk    1,a0
     527 00002390     c71c          jrgt    xiylseek
     528                    
     529 000023a0           xiylnewseek
     530 000023a0     b5a0          move    *a13(plyr_newdir),a0
         000023b0     03e0  
     531 000023c0     cf1b          jrnn    xiylcontsk                              ;Turning?
     532                    
     533 000023d0     1a00          movk    16,a0
     534 000023e0     0d3f          callr   rndrng0
         000023f0     0473  
     535 00002400     24a0          sll     5,a0                            ;*32
     536 00002410     0b20          addi    xiylseek_t,a0
         00002420 00002a50' 
     537                    
     538 00002440     9401          move    *a0+,a1
     539 00002450     b5ae          move    *a13(plyr_num),a14
         00002460     0100  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   14

     540 00002470     144e          subk    2,a14
     541 00002480     c501          jrge    xiyllft
     542 00002490     03a1          neg     a1
     543 000024a0     0b01  xiyllft addi    WRLDMID,a1
         000024b0     2000  
     544 000024c0     b02d          move    a1,*a13(plyr_d_seekx)
         000024d0     0490  
     545                    
     546 000024e0     9401          move    *a0+,a1
     547 000024f0     b02d          move    a1,*a13(plyr_d_seeky)
         00002500     04a0  
     548                    
     549 00002510     09c0          movi    TSEC*3,a0
         00002520     009f  
     550 00002530     0d3f          callr   rndrng0
         00002540     045e  
     551 00002550     1340          addk    TSEC/2,a0
     552                    
     553 00002560     b00d  xiylseek        move    a0,*a13(plyr_d_seekcnt)
         00002570     0480  
     554 00002580           xiylcontsk
     555 00002580     b5a0          move    *a13(plyr_d_seekx),a0
         00002590     0490  
     556 000025a0     b5a1          move    *a13(plyr_d_seeky),a1
         000025b0     04a0  
     557 000025c0     0d3f          callr   drone_seekxy
         000025d0     0362  
     558 000025e0     cb07          jrnz    xiylnotthere
     559                    
     560 000025f0     1be0          movk    01fH,a0                         ;3%
     561 00002600     0d3f          callr   rnd
         00002610     0443  
     562 00002620     cb03          jrnz    xiylx
     563 00002630     5600          clr     a0
     564 00002640     b00d          move    a0,*a13(plyr_d_seekcnt)
         00002650     0480  
     565                    
     566 00002660           xiylnotthere
     567                    
     568                    
     569 00002660           xiylx
     570 00002660     0960          rets
     571                    
     572                    
     573 00002670           xiylmdsk_t                                      ;Mode switch max seek time
     574 00002670     0032          .word   50,50,50,50,50          ;Up 15-11
     575 000026c0     0028          .word   40,40,40,35,30          ;10-6
     576 00002710     0019          .word   25,22,20,18,16          ;5-1
     577 00002760     000e          .word   14                      ;Even score
     578 00002770     000a          .word   10,8,6,4,4              ;Dn 1-5
     579 000027c0     0004          .word   4,3,3,3,2               ;6-10
     580 00002810     0002          .word   2,2,2,2,1               ;11-15
     581                    
     582 00002860           xiylp_t                                 ;% to push
     583 00002860     0001          .word   1,1,1,1,1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   15

     584 000028b0     0002          .word   2,2,2,2,3
     585 00002900     0003          .word   3,3,4,4,5
     586 00002950     0005          .word   5
     587 00002960     0005          .word   5,6,8,10,13
     588 000029b0     000f          .word   15,17,18,20,20
     589 00002a00     0019          .word   25,30,35,40,50
     590                    
     591                    
     592                            .asg    CZMID,Z
     593 00002a50           xiylseek_t
     594 00002a50     fec0          .word   -320,Z-160, -250,Z-160, -120,Z-100      ;3ptrs
     595 00002ab0     ff88          .word   -120,Z
     596 00002ad0     ff88          .word   -120,Z+100, -250,Z+160, -320,Z+160
     597                    
     598 00002b30     fec0          .word   -320,Z-100, -250,Z-80, -200,Z-50        ;2ptrs
     599 00002b90     ff4c          .word   -180,Z
     600 00002bb0     ff38          .word   -200,Z+50, -250,Z+80, -320,Z+100
     601                    
     602 00002c10     feca          .word   -310,Z-10, -305,Z, -310,Z+10
     603                    
     604                    
     605                    
     606 00002c70            SUBRP  drone_pass
     607                    
     608 00002c70     05a0          move    @PSTATUS,a0             ;Plyr start bits 0-3
         00002c80 00000000! 
     609 00002ca0     b5a1          move    *a13(plyr_num),a1
         00002cb0     0100  
     610 00002cc0                   XORK    1,a1
     611 00002ce0     4a20          btst    a1,a0
     612 00002cf0     cb33          jrnz    vwuyx                   ;Teammate is a human?
     613                    
     614 00002d00     b5a0          move    *a13(plyr_tmdist),a0
         00002d10     02f0  
     615 00002d20     1140          addk    10,a0
     616 00002d30     b5a1          move    *a13(plyr_o1dist),a1
         00002d40     0310  
     617 00002d50     4820          cmp     a1,a0
     618 00002d60     c40e          jrlt    vwuyo1ok
     619                    
     620 00002d70     b5ae          move    *a13(plyr_tmdir),a14
         00002d80     02e0  
     621 00002d90     b5a1          move    *a13(plyr_o1dir),a1
         00002da0     0300  
     622 00002db0     45c1          sub     a14,a1
     623 00002dc0     0381          abs     a1
     624 00002dd0     0b41          cmpi    64,a1
         00002de0     ffbf  
     625 00002df0     c603          jrle    vwuydsml
     626 00002e00     0be1          subi    128,a1
         00002e10     ff7f  
     627 00002e20     0381          abs     a1
     628 00002e30     1601  vwuydsml        subk    16,a1
     629 00002e40     c41e          jrlt    vwuyx
     630                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   16

     631 00002e50           vwuyo1ok
     632 00002e50     b5a1          move    *a13(plyr_o2dist),a1
         00002e60     0330  
     633 00002e70     4820          cmp     a1,a0
     634 00002e80     c40e          jrlt    vwuyo2ok
     635                    
     636 00002e90     b5ae          move    *a13(plyr_tmdir),a14
         00002ea0     02e0  
     637 00002eb0     b5a1          move    *a13(plyr_o2dir),a1
         00002ec0     0320  
     638 00002ed0     45c1          sub     a14,a1
     639 00002ee0     0381          abs     a1
     640 00002ef0     0b41          cmpi    64,a1
         00002f00     ffbf  
     641 00002f10     c603          jrle    vwuydsml2
     642 00002f20     0be1          subi    128,a1
         00002f30     ff7f  
     643 00002f40     0381          abs     a1
     644 00002f50     1601  vwuydsml2       subk    16,a1
     645 00002f60     c40c          jrlt    vwuyx
     646                    
     647 00002f70           vwuyo2ok
     648 00002f70     b7a1          move    *a13(plyr_tmproc_p),a1,L
         00002f80     0110  
     649 00002f90     b420          move    *a1(plyr_seq),a0
         00002fa0     0170  
     650 00002fb0     1600          subk    RUNDRIBTURB_SEQ,a0
     651 00002fc0     c306          jrhi    vwuyx
     652                    
     653 00002fd0     8560          move    *a11,a0                 ;>Pass
     654 00002fe0     0ba0          ori     BUT2_M<<8|BUT2_M|BUT3_M,a0
         00002ff0 00002060  
     655 00003010     800b          move    a0,*a11
     656                    
     657 00003020     0960          rets
     658                    
     659 00003030     5600  vwuyx   clr     a0
     660 00003040     0960          rets
     661                    
     662                    
     663                    
     664 00003050            SUBRP  drone_defence
     665                    
     666 00003050                   PUSH    a7
     667                    
     668                    
     669 00003060     05a5          move    @ballpnum,a5
         00003070 00000000! 
     670 00003090     24a5          sll     5,a5
     671 000030a0     0b25          addi    plyrproc_t,a5
         000030b0 00000000! 
     672 000030d0     86a5          move    *a5,a5,L                ;A5=*Proc of opponent with ball
     673                    
     674                    
     675 000030e0     0d3f          callr   drone_getcurskillo
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   17

         000030f0     02cf  
     676 00003100     4c07          move    a0,a7                   ;A7=Ptsdn+skill for indexing (*16)
     677                    
     678                    
     679 00003110     5600          clr     a0
     680 00003120     b00d          move    a0,*a13(plyr_d_cflgs)
         00003130     0470  
     681                    
     682 00003140     b5ae          move    *a13(plyr_d_mode),a14
         00003150     0450  
     683 00003160     ce10          jrn     aclvinmd                        ;Already in mode?
     684                    
     685 00003170     1420          subk    1,a0                    ;-1
     686 00003180     b00d          move    a0,*a13(plyr_d_mode)
         00003190     0450  
     687                    
     688 000031a0     4cee          move    a7,a14
     689 000031b0     0b2e          addi    aclvmdsk_t,a14
         000031c0 00004190' 
     690 000031e0     85c0          move    *a14,a0
     691 000031f0     4c02          move    a0,a2
     692 00003200     2fc2          srl     2,a2                    ;/4
     693                    
     694 00003210     0d3f          callr   rndrng0
         00003220     0390  
     695 00003230     1020          addk    1,a0
     696 00003240     4040          add     a2,a0
     697 00003250     b00d          move    a0,*a13(plyr_d_seekcnt)
         00003260     0480  
     698                            
     699 00003270           aclvinmd
     700                    
     701                    
     702                    
     703 00003270     b5a0          move    *a13(plyr_d_seekcnt),a0
         00003280     0480  
     704 00003290     1420          subk    1,a0
     705 000032a0     c77d          jrgt    aclvseek
     706                    
     707 000032b0     b5a2          move    *a13(plyr_num),a2
         000032c0     0100  
     708 000032d0                   XORK    2,a2
     709 000032f0     4c44          move    a2,a4
     710 00003300     24a4          sll     5,a4                    ;*32
     711 00003310     0b24          addi    plyrproc_t,a4
         00003320 00000000! 
     712 00003340     8684          move    *a4,a4,L
     713 00003350     48a4          cmp     a5,a4
     714 00003360     ca2d          jreq    aclvguard                       ;I'm on guy with ball?
     715                    
     716 00003370     b4a0          move    *a5(plyr_ohpdist),a0
         00003380     0390  
     717 00003390     0b40          cmpi    300,a0
         000033a0     fed3  
     718 000033b0     c728          jrgt    aclvguard                       ;Too far to worry about?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   18

     719                    
     720 000033c0     b4a0          move    *a5(plyr_seqflgs),a0
         000033d0     0180  
     721 000033e0     1fc0          btst    DUNK_B,a0
     722 000033f0     cb23          jrnz    aclvgbc                 ;He's dunking?
     723                    
     724 00003400     b7a3          move    *a13(plyr_tmproc_p),a3,L
         00003410     0110  
     725 00003420     b460          move    *a3(plyr_seq),a0
         00003430     0170  
     726 00003440     0be0          subi    STAGGER_SEQ,a0
         00003450     ffd2  
     727 00003460     c202          jrls    aclvtmok
     728 00003470     14a0          subk    FLYBACKWB2_SEQ-STAGGER_SEQ,a0
     729 00003480     c21a          jrls    aclvgbc                 ;Teammates staggered?
     730 00003490           aclvtmok
     731 00003490     b46e          move    *a3(plyr_o1dist),a14
         000034a0     0310  
     732 000034b0     b461          move    *a3(plyr_o1dir),a1
         000034c0     0300  
     733 000034d0     1fe2          btst    0,a2
     734 000034e0     cb04          jrnz    aclvp1
     735 000034f0     b46e          move    *a3(plyr_o2dist),a14
         00003500     0330  
     736 00003510     b461          move    *a3(plyr_o2dir),a1
         00003520     0320  
     737 00003530           aclvp1
     738 00003530     b460          move    *a3(plyr_hpdir),a0      ;Find dir difference
         00003540     0360  
     739 00003550     4420          sub     a1,a0
     740 00003560     0380          abs     a0
     741 00003570     0b40          cmpi    040H,a0
         00003580     ffbf  
     742 00003590     c603          jrle    aclvdsml
     743 000035a0     0be0          subi    080H,a0
         000035b0     ff7f  
     744 000035c0     0380          abs     a0
     745 000035d0     1780  aclvdsml        subk    28,a0
     746 000035e0     c604          jrle    aclvgbc                 ;TM not between op and hoop?
     747                    
     748 000035f0     0b4e          cmpi    160,a14
         00003600     ff5f  
     749 00003610     c701          jrgt    aclvgbc                 ;TM not guarding?
     750 00003620     c001          jruc    aclvguard
     751                    
     752 00003630     4ca4  aclvgbc move    a5,a4                   ;Guard ball carrier
     753 00003640           aclvguard
     754 00003640     b682          move    *a4(PA8),a2,L           ;*Obj
         00003650     00c0  
     755                    
     756 00003660     b440          move    *a2(OXPOS),a0
         00003670     0090  
     757 00003680     b44e          move    *a2(OXANI+16),a14
         00003690     01f0  
     758 000036a0     41c0          add     a14,a0                  ;X
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   19

     759 000036b0     b441          move    *a2(OZPOS),a1           ;Z
         000036c0     00d0  
     760                    
     761 000036d0     07ae          move    @game_time,a14,L
         000036e0 00000000! 
     762 00003700     0b4e          cmpi    0800H,a14
         00003710     f7ff  
     763 00003720     c421          jrlt    aclvsetseek             ;Less than 8 secs?
     764 00003730     05ae          move    @shotimer+16,a14        ;Tens
         00003740 00000010! 
     765 00003760     cb05          jrnz    aclvscok
     766 00003770     05ae          move    @shotimer,a14           ;Ones
         00003780 00000000! 
     767 000037a0     14ae          subk    5,a14
     768 000037b0     c418          jrlt    aclvsetseek             ;Less than 5 secs?
     769 000037c0           aclvscok
     770 000037c0     b4ae          move    *a5(plyr_seqflgs),a14
         000037d0     0180  
     771 000037e0     1ece          btst    SHOOT_B,a14
     772 000037f0     cb14          jrnz    aclvsetseek             ;Starting a shot?
     773                    
     774 00003800     b64e          move    *a2(OXVEL),a14,L
         00003810     0020  
     775 00003820     2a8e          sra     16-4,a14                ;16 ticks from now
     776 00003830     41c0          add     a14,a0
     777 00003840     b64e          move    *a2(OZVEL),a14,L
         00003850     0060  
     778 00003860     2a8e          sra     16-4,a14                ;16 ticks from now
     779 00003870     41c1          add     a14,a1
     780                    
     781 00003880     b5a2          move    *a13(plyr_myhoopx),a2   ;>Stay near oplyr between my basket
         00003890     02c0  
     782 000038a0     09c3          movi    CZMID,a3
         000038b0     0492  
     783                    
     784 000038c0     4002          add     a0,a2
     785 000038d0     2420          sll     1,a0
     786 000038e0     4040          add     a2,a0
     787 000038f0     2bc0          sra     2,a0                    ;/4
     788                    
     789 00003900     4023          add     a1,a3
     790 00003910     2421          sll     1,a1
     791 00003920     4061          add     a3,a1
     792 00003930     2bc1          sra     2,a1                    ;/4
     793 00003940           aclvsetseek
     794 00003940     b00d          move    a0,*a13(plyr_d_seekx)
         00003950     0490  
     795 00003960     b02d          move    a1,*a13(plyr_d_seeky)
         00003970     04a0  
     796                    
     797 00003980     1b20          movk    25,a0
     798 00003990     b4a1          move    *a5(plyr_hpdist),a1
         000039a0     0370  
     799 000039b0     0b41          cmpi    310,a1
         000039c0     fec9  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   20

     800 000039d0     c50a          jrge    aclvseek                        ;Far from my hoop?
     801                    
     802                    
     803 000039e0     4cee          move    a7,a14
     804 000039f0     0b2e          addi    aclvskt_t,a14
         00003a00 00004380' 
     805 00003a20     85c0          move    *a14,a0
     806 00003a30     4c02          move    a0,a2
     807 00003a40     2fc2          srl     2,a2                    ;/4
     808 00003a50     0d3f          callr   rndrng0
         00003a60     030c  
     809 00003a70     4040          add     a2,a0
     810                    
     811 00003a80     b00d  aclvseek        move    a0,*a13(plyr_d_seekcnt)
         00003a90     0480  
     812                    
     813 00003aa0     b5a0          move    *a13(plyr_d_seekx),a0
         00003ab0     0490  
     814 00003ac0     b5a1          move    *a13(plyr_d_seeky),a1
         00003ad0     04a0  
     815 00003ae0     0d3f          callr   drone_seekxy
         00003af0     0210  
     816 00003b00     4c02          move    a0,a2
     817                    
     818                    
     819                    
     820 00003b10     b5ae          move    *a13(plyr_num),a14      ;>Get opponents proc
         00003b20     0100  
     821 00003b30     104e          addk    2,a14
     822 00003b40     27ce          sll     32-2,a14
     823 00003b50     2cee          srl     32-2-5,a14              ;*32
     824 00003b60     0b2e          addi    plyrproc_t,a14
         00003b70 00000000! 
     825 00003b90     87c0          move    *a14,a0,L
     826 00003ba0     b400          move    *a0(plyr_ohpdist),a0
         00003bb0     0390  
     827 00003bc0     1540          subk    10,a0
     828 00003bd0     0b40          cmpi    300,a0
         00003be0     fed3  
     829 00003bf0     c402          jrlt    aclvlong
     830 00003c00     0be0          subi    80,a0                   ;Turbo earlier
         00003c10     ffaf  
     831 00003c20           aclvlong
     832 00003c20     b5a1          move    *a13(plyr_hpdist),a1
         00003c30     0370  
     833 00003c40     4801          cmp     a0,a1
     834 00003c50     c402          jrlt    aclvicloser
     835 00003c60     0b02          addi    BUT3_M,a2               ;Turbo
         00003c70     0040  
     836 00003c80           aclvicloser
     837                    
     838                    
     839 00003c80     b5a1          move    *a13(plyr_balldist),a1
         00003c90     0350  
     840 00003ca0     0b41          cmpi    30,a1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   21

         00003cb0     ffe1  
     841 00003cc0     c70f          jrgt    aclvpsrnd                       ;!In his face?
     842                    
     843 00003cd0     07ae          move    @game_time,a14,L
         00003ce0 00000000! 
     844 00003d00     0b4e          cmpi    0800H,a14
         00003d10     f7ff  
     845 00003d20     c41b          jrlt    aclvps                  ;Less than 8 secs?
     846 00003d30     05ae          move    @shotimer+16,a14        ;Tens
         00003d40 00000010! 
     847 00003d60     cb05          jrnz    aclvpsrnd
     848 00003d70     05ae          move    @shotimer,a14           ;Ones
         00003d80 00000000! 
     849 00003da0     14ae          subk    5,a14
     850 00003db0     c412          jrlt    aclvps                  ;Less than 5 secs?
     851 00003dc0           aclvpsrnd
     852 00003dc0     4cee          move    a7,a14
     853 00003dd0     0b2e          addi    aclvdist_t,a14
         00003de0 00004570' 
     854 00003e00     85c0          move    *a14,a0
     855 00003e10     4801          cmp     a0,a1
     856 00003e20     c714          jrgt    aclvskipsp                      ;Ball too far?
     857                    
     858 00003e30     09c0          movi    999,a0
         00003e40     03e7  
     859 00003e50     0d3f          callr   rndrng0
         00003e60     02cc  
     860                    
     861 00003e70     4cee          move    a7,a14
     862 00003e80     0b2e          addi    aclvps_t,a14
         00003e90 00004770' 
     863 00003eb0     85c1          move    *a14,a1
     864 00003ec0     4820          cmp     a1,a0
     865 00003ed0     c509          jrge    aclvskipsp                      ;Skip push?
     866 00003ee0           aclvps
     867 00003ee0     2782          sll     32-4,a2
     868 00003ef0     2c82          srl     32-4,a2
     869 00003f00     1002          addk    BUT2_M,a2               ;Steal
     870                    
     871 00003f10     1820          movk    1,a0
     872 00003f20     0d3f          callr   rnd
         00003f30     02b1  
     873 00003f40     cb02          jrnz    aclvskipsp                      ;50%?
     874                    
     875 00003f50     0b02          addi    BUT2_M<<8|BUT3_M,a2     ;Push
         00003f60     2040  
     876 00003f70           aclvskipsp
     877                    
     878                    
     879 00003f70     b5ae          move    *a13(plyr_balldist),a14 ;0CHhk if I can block ball
         00003f80     0350  
     880 00003f90     0b4e          cmpi    65,a14
         00003fa0     ffbe  
     881 00003fb0     c51a          jrge    aclvnoblk
     882                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   22

     883 00003fc0     b4a0          move    *a5(plyr_jmpcnt),a0
         00003fd0     0400  
     884 00003fe0     cb0a          jrnz    aclvtryblk                      ;Plyr with ball is in air?
     885                    
     886 00003ff0     b4a0          move    *a5(plyr_seqflgs),a0
         00004000     0180  
     887 00004010     1ec0          btst    SHOOT_B,a0
     888 00004020     ca13          jrz     aclvnoblk                       ;!Starting a shot?
     889 00004030     1960          movk    11,a0
     890 00004040     0d3f          callr   rndrng0
         00004050     02ad  
     891 00004060     4c00          move    a0,a0
     892 00004070     cb0e          jrnz    aclvnoblk                       ;94% ignore?
     893 00004080     c00b          jruc    aclvblk
     894                    
     895 00004090           aclvtryblk
     896 00004090     09c0          movi    99,a0
         000040a0     0063  
     897 000040b0     0d3f          callr   rndrng0
         000040c0     02a6  
     898 000040d0     4cee          move    a7,a14
     899 000040e0     0b2e          addi    aclvblk_t,a14
         000040f0 00004960' 
     900 00004110     85c1          move    *a14,a1
     901 00004120     4820          cmp     a1,a0
     902 00004130     c502          jrge    aclvnoblk
     903                    
     904 00004140           aclvblk ORK     BUT1_M,a2               ;Block
     905 00004160           aclvnoblk
     906 00004160     804b          move    a2,*a11
     907                    
     908 00004170                   PULL    a7
     909 00004180     0960          rets
     910                    
     911                    
     912 00004190           aclvmdsk_t                                      ;Mode switch max seek time
     913 00004190     0032          .word   50,50,50,50,50          ;Up 15-11
     914 000041e0     0032          .word   50,50,45,45,40          ;10-6
     915 00004230     0021          .word   33,25,22,18,16          ;5-1
     916 00004280     000e          .word   14                      ;Even score
     917 00004290     000a          .word   10,8,6,4,4              ;Dn 1-5
     918 000042e0     0004          .word   4,3,3,3,2               ;6-10
     919 00004330     0002          .word   2,2,2,2,1               ;11-15
     920                    
     921 00004380           aclvskt_t                                       ;Max seek time
     922 00004380     003c          .word   60,60,58,55,52
     923 000043d0     0030          .word   48,44,40,36,32
     924 00004420     001c          .word   28,24,22,18,16
     925 00004470     000e          .word   14                      ;Even score
     926 00004480     000a          .word   10,8,6,4,4
     927 000044d0     0004          .word   4,3,3,3,2
     928 00004520     0002          .word   2,2,2,2,1
     929                    
     930 00004570           aclvdist_t                                      ;Max dist to try push/steal
     931 00004570     006e          .word   110,100,100,100,100
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   23

     932 000045c0     005a          .word   90,90,80,80,80,80
     933 00004620     0046          .word   70,70,60,60,60
     934 00004670     0032          .word   50
     935 00004680     0032          .word   50,50,50,50,50
     936 000046d0     0032          .word   50,50,50,50,50
     937 00004720     0032          .word   50,50,50,50,50
     938 00004770           aclvps_t                                        ;% to push/steal
     939 00004770     0002          .word   2,2,2,2,2
     940 000047c0     0003          .word   3,3,3,3,3
     941 00004810     0004          .word   4,4,4,5,5
     942 00004860     0006          .word   6
     943 00004870     0006          .word   6,6,8,10,13
     944 000048c0     000f          .word   15,17,18,20,30
     945 00004910     0028          .word   40,60,80,150,250
     946 00004960           aclvblk_t                                       ;% to block
     947 00004960     0001          .word   1,1,2,3,3
     948 000049b0     0003          .word   3,3,4,4,5
     949 00004a00     0006          .word   6,7,8,10,12
     950 00004a50     000e          .word   14
     951 00004a60     0010          .word   16,18,20,25,30
     952 00004ab0     0023          .word   35,40,45,50,50
     953 00004b00     0032          .word   50,50,50,50,50
     954                    
     955                    
     956                    
     957 00004b50            SUBR   drone_setuptob
     958                    
     959 00004b50     05b0          move    @drone2on,b0
         00004b60 00000000! 
     960 00004b80     cb00          jrnz    drone2_setuptob
         00004b90     fb46! 
     961                    
     962 00004ba0                   PUSH    a2,a3,a4,a13
     963                    
     964 00004bc0     1884          movk    4,a4
     965 00004bd0     09e3          movi    plyrproc_t,a3
         00004be0 00000000! 
     966                    
     967 00004c00     966d  msuwlp  move    *a3+,a13,L
     968 00004c10     b5ae          move    *a13(plyr_ownball),a14
         00004c20     0260  
     969 00004c30     cb17          jrnz    msuwnxt                 ;Offense?
     970                    
     971 00004c40     09ce          movi    -1,a14
         00004c50     ffff  
     972 00004c60     b1cd          move    a14,*a13(plyr_d_mode)   ;Defense
         00004c70     0450  
     973                    
     974 00004c80     0d3f          callr   drone_getcurskillo
         00004c90     0115  
     975                    
     976 00004ca0     0b20          addi    msuwmdsk_t,a0
         00004cb0 00004df0' 
     977 00004cd0     8400          move    *a0,a0
     978 00004ce0     4c02          move    a0,a2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   24

     979 00004cf0     2fc2          srl     2,a2                    ;/4
     980                    
     981 00004d00     0d3f          callr   rndrng0
         00004d10     01e1  
     982 00004d20     1020          addk    1,a0
     983 00004d30     4002          add     a0,a2
     984                    
     985 00004d40     1820          movk    1,a0
     986 00004d50     0d3f          callr   rnd
         00004d60     01ce  
     987 00004d70     cb01          jrnz    msuwsk
     988 00004d80     2fe2          srl     1,a2
     989 00004d90           msuwsk
     990 00004d90     b04d          move    a2,*a13(plyr_d_seekcnt)
         00004da0     0480  
     991                    
     992 00004db0           msuwnxt
     993 00004db0     3f84          dsj     a4,msuwlp
     994                    
     995 00004dc0                   PULL    a2,a3,a4,a13
     996 00004de0     0960          rets
     997                    
     998 00004df0           msuwmdsk_t                                      ;Mode switch max seek time
     999 00004df0     0032          .word   50,50,50,50,50          ;Up 15-11
    1000 00004e40     0032          .word   50,50,45,45,40          ;10-6
    1001 00004e90     0021          .word   33,25,22,18,16          ;5-1
    1002 00004ee0     000e          .word   14                      ;Even score
    1003 00004ef0     000a          .word   10,8,6,4,4              ;Dn 1-5
    1004 00004f40     0004          .word   4,3,3,3,2               ;6-10
    1005 00004f90     0002          .word   2,2,2,2,1               ;11-15
    1006                    
    1007                    
    1008                    
    1009 00004fe0            SUBRP  drone_chaseball
    1010                    
    1011 00004fe0     b5ae          move    *a13(plyr_rcvpass),a14
         00004ff0     0230  
    1012 00005000     c700          jrgt    drone_offwoball         ;I'm rcving ball?
         00005010     fcda  
    1013                    
    1014 00005020     b7a2          move    *a13(plyr_tmproc_p),a2,L
         00005030     0110  
    1015 00005040     b44e          move    *a2(plyr_rcvpass),a14
         00005050     0230  
    1016 00005060     c700          jrgt    drone_offwoball         ;Teammate rcving ball?
         00005070     fcd4  
    1017                    
    1018                    
    1019 00005080     5600          clr     a0
    1020 00005090     b00d          move    a0,*a13(plyr_d_cflgs)
         000050a0     0470  
    1021                    
    1022 000050b0     b5ae          move    *a13(plyr_d_mode),a14
         000050c0     0450  
    1023 000050d0     ca18          jrz     cemoinmd                        ;Already in mode?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   25

    1024                    
    1025 000050e0     b00d          move    a0,*a13(plyr_d_mode)
         000050f0     0450  
    1026                    
    1027 00005100     b5ae          move    *a13(plyr_ptsdown),a14
         00005110     0440  
    1028 00005120     b5a0          move    *a13(plyr_d_skill),a0
         00005130     0460  
    1029 00005140     400e          add     a0,a14
    1030 00005150     0b4e          cmpi    15,a14
         00005160     fff0  
    1031 00005170     c601          jrle    cemomxdnok
    1032 00005180     19ee          movk    15,a14
    1033 00005190     11ee  cemomxdnok      addk    15,a14
    1034 000051a0     c501          jrge    cemodnok
    1035 000051b0     57ce          clr     a14
    1036 000051c0     248e  cemodnok        sll     4,a14
    1037 000051d0     0b2e          addi    cemomdsk_t,a14
         000051e0 00005820' 
    1038 00005200     85c0          move    *a14,a0
    1039 00005210     0d3f          callr   rndrng0
         00005220     0190  
    1040 00005230     1040          addk    2,a0
    1041 00005240     b00d          move    a0,*a13(plyr_d_seekcnt)
         00005250     0480  
    1042                    
    1043 00005260           cemoinmd
    1044                    
    1045 00005260     b5a0          move    *a13(plyr_d_seekcnt),a0
         00005270     0480  
    1046 00005280     1420          subk    1,a0
    1047 00005290     c73c          jrgt    cemoseek
    1048                    
    1049 000052a0     b440          move    *a2(plyr_seq),a0
         000052b0     0170  
    1050 000052c0     0be0          subi    STAGGER_SEQ,a0
         000052d0     ffd2  
    1051 000052e0     c202          jrls    cemotmok
    1052 000052f0     14a0          subk    FLYBACKWB2_SEQ-STAGGER_SEQ,a0
    1053 00005300     c20b          jrls    cemochaseb                      ;Teammates staggered?
    1054 00005310           cemotmok
    1055 00005310     b5a0          move    *a13(plyr_balldist),a0
         00005320     0350  
    1056 00005330     b44e          move    *a2(plyr_balldist),a14
         00005340     0350  
    1057 00005350     49c0          cmp     a14,a0
    1058 00005360     c405          jrlt    cemochaseb                      ;I'm closer?
    1059                    
    1060 00005370     09c0          movi    WRLDMID,a0
         00005380     2000  
    1061 00005390     09c1          movi    CZMID,a1
         000053a0     0492  
    1062 000053b0     c012          jruc    cemosetxz
    1063                    
    1064 000053c0           cemochaseb
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   26

    1065 000053c0     07a5          move    @ballobj_p,a5,L
         000053d0 00000000! 
    1066                    
    1067 000053f0     b4a0          move    *a5(OXPOS),a0
         00005400     0090  
    1068 00005410     b4ae          move    *a5(OXANI+16),a14
         00005420     01f0  
    1069 00005430     41c0          add     a14,a0
    1070 00005440     b6ae          move    *a5(OXVEL),a14,L
         00005450     0020  
    1071 00005460     2a6e          sra     16-3,a14                ;8 ticks from now
    1072 00005470     41c0          add     a14,a0
    1073                    
    1074 00005480     b4a1          move    *a5(OZPOS),a1
         00005490     00d0  
    1075 000054a0     b6ae          move    *a5(OZVEL),a14,L
         000054b0     0060  
    1076 000054c0     2a6e          sra     16-3,a14                ;8 ticks from now
    1077 000054d0     41c1          add     a14,a1
    1078 000054e0           cemosetxz
    1079 000054e0     b00d          move    a0,*a13(plyr_d_seekx)
         000054f0     0490  
    1080 00005500     b02d          move    a1,*a13(plyr_d_seeky)
         00005510     04a0  
    1081                    
    1082                    
    1083 00005520     b5ae          move    *a13(plyr_ptsdown),a14
         00005530     0440  
    1084 00005540     b5a0          move    *a13(plyr_d_skill),a0
         00005550     0460  
    1085 00005560     400e          add     a0,a14
    1086 00005570     0b4e          cmpi    15,a14
         00005580     fff0  
    1087 00005590     c601          jrle    cemomxdnok2
    1088 000055a0     19ee          movk    15,a14
    1089 000055b0           cemomxdnok2
    1090 000055b0     11ee          addk    15,a14
    1091 000055c0     c501          jrge    cemodnok2
    1092 000055d0     57ce          clr     a14
    1093 000055e0     248e  cemodnok2       sll     4,a14
    1094 000055f0     0b2e          addi    cemoskt_t,a14
         00005600 00005a10' 
    1095 00005620     85c0          move    *a14,a0
    1096                    
    1097 00005630     0d3f          callr   rndrng0
         00005640     014e  
    1098 00005650     10a0          addk    5,a0
    1099 00005660     b00d  cemoseek        move    a0,*a13(plyr_d_seekcnt)
         00005670     0480  
    1100                    
    1101 00005680     b5a0          move    *a13(plyr_d_seekx),a0
         00005690     0490  
    1102 000056a0     b5a1          move    *a13(plyr_d_seeky),a1
         000056b0     04a0  
    1103 000056c0     0d3f          callr   drone_seekxy
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   27

         000056d0     0052  
    1104                    
    1105                    
    1106 000056e0     b5a2          move    *a13(plyr_balldist),a2  ;0CHhk if I can jump at ball
         000056f0     0350  
    1107 00005700     17c2          subk    30,a2
    1108 00005710     c50f          jrge    cemonojmp
    1109                    
    1110 00005720     b4a0          move    *a5(OYPOS),a0
         00005730     00b0  
    1111 00005740     1320          addk    25,a0
    1112 00005750     b501          move    *a8(OYPOS),a1
         00005760     00b0  
    1113 00005770     4820          cmp     a1,a0
    1114 00005780     c408          jrlt    cemonojmp
    1115                    
    1116 00005790     18e0          movk    7,a0
    1117 000057a0     0d3f          callr   rnd
         000057b0     0129  
    1118 000057c0     cb04          jrnz    cemonojmp                       ;87%?
    1119                    
    1120 000057d0     8560          move    *a11,a0                 ;Jmp
    1121 000057e0                   ORK     BUT1_M,a14
    1122 00005800     800b          move    a0,*a11
    1123 00005810           cemonojmp
    1124                    
    1125 00005810     0960          rets
    1126                    
    1127 00005820           cemomdsk_t                                      ;Mode switch max seek time
    1128 00005820     005a          .word   90,90,90,90,80          ;Up 15-11
    1129 00005870     0050          .word   80,70,60,55,50          ;10-6
    1130 000058c0     0021          .word   33,25,22,18,16          ;5-1
    1131 00005910     000e          .word   14                      ;Even score
    1132 00005920     000a          .word   10,8,6,4,4              ;Dn 1-5
    1133 00005970     0004          .word   4,3,3,3,2               ;6-10
    1134 000059c0     0002          .word   2,2,2,2,1               ;11-15
    1135                    
    1136 00005a10           cemoskt_t                                       ;Max seek time
    1137 00005a10     0032          .word   50,50,45,45,45
    1138 00005a60     0028          .word   40,40,30,30,20
    1139 00005ab0     0014          .word   20,16,14,13,12
    1140 00005b00     000c          .word   12
    1141 00005b10     000c          .word   12,11,10,10,9
    1142 00005b60     0008          .word   8,5,4,3,2
    1143 00005bb0     0001          .word   1,1,1,1,1
    1144                    
    1145                    
    1146                    
    1147 00005c00            SUBRP  drone_seekxy
    1148                    
    1149 00005c00     4e40          move    a2,b0
    1150                    
    1151 00005c10     b502          move    *a8(OXPOS),a2
         00005c20     0090  
    1152 00005c30     b50e          move    *a8(OXANI+16),a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   28

         00005c40     01f0  
    1153 00005c50     41c2          add     a14,a2
    1154 00005c60     4402          sub     a0,a2
    1155                    
    1156 00005c70     5600          clr     a0
    1157                    
    1158 00005c80     4c4e          move    a2,a14
    1159 00005c90     0382          abs     a2
    1160 00005ca0     1542          subk    10,a2
    1161 00005cb0     c604          jrle    mqgxonx
    1162 00005cc0     4dce          move    a14,a14
    1163 00005cd0     c401          jrlt    mqgxnolft
    1164 00005ce0     1480          subk    4,a0                    ;Left
    1165                    
    1166 00005cf0     1100  mqgxnolft       addk    8,a0                    ;Rgt
    1167 00005d00           mqgxonx
    1168 00005d00     b502          move    *a8(OZPOS),a2
         00005d10     00d0  
    1169                    
    1170 00005d20     4422          sub     a1,a2
    1171 00005d30     4c4e          move    a2,a14
    1172 00005d40     0382          abs     a2
    1173 00005d50     1542          subk    10,a2
    1174 00005d60     c604          jrle    mqgxonz
    1175 00005d70     4dce          move    a14,a14
    1176 00005d80     c401          jrlt    mqgxnoup
    1177 00005d90     1420          subk    1,a0                    ;Up
    1178                    
    1179 00005da0     1040  mqgxnoup        addk    2,a0                    ;Dn
    1180 00005db0           mqgxonz
    1181 00005db0     800b          move    a0,*a11
    1182                    
    1183 00005dc0     4e12          move    b0,a2
    1184 00005dd0     4c00          move    a0,a0
    1185 00005de0     0960          rets
    1186                    
    1187                    
    1188                    
    1189 00005df0            SUBRP  drone_getcurskillo
    1190                    
    1191 00005df0     b5a0          move    *a13(plyr_ptsdown),a0
         00005e00     0440  
    1192 00005e10     b5ae          move    *a13(plyr_d_skill),a14
         00005e20     0460  
    1193 00005e30     41c0          add     a14,a0
    1194 00005e40     0b40          cmpi    15,a0
         00005e50     fff0  
    1195 00005e60     c601          jrle    wsdamxdnok
    1196 00005e70     19e0          movk    15,a0
    1197 00005e80     11e0  wsdamxdnok      addk    15,a0
    1198 00005e90     c501          jrge    wsdadnok
    1199 00005ea0     5600          clr     a0
    1200 00005eb0     2480  wsdadnok        sll     4,a0                    ;A7=Ptsdn+skill for indexing (*16)
    1201                    
    1202 00005ec0     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   29

    1203                    
    1204                    
    1205                    
    1206                    
    1207 00005ed0            SUBR   drone_adjskill
    1208                    
    1209 00005ed0     05b0          move    @drone2on,b0
         00005ee0 00000000! 
    1210 00005f00     cb00          jrnz    drone2_adjskill
         00005f10     fa0e! 
    1211                    
    1212                    
    1213 00005f20                   PUSH    a2,a3,a4
    1214                    
    1215 00005f40     4c00          move    a0,a0
    1216 00005f50     cb54          jrnz    mrdlx
    1217                    
    1218 00005f60     09e4          movi    plyrproc_t,a4
         00005f70 00000000! 
    1219 00005f90     1890          movk    4,b0
    1220 00005fa0           mrdllp
    1221 00005fa0     9683          move    *a4+,a3,L
    1222                    
    1223 00005fb0     b462          move    *a3(plyr_d_skill),a2
         00005fc0     0460  
    1224                    
    1225 00005fd0     b46e          move    *a3(plyr_ptsdown),a14
         00005fe0     0440  
    1226 00005ff0     0b4e          cmpi    15,a14
         00006000     fff0  
    1227 00006010     c601          jrle    mrdlmxdnok
    1228 00006020     19ee          movk    15,a14
    1229 00006030     11ee  mrdlmxdnok      addk    15,a14
    1230 00006040     c501          jrge    mrdldnok
    1231 00006050     57ce          clr     a14
    1232 00006060     248e  mrdldnok        sll     4,a14
    1233 00006070     0b2e          addi    mrdladj_t,a14
         00006080 000064d0' 
    1234 000060a0     85ce          move    *a14,a14
    1235 000060b0     41c2          add     a14,a2
    1236                    
    1237 000060c0     19a0          movk    ADJDIFF,a0              ;Get difficulty level
    1238 000060d0     0d5f          calla   GET_ADJ
         000060e0 00000000! 
    1239 00006100     1460          subk    3,a0                    ;-2 to 2
    1240 00006110     2420          sll     1,a0                    ;*2
    1241                    
    1242 00006120     05ae          move    @gmqrtr,a14             ;0CHhk quarter minimum
         00006130 00000000! 
    1243 00006150     0b4e          cmpi    2,a14
         00006160     fffd  
    1244 00006170     c601          jrle    mrdlqok
    1245 00006180     184e          movk    2,a14
    1246 00006190     248e  mrdlqok sll     4,a14
    1247 000061a0     0b2e          addi    mrdlmin_t,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   30

         000061b0 000066c0' 
    1248 000061d0     85ce          move    *a14,a14
    1249 000061e0     400e          add     a0,a14
    1250 000061f0     49c2          cmp     a14,a2
    1251 00006200     c501          jrge    mrdlminok
    1252 00006210     4dc2          move    a14,a2
    1253 00006220           mrdlminok
    1254 00006220     b461          move    *a3(plyr_num),a1
         00006230     0100  
    1255 00006240                   XORK    1,a1
    1256 00006260     05ae          move    @PSTATUS,a14
         00006270 00000000! 
    1257 00006290     4a2e          btst    a1,a14
    1258 000062a0     cb1b          jrnz    mrdltminok                      ;Teammate is human?
    1259                    
    1260 000062b0     05ae          move    @team1,a14              ;0CHhk team minimum
         000062c0 00000000! 
    1261 000062e0     0b50          cmpi    3,b0
         000062f0     fffc  
    1262 00006300     c503          jrge    mrdlt1
    1263 00006310     05ae          move    @team2,a14
         00006320 00000000! 
    1264 00006340     24ae  mrdlt1  sll     3+2,a14
    1265                    
    1266 00006350     05a1          move    @gmqrtr,a1
         00006360 00000000! 
    1267 00006380     0b41          cmpi    3,a1
         00006390     fffc  
    1268 000063a0     c601          jrle    mrdlqok2
    1269 000063b0     1861          movk    3,a1
    1270 000063c0     2461  mrdlqok2        sll     3,a1
    1271 000063d0     402e          add     a1,a14
    1272                    
    1273 000063e0     0b2e          addi    mrdltdmin_t-8,a14
         000063f0 000066e8' 
    1274 00006410     8fce          movb    *a14,a14
    1275 00006420     400e          add     a0,a14
    1276 00006430     49c2          cmp     a14,a2
    1277 00006440     c501          jrge    mrdltminok
    1278 00006450     4dc2          move    a14,a2
    1279 00006460           mrdltminok
    1280 00006460     b043          move    a2,*a3(plyr_d_skill)
         00006470     0460  
    1281                    
    1282 00006480     0d90          dsj     b0,mrdllp
         00006490     ffb0  
    1283                    
    1284 000064a0           mrdlx   PULL    a2,a3,a4
    1285 000064c0     0960          rets
    1286                    
    1287 000064d0     fffb  mrdladj_t       .word   -5,-5,-5,-5,-5
    1288 00006520     fffb          .word   -5,-5,-5,-4,-3
    1289 00006570     fffe          .word   -2,-1,0,0,0
    1290 000065c0     0000          .word   0
    1291 000065d0     0001          .word   1,1,2,2,3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   31

    1292 00006620     0003          .word   3,4,4,5,5
    1293 00006670     0005          .word   5,6,6,6,7
    1294                    
    1295 000066c0     fff8  mrdlmin_t       .word   -8,-6,-4
    1296                    
    1297 000066f0           mrdltdmin_t
    1298 000066f0       f8          .byte   -8,-6,-4,0      ;ATL
    1299 00006710       f8          .byte   -8,-6,-4,0      ;BOST
    1300 00006730       f8          .byte   -8,-6,-4,0      ;CHAR
    1301 00006750       06          .byte   6,9,12,14       ;CHI (1)
    1302 00006770       f8          .byte   -8,-6,-4,0      ;CLEV
    1303 00006790       f8          .byte   -8,-6,-4,0      ;DAL
    1304 000067b0       f8          .byte   -8,-6,-4,0      ;DEN
    1305 000067d0       f8          .byte   -8,-6,-4,0      ;DET
    1306 000067f0       f8          .byte   -8,-6,-4,0      ;GOLD
    1307 00006810       f8          .byte   -8,-6,-4,0      ;HOU
    1308 00006830       f8          .byte   -8,-6,-4,0      ;IND
    1309 00006850       f8          .byte   -8,-6,-4,0      ;LAC
    1310 00006870       f8          .byte   -8,-6,-4,0      ;LAL
    1311 00006890       f8          .byte   -8,-6,-4,0      ;MIAMI
    1312 000068b0       f8          .byte   -8,-6,-4,0      ;MILW
    1313 000068d0       f8          .byte   -8,-6,-4,0      ;MINN
    1314 000068f0       f8          .byte   -8,-6,-4,0      ;NJ
    1315 00006910       01          .byte   1,3,4,5         ;NY (4)
    1316 00006930       f8          .byte   -8,-6,-4,0      ;ORL
    1317 00006950       f8          .byte   -8,-6,-4,0      ;PHIL
    1318 00006970       04          .byte   4,6,7,8         ;PHX (2)
    1319 00006990       02          .byte   2,4,5,6         ;PORT (3)
    1320 000069b0       f8          .byte   -8,-6,-4,0      ;SAC
    1321 000069d0       f8          .byte   -8,-6,-4,0      ;SANANT
    1322 000069f0       f8          .byte   -8,-6,-4,0      ;SEA
    1323 00006a10       00          .byte   0,2,3,4         ;UTAH (5)
    1324 00006a30       f8          .byte   -8,-6,-4,0      ;WASH
    1325 00006a50                   .even
    1326                    
    1327                    
    1328                    
    1329 00006a50            SUBRP  rnd
    1330                    
    1331 00006a50     07a1          move    @RAND,a1,L
         00006a60 00000000! 
    1332 00006a80     6821          rl      a1,a1
    1333 00006a90     05ae          move    @HCOUNT,a14
         00006aa0 c00001c0  
    1334 00006ac0     69c1          rl      a14,a1
    1335 00006ad0     41e1          add     sp,a1
    1336 00006ae0     0781          move    a1,@RAND,L
         00006af0 00000000! 
    1337                    
    1338 00006b10     5020          and     a1,a0
    1339 00006b20     0960          rets
    1340                    
    1341                    
    1342                    
    1343 00006b30            SUBRP  rndrng0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:45:07 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

basketball drone code                                                PAGE   32

    1344                    
    1345 00006b30     07a1          move    @RAND,a1,L
         00006b40 00000000! 
    1346 00006b60     6821          rl      a1,a1
    1347 00006b70     05ae          move    @HCOUNT,a14
         00006b80 c00001c0  
    1348 00006ba0     69c1          rl      a14,a1
    1349 00006bb0     41e1          add     sp,a1
    1350 00006bc0     0781          move    a1,@RAND,L
         00006bd0 00000000! 
    1351                    
    1352 00006bf0     1020          addk    1,a0
    1353 00006c00     5e20          mpyu    a1,a0           ;Condition codes not valid!
    1354                    
    1355 00006c10     0960          rets
    1356                    
    1357                    
    1358                    
    1359                    
    1360                            .end

 No Errors,  No Warnings
