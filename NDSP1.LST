TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

                                                                     PAGE    1

       1                            .file   "ndsp1.asm"
       3                            .width  132
       4                            .option b,d,l,t
       5                            .mnolist
       6                    
       7                    
       8                            .include        gsp.equ
       9                            .include        sys.equ
      10                            .include        mproc.equ
      11                            .include        disp.equ
      12                            .include        shawn.hdr
      13                            .include        imgtbl.glo
      14                    
      15                    
      16                            .if     DEBUG
      17                            .ref    SLDEBUG
      18                            .endif
      19                    
      20                    
      21                            .REF    COURT
      22                    
      23                            .ref    HALT,pal_getf,FRANIMQ
      24                            .ref    PCNT
      25                            .ref    crt_colors
      26                            .ref    dirq_wait
      27                            .ref    SYSCOPY,IRQSKYE
      28                    
      29                            .def    scale74f_t,scale59_t,scale61f_t,scale63f_t
      30                            .def    scale57_t,scale58_t,scale60_t
      31                            .def    scale61_t,scale61t_t,scale62_t
      32                            .def    scale62t_t,scale63_t,scale64_t,scale64t_t
      33                            .def    scale65_t,scale65t_t,scale65f_t
      34                            .def    scale66_t,scale66t_t,scale66f_t
      35                            .def    scale67_t,scale67t_t,scale67f_t
      36                            .def    scale68_t,scale68t_t,scale68f_t
      37                            .def    scale69_t,scale69f_t
      38                            .def    scale610_t,scale610t_t,scale610f_t
      39                            .def    scale611_t,scale611t_t,scale611f_t
      40                            .def    scale70_t,scale70t_t,scale70f_t
      41                            .def    scale71_t,scale72_t,scale72f_t
      42                            .def    scale74_t,scale76et_t
      43                    
      44                    
      45                    
      46 00000000                   .sect   "OFIXED"
      47                    
      48 00000000 00000000  OBJLST          .long   0       ;*Active object list
      49 00000020 00000000  OFREE           .long   0       ;*Free object block
      50 00000040 00000000  BAKLST          .long   0       ;*Background list
      51                    
      52                    
      53                    
      54              004c  GND_Y           .equ    116-40
      55              0074  GNDI_Y          .equ    116
      56              04fd  GNDI_W          .equ    1277
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE    2

      57              008a  GNDI_H          .equ    138
      58              00b2  GND_H           .equ    GNDI_H+40
      59              037e  GZBASE          .equ    894
      60                    
      61 00000000                   .bss    SCROLLX         ,32     ;X scroll value
      62 00000020                   .bss    SCROLLY         ,32     ;Y scroll value
      63                                                            ;/ Must stay in order
      64 00000040                   .bss    WORLDTLX        ,32     ;Left X screen coord (16:16)
      65 00000060                   .bss    WORLDTLY        ,32     ;Top Y screen coord (16:16)
      66 00000080                   .bss    WORLDTL         ,32     ;Top left world Y:X
      67                    
      68 000000a0                   .bss    SCRNTL          ,32     ;TOP LEFT [Y,X] SCREEN (SCRN COORD.)
      69 000000c0                   .bss    SCRNLR          ,32     ;LOWER RIGHT [Y,X] SCREEN (SCRN COORD.)
      70                    
      71 000000e0                   .bss    dpage           ,16     ;Display page; 0=Page0, -1=Page1
      72 000000f0                   .bss    dtype           ,16     ;Display type; 0=2D, 1=3D, -=Special
      73 00000100                   .bss    dcode_p         ,32     ;!0=*Special code (^ must = neg)
      74 00000120                   .bss    DMAQCUR         ,32     ;Misc DMAQ position
      75                    
      76 00000140                   .bss    OBJSTR,NOBJ*OBSIZ       ;Object structure mem
      77                    
      78          0001b900  QSIZE   .set    (NOBJ+GNDI_H)*BQCELL
      79          00015180  QMSIZE  .set    NOBJ*BQCELL
      80 0003bd80                   .bss    dmaq0           ,QSIZE  ;Main DMA queue
      81 00000060                   BSSX    DMAQ            ,QMSIZE ;Misc DMA queue
      82                    
      83 00000060                   BSSX    gndstat         ,16     ;!0=Show ground
      84 00000060                   BSSX    gndpos_t        ,16*GND_H
      85 00000060                   BSSX    gndx            ,32
      86 0006d350                   .bss    DISPLAYON       ,16     ;!0=Do display processing
      87                    
      88 00000060                   BSSX    _3dstat         ,16     ;!0=Show polygons
      89                    
      90                    
      91 00000000                   .text
      92                    
      93                    
      94                    
      95                    
      96 00000000            SUBR   dma_irq
      97                    
      98 00000000     abdc          move    -*b14,-*b12,L
      99 00000010     abdc          move    -*b14,-*b12,L
     100 00000020     abdc          move    -*b14,-*b12,L
     101 00000030     abdc          move    -*b14,-*b12,L
     102 00000040     abdc          move    -*b14,-*b12,L
     103 00000050     abdc          move    -*b14,-*b12,L           ;DMA go!
     104                    
     105 00000060     0b1c          addi    0c0H,b12                        ;DMAREGS (End of DMA)
         00000070     00c0  
     106 00000080     143d          subk    1,b13
     107 00000090     ce01          jrn     dmaint1                 ;Queue empty?
     108 000000a0     0940          reti
     109                    
     110 000000b0           dmaint1
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE    3

     111 000000b0     0541          setf    1,0,0                   ;0DHisable dma interrupt
     112 000000c0     059c          move    b12,@INTENB+1           ;Clr X1E
         000000d0 c0000111  
     113 000000f0     57bd          clr     b13                     ;For safety!
     114 00000100     143d          subk    1,b13                   ;-1
     115 00000110     0940          reti
     116                    
     117                    
     118                    
     119                            .align
     120                    
     121 00000200           ebnolp
     122 00000200     4eb3          move    b5,a3
     123 00000210     4003          add     a0,a3
     124 00000220     9461          move    *a3+,a1                 ;Get OFLAGS
     125 00000230     09a3          mmfm    a3,a12,a11,a9,a8
         00000240     1b00  
     126 00000250     b60a          move    *a0(OYVAL),a10,L        ;Get int Y
         00000260     00a0  
     127                    
     128 00000270     1f21          btst    B_3DQ,a1
     129 00000280     ca0a          jrz     ebnochk3d
     130                    
     131 00000290     4e96          move    b4,a6                   ;World TL Y:X
     132 000002a0     e2ca          subxy   a6,a10                  ;-world coord to get screen coord
     133 000002b0     b402          move    *a0(OXPOS),a2           ;X
         000002c0     0090  
     134 000002d0     b603          move    *a0(ODATA_p),a3,L       ;*gndpos_t
         000002e0     01c0  
     135 000002f0     8463          move    *a3,a3                  ;Get X shift
     136 00000300     4462          sub     a3,a2
     137 00000310     ec4a          movx    a2,a10                  ;A10=Obj Y:X
     138 00000320     c009          jruc    ebnonoscl
     139                    
     140                    
     141 00000330     1ee1  ebnochk3d       btst    B_3D,a1
     142 00000340     cb56          jrnz    ebno3d
     143                    
     144 00000350     b402          move    *a0(OXPOS),a2           ;X
         00000360     0090  
     145 00000370     ec4a          movx    a2,a10                  ;A10=Obj Y:X
     146 00000380     1e41          btst    B_SCRNREL,a1
     147 00000390     cb02          jrnz    ebnonoscl                       ;Screen relative XY?
     148 000003a0     4e96          move    b4,a6                   ;World TL Y:X
     149 000003b0     e2ca          subxy   a6,a10                  ;-world coord to get screen coord
     150 000003c0     4ef5  ebnonoscl       move    b7,a5                   ;A5=Y:X scale
     151                    
     152                                                            ;A8=Const:PAL
     153                                                            ;A9=VSize:HSize
     154                                                            ;A10=Dest Y:X
     155                                                            ;A11=*SAG
     156                                                            ;A12=Offset:Ctrl
     157                    
     158                    
     159                                                    ;0CaHlc top,bot,lft,rgt clips
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE    4

     160 000003d0     5663          clr     a3              ;A3=TL clip size
     161 000003e0     4d42          move    a10,a2
     162 000003f0     e122          addxy   a9,a2           ;BR Y:X
     163 00000400     e3a2          subxy   a13,a2          ;A2=BR clip size
     164 00000410                   JRYGE   ebno10
     165 00000420     ee62          movy    a3,a2           ;Clr bclip if y neg
     166 00000430           ebno10  JRXGE   ebno20
     167 00000440     ec62          movx    a3,a2           ;Clr rclip if x neg
     168                    
     169 00000450     4dc6  ebno20  move    a14,a6
     170 00000460     e346          subxy   a10,a6          ;tc : lc
     171 00000470                   JRYLT   ebno30
     172 00000480     eec3          movy    a6,a3           ;Top clip size
     173 00000490     efca          movy    a14,a10         ;Adjust start position to window edge
     174                    
     175 000004a0           ebno30  JRXLT   ebno35
     176 000004b0     ecc3          movx    a6,a3           ;Left clip size
     177 000004c0     edca          movx    a14,a10         ;Adjust start position to window edge
     178                    
     179 000004d0     4e40  ebno35  move    a2,b0           ;Save
     180 000004e0     4062          add     a3,a2           ;TL clip+BR clip
     181 000004f0     ca24          jrz     ebnonoclip              ;Zero clip?
     182                    
     183                    
     184 00000500     ed26          movx    a9,a6           ;HSize
     185                    
     186 00000510     e249          subxy   a2,a9           ;Get clipped size
     187 00000520     c435          JRXLE   ebnonxt         ;Totally clipped?
     188 00000530     c234          JRYLE   ebnonxt
     189                    
     190 00000540     5621          clr     a1
     191 00000550     ec41          movx    a2,a1
     192 00000560     4c21          move    a1,a1
     193 00000570     ca03          jrz     ebnoxclipzero
     194 00000580     ed21          movx    a9,a1
     195 00000590     1501          subk    8,a1
     196 000005a0     c62d          jrle    ebnonxt         ;<=8 wide? Skip so DMA doesn't lockup
     197                    
     198 000005b0           ebnoxclipzero
     199 000005b0     ecc9          movx    a6,a9           ;Restore hsize
     200                    
     201 000005c0     ec61          movx    a3,a1           ;A1=Left clip
     202                    
     203                    
     204 000005d0     1f6c          btst    B_FLIPH,a12
     205 000005e0     ca04          jrz     ebnonofh
     206                    
     207 000005f0     e22a          subxy   a1,a10          ;Original X
     208                    
     209 00000600     4e11          move    b0,a1           ;LClip=RClip
     210 00000610     0521          zext    a1
     211 00000620     e22a          subxy   a1,a10          ;X-RClip
     212                    
     213                    
     214 00000630     1f4c  ebnonofh        btst    B_FLIPV,a12
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE    5

     215 00000640     ca01          jrz     ebnonofv
     216                    
     217 00000650     4e13          move    b0,a3           ;Bot clip
     218                    
     219 00000660     2e03  ebnonofv        srl     16,a3           ;A3=Top or bot clip
     220 00000670     ca02          jrz     ebnot0
     221 00000680     0526          zext    a6
     222 00000690     5ec3          mpyu    a6,a3           ;T or B clip * total hsize
     223                    
     224                    
     225 000006a0           ebnot0
     226 000006a0     4023          add     a1,a3           ;Add left clip + tc*ths
     227 000006b0     4d81          move    a12,a1
     228 000006c0     2621          sll     32-15,a1        ;Get bits 12-14
     229 000006d0     2c61          srl     32-15+12,a1
     230 000006e0     cb01          jrnz    ebnonot8
     231 000006f0     1901          movk    8,a1
     232 00000700     5c23  ebnonot8        mpys    a1,a3           ;# of bits to skip
     233 00000710     406b          add     a3,a11          ;Add to SAG
     234 00000720     2602          sll     16,a2
     235 00000730     e04c          addxy   a2,a12          ;Add clip offset to offset
     236                    
     237                    
     238 00000740           ebnonoclip
     239 00000740     1f4c          btst    B_FLIPV,a12
     240 00000750     ca05          jrz     ebnonofv2
     241                    
     242 00000760     ef21          movy    a9,a1                   ;VSize
     243 00000770     2e01          srl     16,a1
     244 00000780     1421          subk    1,a1
     245 00000790     2601          sll     16,a1
     246 000007a0     e02a          addxy   a1,a10
     247 000007b0           ebnonofv2
     248 000007b0           ebnochkhflip
     249 000007b0     1f6c          btst    B_FLIPH,a12
     250 000007c0     ca04          jrz     ebnonofh2
     251                    
     252 000007d0     ed21          movx    a9,a1                   ;HSize
     253 000007e0     1421          subk    1,a1
     254 000007f0     0521          zext    a1
     255 00000800     e02a          addxy   a1,a10
     256 00000810           ebnonofh2
     257                    
     258 00000810     4e51          move    b2,a1
     259 00000820     e02a          addxy   a1,a10                  ;Add the page y offset : XPad
     260 00000830     320c          rl      16,a12                  ;Flip ctrl & offset
     261 00000840     0984          mmtm    a4,a5,a8,a9,a10,a11,a12 ;Save the dma regs
         00000850     04f8  
     262 00000860     103d          addk    1,b13                   ;+1 Q cnt
     263 00000870     c647          jrle    ebnostrtdma             ;DMA not going?
     264                    
     265 00000880           ebnonxt
     266 00000880           dma_objlst
     267 00000880     8600          move    *a0,a0,L                ;Get next link
     268 00000890     cb96          jrnz    ebnolp                  ;More?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE    6

     269 000008a0     0960          rets
     270                    
     271                    
     272                    
     273 000008b0           ebno3d                                  ;03DH
     274 000008b0     b607          move    *a0(OXVAL),a7,L         ;X
         000008c0     0080  
     275 000008d0     4e92          move    b4,a2
     276 000008e0     e24a          subxy   a2,a10                  ;-World Y
     277 000008f0     4ed2          move    b6,a2
     278 00000900     4447          sub     a2,a7                   ;-World center X
     279 00000910     b605          move    *a0(OXANI),a5,L         ;X anipt
         00000920     01e0  
     280 00000930     40a7          add     a5,a7
     281 00000940     2aa7          sra     16-5,a7                 ;/2048 (leave 5 bits frac)
     282                    
     283 00000950     b402          move    *a0(OZPOS),a2           ;894 to 1379 (Z range 486)
         00000960     00d0  
     284 00000970     b403          move    *a0(OMISC),a3           ;Z offset
         00000980     0210  
     285 00000990     4062          add     a3,a2
     286 000009a0     4c46          move    a2,a6
     287                    
     288 000009b0     0b02          addi    (819-GZBASE),a2         ;768 to ?
         000009c0     ffb5  
     289 000009d0     5c47          mpys    a2,a7
     290 000009e0     4ce3          move    a7,a3
     291 000009f0     2bc3          sra     2,a3                    ;/4
     292 00000a00     4467          sub     a3,a7
     293 00000a10     2be3          sra     1,a3                    ;/2
     294 00000a20     4467          sub     a3,a7
     295 00000a30     2a47          sra     14,a7                   ;/16k
     296 00000a40     0b07          addi    200,a7
         00000a50     00c8  
     297 00000a60     2a05          sra     16,a5
     298 00000a70     44a7          sub     a5,a7                   ;-X anipt
     299 00000a80     ecea          movx    a7,a10
     300                    
     301 00000a90     0be6          subi    GZBASE,a6               ;-Base
         00000aa0     fc81  
     302 00000ab0     c501          jrge    ebnozok
     303 00000ac0     56c6          clr     a6
     304 00000ad0     4cc2  ebnozok move    a6,a2
     305 00000ae0     4cc3          move    a6,a3
     306 00000af0     2be6          sra     1,a6                    ;Z/2
     307 00000b00     2ba3          sra     3,a3                    ;Z/8
     308 00000b10     4466          sub     a3,a6                   ;=Z/2.667
     309                    
     310 00000b20     0b06          addi    GND_Y,a6
         00000b30     004c  
     311 00000b40     2606          sll     16,a6
     312 00000b50     e0ca          addxy   a6,a10                  ;+Z
     313                    
     314 00000b60     1e61          btst    B_NOSCALE,a1
     315 00000b70     cb84          jrnz    ebnonoscl                       ;Scale off?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE    7

     316                    
     317 00000b80     1ec1          btst    B_SHAD,a1
     318 00000b90     ca08          jrz     ebnonots
     319 00000ba0     2fea          srl     1,a10
     320 00000bb0     05a5          move    @PCNT,a5                ;Set X to even or odd
         00000bc0 00000000! 
     321 00000be0     2fe5          srl     1,a5
     322 00000bf0     434a          addc    a10,a10
     323 00000c00     c000          jruc    ebnonoscl
         00000c10     ff7a  
     324                    
     325 00000c20           ebnonots
     326 00000c20     e5aa          cmpxy   a13,a10
     327 00000c30                   JRXGE   ebnonxt                 ;Left edge past rclip?
     328                    
     329 00000c40     4d43          move    a10,a3
     330 00000c50     e123          addxy   a9,a3
     331 00000c60     e5c3          cmpxy   a14,a3
     332 00000c70                   JRXLT   ebnonxt                 ;Rgt edge past lclip?
     333                    
     334 00000c80     2f82          srl     4,a2                    ;/16
     335 00000c90     24c2          sll     6,a2                    ;*64
     336                    
     337 00000ca0     b605          move    *a0(ODATA_p),a5,L       ;*Scale_t
         00000cb0     01c0  
     338 00000cc0     4045          add     a2,a5
     339 00000cd0     86a5          move    *a5,a5,L                ;A5=Y:X scale
     340                    
     341 00000ce0     c0ac          jruc    ebnochkhflip            ;Visable
     342                    
     343                    
     344                    
     345 00000cf0           ebnostrtdma                             ;>Start DMA if necessary
     346 00000cf0     0360          dint
     347                    
     348 00000d00     0541          setf    1,0,0                   ;Enable DMA int
     349 00000d10     1821          movk    1,a1
     350 00000d20     0581          move    a1,@INTENB+1            ;X1E
         00000d30 c0000111  
     351 00000d50     0570          setf    16,1,0
     352                    
     353 00000d60     8570          move    *b11,b0
     354 00000d70     ce03          jrn     ebnodmaok                       ;DMA busy?
     355                    
     356 00000d80     4dbd          move    b13,b13
     357 00000d90     ce01          jrn     ebnodmaok                       ;DMA int done?
     358                    
     359 00000da0     0901          trap    1                       ;Cause DMA int
     360                    
     361 00000db0     0d60  ebnodmaok       eint
     362                            .if     DEBUG
     363                            addk    1,b3                    ;Restart cnt
     364                            .endif
     365 00000dc0     c0ab          jruc    ebnonxt
     366                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE    8

     367                    
     368                    
     369                    
     370                    SCLT    .macro  sx,sy,sxa,sya
     371                            .eval   :sx:*1048,X     ;Convert (has slight error)
     372                            .eval   :sy:*1048,Y
     373                            .eval   :sxa:*1048,XA
     374                            .eval   :sya:*1048,YA
     375                            .loop   10
     376                            .word   010000000H/X,010000000H/Y
     377                            .word   0100000H/(010000000H/X),0100000H/(010000000H/Y)
     378                            .eval   X+XA*1/4,X
     379                            .eval   Y+YA*1/4,Y
     380                            .endloop
     381                            .loop   10
     382                            .word   010000000H/X,010000000H/Y
     383                            .word   0100000H/(010000000H/X),0100000H/(010000000H/Y)
     384                            .eval   X+XA*2/4,X
     385                            .eval   Y+YA*2/4,Y
     386                            .endloop
     387                            .loop   10
     388                            .word   010000000H/X,010000000H/Y
     389                            .word   0100000H/(010000000H/X),0100000H/(010000000H/Y)
     390                            .eval   X+XA*3/4,X
     391                            .eval   Y+YA*3/4,Y
     392                            .endloop
     393                            .loop   10
     394                            .word   010000000H/X,010000000H/Y
     395                            .word   0100000H/(010000000H/X),0100000H/(010000000H/Y)
     396                            .eval   X+XA,X
     397                            .eval   Y+YA,Y
     398                            .endloop
     399                            .loop   10
     400                            .word   010000000H/X,010000000H/Y
     401                            .word   0100000H/(010000000H/X),0100000H/(010000000H/Y)
     402                            .eval   X+XA*5/4,X
     403                            .eval   Y+YA*5/4,Y
     404                            .endloop
     405                            .endm
     406                    
     407                    
     408                                                    ;>Generate scale tables
     409 00000dd0           scale57_t
     410 00000dd0           scale58_t
     411 00000dd0           scale59_t
     412 00000dd0                   SCLT    594,594,37,37   ;5'8 (68)
     413 00001a50                   SCLT    507,507,31,31
     414 000026d0                   SCLT    360,360,20,20
     415 00003350           scale60_t
     416 00003350           scale61_t
     417 00003350           scale61t_t
     418 00003350                   SCLT    629,629,39,39   ;6'0 (72)
     419 00003fd0                   SCLT    537,537,34,34
     420 00004c50                   SCLT    360,360,20,20
     421 000058d0           scale61f_t
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE    9

     422 000058d0           scale62_t
     423 000058d0           scale63f_t
     424 000058d0           scale63_t
     425 000058d0                   SCLT    646,646,41,41   ;6'2 (74)
     426 00006550                   SCLT    552,552,35,35
     427 000071d0                   SCLT    360,360,20,20
     428 00007e50           scale62t_t
     429 00007e50                   SCLT    607,646,39,41   ;6'2 (74) thin (.94)
     430 00008ad0                   SCLT    519,552,33,35
     431 00009750                   SCLT    360,360,20,20
     432 0000a3d0           scale64_t
     433 0000a3d0           scale65_t
     434 0000a3d0                   SCLT    664,664,42,42   ;6'4 (76)
     435 0000b050                   SCLT    567,567,35,35
     436 0000bcd0                   SCLT    360,360,20,20
     437 0000c950           scale64t_t
     438 0000c950           scale65t_t
     439 0000c950                   SCLT    624,664,39,42   ;6'4 (76) thin (.94)
     440 0000d5d0                   SCLT    533,567,33,35
     441 0000e250                   SCLT    360,360,20,20
     442 0000eed0           scale65f_t
     443 0000eed0                   SCLT    730,664,46,42   ;6'4 (76) fat (1.10)
     444 0000fb50                   SCLT    624,567,39,35
     445 000107d0                   SCLT    360,360,20,20
     446 00011450           scale66_t
     447 00011450           scale67_t
     448 00011450                   SCLT    681,681,43,43   ;6'6 (78)
     449 000120d0                   SCLT    582,582,36,36
     450 00012d50                   SCLT    360,360,20,20
     451 000139d0           scale66t_t
     452 000139d0           scale67t_t
     453 000139d0                   SCLT    640,681,40,43   ;6'6 (78) thin (.94)
     454 00014650                   SCLT    547,582,34,36
     455 000152d0                   SCLT    360,360,20,20
     456 00015f50           scale66f_t
     457 00015f50           scale67f_t
     458 00015f50                   SCLT    749,681,47,43   ;6'6 (78) fat (1.10)
     459 00016bd0                   SCLT    640,582,40,36
     460 00017850                   SCLT    360,360,20,20
     461 000184d0           scale68_t
     462 000184d0           scale69_t
     463 000184d0                   SCLT    698,698,44,44   ;6'8 (80)
     464 00019150                   SCLT    597,597,37,37
     465 00019dd0                   SCLT    360,360,20,20
     466 0001aa50           scale68t_t
     467 0001aa50           scale69t_t
     468 0001aa50                   SCLT    656,698,41,44   ;6'8 (80) thin (.94)
     469 0001b6d0                   SCLT    561,597,35,37
     470 0001c350                   SCLT    360,360,20,20
     471 0001cfd0           scale68f_t
     472 0001cfd0           scale69f_t
     473 0001cfd0                   SCLT    768,698,48,44   ;6'8 (80) fat (1.10)
     474 0001dc50                   SCLT    657,597,41,37
     475 0001e8d0                   SCLT    360,360,20,20
     476 0001f550           scale610_t
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   10

     477 0001f550           scale611_t
     478 0001f550                   SCLT    715,715,45,45   ;6'10 (82)
     479 000201d0                   SCLT    611,611,38,38
     480 00020e50                   SCLT    360,360,20,20
     481 00021ad0           scale610t_t
     482 00021ad0           scale611t_t
     483 00021ad0                   SCLT    672,715,42,45   ;6'10 (82) thin (.94)
     484 00022750                   SCLT    574,611,36,38
     485 000233d0                   SCLT    360,360,20,20
     486 00024050           scale610f_t
     487 00024050           scale611f_t
     488 00024050                   SCLT    801,715,50,45   ;6'10 (82) fat (1.12)
     489 00024cd0                   SCLT    684,611,43,38
     490 00025950                   SCLT    360,360,20,20
     491 000265d0           scale70_t
     492 000265d0                   SCLT    733,733,46,46   ;7'0 (84)
     493 00027250                   SCLT    627,627,39,39
     494 00027ed0                   SCLT    360,360,20,20
     495 00028b50           scale70t_t
     496 00028b50                   SCLT    689,733,43,46   ;7'0 (84) thin (.94)
     497 000297d0                   SCLT    589,627,37,39
     498 0002a450                   SCLT    360,360,20,20
     499 0002b0d0           scale70f_t
     500 0002b0d0                   SCLT    806,733,51,46   ;7'0 (84) fat (1.10)
     501 0002bd50                   SCLT    690,627,43,39
     502 0002c9d0                   SCLT    360,360,20,20
     503 0002d650           scale71_t
     504 0002d650           scale72_t
     505 0002d650                   SCLT    751,751,47,47   ;7'2 (86)
     506 0002e2d0                   SCLT    642,642,40,40
     507 0002ef50                   SCLT    360,360,20,20
     508 0002fbd0           scale72f_t
     509 0002fbd0                   SCLT    841,751,53,47   ;7'2 (86) fat (1.12)
     510 00030850                   SCLT    719,642,45,40
     511 000314d0                   SCLT    360,360,20,20
     512 00032150           scale74_t
     513 00032150           scale74f_t
     514 00032150                   SCLT    768,768,49,49   ;7'4 (88)
     515 00032dd0                   SCLT    657,657,41,41
     516 00033a50                   SCLT    360,360,20,20
     517 000346d0           scale76et_t
     518 000346d0                   SCLT    628,786,40,50   ;7'6 (90) extra thin (.80)
     519 00035350                   SCLT    538,672,34,42
     520 00035fd0                   SCLT    360,360,20,20
     521                    
     522                    
     523                    
     524                    
     525 00036c50           dma_objlst2d
     526 00036c50     09e5          movi    01000100H,a5            ;A5=Y:X scale
         00036c60 01000100  
     527 00036c80     c000          jruc    fxsgnxt
         00036c90     0084  
     528                    
     529                            .align
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   11

     530                    
     531 00036e00           fxsglp
     532 00036e00     4eb3          move    b5,a3
     533 00036e10     4003          add     a0,a3
     534 00036e20     9461          move    *a3+,a1                 ;Get OFLAGS
     535 00036e30     09a3          mmfm    a3,a12,a11,a9,a8
         00036e40     1b00  
     536                    
     537 00036e50     b60a          move    *a0(OYVAL),a10,L        ;Get int Y
         00036e60     00a0  
     538                    
     539 00036e70     b402          move    *a0(OXPOS),a2           ;X
         00036e80     0090  
     540 00036e90     ec4a          movx    a2,a10                  ;A10=Obj Y:X
     541 00036ea0     1e41          btst    B_SCRNREL,a1
     542 00036eb0     cb02          jrnz    fxsgnoscl                       ;Screen relative XY?
     543 00036ec0     4e96          move    b4,a6                   ;A6=World TL Y:X
     544 00036ed0     e2ca          subxy   a6,a10                  ;-world coord to get screen coord
     545 00036ee0           fxsgnoscl
     546                                                            ;A8=Const:PAL
     547                                                            ;A9=VSize:HSize
     548                                                            ;A10=Dest Y:X
     549                                                            ;A11=*SAG
     550                                                            ;A12=Offset:Ctrl
     551                    
     552                    
     553                                                    ;0CaHlc top,bot,lft,rgt clips
     554 00036ee0     5663          clr     a3              ;A3=TL clip size
     555 00036ef0     4d42          move    a10,a2
     556 00036f00     e122          addxy   a9,a2           ;BR Y:X
     557 00036f10     e3a2          subxy   a13,a2          ;A2=BR clip size
     558 00036f20                   JRYGE   fxsg10
     559 00036f30     ee62          movy    a3,a2           ;Clr bclip if y neg
     560 00036f40           fxsg10  JRXGE   fxsg20
     561 00036f50     ec62          movx    a3,a2           ;Clr rclip if x neg
     562                    
     563 00036f60     4dc7  fxsg20  move    a14,a7
     564 00036f70     e347          subxy   a10,a7          ;wstart - pt -> a7 (tc : lc)
     565 00036f80                   JRYLT   fxsg30
     566 00036f90     eee3          movy    a7,a3           ;Top clip size
     567 00036fa0     1f0c          btst    7,a12
     568 00036fb0     cb01          jrnz    fxsg30          ;Zero compression on?
     569 00036fc0     efca          movy    a14,a10         ;Adjust start position to window edge
     570                    
     571 00036fd0           fxsg30  JRXLT   fxsg35
     572 00036fe0     ece3          movx    a7,a3           ;Left clip size
     573 00036ff0     1f0c          btst    7,a12
     574 00037000     cb01          jrnz    fxsg35          ;Zero compression on?
     575 00037010     edca          movx    a14,a10         ;Adjust start position to window edge
     576                    
     577 00037020     4e40  fxsg35  move    a2,b0           ;Save
     578 00037030     4062          add     a3,a2           ;TL clip+BR clip
     579 00037040     ca28          jrz     fxsgnoclip              ;Zero clip?
     580                    
     581                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   12

     582 00037050     4d26          move    a9,a6           ;Save VSize:HSize
     583                    
     584 00037060     e249          subxy   a2,a9           ;Get clipped size
     585 00037070     c446          JRXLE   fxsgnxt         ;Totally clipped?
     586 00037080     c245          JRYLE   fxsgnxt
     587                    
     588 00037090     1f0c          btst    7,a12
     589 000370a0     ca02          jrz     fxsgnozc                ;Zero compression off?
     590 000370b0     4cc9          move    a6,a9           ;Restore v:h size
     591 000370c0     c020          jruc    fxsgnoclip
     592                    
     593 000370d0           fxsgnozc
     594 000370d0     5621          clr     a1
     595 000370e0     ec41          movx    a2,a1
     596 000370f0     4c21          move    a1,a1
     597 00037100     ca03          jrz     fxsgxclipzero
     598 00037110     ed21          movx    a9,a1
     599 00037120     1501          subk    8,a1
     600 00037130     c63a          jrle    fxsgnxt         ;<=8 wide? Skip so DMA doesn't lockup
     601                    
     602 00037140           fxsgxclipzero
     603 00037140     ecc9          movx    a6,a9           ;Restore hsize
     604                    
     605 00037150     ec61          movx    a3,a1           ;A1=Left clip
     606                    
     607                    
     608 00037160     1f6c          btst    B_FLIPH,a12
     609 00037170     ca04          jrz     fxsgnofh
     610                    
     611 00037180     e22a          subxy   a1,a10          ;Original X
     612                    
     613 00037190     4e11          move    b0,a1           ;LClip=RClip
     614 000371a0     0521          zext    a1
     615 000371b0     e22a          subxy   a1,a10          ;X-RClip
     616                    
     617                    
     618 000371c0     1f4c  fxsgnofh        btst    B_FLIPV,a12
     619 000371d0     ca01          jrz     fxsgnofv
     620                    
     621 000371e0     4e13          move    b0,a3           ;Bot clip
     622                    
     623 000371f0     2e03  fxsgnofv        srl     16,a3           ;A3=Top or bot clip
     624 00037200     ca02          jrz     fxsgt0
     625 00037210     0526          zext    a6
     626 00037220     5ec3          mpyu    a6,a3           ;T or B clip * total hsize
     627                    
     628                    
     629 00037230           fxsgt0
     630 00037230     4023          add     a1,a3           ;Add left clip + tc*ths
     631 00037240     4d81          move    a12,a1
     632 00037250     2621          sll     32-15,a1        ;Get bits 12-14
     633 00037260     2c61          srl     32-15+12,a1
     634 00037270     cb01          jrnz    fxsgnot8
     635 00037280     1901          movk    8,a1
     636 00037290     5c23  fxsgnot8        mpys    a1,a3           ;# of bits to skip
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   13

     637 000372a0     406b          add     a3,a11          ;Add to SAG
     638 000372b0     2602          sll     16,a2
     639 000372c0     e04c          addxy   a2,a12          ;Add clip offset to offset
     640                    
     641                    
     642 000372d0           fxsgnoclip
     643 000372d0     1f6c          btst    B_FLIPH,a12
     644 000372e0     ca04          jrz     fxsg300
     645                    
     646 000372f0     ed21          movx    a9,a1                   ;HSize
     647 00037300     1421          subk    1,a1
     648 00037310     0521          zext    a1
     649 00037320     e02a          addxy   a1,a10
     650                    
     651 00037330     1f4c  fxsg300 btst    B_FLIPV,a12
     652 00037340     ca05          jrz     fxsg400
     653                    
     654 00037350     ef21          movy    a9,a1                   ;VSize
     655 00037360     2e01          srl     16,a1
     656 00037370     1421          subk    1,a1
     657 00037380     2601          sll     16,a1
     658 00037390     e02a          addxy   a1,a10
     659                    
     660 000373a0           fxsg400
     661 000373a0     4e51          move    b2,a1
     662 000373b0     e02a          addxy   a1,a10                  ;Add the page y offset : XPad
     663 000373c0     320c          rl      16,a12                  ;Flip ctrl & offset
     664 000373d0     0984          mmtm    a4,a5,a8,a9,a10,a11,a12 ;Save the dma regs
         000373e0     04f8  
     665 000373f0     103d          addk    1,b13                   ;+1 Q cnt
     666 00037400     c70d          jrgt    fxsgnxt                 ;DMA going?
     667                    
     668 00037410     0360          dint
     669                    
     670 00037420     0541          setf    1,0,0                   ;0EHnable DMA int
     671 00037430     1821          movk    1,a1
     672 00037440     0581          move    a1,@INTENB+1            ;X1E
         00037450 c0000111  
     673 00037470     0570          setf    16,1,0
     674                    
     675 00037480     8570          move    *b11,b0
     676 00037490     ce03          jrn     fxsgdmaok                       ;DMA busy?
     677                    
     678 000374a0     4dbd          move    b13,b13
     679 000374b0     ce01          jrn     fxsgdmaok                       ;DMA int done?
     680                    
     681 000374c0     0901          trap    1                       ;Cause DMA int
     682                    
     683 000374d0     0d60  fxsgdmaok       eint
     684 000374e0           fxsgnxt
     685 000374e0     8600          move    *a0,a0,L                ;Get next link
     686 000374f0     cb90          jrnz    fxsglp                  ;More?
     687 00037500     0960          rets
     688                    
     689                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   14

     690                    
     691                    
     692 00037510           dma_objlst2dscl
     693                    
     694 00037510     c076          jruc    blqtnxt
     695                    
     696                            .align
     697                    
     698 00037600           blqtlp
     699 00037600     4eb3          move    b5,a3
     700 00037610     4003          add     a0,a3
     701 00037620     9461          move    *a3+,a1                 ;Get OFLAGS
     702 00037630     09a3          mmfm    a3,a12,a11,a9,a8
         00037640     1b00  
     703                    
     704 00037650     b605          move    *a0(ODATA_p),a5,L       ;Get scale value
         00037660     01c0  
     705                    
     706 00037670     b60a          move    *a0(OYVAL),a10,L        ;Get int Y
         00037680     00a0  
     707                    
     708 00037690     b402          move    *a0(OXPOS),a2           ;X
         000376a0     0090  
     709 000376b0     ec4a          movx    a2,a10                  ;A10=Obj Y:X
     710 000376c0     1e41          btst    B_SCRNREL,a1
     711 000376d0     cb02          jrnz    blqtnoscl                       ;Screen relative XY?
     712 000376e0     4e96          move    b4,a6                   ;A6=World TL Y:X
     713 000376f0     e2ca          subxy   a6,a10                  ;-world coord to get screen coord
     714 00037700           blqtnoscl
     715                                                            ;A8=Const:PAL
     716                                                            ;A9=VSize:HSize
     717                                                            ;A10=Dest Y:X
     718                                                            ;A11=*SAG
     719                                                            ;A12=Offset:Ctrl
     720                    
     721                    
     722                                                    ;0CaHlc top,bot,lft,rgt clips
     723 00037700     5663          clr     a3              ;A3=TL clip size
     724 00037710     4d42          move    a10,a2
     725 00037720     e122          addxy   a9,a2           ;BR Y:X
     726 00037730     e3a2          subxy   a13,a2          ;A2=BR clip size
     727 00037740                   JRYGE   blqt10
     728 00037750     ee62          movy    a3,a2           ;Clr bclip if y neg
     729 00037760           blqt10  JRXGE   blqt20
     730 00037770     ec62          movx    a3,a2           ;Clr rclip if x neg
     731                    
     732 00037780     4dc7  blqt20  move    a14,a7
     733 00037790     e347          subxy   a10,a7          ;wstart - pt -> a7 (tc : lc)
     734 000377a0                   JRYLT   blqt30
     735 000377b0     eee3          movy    a7,a3           ;Top clip size
     736 000377c0     efca          movy    a14,a10         ;Adjust start position to window edge
     737                    
     738 000377d0           blqt30  JRXLT   blqt35
     739 000377e0     ece3          movx    a7,a3           ;Left clip size
     740 000377f0     edca          movx    a14,a10         ;Adjust start position to window edge
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   15

     741                    
     742 00037800     4e40  blqt35  move    a2,b0           ;Save
     743 00037810     4062          add     a3,a2           ;TL clip+BR clip
     744 00037820     ca24          jrz     blqtnoclip              ;Zero clip?
     745                    
     746                    
     747 00037830     ed26          movx    a9,a6           ;HSize
     748                    
     749 00037840     e249          subxy   a2,a9           ;Get clipped size
     750 00037850     c442          JRXLE   blqtnxt         ;Totally clipped?
     751 00037860     c241          JRYLE   blqtnxt
     752                    
     753 00037870     5621          clr     a1
     754 00037880     ec41          movx    a2,a1
     755 00037890     4c21          move    a1,a1
     756 000378a0     ca03          jrz     blqtxclipzero
     757 000378b0     ed21          movx    a9,a1
     758 000378c0     1501          subk    8,a1
     759 000378d0     c63a          jrle    blqtnxt         ;<=8 wide? Skip so DMA doesn't lockup
     760                    
     761 000378e0           blqtxclipzero
     762 000378e0     ecc9          movx    a6,a9           ;Restore hsize
     763                    
     764 000378f0     ec61          movx    a3,a1           ;A1=Left clip
     765                    
     766                    
     767 00037900     1f6c          btst    B_FLIPH,a12
     768 00037910     ca04          jrz     blqtnofh
     769                    
     770 00037920     e22a          subxy   a1,a10          ;Original X
     771                    
     772 00037930     4e11          move    b0,a1           ;LClip=RClip
     773 00037940     0521          zext    a1
     774 00037950     e22a          subxy   a1,a10          ;X-RClip
     775                    
     776                    
     777 00037960     1f4c  blqtnofh        btst    B_FLIPV,a12
     778 00037970     ca01          jrz     blqtnofv
     779                    
     780 00037980     4e13          move    b0,a3           ;Bot clip
     781                    
     782 00037990     2e03  blqtnofv        srl     16,a3           ;A3=Top or bot clip
     783 000379a0     ca02          jrz     blqtt0
     784 000379b0     0526          zext    a6
     785 000379c0     5ec3          mpyu    a6,a3           ;T or B clip * total hsize
     786                    
     787                    
     788 000379d0           blqtt0
     789 000379d0     4023          add     a1,a3           ;Add left clip + tc*ths
     790 000379e0     4d81          move    a12,a1
     791 000379f0     2621          sll     32-15,a1        ;Get bits 12-14
     792 00037a00     2c61          srl     32-15+12,a1
     793 00037a10     cb01          jrnz    blqtnot8
     794 00037a20     1901          movk    8,a1
     795 00037a30     5c23  blqtnot8        mpys    a1,a3           ;# of bits to skip
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   16

     796 00037a40     406b          add     a3,a11          ;Add to SAG
     797 00037a50     2602          sll     16,a2
     798 00037a60     e04c          addxy   a2,a12          ;Add clip offset to offset
     799                    
     800                    
     801 00037a70           blqtnoclip
     802 00037a70     1f6c          btst    B_FLIPH,a12
     803 00037a80     ca04          jrz     blqt300
     804                    
     805 00037a90     ed21          movx    a9,a1                   ;HSize
     806 00037aa0     1421          subk    1,a1
     807 00037ab0     0521          zext    a1
     808 00037ac0     e02a          addxy   a1,a10
     809                    
     810 00037ad0     1f4c  blqt300 btst    B_FLIPV,a12
     811 00037ae0     ca05          jrz     blqt400
     812                    
     813 00037af0     ef21          movy    a9,a1                   ;VSize
     814 00037b00     2e01          srl     16,a1
     815 00037b10     1421          subk    1,a1
     816 00037b20     2601          sll     16,a1
     817 00037b30     e02a          addxy   a1,a10
     818                    
     819 00037b40           blqt400
     820 00037b40     4e51          move    b2,a1
     821 00037b50     e02a          addxy   a1,a10                  ;Add the page y offset : XPad
     822 00037b60     320c          rl      16,a12                  ;Flip ctrl & offset
     823 00037b70     0984          mmtm    a4,a5,a8,a9,a10,a11,a12 ;Save the dma regs
         00037b80     04f8  
     824 00037b90     103d          addk    1,b13                   ;+1 Q cnt
     825 00037ba0     c70d          jrgt    blqtnxt                 ;DMA going?
     826                    
     827 00037bb0     0360          dint
     828                    
     829 00037bc0     0541          setf    1,0,0                   ;0EHnable DMA int
     830 00037bd0     1821          movk    1,a1
     831 00037be0     0581          move    a1,@INTENB+1            ;X1E
         00037bf0 c0000111  
     832 00037c10     0570          setf    16,1,0
     833                    
     834 00037c20     8570          move    *b11,b0
     835 00037c30     ce03          jrn     blqtdmaok                       ;DMA busy?
     836                    
     837 00037c40     4dbd          move    b13,b13
     838 00037c50     ce01          jrn     blqtdmaok                       ;DMA int done?
     839                    
     840 00037c60     0901          trap    1                       ;Cause DMA int
     841                    
     842 00037c70     0d60  blqtdmaok       eint
     843 00037c80           blqtnxt
     844 00037c80     8600          move    *a0,a0,L                ;Get next link
     845 00037c90     cb96          jrnz    blqtlp                  ;More?
     846 00037ca0     0960          rets
     847                    
     848                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   17

     849                    
     850                    
     851                    
     852 00037cb0           DISPLAY
     853 00037cb0     09fb          movi    DMACTRL,b11             ;B11=*DMACTRL
         00037cc0 01a80010  
     854                    
     855                    
     856 00037ce0     09d2          movi    SCRNXP,b2               ;B2=Page y offset : XPad offset
         00037cf0     0038  
     857 00037d00     09f3          movi    [253,0],b3
         00037d10 00fd0000  
     858 00037d30     05a1          move    @dpage,a1
         00037d40 000000e0- 
     859 00037d60     cb06          jrnz    ytkqp1
     860 00037d70     09f2          movi    [PAGE1YO,SCRNXP],b2
         00037d80 01000038  
     861 00037da0     09f3          movi    [509,256],b3
         00037db0 01fd0100  
     862 00037dd0           ytkqp1
     863 00037dd0     09e4          movi    dmaq0+QSIZE,a4          ;A4=*DMAQ for new data (Top)
         00037de0 00057680- 
     864 00037e00     57bd          clr     b13                     ;Kill DMA
     865 00037e10     81bb          move    b13,*b11
     866 00037e20     81bb          move    b13,*b11
     867 00037e30     09fc          movi    DMAREGS,b12             ;B12=*DMAREGS
         00037e40 01a800c0  
     868 00037e60     143d          subk    1,b13                   ;B13=Q count (-1)
     869 00037e70     4e8e          move    a4,b14                  ;B14=*DMAQ for next fetch (Top)
     870                    
     871 00037e80     09d0          movi    030H,b0
         00037e90     0030  
     872 00037ea0     b01c          move    b0,*b12(30h)            ;DMACONF (Top/Bottom)
         00037eb0     0030  
     873 00037ec0     827c          move    b3,*b12,L               ;DMAWINDOW
     874                    
     875                    
     876                    
     877 00037ed0     05a0          move    @DISPLAYON,a0
         00037ee0 0006d350- 
     878 00037f00     ca3c          jrz     ytkqdoff                        ;Stop DMA of objects except for score?
     879                    
     880                    
     881 00037f10     09f0          movi    WORLDTLX,b0             ;>Scroll world
         00037f20 00000040- 
     882                    
     883 00037f40     9613          move    *b0+,b3,L               ;Quick version of ^
     884 00037f50     9614          move    *b0+,b4,L
     885                    
     886 00037f60     2e13          srl     16,b3
     887 00037f70     ec74          movx    b3,b4                   ;B4=World top left Y:X
     888 00037f80     8290          move    b4,*b0,L                ;WORLDTL
     889                    
     890 00037f90     09d5          movi    OFLAGS,b5               ;B5=Obj data offset
         00037fa0     00e0  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   18

     891 00037fb0     4c96          move    b4,b6
     892 00037fc0     0b16          addi    200,b6
         00037fd0     00c8  
     893 00037fe0     2616          sll     16,b6                   ;B6=World center scrn X * 64K
     894 00037ff0     07ad          move    @SCRNLR,a13,L           ;A13=Screen BR
         00038000 000000c0- 
     895 00038020     07ae          move    @SCRNTL,a14,L           ;A14=Screen TL
         00038030 000000a0- 
     896                    
     897                            .if     DEBUG
     898                            clr     b3                      ;trap1 cnt
     899                            .endif
     900                    
     901 00038050     05a0          move    @gndstat,a0
         00038060 0006c800- 
     902 00038080     ca02          jrz     ytkq70                  ;Off?
     903 00038090     0d3f          callr   gnd_dodma
         000380a0     0067  
     904 000380b0           ytkq70
     905 000380b0     05a0          move    @_3dstat,a0
         000380c0 0006d360- 
     906 000380e0     0300          jrz     ytkq80                  ;Off?
     907 000380f0           ytkq80
     908                    
     909 000380f0     05a1          move    @dtype,a1
         00038100 000000f0- 
     910 00038120     cb0b          jrnz    ytkq3dtype
     911                    
     912                    
     913 00038130     09e0          movi    BAKLST,a0
         00038140 00000040+ 
     914 00038160     0d3f          callr   dma_objlst2d
         00038170     fead  
     915                    
     916                            .if     DEBUG
     917                            move    @SLDEBUG,a0
     918                            jrnn    ytkqnol2d
     919                            movi    31<<10+10<<5,a0         ;Proc usage
     920                            move    a0,@ERASELOC
     921                    ytkqnol2d
     922                            .endif
     923                    
     924 00038180     09e0          movi    OBJLST,a0
         00038190 00000000+ 
     925 000381b0     0d3f          callr   dma_objlst2d
         000381c0     fea8  
     926 000381d0     c00f          jruc    ytkqdoff
     927                    
     928                    
     929 000381e0           ytkq3dtype
     930 000381e0     c706          jrgt    ytkq3dgame
     931                    
     932 000381f0     07a0          move    @dcode_p,a0,L
         00038200 00000100- 
     933 00038220     cf02          jrnn    ytkq3dgame                      ;No special code?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   19

     934 00038230     0920          call    a0
     935 00038240     c033          jruc    ytkqx
     936                    
     937                    
     938 00038250           ytkq3dgame
     939                    
     940                            .if     DEBUG
     941                            move    @SLDEBUG,a0
     942                            jrnn    ytkqnol3d
     943                            movi    31<<10+10<<5,a0         ;Proc usage
     944                            move    a0,@ERASELOC
     945                    ytkqnol3d
     946                            .endif
     947                    
     948 00038250     09e0          movi    OBJLST,a0
         00038260 00000000+ 
     949 00038280     09f7          movi    01000100H,b7            ;Original scale
         00038290 01000100  
     950 000382b0     0d3f          callr   dma_objlst
         000382c0     c85b  
     951                    
     952                    
     953                    
     954 000382d0           ytkqdoff
     955 000382d0     07a2          move    @DMAQCUR,a2,L
         000382e0 00000120- 
     956 00038300     09e1          movi    DMAQ+QMSIZE,a1
         00038310 0006c800- 
     957 00038330     4822          cmp     a1,a2
     958 00038340     c91a          jrhs    ytkqnoman                       ;Empty?
     959 00038350     0781          move    a1,@DMAQCUR,L           ;Reset top of queue
         00038360 00000120- 
     960                    
     961 00038380     4e55          move    b2,a5
     962                    
     963 00038390     aa24  ytkqlp  move    -*a1,-*a4,L             ;0CHopy manual DMAQ to end of Q
     964 000383a0     aa24          move    -*a1,-*a4,L
     965 000383b0     aa24          move    -*a1,-*a4,L
     966 000383c0     a620          move    -*a1,a0,L
     967 000383d0     e0a0          addxy   a5,a0                   ;+Y
     968 000383e0     a204          move    a0,-*a4,L
     969 000383f0     aa24          move    -*a1,-*a4,L
     970 00038400     aa24          move    -*a1,-*a4,L
     971 00038410     103d          addk    1,b13
     972 00038420     4841          cmp     a2,a1
     973 00038430     c3f5          jrhi    ytkqlp
     974                    
     975                    
     976 00038440     8570          move    *b11,b0
     977 00038450     ce09          jrn     ytkqnoman                       ;DMA busy?
     978                    
     979 00038460     4dbd          move    b13,b13
     980 00038470     ce07          jrn     ytkqnoman                       ;DMA int done?
     981                    
     982 00038480     0541          setf    1,0,0                   ;0EHnable DMA int
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   20

     983 00038490     1821          movk    1,a1
     984 000384a0     0581          move    a1,@INTENB+1            ;X1E
         000384b0 c0000111  
     985 000384d0     0570          setf    16,1,0
     986                    
     987 000384e0     0901          trap    1                       ;Cause DMA int
     988                    
     989 000384f0           ytkqnoman
     990                    
     991                    
     992 000384f0     05a0          move    @HALT,a0
         00038500 00000000! 
     993 00038520     cb05          jrnz    ytkqnovel                       ;Skip vel update?
     994 00038530     09e0          movi    OBJLST,a0
         00038540 00000000+ 
     995 00038560     0d3f          callr   vel_add
         00038570     0017  
     996 00038580           ytkqnovel
     997 00038580           ytkqx
     998                    
     999                    
    1000 00038580     0960          rets
    1001                    
    1002                    
    1003 00038590 80000000  nulldma .long   080000000H,IROM,0,000010001H,0,01000100H
    1004                    
    1005                    
    1006                    
    1007 00038650     4c01  cuyzlp  move    a0,a1
    1008 00038660     1001          addk    OXVEL,a1
    1009                    
    1010 00038670     09a1          mmfm    a1,a2,a3,a4,a5,a6,a7    ;A7=XV, A6=YV, A5=ZV, A4=X, A3=Y, A2=Z
         00038680     00fc  
    1011                    
    1012 00038690     40a2          add     a5,a2                   ;Add ZVEL to Z
    1013 000386a0     a241          move    a2,-*a1,L
    1014 000386b0     40c3          add     a6,a3                   ;Add YVEL to Y (Uses hidden cycle!)
    1015 000386c0     a261          move    a3,-*a1,L
    1016 000386d0     40e4          add     a7,a4                   ;Add XVEL to X ^
    1017 000386e0     a281          move    a4,-*a1,L
    1018                    
    1019 000386f0     8600  vel_add move    *a0,a0,L
    1020 00038700     cbf4          jrnz    cuyzlp                  ;!End?
    1021 00038710     0960          rets
    1022                    
    1023                    
    1024                    
    1025                    
    1026 00038720            SUBRP  gnd_dodma
    1027                    
    1028 00038720                   PUSH    a13,a14
    1029                    
    1030                    
    1031                    
    1032                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   21

    1033                    
    1034 00038740     07ae          move    @gndx,a14,L             ;16:16
         00038750 0006d330- 
    1035                    
    1036                    
    1037 00038770     09e0          movi    gndpos_t,a0             ;0CaHlc gnd x positions
         00038780 0006c810- 
    1038 000387a0     09c7          movi    GND_H,a7
         000387b0     00b2  
    1039 000387c0     4dc1          move    a14,a1
    1040 000387d0     09c2          movi    0120H,a2
         000387e0     0120  
    1041 000387f0     5841          divs    a2,a1
    1042 00038800     4dc8  ptdgglp move    a14,a8
    1043 00038810     2a08          sra     16,a8
    1044 00038820     9100          move    a8,*a0+
    1045 00038830     402e          add     a1,a14
    1046 00038840     3ca7          dsj     a7,ptdgglp
    1047                    
    1048                    
    1049 00038850     07a0          move    @crt_colors,a0,L
         00038860 00000000! 
    1050 00038880     0d5f          calla   pal_getf
         00038890 00000000! 
    1051 000388b0     4c08          move    a0,a8                   ;A8=Const:palette
    1052                    
    1053 000388c0     09e0          movi    gndpos_t+40*16,a0       ;Start on 1st court pos
         000388d0 0006ca90- 
    1054 000388f0     09c7          movi    GNDI_H,a7
         00038900     008a  
    1055 00038910     4e91          move    b4,a1
    1056 00038920     2a01          sra     16,a1
    1057 00038930     4027          add     a1,a7
    1058 00038940     c621          jrle    ptdgx                   ;No lines visable?
    1059 00038950     09e9          movi    [1,400],a9              ;A9=VSIZE:HSIZE
         00038960 00010190  
    1060 00038980     4e5a          move    b2,a10
    1061 00038990     2601          sll     16,a1
    1062 000389a0     e22a          subxy   a1,a10
    1063 000389b0     0b2a          addi    [GNDI_Y,0],a10          ;A10=Dest Y:X
         000389c0 00740000  
    1064                    
    1065 000389e0     09e5          movi    01000100H,a5            ;A5=Y:X scale
         000389f0 01000100  
    1066 00038a10     09e6          movi    COURT+(GNDI_W/2-200)*8,a6 ;A6=*Middle of img line
         00038a20 00000db0! 
    1067 00038a40     09ec          movi    (08000H|DMAWNZ)<<16,a12 ;A12=OFFSET:CONTROL
         00038a50 80020000  
    1068                    
    1069                    
    1070 00038a70     09c2          movi    GNDI_W*8,a2             ;Const: Next line
         00038a80     27e8  
    1071 00038a90     09e3          movi    [1,0],a3                ;Const: Next Y
         00038aa0 00010000  
    1072                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   22

    1073 00038ac0     940b  ptdglp  move    *a0+,a11
    1074 00038ad0     246b          sll     3,a11                   ;*8
    1075 00038ae0     40cb          add     a6,a11                  ;A11=*Image data
    1076                    
    1077 00038af0     0984          mmtm    a4,a5,a8,a9,a10,a11,a12 ;Save the dma regs
         00038b00     04f8  
    1078 00038b10     103d          addk    1,b13                   ;+1 Q cnt
    1079 00038b20     c60d          jrle    ptdgstrtdma             ;DMA not going?
    1080                    
    1081 00038b30           ptdgnext
    1082 00038b30     4046          add     a2,a6                   ;SAG+1 line
    1083 00038b40     406a          add     a3,a10                  ;Next Y
    1084                    
    1085                    
    1086 00038b50     3d47          dsj     a7,ptdglp
    1087                    
    1088                    
    1089 00038b60           ptdgx   PULL    a13,a14
    1090 00038b80     0960          rets
    1091                    
    1092                    
    1093                            .align
    1094 00038c00           ptdgstrtdma                             ;>Start DMA if necessary
    1095 00038c00     0360          dint
    1096 00038c10     0541          setf    1,0,0                   ;Enable DMA int
    1097 00038c20     1821          movk    1,a1
    1098 00038c30     0581          move    a1,@INTENB+1            ;X1E
         00038c40 c0000111  
    1099 00038c60     0570          setf    16,1,0
    1100                    
    1101 00038c70     8570          move    *b11,b0
    1102 00038c80     ce03          jrn     ptdgdmaok                       ;DMA busy?
    1103                    
    1104 00038c90     4dbd          move    b13,b13
    1105 00038ca0     ce01          jrn     ptdgdmaok                       ;DMA int done?
    1106                    
    1107 00038cb0     0901          trap    1                       ;Cause DMA int
    1108 00038cc0     0d60  ptdgdmaok       eint
    1109                            .if     DEBUG
    1110                            addk    1,b3                    ;DEBUG cnt
    1111                            .endif
    1112 00038cd0     c0e5          jruc    ptdgnext
    1113                    
    1114                    
    1115                    
    1116                            .if     0
    1117                    
    1118                    
    1119                    
    1120                            .bss    linelsxy        ,32
    1121                            .bss    linersxy        ,32
    1122                    
    1123                    D3XPTS  .equ    0140H           ;UHL *Xformed points array (Cnt, XYZ,XYZ..)
    1124                    
    1125                     SUBRP  _3d_draw        ;B1 Free (B14)
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   23

    1126                    
    1127                            PUSH    a4,a13,a14
    1128                            PUSH    b3,b4,b5,b6,b7,b8,b9,b10,b13,b14
    1129                    
    1130                    
    1131                            setf    1,0,0                   ;0DHisable DMA interrupt
    1132                            move    sp,@INTENB+1            ;Clr X1E
    1133                            setf    16,1,0
    1134                    
    1135                            movi    [1,1],b13               ;B13=Const 1:1
    1136                    
    1137                    
    1138                            movi    01000100H,b5            ;B5=1:1 scale
    1139                            movi    IROM,b9                 ;B9=*IROM
    1140                            movi    0800cH<<16,b10          ;B10=OFFSET:CONTROL
    1141                    
    1142                            movi    d3vis_p,a12             ;A12=*3D object
    1143                    
    1144                    
    1145                    
    1146                    
    1147                    
    1148                            .align
    1149                    
    1150                    iphjlpobj       move    *a12,a12,L
    1151                            jrz     iphjx                   ;End?
    1152                            move    a12,a14
    1153                            addi    D3XPTS,a14
    1154                            move    *a14+,a13,L             ;A13=*Base of points_t
    1155                            move    *a14+,a14,L             ;A14=*1st entry of face line_t
    1156                    
    1157                            move    *a13+,a0                ;# pts
    1158                            jrz     iphjlpobj                       ;Not visable?
    1159                    
    1160                    
    1161                    iphjfacelp
    1162                            move    *a14+,a0
    1163                            move    a0,b6                   ;B6=Const:Pal for face
    1164                            sll     16,b6
    1165                            move    a14,a4
    1166                            movi    07fffH,a8               ;0FHind lowest/highest X Y
    1167                    
    1168                            move    a8,a9
    1169                            not     a9                      ;08000H
    1170                            move    a8,a10
    1171                            move    a9,a11
    1172                            jruc    dd150
    1173                    
    1174                    iphjlp2 add     a13,a1                  ;+Base
    1175                            move    *a1+,a2                 ;Get X
    1176                            cmp     a8,a2
    1177                            jrge    iphjxbig                        ;Bigger X?
    1178                            move    a2,a8                   ;New low
    1179                    iphjxbig        cmp     a9,a2
    1180                            jrle    iphjxsml                        ;Smaller X?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   24

    1181                            move    a2,a9                   ;New high
    1182                    iphjxsml
    1183                            move    *a1,a1                  ;Get Y
    1184                            cmp     a10,a1
    1185                            jrge    iphjybig                        ;Bigger Y?
    1186                            move    a1,a10                  ;New low
    1187                            move    a4,a5                   ;A5=*Left line line table
    1188                    iphjybig        cmp     a11,a1
    1189                            jrle    dd150
    1190                            move    a1,a11                  ;New high
    1191                    
    1192                    dd150   move    *a4+,a1
    1193                            jrnn    iphjlp2                 ;Good offset?
    1194                    
    1195                    
    1196                            subk    16,a4                   ;A4=*Null end entry of line_t
    1197                    
    1198                    
    1199                            cmpi    200,a8
    1200                            jrge    iphjnextf                       ;Face off screen?
    1201                            cmpi    -200,a9
    1202                            jrle    iphjnextf                       ;Face off screen?
    1203                    
    1204                    
    1205                            move    a11,a0
    1206                            sub     a10,a11
    1207                            jreq    iphjnextf                       ;Height of 1?
    1208                    
    1209                            cmpi    254,a10
    1210                            jrge    iphjnextf                       ;Off screen bottom?
    1211                            cmpi    -400,a10
    1212                            jrle    iphjnextf                       ;Way off screen top?
    1213                    
    1214                            subi    253,a0
    1215                            jrle    dd300
    1216                            sub     a0,a11
    1217                    dd300   addk    1,a11                   ;A11=Main loop cnt
    1218                    
    1219                    
    1220                            sll     16,a10                  ;A10=Dest Y:X
    1221                    
    1222                            move    a5,a6                   ;A6=*Rgt line line table
    1223                            subk    16,a6
    1224                    
    1225                            move    -*a5,a0                 ;Get offset
    1226                            add     a13,a0
    1227                            cmp     a14,a5
    1228                            jrhi    dd500                   ;!At start?
    1229                            move    a4,a5                   ;Put at end
    1230                    
    1231                    dd500   move    *a6+,a1                 ;Get offset
    1232                            add     a13,a1
    1233                            cmp     a4,a6
    1234                            jrlo    dd550                   ;!Past end
    1235                            move    a14,a6                  ;Put at start
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   25

    1236                    dd550
    1237                            move    *a0,a2,L
    1238                            move    *a1,a3,L
    1239                            move    a2,@linelsxy,L          ;Needed???
    1240                            move    a3,@linersxy,L
    1241                    
    1242                            movk    1,b3                    ;B3=Y cntdn till end of left line
    1243                            movk    1,b4                    ;B4=Y cntdn till end of rgt line
    1244                    
    1245                    
    1246                            ;A8 Free
    1247                            movi    [1,0],a8                ;A8=Const 1:0
    1248                    
    1249                    iphjlinelp
    1250                    
    1251                            dsj     b3,dd750
    1252                    
    1253                    dd700   move    -*a5,a0                 ;Get offset
    1254                            add     a13,a0
    1255                            cmp     a14,a5
    1256                            jrhi    dd720                   ;!At start?
    1257                            move    a4,a5                   ;Put at end
    1258                    dd720
    1259                            move    *a0,a1,L
    1260                            move    @linelsxy,a2,L          ;Start XY
    1261                            move    a1,@linelsxy,L
    1262                            subxy   a2,a1
    1263                            move    a1,a7
    1264                            jrn     iphjnextf                       ;Neg Y?
    1265                            srl     16,a1
    1266                            jrz     dd700                   ;Same Y?
    1267                    
    1268                            move    a1,b3                   ;New Y cnt
    1269                            sll     16,a7                   ;A7=Delta X
    1270                            divs    a1,a7                   ;Divide DeltaX into Y increments
    1271                    
    1272                            sll     16,a2                   ;A2=Left line X (16:16)
    1273                    
    1274                    
    1275                    dd750   dsj     b4,dd850
    1276                    
    1277                    dd800   move    *a6+,a0                 ;Get offset
    1278                            add     a13,a0
    1279                            cmp     a4,a6
    1280                            jrlo    dd820                   ;!Past end
    1281                            move    a14,a6                  ;Put at start
    1282                    dd820
    1283                            move    *a0,a1,L
    1284                            move    @linersxy,a3,L          ;Start XY
    1285                            move    a1,@linersxy,L
    1286                            subxy   a3,a1
    1287                            move    a1,a9
    1288                            jrn     iphjnextf                       ;Neg Y?
    1289                            srl     16,a1
    1290                            jrz     dd800                   ;Different Y?
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   26

    1291                    
    1292                    dd840   move    a1,b4                   ;New Y cnt
    1293                            sll     16,a9                   ;A9=Delta X
    1294                            divs    a1,a9                   ;Divide DeltaX into Y increments
    1295                    
    1296                            sll     16,a3                   ;A3=Rgt line X (16:16)
    1297                    
    1298                    
    1299                    dd850   add     a7,a2                   ;+Offset to left X
    1300                            add     a9,a3                   ;^ rgt X
    1301                    
    1302                            cmp     a3,a2
    1303                            jrgt    iphjnextf                       ;X flipped?
    1304                    
    1305                            move    a10,a10
    1306                            jrn     iphjnextl                       ;Off screen top?
    1307                    
    1308                            move    a2,a0
    1309                            sra     16,a0                   ;Int (0=Screen center)
    1310                            cmpi    200,a0
    1311                            jrge    iphjnextl                       ;L line to rgt of screen?
    1312                            addi    200,a0
    1313                            jrge    dd1000                  ;On screen?
    1314                            clr     a0
    1315                    dd1000  movx    a0,a10                  ;X pos
    1316                    
    1317                            move    a3,a1                   ;0CaHlc HSize
    1318                            sra     16,a1                   ;Int
    1319                            addi    200,a1
    1320                            jrlt    iphjnextl                       ;R line to left of screen?
    1321                            sub     a0,a1                   ;Width
    1322                    
    1323                            add     a1,a0                   ;Rgt X
    1324                            subi    400,a0
    1325                            jrlt    dd1500                  ;On screen?
    1326                            subxy   a0,a1                   ;-difference
    1327                    
    1328                    dd1500
    1329                            move    a1,b7
    1330                            addxy   b13,b7                  ;B7=VSIZE:HSIZE
    1331                    
    1332                            move    a10,b8
    1333                            addxy   b2,b8                   ;Add the page y offset
    1334                    
    1335                    
    1336                    iphjdwait       move    *b11,b0
    1337                            jrn     iphjdwait                       ;DMA busy?
    1338                    
    1339                    
    1340                    iphjdfree       mmtm    b12,b5,b6,b7,b8,b9,b10  ;Set the dma regs
    1341                            addi    0c0H,b12                        ;Fix DMAREGS
    1342                    
    1343                    
    1344                    iphjnextl
    1345                            add     a8,a10                  ;Next Y
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   27

    1346                            dsj     a11,iphjlinelp
    1347                    
    1348                    
    1349                    iphjnextf       move    a4,a14
    1350                            addk    16,a14
    1351                            move    *a14,a0
    1352                            jrnn    iphjfacelp                      ;Another set of lines?
    1353                    
    1354                            jruc    iphjlpobj
    1355                    
    1356                    
    1357                    iphjx   PULL    b3,b4,b5,b6,b7,b8,b9,b10,b13,b14
    1358                            PULL    a4,a13,a14
    1359                            rets
    1360                    
    1361                            .endif
    1362                    
    1363                    
    1364                    
    1365 00038ce0           QDMAN
    1366                    
    1367 00038ce0     07ae          move    @DMAQCUR,a14,L
         00038cf0 00000120- 
    1368 00038d10     0b6e          cmpi    DMAQ,a14
         00038d20 fffa897f- 
    1369 00038d40     c20a          jrls    uehyx                   ;Q full?
    1370                    
    1371 00038d50     09e0          movi    01000100H,a0            ;No scale
         00038d60 01000100  
    1372 00038d80     3205          rl      16,a5                   ;Flip DMA & offset
    1373 00038d90     098e          mmtm    a14,a0,a1,a2,a3,a4,a5
         00038da0     fc00  
    1374 00038db0     3205          rl      16,a5                   ;Flip DMA & offset
    1375 00038dc0     078e          move    a14,@DMAQCUR,L
         00038dd0 00000120- 
    1376                    
    1377 00038df0           uehyx
    1378 00038df0     0960          rets
    1379                    
    1380                    
    1381                    
    1382 00038e00            SUBRP  display_2dsclmodeon
    1383                    
    1384 00038e00     09e0          movi    gtdqdrawcode,a0
         00038e10 00038ec0' 
    1385 00038e30     0780          move    a0,@dcode_p,L
         00038e40 00000100- 
    1386 00038e60     09c0          movi    -1,a0
         00038e70     ffff  
    1387 00038e80     0580          move    a0,@dtype
         00038e90 000000f0- 
    1388                    
    1389 00038eb0     0960          rets
    1390                    
    1391 00038ec0           gtdqdrawcode
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   28

    1392 00038ec0     09e0          movi    BAKLST,a0
         00038ed0 00000040+ 
    1393 00038ef0     0d3f          callr   dma_objlst2d
         00038f00     fdd4  
    1394                    
    1395 00038f10     09e0          movi    OBJLST,a0
         00038f20 00000000+ 
    1396 00038f40     c000          jruc    dma_objlst2dscl
         00038f50     fe5b  
    1397                    
    1398                    
    1399                    
    1400                            .asg    SCRATCH+8*128*1024,STARBUF
    1401              0384  NSTARS  .equ    900
    1402              00d0  STARSIZE .equ   32*6+16
    1403                    
    1404 00038f60            SUBRP  display_2dsclstarmodeon
    1405                    
    1406 00038f60     09d0          movi    NSTARS,b0               ;>Init star array
         00038f70     0384  
    1407 00038f80     09e1          movi    STARBUF,a1
         00038f90 01100000  
    1408 00038fb0     09c0          movi    -1,a0
         00038fc0     ffff  
    1409 00038fd0     8201  xebtsilp        move    a0,*a1,L                ;X
    1410 00038fe0     0b01          addi    STARSIZE,a1
         00038ff0     00d0  
    1411 00039000     3c90          dsj     b0,xebtsilp
    1412                    
    1413 00039010     09e0          movi    xebtdrawcode,a0
         00039020 000390d0' 
    1414 00039040     0780          move    a0,@dcode_p,L
         00039050 00000100- 
    1415 00039070     09c0          movi    -1,a0
         00039080     ffff  
    1416 00039090     0580          move    a0,@dtype
         000390a0 000000f0- 
    1417                    
    1418 000390c0     0960          rets
    1419                    
    1420                    
    1421              0002  CFRAC   .equ    2
    1422                    
    1423 0006d370                   .bss    starcolor       ,16
    1424                    
    1425 000390d0           xebtdrawcode
    1426 000390d0                   PUSH    a13,a14
    1427 000390f0                   PUSH    b4
    1428                    
    1429 00039100     1860          movk    3,a0
    1430 00039110     0d3f          callr   rnd
         00039120     018a  
    1431 00039130     05a6          move    @starcolor,a6
         00039140 0006d370- 
    1432 00039160     4006          add     a0,a6
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   29

    1433 00039170     0586          move    a6,@starcolor
         00039180 0006d370- 
    1434 000391a0     26e6          sll     32-3-6,a6
    1435 000391b0     2c66          srl     32-3,a6                 ;Remove fraction
    1436 000391c0     24e6          sll     5+CFRAC,a6
    1437                    
    1438                    
    1439 000391d0     09c5          movi    NSTARS,a5               ;0FHind a free star
         000391e0     0384  
    1440 000391f0     09e2          movi    STARBUF,a2
         00039200 01100000  
    1441 00039220     1863          movk    3,a3
    1442 00039230     8640  xebtflp move    *a2,a0,L                ;X
    1443 00039240     ce04          jrn     xebtfound
    1444 00039250     0b02          addi    STARSIZE,a2
         00039260     00d0  
    1445 00039270     3ca5  xebtfnxt        dsj     a5,xebtflp
    1446 00039280     c01f          jruc    xebtnofree
    1447                    
    1448 00039290     09e0  xebtfound       movi    [200,0],a0              ;0CHreate star
         000392a0 00c80000  
    1449 000392c0     9202          move    a0,*a2+,L               ;X
    1450 000392d0     09e0          movi    [252,0],a0
         000392e0 00fc0000  
    1451 00039300     9202          move    a0,*a2+,L               ;Y
    1452                    
    1453 00039310     5600          clr     a0
    1454 00039320     9202          move    a0,*a2+,L               ;XV
    1455 00039330     09e0          movi    -03e000H,a0
         00039340 fffc2000  
    1456 00039360     9202          move    a0,*a2+,L               ;YV
    1457                    
    1458 00039370     09c0          movi    07ffH,a0
         00039380     07ff  
    1459 00039390     0d3f          callr   rnd
         000393a0     0162  
    1460 000393b0     0be0          subi    03ffH,a0
         000393c0     fc00  
    1461 000393d0     9202          move    a0,*a2+,L               ;XA
    1462 000393e0     09c0          movi    03ffH,a0
         000393f0     03ff  
    1463 00039400     0d3f          callr   rnd
         00039410     015b  
    1464 00039420     0b00          addi    07ffH,a0
         00039430     07ff  
    1465 00039440     9202          move    a0,*a2+,L               ;YA
    1466                    
    1467 00039450     90c2          move    a6,*a2+                 ;Color type
    1468 00039460     0d83          dsj     a3,xebtfnxt
         00039470     ffdf  
    1469 00039480           xebtnofree
    1470                    
    1471 00039480     09e0          movi    xebtstar_p,a0           ;>Update stars
         00039490 000399c0' 
    1472 000394b0     0d5f          calla   pal_getf
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   30

         000394c0 00000000! 
    1473 000394e0     0580          move    a0,@DMACMAP
         000394f0 01a80080  
    1474                    
    1475 00039510     09d3          movi    512*8,b3
         00039520     1000  
    1476 00039530     6a70          lmo     b3,b0
    1477 00039540     0590          move    b0,@CONVDP
         00039550 c0000140  
    1478 00039570     5694          clr     b4
    1479                    
    1480 00039580     09eb          movi    1<<(32-5-CFRAC),a11
         00039590 02000000  
    1481 000395b0     09ed          movi    [400,0],a13             ;A13=X max+1
         000395c0 01900000  
    1482 000395e0     09ee          movi    [254,0],a14             ;A14=Y max+1
         000395f0 00fe0000  
    1483 00039610     4e5c          move    b2,a12
    1484 00039620     09d0          movi    NSTARS,b0
         00039630     0384  
    1485 00039640     09e8          movi    STARBUF,a8
         00039650 01100000  
    1486 00039670           xebtlp
    1487 00039670     09a8          mmfm    a8,a2,a3,a5,a6,a9,a10   ;YA,XA,YV,XV,Y,X
         00039680     066c  
    1488 00039690     9501          move    *a8+,a1                 ;Color
    1489 000396a0     4d4a          move    a10,a10
    1490 000396b0     ce21          jrn     xebtnxt
    1491                    
    1492 000396c0     4045          add     a2,a5
    1493 000396d0     4066          add     a3,a6
    1494 000396e0     40a9          add     a5,a9
    1495 000396f0     40ca          add     a6,a10
    1496 00039700     49aa          cmp     a13,a10
    1497 00039710     c902          jrhs    xebtoffscr                      ;X off screen?
    1498 00039720     49c9          cmp     a14,a9
    1499 00039730     c805          jrlo    xebtplot                        ;Y on screen?
    1500 00039740           xebtoffscr
    1501 00039740     09c0          movi    -1,a0
         00039750     ffff  
    1502 00039760     b208          move    a0,*a8(-STARSIZE),L
         00039770     ff30  
    1503 00039780     c014          jruc    xebtnxt
    1504 00039790           xebtplot
    1505 00039790     b348          move    a10,*a8(-STARSIZE),L
         000397a0     ff30  
    1506 000397b0     b328          move    a9,*a8(-STARSIZE+32),L
         000397c0     ff50  
    1507 000397d0     b2c8          move    a6,*a8(-STARSIZE+32*2),L
         000397e0     ff70  
    1508 000397f0     b2a8          move    a5,*a8(-STARSIZE+32*3),L
         00039800     ff90  
    1509                    
    1510 00039810     4c20          move    a1,a0
    1511 00039820     2720          sll     32-5-CFRAC,a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   31

    1512 00039830     4160          add     a11,a0
    1513 00039840     c803          jrc     xebtmaxc                        ;Overflow?
    1514 00039850     1021          addk    1,a1
    1515 00039860     b028          move    a1,*a8(-16)
         00039870     fff0  
    1516 00039880     2fc1  xebtmaxc        srl     CFRAC,a1                ;Remove fraction
    1517 00039890     2e0a          srl     16,a10
    1518 000398a0     ed49          movx    a10,a9
    1519 000398b0     e189          addxy   a12,a9
    1520 000398c0     f029          pixt    a1,*a9.XY
    1521 000398d0           xebtnxt
    1522 000398d0     0d90          dsj     b0,xebtlp
         000398e0     ffd8  
    1523                    
    1524 000398f0                   PULL    b4
    1525 00039900                   PULL    a13,a14
    1526                    
    1527 00039920     09e0          movi    BAKLST,a0
         00039930 00000040+ 
    1528 00039950     0d3f          callr   dma_objlst2d
         00039960     fd2e  
    1529                    
    1530 00039970     09e0          movi    OBJLST,a0
         00039980 00000000+ 
    1531 000399a0     c000          jruc    dma_objlst2dscl
         000399b0     fdb5  
    1532                    
    1533 000399c0           xebtstar_p
    1534 000399c0     0100          .word   256
    1535 000399d0                   COLORW  01,01,01, 02,02,02, 03,03,03, 04,04,04  ;Grey
    1536 00039a10                   COLORW  05,05,05, 06,06,06, 07,07,07, 08,08,08
    1537 00039a50                   COLORW  09,09,09, 10,10,10, 11,11,11, 12,12,12
    1538 00039a90                   COLORW  13,13,13, 14,14,14, 15,15,15, 16,16,16
    1539 00039ad0                   COLORW  17,17,17, 18,18,18, 19,19,19, 20,20,20
    1540 00039b10                   COLORW  21,21,21, 22,22,22, 23,23,23, 24,24,24
    1541 00039b50                   COLORW  25,25,25, 26,26,26, 27,27,27, 28,28,28
    1542 00039b90                   COLORW  29,29,29, 30,30,30, 31,31,31, 31,31,31
    1543 00039bd0                   COLORW  01,01,00, 02,02,00, 03,03,00, 04,04,00  ;Yellow
    1544 00039c10                   COLORW  05,05,00, 06,06,00, 07,07,00, 08,08,00
    1545 00039c50                   COLORW  09,09,00, 10,10,00, 11,11,00, 12,12,00
    1546 00039c90                   COLORW  13,13,00, 14,14,00, 15,15,00, 16,16,00
    1547 00039cd0                   COLORW  17,17,00, 18,18,00, 19,19,00, 20,20,00
    1548 00039d10                   COLORW  21,21,00, 22,22,00, 23,23,00, 24,24,00
    1549 00039d50                   COLORW  25,25,00, 26,26,00, 27,27,00, 28,28,00
    1550 00039d90                   COLORW  29,29,00, 30,30,00, 31,31,00, 31,31,00
    1551 00039dd0                   COLORW  01,00,00, 02,00,00, 03,00,00, 04,00,00  ;Red
    1552 00039e10                   COLORW  05,00,00, 06,00,00, 07,00,00, 08,00,00
    1553 00039e50                   COLORW  09,00,00, 10,00,00, 11,00,00, 12,00,00
    1554 00039e90                   COLORW  13,00,00, 14,00,00, 15,00,00, 16,00,00
    1555 00039ed0                   COLORW  17,00,00, 18,00,00, 19,00,00, 20,00,00
    1556 00039f10                   COLORW  21,00,00, 22,00,00, 23,00,00, 24,00,00
    1557 00039f50                   COLORW  25,00,00, 26,00,00, 27,00,00, 28,00,00
    1558 00039f90                   COLORW  29,00,00, 30,00,00, 31,00,00, 31,00,00
    1559 00039fd0                   COLORW  00,01,00, 00,02,00, 00,03,00, 00,04,00  ;Green
    1560 0003a010                   COLORW  00,05,00, 00,06,00, 00,07,00, 00,08,00
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   32

    1561 0003a050                   COLORW  00,09,00, 00,10,00, 00,11,00, 00,12,00
    1562 0003a090                   COLORW  00,13,00, 00,14,00, 00,15,00, 00,16,00
    1563 0003a0d0                   COLORW  00,17,00, 00,18,00, 00,19,00, 00,20,00
    1564 0003a110                   COLORW  00,21,00, 00,22,00, 00,23,00, 00,24,00
    1565 0003a150                   COLORW  00,25,00, 00,26,00, 00,27,00, 00,28,00
    1566 0003a190                   COLORW  00,29,00, 00,30,00, 00,31,00, 00,31,00
    1567 0003a1d0                   COLORW  00,00,01, 00,00,02, 00,00,03, 00,00,04  ;Blue
    1568 0003a210                   COLORW  00,00,05, 00,00,06, 00,00,07, 00,00,08
    1569 0003a250                   COLORW  00,00,09, 00,00,10, 00,00,11, 00,00,12
    1570 0003a290                   COLORW  00,00,13, 00,00,14, 00,00,15, 00,00,16
    1571 0003a2d0                   COLORW  00,00,17, 00,00,18, 00,00,19, 00,00,20
    1572 0003a310                   COLORW  00,00,21, 00,00,22, 00,00,23, 00,00,24
    1573 0003a350                   COLORW  00,00,25, 00,00,26, 00,00,27, 00,00,28
    1574 0003a390                   COLORW  00,00,29, 00,00,30, 00,00,31, 00,00,31
    1575 0003a3d0                   COLORW  00,00,01, 00,00,02, 00,00,03, 00,00,04  ;Lt blue
    1576 0003a410                   COLORW  00,00,05, 00,00,06, 00,00,07, 00,00,08
    1577 0003a450                   COLORW  00,00,09, 01,01,10, 02,02,11, 03,03,12
    1578 0003a490                   COLORW  04,04,13, 05,05,14, 06,06,15, 07,07,16
    1579 0003a4d0                   COLORW  08,08,17, 09,09,18, 10,10,19, 11,11,20
    1580 0003a510                   COLORW  12,12,21, 14,14,22, 16,16,23, 18,18,24
    1581 0003a550                   COLORW  20,20,25, 22,22,26, 24,24,27, 26,26,28
    1582 0003a590                   COLORW  28,28,29, 30,30,30, 30,30,31, 31,31,31
    1583 0003a5d0                   COLORW  01,00,01, 02,00,02, 03,00,03, 04,00,04  ;Purple
    1584 0003a610                   COLORW  05,00,05, 06,00,06, 07,00,07, 08,00,08
    1585 0003a650                   COLORW  09,00,09, 10,00,10, 11,00,11, 12,00,12
    1586 0003a690                   COLORW  13,00,13, 14,00,14, 15,00,15, 16,00,16
    1587 0003a6d0                   COLORW  17,00,17, 18,00,18, 19,00,19, 20,00,20
    1588 0003a710                   COLORW  21,00,21, 22,00,22, 23,00,23, 24,00,24
    1589 0003a750                   COLORW  25,00,25, 26,00,26, 27,00,27, 28,00,28
    1590 0003a790                   COLORW  29,00,29, 30,00,30, 31,00,31, 31,00,31
    1591 0003a7d0                   COLORW  00,01,01, 00,02,02, 00,03,03, 00,04,04  ;Cyan
    1592 0003a810                   COLORW  00,05,05, 00,06,06, 00,07,07, 00,08,08
    1593 0003a850                   COLORW  00,09,09, 00,10,10, 00,11,11, 00,12,12
    1594 0003a890                   COLORW  00,13,13, 00,14,14, 00,15,15, 00,16,16
    1595 0003a8d0                   COLORW  00,17,17, 00,18,18, 00,19,19, 00,20,20
    1596 0003a910                   COLORW  00,21,21, 00,22,22, 00,23,23, 00,24,24
    1597 0003a950                   COLORW  00,25,25, 00,26,26, 00,27,27, 00,28,28
    1598 0003a990                   COLORW  00,29,29, 00,30,30, 00,31,31, 00,31,31
    1599                    
    1600                    
    1601                    
    1602 0003a9d0            SUBRP  rnd
    1603                    
    1604 0003a9d0     07a1          move    @RAND,a1,L
         0003a9e0 00000000! 
    1605 0003aa00     6821          rl      a1,a1
    1606 0003aa10     05ae          move    @HCOUNT,a14
         0003aa20 c00001c0  
    1607 0003aa40     69c1          rl      a14,a1
    1608 0003aa50     41e1          add     sp,a1
    1609 0003aa60     0781          move    a1,@RAND,L
         0003aa70 00000000! 
    1610                    
    1611 0003aa90     5020          and     a1,a0
    1612 0003aaa0     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   33

    1613                    
    1614                    
    1615                    
    1616 0003aab0           STOPOBJS
    1617 0003aab0     5600          clr     a0
    1618 0003aac0     09e1          movi    OBJLST,a1
         0003aad0 00000000+ 
    1619 0003aaf0     c006          jruc    so20
    1620                    
    1621 0003ab00     b201  so10    move    a0,*a1(OXVEL),L
         0003ab10     0020  
    1622 0003ab20     b201          move    a0,*a1(OYVEL),L
         0003ab30     0040  
    1623 0003ab40     b201          move    a0,*a1(OZVEL),L
         0003ab50     0060  
    1624 0003ab60     8621  so20    move    *a1,a1,L
    1625 0003ab70     cbf8          jrnz    so10
    1626                    
    1627 0003ab80     0960          rets
    1628                    
    1629                    
    1630                    
    1631                            .align
    1632                    
    1633 0003ac00            SUBR   obj_yzsort
    1634                    
    1635 0003ac00     09e0          movi    OBJLST,a0
         0003ac10 00000000+ 
    1636 0003ac30     1821          movk    1,a1                    ;Lowest Z
    1637 0003ac40     27e1          sll     31,a1                   ;Make 080000000H
    1638 0003ac50     c014          jruc    yzlp
    1639                    
    1640 0003ac60     b446  yz0     move    *a2(OZPOS),a6           ;Get Z
         0003ac70     00d0  
    1641 0003ac80     b447          move    *a2(OYPOS),a7           ;Get Y
         0003ac90     00b0  
    1642 0003aca0     4826          cmp     a1,a6
    1643 0003acb0     c70a          jrgt    priok                   ;Next Z > Current Z?
    1644 0003acc0     c402          jrlt    priswap
    1645                    
    1646 0003acd0     48a7          cmp     a5,a7
    1647 0003ace0     c507          jrge    priok                   ;Next Y > Current Y?
    1648                    
    1649 0003acf0     0360  priswap dint                            ;>Make current after next
    1650 0003ad00     8244          move    a2,*a4,L                ;Point last to next
    1651 0003ad10     8a40          move    *a2,*a0,L               ;Point current to block after next
    1652 0003ad20     8202          move    a0,*a2,L                ;Point next to current
    1653 0003ad30     0d60          eint
    1654 0003ad40     4c44          move    a2,a4
    1655 0003ad50     c004          jruc    yzlp                    ;Continue sort of current obj
    1656                    
    1657 0003ad60     4c04  priok   move    a0,a4                   ;A4=*Last obj
    1658 0003ad70     4c40          move    a2,a0                   ;A0=*Current obj
    1659 0003ad80     4cc1          move    a6,a1                   ;A1=Current Z
    1660 0003ad90     4ce5          move    a7,a5                   ;A5=Current Y
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   34

    1661                    
    1662 0003ada0     8602  yzlp    move    *a0,a2,L                ;A2=*Next obj
    1663 0003adb0     cbea          jrnz    yz0
    1664                    
    1665 0003adc0     0960          rets
    1666                    
    1667                    
    1668                    
    1669 0003add0           SCRTSTG
    1670 0003add0     098f          mmtm    sp,a1,a2,a3
         0003ade0     7000  
    1671 0003adf0     c008          jruc    scrtst1
    1672                    
    1673 0003ae00           SCRTST
    1674 0003ae00     098f          mmtm    sp,a1,a2,a3
         0003ae10     7000  
    1675 0003ae20     07a2          move    @SCRNTL,a2,L            ;Get screen top left
         0003ae30 000000a0- 
    1676 0003ae50     07a3          move    @SCRNLR,a3,L            ;Get screen lower rgt
         0003ae60 000000c0- 
    1677                    
    1678 0003ae80     b500  scrtst1 move    *a8(OYPOS),a0
         0003ae90     00b0  
    1679 0003aea0     b501          move    *a8(OXPOS),a1
         0003aeb0     0090  
    1680 0003aec0     2600          sll     16,a0
    1681 0003aed0     ec20          movx    a1,a0                   ;get top left of object
    1682 0003aee0     07a1          move    @WORLDTL,a1,L
         0003aef0 00000080- 
    1683 0003af10     e220          subxy   a1,a0                   ;subtract out world base
    1684 0003af20     b701          move    *a8(OSIZE),a1,L
         0003af30     0130  
    1685 0003af40     e001          addxy   a0,a1                   ;get lower rt of object
    1686                    
    1687 0003af50     e460          cmpxy   a3,a0                   ;is it lower than lower rt?
    1688 0003af60                   JRYGE   scrtf_d                 ;lower
    1689 0003af70                   JRXGE   scrtf_r                 ;to the right
    1690                    
    1691 0003af80     e441          cmpxy   a2,a1
    1692 0003af90     c20f          JRYLE   scrtf_u                 ;above...
    1693 0003afa0     c404          JRXLE   scrtf_l                 ;to the left..
    1694                    
    1695 0003afb0     09af          mmfm    sp,a1,a2,a3
         0003afc0     000e  
    1696 0003afd0     5600          clr     a0                      ;On screen Z
    1697 0003afe0     0960          rets
    1698 0003aff0     09c0  scrtf_l movi    1,a0                    ;Pass NZ
         0003b000     0001  
    1699 0003b010     09af          mmfm    sp,a1,a2,a3
         0003b020     000e  
    1700 0003b030     0960          rets
    1701                    
    1702 0003b040     09c0  scrtf_r movi    2,a0
         0003b050     0002  
    1703 0003b060     09af          mmfm    sp,a1,a2,a3
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   35

         0003b070     000e  
    1704 0003b080     0960          rets
    1705                    
    1706 0003b090     09c0  scrtf_u movi    3,a0
         0003b0a0     0003  
    1707 0003b0b0     09af          mmfm    sp,a1,a2,a3
         0003b0c0     000e  
    1708 0003b0d0     0960          rets
    1709                    
    1710 0003b0e0     09c0  scrtf_d movi    4,a0
         0003b0f0     0004  
    1711 0003b100     09af          mmfm    sp,a1,a2,a3
         0003b110     000e  
    1712 0003b120     0960          rets
    1713                    
    1714                    
    1715                    
    1716                    
    1717 0003b130            SUBR   display_init
    1718                    
    1719 0003b130     01e0          pushst
    1720 0003b140     0360          dint
    1721 0003b150     09c0          movi    DIE+X2E,a0
         0003b160     0404  
    1722 0003b170     0580          move    a0,@INTENB              ;Display int on, DMA int off
         0003b180 c0000110  
    1723                    
    1724 0003b1a0     5600          clr     a0
    1725 0003b1b0     0580          move    a0,@DMACTRL             ;>Init DMA
         0003b1c0 01a80010  
    1726 0003b1e0     0580          move    a0,@DMACTRL
         0003b1f0 01a80010  
    1727 0003b210     0580          move    a0,@CMAPSEL             ;Clear color map select
         0003b220 01a80080  
    1728 0003b240     0580          move    a0,@DMATEST
         0003b250 01a800e0  
    1729 0003b270     0580          move    a0,@DMACONF
         0003b280 01a800f0  
    1730 0003b2a0     09e1          movi    [511,0],a1              ;L/R (full width to fix glitch)
         0003b2b0 01ff0000  
    1731 0003b2d0     0781          move    a1,@DMAWINDOW,L
         0003b2e0 01a800c0  
    1732 0003b300     09c1          movi    030H,a1
         0003b310     0030  
    1733 0003b320     0581          move    a1,@DMACONF             ;Top/Bottom
         0003b330 01a800f0  
    1734 0003b350     09e1          movi    [509,0],a1
         0003b360 01fd0000  
    1735 0003b380     0781          move    a1,@DMAWINDOW,L
         0003b390 01a800c0  
    1736 0003b3b0     09e1          movi    01000100H,a1
         0003b3c0 01000100  
    1737 0003b3e0     0781          move    a1,@DMASCALEX,L
         0003b3f0 01a800a0  
    1738                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   36

    1739 0003b410     09dd          movi    -1,b13                  ;DMAQ cnt
         0003b420     ffff  
    1740                    
    1741 0003b430     5621          clr     a1                      ;0CHlr video mem
    1742 0003b440     09d0          movi    (SCRNE-512*8*2)/64,b0
         0003b450     7f80  
    1743 0003b460     9201  njtjclp move    a0,*a1+,L
    1744 0003b470     9201          move    a0,*a1+,L
    1745 0003b480     3c70          dsj     b0,njtjclp
    1746                                                            ;>Set autoerase lines
    1747 0003b490     09e1          movi    510*512*8,a1            ;Store to last 2 lines of bitmap
         0003b4a0 001fe000  
    1748 0003b4c0     09ce          movi    ERASECOL,a14            ;Color pair
         0003b4d0     0000  
    1749 0003b4e0     09d0          movi    512*8*2/16,b0
         0003b4f0     0200  
    1750 0003b500     91c1  njtjlp  move    a14,*a1+
    1751 0003b510     3c50          dsj     b0,njtjlp
    1752                    
    1753                    
    1754 0003b520     09e1          movi    SCRNST,a1               ;Screen top left [Y,X]
         0003b530 0000ffe0  
    1755 0003b550     0781          move    a1,@SCRNTL,L
         0003b560 000000a0- 
    1756 0003b580     09e1          movi    SCRNEND,a1              ;Screen lower right [Y,X]
         0003b590 00fe01b0  
    1757 0003b5b0     0781          move    a1,@SCRNLR,L
         0003b5c0 000000c0- 
    1758                    
    1759 0003b5e0     0780          move    a0,@WORLDTLX,L
         0003b5f0 00000040- 
    1760 0003b610     0780          move    a0,@WORLDTLY,L
         0003b620 00000060- 
    1761 0003b640     0780          move    a0,@WORLDTL,L
         0003b650 00000080- 
    1762 0003b670     0780          move    a0,@SCROLLX,L
         0003b680 00000000- 
    1763 0003b6a0     0780          move    a0,@SCROLLY,L
         0003b6b0 00000020- 
    1764                    
    1765 0003b6d0     0780          move    a0,@BAKLST,L            ;Null backgnd object list
         0003b6e0 00000040+ 
    1766 0003b700     0780          move    a0,@OBJLST,L            ;Null object list
         0003b710 00000000+ 
    1767                    
    1768 0003b730     0780          move    a0,@dcode_p,L
         0003b740 00000100- 
    1769                    
    1770 0003b760     09e1          movi    DMAQ+QMSIZE,a1
         0003b770 0006c800- 
    1771 0003b790     0781          move    a1,@DMAQCUR,L           ;Init misc DMA queue
         0003b7a0 00000120- 
    1772                    
    1773 0003b7c0     09e1          movi    OBJSTR,a1,L             ;>Init free list
         0003b7d0 00000140- 
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   37

    1774 0003b7f0     0781          move    a1,@OFREE,L
         0003b800 00000020+ 
    1775 0003b820     09d0          movi    NOBJ,b0                 ;# of object blocks
         0003b830     01c2  
    1776                    
    1777 0003b840     4c2e  njtjolp move    a1,a14
    1778 0003b850     0b01          addi    OBSIZ,a1
         0003b860     0220  
    1779 0003b870     822e          move    a1,*a14,L               ;link em up
    1780 0003b880     3cb0          dsj     b0,njtjolp
    1781                    
    1782 0003b890     820e          move    a0,*a14,L               ;Null end
    1783                    
    1784 0003b8a0     01c0          popst
    1785                    
    1786 0003b8b0     0960          rets
    1787                    
    1788                    
    1789                    
    1790 0003b8c0           GETOBJ
    1791 0003b8c0     07a0          move    @OFREE,a0,L
         0003b8d0 00000020+ 
    1792 0003b8f0     ca0b          jrz     nonelft                 ;None free?
    1793                    
    1794 0003b900     8601          move    *a0,a1,L
    1795 0003b910     0781          move    a1,@OFREE,L             ;Unlink
         0003b920 00000020+ 
    1796 0003b940     5621          clr     a1
    1797 0003b950     b220          move    a1,*a0(OPLINK),L
         0003b960     01a0  
    1798 0003b970     b220          move    a1,*a0(ODATA_p),L
         0003b980     01c0  
    1799 0003b990           getox
    1800 0003b990     4c00          move    a0,a0
    1801 0003b9a0     0960          rets
    1802                    
    1803 0003b9b0           nonelft
    1804                            .if     DEBUG
    1805                            LOCKUP
    1806                            eint
    1807                            .else
    1808 0003b9b0                   CALLERR 3,0
    1809                            .endif
    1810 0003ba60     c0f2          jruc    getox
    1811                    
    1812                    
    1813                    
    1814 0003ba70           FREEOBJ
    1815 0003ba70     d600          move    @OFREE,*a0+,L
         0003ba80 00000020+ 
    1816 0003baa0     1400          subk    32,a0
    1817 0003bab0     0780          move    a0,@OFREE,L
         0003bac0 00000020+ 
    1818 0003bae0     0960          rets
    1819                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   38

    1820                    
    1821                    
    1822                    
    1823                    
    1824                    
    1825                    
    1826                    
    1827 0003baf0           INSBOBJ
    1828 0003baf0     09ee          movi    BAKLST,a14
         0003bb00 00000040+ 
    1829 0003bb20     c003          jruc    mmivstrt
    1830                    
    1831                    
    1832 0003bb30           INSOBJ
    1833                    
    1834 0003bb30     09ee          movi    OBJLST,a14
         0003bb40 00000000+ 
    1835                    
    1836 0003bb60           mmivstrt        PUSH    a2,a3,a4
    1837                    
    1838 0003bb80     b401          move    *a0(OZPOS),a1
         0003bb90     00d0  
    1839 0003bba0     b404          move    *a0(OYPOS),a4
         0003bbb0     00b0  
    1840 0003bbc0           mmivlp
    1841 0003bbc0     4dc2          move    a14,a2                  ;A2=*prev
    1842 0003bbd0     87ce          move    *a14,a14,L              ;A14=*next
    1843 0003bbe0     ca09          jrz     mmivx
    1844 0003bbf0     b5c3          move    *a14(OZPOS),a3
         0003bc00     00d0  
    1845 0003bc10     4861          cmp     a3,a1
    1846 0003bc20     c7f9          jrgt    mmivlp
    1847 0003bc30     c404          jrlt    mmivx
    1848                    
    1849 0003bc40     b5c3          move    *a14(OYPOS),a3          ;Test y position
         0003bc50     00b0  
    1850 0003bc60     4864          cmp     a3,a4
    1851 0003bc70     c7f4          jrgt    mmivlp
    1852                    
    1853                    
    1854 0003bc80     83c0  mmivx   move    a14,*a0,L               ;Put *next in new block
    1855 0003bc90     8202          move    a0,*a2,L                ;Put *new in prev block
    1856                    
    1857 0003bca0                   PULL    a2,a3,a4
    1858 0003bcc0     0960          rets
    1859                    
    1860                    
    1861                    
    1862 0003bcd0           DELBOBJ
    1863                    
    1864 0003bcd0     09ee          movi    BAKLST,a14
         0003bce0 00000040+ 
    1865 0003bd00     c004          jruc    ksnblp
    1866                    
    1867                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   39

    1868                    
    1869 0003bd10           DELOBJA8
    1870                    
    1871 0003bd10     4d00          move    a8,a0
    1872                    
    1873                    
    1874 0003bd20           DELOBJ
    1875 0003bd20     09ee          movi    OBJLST,a14
         0003bd30 00000000+ 
    1876                    
    1877 0003bd50     4dc1  ksnblp  move    a14,a1          ;A1=*Prev
    1878 0003bd60     87ce          move    *a14,a14,L      ;A14=*Next
    1879 0003bd70     ca0e          jrz     delerr
    1880 0003bd80     49c0          cmp     a14,a0
    1881 0003bd90     cbfb          jrne    ksnblp
    1882                    
    1883 0003bda0     8a01          move    *a0,*a1,L       ;Unlink from obj list
    1884                    
    1885 0003bdb0     5621          clr     a1
    1886 0003bdc0     b020          move    a1,*a0(OXPOS)   ;Indicates not in use for collisions
         0003bdd0     0090  
    1887                    
    1888 0003bde0     d600          move    @OFREE,*a0+,L   ;Add to free list
         0003bdf0 00000020+ 
    1889 0003be10     1400          subk    32,a0
    1890 0003be20     0780          move    a0,@OFREE,L
         0003be30 00000020+ 
    1891                    
    1892 0003be50     0960  ksnbx   rets
    1893                    
    1894 0003be60           delerr
    1895                            .if     DEBUG
    1896                            LOCKUP
    1897                            eint
    1898                            .else
    1899 0003be60                   CALLERR 1,0
    1900                            .endif
    1901 0003bf10     c0f3          jruc    ksnbx
    1902                    
    1903                    
    1904                    
    1905                    
    1906 0003bf20           FRQDELDIE
    1907                    
    1908 0003bf20                   JSRP    FRANIMQ
    1909                    
    1910                    
    1911 0003bf90           DELOBJDIE
    1912                    
    1913 0003bf90     09ee          movi    OBJLST,a14
         0003bfa0 00000000+ 
    1914                    
    1915 0003bfc0     4dc1  pqxdlp  move    a14,a1          ;A1=*Prev
    1916 0003bfd0     87ce          move    *a14,a14,L      ;A14=*Next
    1917 0003bfe0     ca10          jrz     doderr
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   40

    1918 0003bff0     49c8          cmp     a14,a8
    1919 0003c000     cbfb          jrne    pqxdlp
    1920                    
    1921 0003c010     8b01          move    *a8,*a1,L       ;Unlink from obj list
    1922                    
    1923 0003c020     5621          clr     a1
    1924 0003c030     b028          move    a1,*a8(OXPOS)   ;Indicates not in use for collisions
         0003c040     0090  
    1925                    
    1926 0003c050     d608          move    @OFREE,*a8+,L   ;Add to free list
         0003c060 00000020+ 
    1927 0003c080     1408          subk    32,a8
    1928 0003c090     0788          move    a8,@OFREE,L
         0003c0a0 00000020+ 
    1929                    
    1930 0003c0c0     c080  pqxdx   jauc    SUCIDE
         0003c0d0 00000000! 
    1931                    
    1932 0003c0f0           doderr
    1933                            .if     DEBUG
    1934                            LOCKUP
    1935                            eint
    1936                            .else
    1937 0003c0f0                   CALLERR 1,0
    1938                            .endif
    1939 0003c1a0     c0f1          jruc    pqxdx
    1940                    
    1941                    
    1942                    
    1943                    
    1944 0003c1b0           obj_del1c
    1945                    
    1946 0003c1b0     5621          clr     a1
    1947                    
    1948                    
    1949 0003c1c0           obj_delc
    1950 0003c1c0     4e40          move    a2,b0
    1951 0003c1d0     4e61          move    a3,b1
    1952                    
    1953 0003c1e0     09ee          movi    OBJLST,a14
         0003c1f0 00000000+ 
    1954 0003c210     0500          sext    a0
    1955 0003c220     5220          andn    a1,a0           ;Form match
    1956                    
    1957 0003c230     4dc3  vtbelp  move    a14,a3          ;A3=*Prev
    1958 0003c240     87ce          move    *a14,a14,L      ;A14=*Next
    1959 0003c250     ca0f          jrz     vtbex
    1960 0003c260     b5c2  vtbecmp move    *a14(OID),a2
         0003c270     0190  
    1961 0003c280     5222          andn    a1,a2           ;Mask
    1962 0003c290     4802          cmp     a0,a2
    1963 0003c2a0     cbf8          jrne    vtbelp
    1964                    
    1965 0003c2b0     8bc3          move    *a14,*a3,L      ;Unlink from obj list
    1966                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   41

    1967 0003c2c0     d60e          move    @OFREE,*a14+,L  ;Add to free list
         0003c2d0 00000020+ 
    1968 0003c2f0     140e          subk    32,a14
    1969 0003c300     078e          move    a14,@OFREE,L
         0003c310 00000020+ 
    1970 0003c330     866e          move    *a3,a14,L
    1971 0003c340     cbf1          jrnz    vtbecmp
    1972                    
    1973 0003c350           vtbex
    1974 0003c350     4e33          move    b1,a3
    1975 0003c360     4e12          move    b0,a2
    1976 0003c370     0960          rets
    1977                    
    1978                    
    1979                    
    1980                    
    1981 0003c380           EXISTOBJ
    1982 0003c380     4e40          move    a2,b0
    1983                    
    1984 0003c390     09ee          movi    OBJLST,a14
         0003c3a0 00000000+ 
    1985 0003c3c0     0500          sext    a0
    1986 0003c3d0     5220          andn    a1,a0           ;Form match
    1987 0003c3e0           uusdlp
    1988 0003c3e0     87ce          move    *a14,a14,L
    1989 0003c3f0     ca05          jrz     uusdx
    1990 0003c400     b5c2          move    *a14(OID),a2
         0003c410     0190  
    1991 0003c420     5222          andn    a1,a2           ;Mask
    1992 0003c430     4802          cmp     a0,a2
    1993 0003c440     cbf9          jrne    uusdlp
    1994                    
    1995 0003c450     4e12  uusdx   move    b0,a2
    1996 0003c460     4dc0          move    a14,a0
    1997 0003c470     0960          rets
    1998                    
    1999                    
    2000                    
    2001                    
    2002                    
    2003                    
    2004 0003c480           ISOBJ
    2005 0003c480     09e1          movi    OBJLST,a1
         0003c490 00000000+ 
    2006                    
    2007 0003c4b0     8621  ryewlp  move    *a1,a1,L
    2008 0003c4c0     ca04          jrz     ryewx           ;End?
    2009 0003c4d0     4801          cmp     a0,a1
    2010 0003c4e0     cbfc          jrne    ryewlp          ;No match?
    2011                    
    2012 0003c4f0     4c00          move    a0,a0           ;Clr Z
    2013 0003c500     0960          rets
    2014                    
    2015 0003c510     5600  ryewx   clr     a0              ;Set Z
    2016 0003c520     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   42

    2017                    
    2018                    
    2019                    
    2020 0003c530            SUBR   obj_addworldxy
    2021                    
    2022 0003c530     07ae          move    @WORLDTLX,a14,L
         0003c540 00000040- 
    2023 0003c560     b601          move    *a0(OXVAL),a1,L
         0003c570     0080  
    2024 0003c580     41c1          add     a14,a1
    2025 0003c590     b220          move    a1,*a0(OXVAL),L
         0003c5a0     0080  
    2026                    
    2027 0003c5b0     07ae          move    @WORLDTLY,a14,L
         0003c5c0 00000060- 
    2028 0003c5e0     b601          move    *a0(OYVAL),a1,L
         0003c5f0     00a0  
    2029 0003c600     41c1          add     a14,a1
    2030 0003c610     b220          move    a1,*a0(OYVAL),L
         0003c620     00a0  
    2031                    
    2032 0003c630     0960          rets
    2033                    
    2034                    
    2035                    
    2036 0003c640           ADJNEWTL
    2037 0003c640                   PUSH    a1,a2
    2038 0003c660     0d3f          CALLR   GSCRNREL                ;SCREEN RELATIVE PLEASE
         0003c670     0009  
    2039 0003c680     4081          ADD     A4,A1
    2040 0003c690     40a2          ADD     A5,A2                   ;ADJUST
    2041 0003c6a0     b220          MOVE    A1,*A0(OXVAL),L
         0003c6b0     0080  
    2042 0003c6c0     b240          MOVE    A2,*A0(OYVAL),L         ;STORE
         0003c6d0     00a0  
    2043 0003c6e0                   PULL    a1,a2
    2044 0003c700     0960          RETS
    2045                    
    2046                    
    2047                    
    2048 0003c710           GSCRNREL
    2049 0003c710                   PUSH    a5
    2050 0003c720     07a5          MOVE    @WORLDTLX,A5,L
         0003c730 00000040- 
    2051 0003c750     b601          MOVE    *A0(OXVAL),A1,L
         0003c760     0080  
    2052 0003c770     44a1          SUB     A5,A1
    2053 0003c780     07a5          MOVE    @WORLDTLY,A5,L
         0003c790 00000060- 
    2054 0003c7b0     b602          MOVE    *A0(OYVAL),A2,L
         0003c7c0     00a0  
    2055 0003c7d0     44a2          SUB     A5,A2
    2056 0003c7e0                   PULL    a5
    2057 0003c7f0     0960          RETS
    2058                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   43

    2059                    
    2060                    
    2061 0003c800           SCRNRELV
    2062 0003c800                   PUSH    a1,a5
    2063 0003c820     07a5          MOVE    @SCROLLX,A5,L
         0003c830 00000000- 
    2064 0003c850     b601          MOVE    *A0(OXVEL),A1,L
         0003c860     0020  
    2065 0003c870     40a1          ADD     A5,A1
    2066 0003c880     b220          MOVE    A1,*A0(OXVEL),L
         0003c890     0020  
    2067 0003c8a0     07a5          MOVE    @SCROLLY,A5,L
         0003c8b0 00000020- 
    2068 0003c8d0     b601          MOVE    *A0(OYVEL),A1,L
         0003c8e0     0040  
    2069 0003c8f0     40a1          ADD     A5,A1
    2070 0003c900     b220          MOVE    A1,*A0(OYVEL),L
         0003c910     0040  
    2071 0003c920                   PULL    a1,a5
    2072 0003c940     0960          RETS
    2073                    
    2074                    
    2075                    
    2076 0003c950           GANISAG
    2077 0003c950                   PUSH    a4,a6,a7
    2078                    
    2079 0003c970                   PUSH    a2
    2080 0003c980     b601          move    *a0(OIMG),a1,L
         0003c990     0170  
    2081 0003c9a0     8622          move    *a1,a2,L                ;ISIZE
    2082 0003c9b0     b240          move    a2,*a0(OSIZE),L
         0003c9c0     0130  
    2083 0003c9d0     0d3f          callr   GANIOF
         0003c9e0     01ba  
    2084 0003c9f0                   PULL    a2
    2085                    
    2086 0003ca00     44c3          sub     a6,a3
    2087 0003ca10     44e2          sub     a7,a2                   ;adjust upper left corner
    2088 0003ca20     b260          move    a3,*a0(OXVAL),L
         0003ca30     0080  
    2089 0003ca40     b240          move    a2,*a0(OYVAL),L
         0003ca50     00a0  
    2090                    
    2091 0003ca60     b421          move    *a1(ICTRL),a1           ;Get DMA flags
         0003ca70     0060  
    2092 0003ca80     0b84          andi    0803fH,a4               ;Kill mode bits
         0003ca90 ffff7fc0  
    2093 0003cab0     5424          or      a1,a4
    2094 0003cac0     b280          move    a4,*a0(OCTRL),L         ;&OFFSET
         0003cad0     00f0  
    2095                    
    2096 0003cae0                   PULL    a4,a6,a7
    2097 0003cb00     0960          rets
    2098                    
    2099                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   44

    2100                    
    2101 0003cb10           BEGINOBJ
    2102 0003cb10     07a8          move    @WORLDTLX,a8,L          ;Adjust for world coord
         0003cb20 00000040- 
    2103 0003cb40     4100          add     a8,a0
    2104 0003cb50     1ee4          btst    B_3D,a4
    2105 0003cb60     cb04          jrnz    BEGINOBJ2               ;No Y add for 3D?
    2106 0003cb70     07a8          move    @WORLDTLY,a8,L
         0003cb80 00000060- 
    2107 0003cba0     4101          add     a8,a1
    2108                    
    2109 0003cbb0           BEGINOBJ2
    2110 0003cbb0                   PUSH    a2,a3,a4,a6,a7,a9,a10
    2111 0003cbd0     4c09          move    a0,a9                   ;X
    2112 0003cbe0     4c2a          move    a1,a10                  ;Y
    2113                    
    2114 0003cbf0     b640          move    *a2(ICMAP),a0,L         ;Get *palette
         0003cc00     0070  
    2115                            .if     DEBUG
    2116                            jrnn    bopalerr                ;No pallette?
    2117                            .endif
    2118 0003cc10     0d5f          calla   pal_getf
         0003cc20 00000000! 
    2119                    
    2120 0003cc40     07a8  bo20    move    @OFREE,a8,L             ;Pointer to next available obj block
         0003cc50 00000020+ 
    2121 0003cc70     ca3a          jrz     begobjerr               ;No objs?
    2122 0003cc80     8701          move    *a8,a1,L
    2123 0003cc90     0781          move    a1,@OFREE,L             ;Adjust pointer to free list
         0003cca0 00000020+ 
    2124                    
    2125 0003ccc0     b208          move    a0,*a8(OPAL),L          ;Set pallette & constant
         0003ccd0     0150  
    2126 0003cce0     5600          clr     a0
    2127 0003ccf0     b208          move    a0,*a8(ODATA_p),L       ;Clr stuff
         0003cd00     01c0  
    2128 0003cd10     b208          move    a0,*a8(OXANI),L
         0003cd20     01e0  
    2129 0003cd30     b208          move    a0,*a8(OZVEL),L
         0003cd40     0060  
    2130 0003cd50     b008          move    a0,*a8(OMISC)
         0003cd60     0210  
    2131                    
    2132 0003cd70     b068          move    a3,*a8(OZPOS)
         0003cd80     00d0  
    2133 0003cd90     b0a8          move    a5,*a8(OID)
         0003cda0     0190  
    2134 0003cdb0     b2c8          move    a6,*a8(OXVEL),L
         0003cdc0     0020  
    2135 0003cdd0     b2e8          move    a7,*a8(OYVEL),L
         0003cde0     0040  
    2136                    
    2137 0003cdf0     4c41          move    a2,a1                   ;*Img
    2138 0003ce00     8622          move    *a1,a2,L                ;ISIZE
    2139 0003ce10     0d3f          callr   GANIOF                  ;Adjust animation offset
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   45

         0003ce20     0176  
    2140 0003ce30     b623          move    *a1(ISAG),a3,L          ;Get top left sag
         0003ce40     0040  
    2141                    
    2142 0003ce50     44c9          sub     a6,a9                   ;- x anioff
    2143 0003ce60     44ea          sub     a7,a10                  ;- y anioff
    2144 0003ce70     b328          move    a9,*a8(OXVAL),L
         0003ce80     0080  
    2145 0003ce90     b348          move    a10,*a8(OYVAL),L
         0003cea0     00a0  
    2146                    
    2147 0003ceb0     b228          move    a1,*a8(OIMG),L
         0003cec0     0170  
    2148 0003ced0     b248          move    a2,*a8(OSIZE),L
         0003cee0     0130  
    2149 0003cef0     b268          move    a3,*a8(OSAG),L
         0003cf00     0110  
    2150 0003cf10     b088          move    a4,*a8(OFLAGS)
         0003cf20     00e0  
    2151 0003cf30     b420          move    *a1(ICTRL),a0           ;Get DMA flags
         0003cf40     0060  
    2152 0003cf50     0b84          andi    0803fH,a4               ;Kill mode bits
         0003cf60 ffff7fc0  
    2153 0003cf80     5404          or      a0,a4
    2154 0003cf90     b288          move    a4,*a8(OCTRL),L         ;&OFSET
         0003cfa0     00f0  
    2155                    
    2156 0003cfb0                   PULL    a2,a3,a4,a6,a7,a9,a10
    2157                    
    2158 0003cfd0     b3a8          move    a13,*a8(OPLINK),L
         0003cfe0     01a0  
    2159 0003cff0     4d00          move    a8,a0
    2160 0003d000     c000          jruc    INSOBJ                  ;Insert object into list
         0003d010     feb1  
    2161                    
    2162                    
    2163                            .if     DEBUG
    2164                    bopalerr
    2165                            LOCKUP                          ;Object doesn't have pallette!
    2166                            eint
    2167                            clr     a0
    2168                            jruc    bo20
    2169                            .endif
    2170                    
    2171 0003d020           begobjerr
    2172                            .if     DEBUG
    2173                            LOCKUP                          ;Out of objects!
    2174                            eint
    2175                            .else
    2176 0003d020                   CALLERR 3,7
    2177                            .endif
    2178 0003d0d0     07a8          move    @OBJLST,a8,L            ;Pass 1st obj on list
         0003d0e0 00000000+ 
    2179 0003d100                   PULL    a2,a3,a4,a6,a7,a9,a10
    2180 0003d120     0960          rets
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   46

    2181                    
    2182                    
    2183                    
    2184                    
    2185 0003d130           BEGINOBJP
    2186 0003d130     07a8          move    @WORLDTLX,a8,L          ;Adjust for world coord
         0003d140 00000040- 
    2187 0003d160     4100          add     a8,a0
    2188 0003d170     1ee4          btst    B_3D,a4
    2189 0003d180     cb04          jrnz    BEGINOBJP2              ;No Y add for 3D?
    2190 0003d190     07a8          move    @WORLDTLY,a8,L
         0003d1a0 00000060- 
    2191 0003d1c0     4101          add     a8,a1
    2192                    
    2193 0003d1d0           BEGINOBJP2
    2194 0003d1d0                   PUSH    a2,a3,a4,a6,a7,a9,a10
    2195 0003d1f0     4c09          move    a0,a9                   ;X
    2196 0003d200     4c2a          move    a1,a10                  ;Y
    2197                    
    2198 0003d210     4e10          move    b0,a0                   ;Get *palette
    2199                            .if     DEBUG
    2200                            jrnn    fbwjbopalerr            ;No pallette?
    2201                            .endif
    2202 0003d220     0d5f          calla   pal_getf
         0003d230 00000000! 
    2203                    
    2204 0003d250     07a8  fbwjbo20        move    @OFREE,a8,L             ;Pointer to next available obj block
         0003d260 00000020+ 
    2205 0003d280     cad9          jrz     begobjerr               ;No objs?
    2206 0003d290     8701          move    *a8,a1,L
    2207 0003d2a0     0781          move    a1,@OFREE,L             ;Adjust pointer to free list
         0003d2b0 00000020+ 
    2208                    
    2209 0003d2d0     b208          move    a0,*a8(OPAL),L          ;Set pallette & constant
         0003d2e0     0150  
    2210 0003d2f0     5600          clr     a0
    2211 0003d300     b208          move    a0,*a8(ODATA_p),L       ;Clr stuff
         0003d310     01c0  
    2212 0003d320     b208          move    a0,*a8(OXANI),L
         0003d330     01e0  
    2213 0003d340     b208          move    a0,*a8(OZVEL),L
         0003d350     0060  
    2214 0003d360     b008          move    a0,*a8(OMISC)
         0003d370     0210  
    2215                    
    2216 0003d380     b068          move    a3,*a8(OZPOS)
         0003d390     00d0  
    2217 0003d3a0     b0a8          move    a5,*a8(OID)
         0003d3b0     0190  
    2218 0003d3c0     b2c8          move    a6,*a8(OXVEL),L
         0003d3d0     0020  
    2219 0003d3e0     b2e8          move    a7,*a8(OYVEL),L
         0003d3f0     0040  
    2220                    
    2221 0003d400     4c41          move    a2,a1                   ;*Img
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   47

    2222 0003d410     8622          move    *a1,a2,L                ;ISIZE
    2223 0003d420     0d3f          callr   GANIOF                  ;Adjust animation offset
         0003d430     0115  
    2224 0003d440     b623          move    *a1(ISAG),a3,L          ;Get top left sag
         0003d450     0040  
    2225                    
    2226 0003d460     44c9          sub     a6,a9                   ;- x anioff
    2227 0003d470     44ea          sub     a7,a10                  ;- y anioff
    2228 0003d480     b328          move    a9,*a8(OXVAL),L
         0003d490     0080  
    2229 0003d4a0     b348          move    a10,*a8(OYVAL),L
         0003d4b0     00a0  
    2230                    
    2231 0003d4c0     b228          move    a1,*a8(OIMG),L
         0003d4d0     0170  
    2232 0003d4e0     b248          move    a2,*a8(OSIZE),L
         0003d4f0     0130  
    2233 0003d500     b268          move    a3,*a8(OSAG),L
         0003d510     0110  
    2234 0003d520     b088          move    a4,*a8(OFLAGS)
         0003d530     00e0  
    2235 0003d540     b420          move    *a1(ICTRL),a0           ;Get DMA flags
         0003d550     0060  
    2236 0003d560     0b84          andi    0803fH,a4               ;Kill mode bits
         0003d570 ffff7fc0  
    2237 0003d590     5404          or      a0,a4
    2238 0003d5a0     b288          move    a4,*a8(OCTRL),L         ;&OFSET
         0003d5b0     00f0  
    2239                    
    2240 0003d5c0                   PULL    a2,a3,a4,a6,a7,a9,a10
    2241                    
    2242 0003d5e0     b3a8          move    a13,*a8(OPLINK),L
         0003d5f0     01a0  
    2243 0003d600     4d00          move    a8,a0
    2244 0003d610     c000          jruc    INSOBJ                  ;Insert object into list
         0003d620     fe50  
    2245                    
    2246                    
    2247                            .if     DEBUG
    2248                    fbwjbopalerr
    2249                            LOCKUP                          ;Object doesn't have pallette!
    2250                            eint
    2251                            clr     a0
    2252                            jruc    fbwjbo20
    2253                            .endif
    2254                    
    2255                    
    2256                    
    2257 0003d630            SUBR   ANI
    2258                    
    2259 0003d630                   PUSH    a0,a2,a3,a4,a5,a6,a7
    2260                    
    2261 0003d650     0b61          cmpi    ROM,a1
         0003d660 007fffff  
    2262 0003d680     c82f          jrlo    anierr
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   48

    2263                    
    2264 0003d690     4c23          move    a1,a3
    2265 0003d6a0     4c85          move    a4,a5
    2266 0003d6b0     b701          move    *a8(OIMG),a1,L
         0003d6c0     0170  
    2267 0003d6d0     b504          move    *a8(OCTRL),a4
         0003d6e0     00f0  
    2268 0003d6f0     4823          cmp     a1,a3
    2269 0003d700     cb03          jrne    svbg1                   ;Different img?
    2270                    
    2271 0003d710     0505          sext    a5
    2272 0003d720     4885          cmp     a4,a5
    2273 0003d730     ca21          jreq    svbgx                   ;All the same?
    2274                    
    2275 0003d740     b702  svbg1   move    *a8(OSIZE),a2,L
         0003d750     0130  
    2276 0003d760     0d3f          callr   GANIOF                  ;Get old animation offset
         0003d770     00e1  
    2277 0003d780     4c61          move    a3,a1                   ;New OIMG
    2278 0003d790     2f44          srl     6,a4
    2279 0003d7a0     24c4          sll     6,a4
    2280 0003d7b0     54a4          or      a5,a4                   ;Set new OCTRL
    2281 0003d7c0     4cc0          move    a6,a0
    2282 0003d7d0     4ce5          move    a7,a5
    2283 0003d7e0     b623          move    *a1(ISAG),a3,L          ;Get top left sag
         0003d7f0     0040  
    2284 0003d800     8622          move    *a1,a2,L                ;ISIZE
    2285 0003d810     0d3f          callr   GANIOF                  ;Get new animation offset
         0003d820     00d6  
    2286 0003d830     b228          move    a1,*a8(OIMG),L
         0003d840     0170  
    2287 0003d850     44c0          sub     a6,a0                   ;Subtract new from old
    2288 0003d860     44e5          sub     a7,a5
    2289 0003d870     0524          zext    a4                      ;Zero offset in A4
    2290                    
    2291 0003d880     4d06          move    a8,a6                   ;Get push address of octrl,osag,osize
    2292 0003d890     0b06          addi    OCTRL+060H,a6
         0003d8a0     0150  
    2293 0003d8b0     0986          mmtm    a6,a2,a3,a4             ;Save new data
         0003d8c0     3800  
    2294                    
    2295 0003d8d0     0be6          subi    OCTRL-OXVAL,a6
         0003d8e0     ff8f  
    2296 0003d8f0     86c7          move    *a6,a7,L                ;New OXVAL
    2297 0003d900     4007          add     a0,a7
    2298 0003d910     92e6          move    a7,*a6+,L
    2299 0003d920     86c7          move    *a6,a7,L                ;New OYVAL
    2300 0003d930     40a7          add     a5,a7
    2301 0003d940     82e6          move    a7,*a6,L
    2302                    
    2303 0003d950           svbgx   PULL    a0,a2,a3,a4,a5,a6,a7
    2304 0003d970     0960          rets
    2305                    
    2306 0003d980           anierr
    2307                            .if     DEBUG
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   49

    2308                            LOCKUP
    2309                            eint
    2310                            .else
    2311 0003d980                   CALLERR 2,7
    2312                            .endif
    2313 0003da30     c0f1          jruc    svbgx
    2314                    
    2315                    
    2316                    
    2317 0003da40            SUBRP  obj_aniq
    2318                    
    2319                    
    2320 0003da40                   PUSH    a2,a3
    2321                    
    2322 0003da60     0b60          cmpi    ROM,a0
         0003da70 007fffff  
    2323 0003da90     c826          jrlo    kltdanierr
    2324                    
    2325 0003daa0     4c02          move    a0,a2
    2326 0003dab0     4c23          move    a1,a3
    2327                    
    2328 0003dac0     0d3f          callr   anipt_getxy
         0003dad0     002e  
    2329                    
    2330 0003dae0     b248          move    a2,*a8(OIMG),L
         0003daf0     0170  
    2331 0003db00     ba48          move    *a2(0),*a8(OSIZE),L
         0003db10     0000  
         0003db20     0130  
    2332 0003db30     ba48          move    *a2(ISAG),*a8(OSAG),L
         0003db40     0040  
         0003db50     0110  
    2333                    
    2334 0003db60     0545          setf    5,0,0
    2335 0003db70     b848          move    *a2(ICTRL+7),*a8(OCTRL+7) ;Write 5 z comp bits
         0003db80     0067  
         0003db90     00f7  
    2336 0003dba0     0546          setf    6,0,0
    2337 0003dbb0     b068          move    a3,*a8(OCTRL)           ;Write 6 low bits
         0003dbc0     00f0  
    2338 0003dbd0     0570          setf    16,1,0
    2339                    
    2340 0003dbe0     4c02          move    a0,a2
    2341 0003dbf0     4c23          move    a1,a3
    2342 0003dc00     0d3f          callr   anipt_getxy
         0003dc10     001a  
    2343                    
    2344 0003dc20     4402          sub     a0,a2                   ;Subtract new from old
    2345 0003dc30     4423          sub     a1,a3
    2346                    
    2347 0003dc40     4d00          move    a8,a0                   ;Get base address
    2348 0003dc50     0b00          addi    OXVAL,a0
         0003dc60     0080  
    2349 0003dc70     860e          move    *a0,a14,L               ;New OXVAL
    2350 0003dc80     404e          add     a2,a14
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   50

    2351 0003dc90     93c0          move    a14,*a0+,L
    2352 0003dca0     860e          move    *a0,a14,L               ;New OYVAL
    2353 0003dcb0     406e          add     a3,a14
    2354 0003dcc0     83c0          move    a14,*a0,L
    2355                    
    2356 0003dcd0           kltdx   PULL    a2,a3
    2357 0003dcf0     0960          rets
    2358                    
    2359 0003dd00           kltdanierr 
    2360                            .if     DEBUG
    2361                            LOCKUP
    2362                            eint
    2363                            .else
    2364 0003dd00                   CALLERR 2,2
    2365                            .endif
    2366 0003ddb0     c0f1          jruc    kltdx
    2367                    
    2368                    
    2369                    
    2370 0003ddc0            SUBRP  anipt_getxy
    2371                    
    2372 0003ddc0     4e40          move    a2,b0
    2373                    
    2374 0003ddd0     b702          move    *a8(OIMG),a2,L
         0003dde0     0170  
    2375                    
    2376 0003ddf0     b440          move    *a2(IANIOFFX),a0
         0003de00     0020  
    2377 0003de10     2600          sll     16,a0
    2378 0003de20     b441          move    *a2(IANIOFFY),a1
         0003de30     0030  
    2379 0003de40     2601          sll     16,a1
    2380                    
    2381 0003de50     b50e          move    *a8(OCTRL),a14
         0003de60     00f0  
    2382 0003de70     1f6e          btst    B_FLIPH,a14
    2383 0003de80     ca05          jrz     vzvsx                   ;No flip?
    2384                    
    2385 0003de90     8442          move    *a2,a2                  ;ISIZEX
    2386 0003dea0     1422          subk    1,a2
    2387 0003deb0     2602          sll     16,a2                   ;*64K
    2388 0003dec0     03a0          neg     a0
    2389 0003ded0     4040          add     a2,a0                   ;+size
    2390                    
    2391                    
    2392 0003dee0     4e12  vzvsx   move    b0,a2
    2393 0003def0     0960          rets
    2394                    
    2395                    
    2396                    
    2397                    
    2398 0003df00            SUBRP  obj_aniq_cnoff
    2399                    
    2400 0003df00     4e40          move    a2,b0
    2401                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   51

    2402 0003df10     b028          move    a1,*a8(OCTRL)           ;Write new ctrl
         0003df20     00f0  
    2403                    
    2404 0003df30     b70e          move    *a8(OIMG),a14,L
         0003df40     0170  
    2405 0003df50     b5c2          move    *a14(IANIOFFX),a2
         0003df60     0020  
    2406 0003df70     b5ce          move    *a14(IANIOFFY),a14
         0003df80     0030  
    2407                    
    2408 0003df90     b208          move    a0,*a8(OIMG),L
         0003dfa0     0170  
    2409 0003dfb0     ba08          move    *a0(0),*a8(OSIZE),L
         0003dfc0     0000  
         0003dfd0     0130  
    2410 0003dfe0     ba08          move    *a0(ISAG),*a8(OSAG),L
         0003dff0     0040  
         0003e000     0110  
    2411                    
    2412 0003e010     b401          move    *a0(IANIOFFY),a1
         0003e020     0030  
    2413 0003e030     b400          move    *a0(IANIOFFX),a0
         0003e040     0020  
    2414                    
    2415 0003e050     4402          sub     a0,a2                   ;Subtract new from old
    2416 0003e060     442e          sub     a1,a14
    2417 0003e070     2602          sll     16,a2
    2418 0003e080     260e          sll     16,a14
    2419                    
    2420 0003e090     4d00          move    a8,a0                   ;Get base address
    2421 0003e0a0     0b00          addi    OXVAL,a0
         0003e0b0     0080  
    2422 0003e0c0     8601          move    *a0,a1,L                ;New OXVAL
    2423 0003e0d0     4041          add     a2,a1
    2424 0003e0e0     9220          move    a1,*a0+,L
    2425 0003e0f0     8601          move    *a0,a1,L                ;New OYVAL
    2426 0003e100     41c1          add     a14,a1
    2427 0003e110     8220          move    a1,*a0,L
    2428                    
    2429 0003e120     4e12          move    b0,a2
    2430 0003e130     0960          rets
    2431                    
    2432                    
    2433                    
    2434                    
    2435                            .ref    anipt_getsclxy
    2436                    
    2437 0003e140            SUBRP  obj_aniq_scld
    2438                    
    2439                    
    2440 0003e140     0b60          cmpi    ROM,a0
         0003e150 007fffff  
    2441 0003e170     c822          jrlo    halzanierr
    2442                    
    2443 0003e180     4c02          move    a0,a2
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   52

    2444 0003e190     4c23          move    a1,a3
    2445                    
    2446 0003e1a0     0d5f          calla   anipt_getsclxy
         0003e1b0 00000000! 
    2447                    
    2448 0003e1d0     ac68          movb    a3,*a8(OCTRL)
         0003e1e0     00f0  
    2449                    
    2450 0003e1f0     b248          move    a2,*a8(OIMG),L
         0003e200     0170  
    2451 0003e210     ba48          move    *a2(0),*a8(OSIZE),L
         0003e220     0000  
         0003e230     0130  
    2452 0003e240     ba48          move    *a2(ISAG),*a8(OSAG),L
         0003e250     0040  
         0003e260     0110  
    2453                    
    2454 0003e270     4c02          move    a0,a2
    2455 0003e280     4c23          move    a1,a3
    2456 0003e290     0d5f          calla   anipt_getsclxy
         0003e2a0 00000000! 
    2457                    
    2458 0003e2c0     4402          sub     a0,a2                   ;Subtract new from old
    2459 0003e2d0     4423          sub     a1,a3
    2460                    
    2461 0003e2e0     b208          move    a0,*a8(OXANI),L         ;Save scaled anipt
         0003e2f0     01e0  
    2462                    
    2463 0003e300     4d00          move    a8,a0                   ;Get base address
    2464 0003e310     0b00          addi    OXVAL,a0
         0003e320     0080  
    2465 0003e330     860e          move    *a0,a14,L               ;New OXVAL
    2466 0003e340     404e          add     a2,a14
    2467 0003e350     93c0          move    a14,*a0+,L
    2468 0003e360     860e          move    *a0,a14,L               ;New OYVAL
    2469 0003e370     406e          add     a3,a14
    2470 0003e380     83c0          move    a14,*a0,L
    2471                    
    2472 0003e390     0960  halzx   rets
    2473                    
    2474                    
    2475 0003e3a0           halzanierr 
    2476                            .if     DEBUG
    2477                            LOCKUP
    2478                            eint
    2479                            .else
    2480 0003e3a0                   CALLERR 2,0
    2481                            .endif
    2482 0003e450     c0f3          jruc    halzx
    2483                    
    2484                    
    2485                    
    2486                    
    2487 0003e460           GETANIXY
    2488 0003e460                   PUSH    a4,a6,a7
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   53

    2489 0003e480     b701          move    *a8(OIMG),a1,L
         0003e490     0170  
    2490 0003e4a0     b702          move    *a8(OSIZE),a2,L
         0003e4b0     0130  
    2491 0003e4c0     b504          move    *a8(OCTRL),a4
         0003e4d0     00f0  
    2492 0003e4e0     0d3f          callr   GANIOF
         0003e4f0     0009  
    2493 0003e500     b703          move    *a8(OXVAL),a3,L
         0003e510     0080  
    2494 0003e520     b702          move    *a8(OYVAL),a2,L
         0003e530     00a0  
    2495 0003e540     40c3          add     a6,a3
    2496 0003e550     40e2          add     a7,a2
    2497 0003e560                   PULL    a4,a6,a7
    2498 0003e580     0960          rets
    2499                    
    2500                    
    2501                    
    2502 0003e590           GANIOF
    2503 0003e590     b626          move    *a1(IANIOFF),a6,L
         0003e5a0     0020  
    2504 0003e5b0     0b66          cmpi    IROM,a6
         0003e5c0 fdffffff  
    2505 0003e5e0     c513          jrge    ddscerr
    2506                    
    2507 0003e5f0     56e7  ddsch   clr     a7
    2508 0003e600     eec7          movy    a6,a7
    2509 0003e610     2606          sll     16,a6           ;Move to upper word
    2510                    
    2511 0003e620     1f64          btst    B_FLIPH,a4
    2512 0003e630     ca05          jrz     ddscv
    2513 0003e640     4c4e          move    a2,a14
    2514 0003e650     142e          subk    1,a14
    2515 0003e660     260e          sll     16,a14          ;Move W to upper word
    2516 0003e670     03a6          neg     a6
    2517 0003e680     41c6          add     a14,a6          ;Sub Width-1
    2518                    
    2519 0003e690     1f44  ddscv   btst    B_FLIPV,a4
    2520 0003e6a0     ca06          jrz     ddscx
    2521 0003e6b0     4c4e          move    a2,a14
    2522 0003e6c0     03a7          neg     a7
    2523 0003e6d0     2e0e          srl     16,a14
    2524 0003e6e0     142e          subk    1,a14
    2525 0003e6f0     260e          sll     16,a14
    2526 0003e700     41c7          add     a14,a7          ;Sub Hgt-1
    2527                    
    2528 0003e710     0960  ddscx   rets
    2529                    
    2530 0003e720     56c6  ddscerr clr     a6
    2531 0003e730     c0eb          jruc    ddsch
    2532                    
    2533                    
    2534                    
    2535                            .asg    SCRATCH+8*256*1024,SCRNBUF
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   54

    2536                            .asg    SCRNBUF+8*128*1024,PALBUF
    2537                    
    2538 0006d380                   .bss    scrnscl         ,16
    2539                    
    2540 0003e740            SUBR   scrn_scaleout
    2541                    
    2542 0003e740     1820          movk    1,a0
    2543 0003e750     0580          move    a0,@HALT
         0003e760 00000000! 
    2544                    
    2545 0003e780     05a0          move    @dtype,a0
         0003e790 000000f0- 
    2546 0003e7b0                   PUSHP   a0
    2547 0003e7c0     05a0          move    @gndstat,a0
         0003e7d0 0006c800- 
    2548 0003e7f0                   PUSHP   a0
    2549                    
    2550 0003e800     09c0          movi    0160H,a0
         0003e810     0160  
    2551 0003e820     0580          move    a0,@scrnscl
         0003e830 0006d380- 
    2552                    
    2553 0003e850     09e0          movi    rnmtinitcode,a0
         0003e860 0003eb50' 
    2554 0003e880     0780          move    a0,@dcode_p,L
         0003e890 00000100- 
    2555                    
    2556 0003e8b0     09c0          movi    -1,a0
         0003e8c0     ffff  
    2557 0003e8d0     0580          move    a0,@dtype
         0003e8e0 000000f0- 
    2558 0003e900     5600          clr     a0
    2559 0003e910     0580          move    a0,@gndstat
         0003e920 0006c800- 
    2560 0003e940     0580          move    a0,@IRQSKYE
         0003e950 00000000! 
    2561                    
    2562 0003e970           rnmtlp  SLEEPK  1
    2563                    
    2564 0003e9b0     09ee          movi    scrnscl,a14
         0003e9c0 0006d380- 
    2565 0003e9e0     85c5          move    *a14,a5
    2566 0003e9f0     4ca0          move    a5,a0
    2567 0003ea00     2fa0          srl     3,a0
    2568 0003ea10     4005          add     a0,a5
    2569 0003ea20     80ae          move    a5,*a14
    2570 0003ea30     0b45          cmpi    07000H,a5
         0003ea40     8fff  
    2571 0003ea50     c4f1          jrlt    rnmtlp
    2572                    
    2573 0003ea60     5600          clr     a0
    2574 0003ea70     0780          move    a0,@dcode_p,L
         0003ea80 00000100- 
    2575                    
    2576 0003eaa0                   PULLP   a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   55

    2577 0003eab0     0580          move    a0,@gndstat
         0003eac0 0006c800- 
    2578 0003eae0                   PULLP   a0
    2579 0003eaf0     0580          move    a0,@dtype
         0003eb00 000000f0- 
    2580                    
    2581                    
    2582 0003eb20                   RETP
    2583                    
    2584 0003eb50           rnmtinitcode
    2585 0003eb50     0d3f          callr   scrn_copy
         0003eb60     0072  
    2586 0003eb70     09e0          movi    scrn_scale,a0
         0003eb80 0003fd90' 
    2587 0003eba0     0780          move    a0,@dcode_p,L
         0003ebb0 00000100- 
    2588 0003ebd0     0160          jump    a0
    2589                    
    2590                    
    2591                    
    2592 0003ebe0            SUBR   scrn_scaleininit
    2593                    
    2594 0003ebe0     0360          dint
    2595 0003ebf0     05a0  nfqvlp  move    @VCOUNT,a0
         0003ec00 c00001d0  
    2596 0003ec20     0b40          cmpi    EOSINT,a0
         0003ec30     feed  
    2597 0003ec40     c4fa          jrlt    nfqvlp
    2598 0003ec50     05a0          move    @HSBLNK,a0      ;Blank screen
         0003ec60 c0000020  
    2599 0003ec80     0580          move    a0,@HEBLNK
         0003ec90 c0000010  
    2600 0003ecb0     0d60          eint
    2601 0003ecc0                   SLEEPK  2
    2602                    
    2603 0003ed00                   RETP
    2604                    
    2605                    
    2606 0003ed30            SUBR   scrn_scalein
    2607                    
    2608 0003ed30                   PUSHP   a8
    2609                    
    2610 0003ed40     05a0          move    @HALT,a0
         0003ed50 00000000! 
    2611 0003ed70                   PUSHP   a0
    2612 0003ed80     1820          movk    1,a0
    2613 0003ed90     0580          move    a0,@HALT
         0003eda0 00000000! 
    2614                    
    2615 0003edc0     05a0          move    @dtype,a0
         0003edd0 000000f0- 
    2616 0003edf0                   PUSHP   a0
    2617 0003ee00     05a0          move    @gndstat,a0
         0003ee10 0006c800- 
    2618 0003ee30                   PUSHP   a0
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   56

    2619 0003ee40     07a0          move    @dcode_p,a0,L
         0003ee50 00000100- 
    2620 0003ee70                   PUSHP   a0
    2621                    
    2622 0003ee80     09c0          movi    07000H,a0
         0003ee90     7000  
    2623 0003eea0     0580          move    a0,@scrnscl
         0003eeb0 0006d380- 
    2624                    
    2625 0003eed0     09e0          movi    ycjwinitcode,a0
         0003eee0 0003f1f0' 
    2626 0003ef00     0780          move    a0,@dcode_p,L
         0003ef10 00000100- 
    2627 0003ef30     09c0          movi    -1,a0
         0003ef40     ffff  
    2628 0003ef50     0580          move    a0,@dtype
         0003ef60 000000f0- 
    2629 0003ef80     5600          clr     a0
    2630 0003ef90     0580          move    a0,@gndstat
         0003efa0 0006c800- 
    2631                    
    2632                    
    2633                            .if     DEBUG
    2634                            .endif
    2635                    
    2636                    
    2637 0003efc0           ycjwlp  SLEEPK  1
    2638                    
    2639 0003f000     09ee          movi    scrnscl,a14
         0003f010 0006d380- 
    2640 0003f030     85c5          move    *a14,a5
    2641 0003f040     4ca0          move    a5,a0
    2642 0003f050     2fc0          srl     2,a0
    2643 0003f060     4405          sub     a0,a5
    2644 0003f070     80ae          move    a5,*a14
    2645 0003f080     0b45          cmpi    0100H,a5
         0003f090     feff  
    2646 0003f0a0     c7f1          jrgt    ycjwlp
    2647                    
    2648                    
    2649 0003f0b0                   PULLP   a0
    2650 0003f0c0     0780          move    a0,@dcode_p,L
         0003f0d0 00000100- 
    2651 0003f0f0                   PULLP   a0
    2652 0003f100     0580          move    a0,@gndstat
         0003f110 0006c800- 
    2653 0003f130                   PULLP   a0
    2654 0003f140     0580          move    a0,@dtype
         0003f150 000000f0- 
    2655                    
    2656 0003f170                   PULLP   a0
    2657 0003f180     0580          move    a0,@HALT
         0003f190 00000000! 
    2658                    
    2659                    
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   57

    2660 0003f1b0                   PULLP   a8
    2661 0003f1c0                   RETP
    2662                    
    2663                    
    2664 0003f1f0           ycjwinitcode
    2665 0003f1f0     0d3f          callr   scrn_copy
         0003f200     0008  
    2666 0003f210     09e0          movi    scrn_scaledison,a0
         0003f220 0003fce0' 
    2667 0003f240     0780          move    a0,@dcode_p,L
         0003f250 00000100- 
    2668 0003f270     c000          jruc    scrn_scale
         0003f280     00b0  
    2669                    
    2670                    
    2671                    
    2672 0003f290            SUBRP  scrn_copy
    2673                    
    2674 0003f290     4e50          move    b2,a0
    2675 0003f2a0     2e00          srl     16,a0
    2676 0003f2b0     0bc0          xori    0100H,a0                        ;Flip to the page being shown
         0003f2c0 00000100  
    2677 0003f2e0     2580          sll     12,a0                   ;*512*8
    2678 0003f2f0     0b00          addi    SCRNXP*8,a0             ;A0=*Scrn mem
         0003f300     01c0  
    2679 0003f310                   PUSH    a0
    2680                    
    2681 0003f320     09e1          movi    SCRNBUF,a1
         0003f330 01200000  
    2682 0003f350     09c3          movi    254,a3
         0003f360     00fe  
    2683 0003f370     09c7          movi    (512-400)*8,a7
         0003f380     0380  
    2684 0003f390           hoczcslp
    2685 0003f390     09c2          movi    400/16,a2
         0003f3a0     0019  
    2686 0003f3b0     9a01  hoczcslp2       move    *a0+,*a1+,L
    2687 0003f3c0     9a01          move    *a0+,*a1+,L
    2688 0003f3d0     9a01          move    *a0+,*a1+,L
    2689 0003f3e0     9a01          move    *a0+,*a1+,L
    2690 0003f3f0     3ca2          dsj     a2,hoczcslp2
    2691                    
    2692 0003f400     40e0          add     a7,a0
    2693 0003f410     40e1          add     a7,a1
    2694 0003f420     3d43          dsj     a3,hoczcslp
    2695                    
    2696 0003f430     05a0          move    @SYSCOPY,a0
         0003f440 00000000! 
    2697 0003f460     0b80          andni   100000b,a0
         0003f470 00000020  
    2698 0003f490     0580          move    a0,@SYSCOPY
         0003f4a0 00000000! 
    2699                            .if     DEBUG
    2700                            andni   1000000b,a0
    2701                            .endif
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   58

    2702 0003f4c0     0580          move    a0,@SYSCTRL
         0003f4d0 01f00000  
    2703                    
    2704 0003f4f0                   PULL    a0
    2705 0003f500     09e1          movi    PALBUF,a1
         0003f510 01300000  
    2706 0003f530     09c3          movi    254,a3
         0003f540     00fe  
    2707 0003f550           hoczcplp
    2708 0003f550     09c2          movi    400/16,a2
         0003f560     0019  
    2709 0003f570     9a01  hoczcplp2       move    *a0+,*a1+,L
    2710 0003f580     9a01          move    *a0+,*a1+,L
    2711 0003f590     9a01          move    *a0+,*a1+,L
    2712 0003f5a0     9a01          move    *a0+,*a1+,L
    2713 0003f5b0     3ca2          dsj     a2,hoczcplp2
    2714                    
    2715 0003f5c0     40e0          add     a7,a0
    2716 0003f5d0     40e1          add     a7,a1
    2717 0003f5e0     3d43          dsj     a3,hoczcplp
    2718                    
    2719 0003f5f0     05a0          move    @SYSCOPY,a0
         0003f600 00000000! 
    2720 0003f620     0ba0          ori     100000b,a0
         0003f630 00000020  
    2721 0003f650     0580          move    a0,@SYSCOPY
         0003f660 00000000! 
    2722                            .if     DEBUG
    2723                            andni   1000000b,a0
    2724                            .endif
    2725 0003f680     0580          move    a0,@SYSCTRL
         0003f690 01f00000  
    2726                    
    2727 0003f6b0     0960          rets
    2728                    
    2729                    
    2730                    
    2731 0003f6c0            SUBRP  scrn_scale140
    2732                    
    2733 0003f6c0                   PUSH    a4,a14
    2734                    
    2735 0003f6e0     09c5          movi    0140H,a5
         0003f6f0     0140  
    2736                    
    2737 0003f700     4e51          move    b2,a1
    2738 0003f710     2e01          srl     16,a1
    2739 0003f720     0b01          addi    25,a1
         0003f730     0019  
    2740 0003f740     2581          sll     12,a1                   ;*512*8
    2741 0003f750     0b01          addi    SCRNXP*8+40*8,a1        ;A1=*Scrn mem
         0003f760     0300  
    2742                    
    2743 0003f770     09e6          movi    DMACMAP,a6
         0003f780 01a80080  
    2744 0003f7a0     56e7          clr     a7                      ;Y line 8:8
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   59

    2745 0003f7b0           enazlp
    2746 0003f7b0     4ce2          move    a7,a2
    2747 0003f7c0     2f02          srl     8,a2
    2748 0003f7d0     2582          sll     12,a2                   ;*512*8
    2749 0003f7e0     4c43          move    a2,a3
    2750                    
    2751 0003f7f0     0b22          addi    SCRNBUF,a2
         0003f800 01200000  
    2752 0003f820     0b23          addi    PALBUF,a3
         0003f830 01300000  
    2753 0003f850     09d0          movi    400/2/5,b0              ;Copy 1 line
         0003f860     0028  
    2754 0003f870           enazcslp
    2755 0003f870     8866          move    *a3,*a6                 ;Set pal latch
    2756 0003f880     1203          addk    16,a3
    2757 0003f890     9841          move    *a2+,*a1+               ;Copy 2 pixels
    2758                    
    2759 0003f8a0     8866          move    *a3,*a6
    2760 0003f8b0     1203          addk    16,a3
    2761 0003f8c0     9841          move    *a2+,*a1+
    2762                    
    2763 0003f8d0     8866          move    *a3,*a6
    2764 0003f8e0     1203          addk    16,a3
    2765 0003f8f0     9841          move    *a2+,*a1+
    2766                    
    2767 0003f900     8866          move    *a3,*a6
    2768 0003f910     1203          addk    16,a3
    2769 0003f920     9841          move    *a2+,*a1+
    2770                    
    2771 0003f930     1203          addk    16,a3
    2772 0003f940     1202          addk    16,a2
    2773                    
    2774 0003f950     3df0          dsj     b0,enazcslp
    2775                    
    2776 0003f960     0b01          addi    (512-320)*8,a1
         0003f970     0600  
    2777                    
    2778 0003f980     40a7          add     a5,a7
    2779 0003f990     0b67          cmpi    254<<8,a7
         0003f9a0 ffff01ff  
    2780 0003f9c0     c4de          jrlt    enazlp
    2781                    
    2782                    
    2783 0003f9d0           enazx   PULL    a4,a14
    2784 0003f9f0     0960          rets
    2785                    
    2786                    
    2787                    
    2788                    
    2789 0003fa00            SUBRP  scrn_scale180
    2790                    
    2791 0003fa00                   PUSH    a4,a14
    2792                    
    2793 0003fa20     09c5          movi    0180H,a5
         0003fa30     0180  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   60

    2794                    
    2795 0003fa40     4e51          move    b2,a1
    2796 0003fa50     2e01          srl     16,a1
    2797 0003fa60     0b01          addi    42,a1
         0003fa70     002a  
    2798 0003fa80     2581          sll     12,a1                   ;*512*8
    2799 0003fa90     0b01          addi    SCRNXP*8+68*8,a1        ;A1=*Scrn mem
         0003faa0     03e0  
    2800                    
    2801 0003fab0     09e6          movi    DMACMAP,a6
         0003fac0 01a80080  
    2802 0003fae0     56e7          clr     a7                      ;Y line 8:8
    2803 0003faf0           alzqlp
    2804 0003faf0     4ce2          move    a7,a2
    2805 0003fb00     2f02          srl     8,a2
    2806 0003fb10     2582          sll     12,a2                   ;*512*8
    2807 0003fb20     4c43          move    a2,a3
    2808                    
    2809 0003fb30     0b22          addi    SCRNBUF,a2
         0003fb40 01200000  
    2810 0003fb60     0b23          addi    PALBUF,a3
         0003fb70 01300000  
    2811 0003fb90     09d0          movi    400/2/3,b0              ;Copy 1 line
         0003fba0     0042  
    2812 0003fbb0           alzqcslp
    2813 0003fbb0     8866          move    *a3,*a6                 ;Set pal latch
    2814 0003fbc0     1203          addk    16,a3
    2815 0003fbd0     9841          move    *a2+,*a1+               ;Copy 2 pixels
    2816                    
    2817 0003fbe0     8866          move    *a3,*a6
    2818 0003fbf0     1203          addk    16,a3
    2819 0003fc00     9841          move    *a2+,*a1+
    2820                    
    2821 0003fc10     1203          addk    16,a3
    2822 0003fc20     1202          addk    16,a2
    2823                    
    2824 0003fc30     3d30          dsj     b0,alzqcslp
    2825                    
    2826 0003fc40     0b01          addi    (512-264)*8,a1
         0003fc50     07c0  
    2827                    
    2828 0003fc60     40a7          add     a5,a7
    2829 0003fc70     0b67          cmpi    254<<8,a7
         0003fc80 ffff01ff  
    2830 0003fca0     c4e4          jrlt    alzqlp
    2831                    
    2832                    
    2833 0003fcb0           alzqx   PULL    a4,a14
    2834 0003fcd0     0960          rets
    2835                    
    2836                    
    2837                    
    2838 0003fce0            SUBRP  scrn_scaledison
    2839                    
    2840 0003fce0     09c0          movi    HEBLNKINIT,a0           ;Display on
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   61

         0003fcf0     0032  
    2841 0003fd00     0580          move    a0,@HEBLNK
         0003fd10 c0000010  
    2842 0003fd30     09e0          movi    scrn_scale,a0
         0003fd40 0003fd90' 
    2843 0003fd60     0780          move    a0,@dcode_p,L
         0003fd70 00000100- 
    2844                    
    2845                    
    2846                    
    2847 0003fd90            SUBRP  scrn_scale
    2848                    
    2849 0003fd90     05a5          move    @scrnscl,a5
         0003fda0 0006d380- 
    2850 0003fdc0     0b45          cmpi    0168H,a5
         0003fdd0     fe97  
    2851 0003fde0     c48d          jrlt    scrn_scale140
    2852 0003fdf0     0b45          cmpi    0190H,a5
         0003fe00     fe6f  
    2853 0003fe10     c4be          jrlt    scrn_scale180
    2854                    
    2855 0003fe20                   PUSH    a4,a14
    2856                    
    2857 0003fe40     4e59          move    b2,a9
    2858 0003fe50     2e09          srl     16,a9
    2859 0003fe60     09c3          movi    127<<8,a3
         0003fe70     7f00  
    2860 0003fe80     5aa3          divu    a5,a3
    2861 0003fe90     4469          sub     a3,a9
    2862 0003fea0     0b09          addi    127,a9
         0003feb0     007f  
    2863 0003fec0     2589          sll     12,a9                   ;*512*8
    2864                    
    2865 0003fed0     0b09          addi    (SCRNXP+200)*8,a9       ;A9=*Scrn mem
         0003fee0     0800  
    2866 0003fef0     09c3          movi    100<<8,a3
         0003ff00     6400  
    2867 0003ff10     5aa3          divu    a5,a3
    2868 0003ff20     2483          sll     4,a3                    ;*16
    2869 0003ff30     4469          sub     a3,a9
    2870                    
    2871 0003ff40     09e6          movi    DMACMAP,a6
         0003ff50 01a80080  
    2872 0003ff70     56e7          clr     a7                      ;Y line 8:8
    2873 0003ff80     09ea          movi    200<<8,a10
         0003ff90 0000c800  
    2874 0003ffb0           slawlp
    2875 0003ffb0     4ce2          move    a7,a2
    2876 0003ffc0     2f02          srl     8,a2
    2877 0003ffd0     2582          sll     12,a2                   ;*512*8
    2878 0003ffe0     4c43          move    a2,a3
    2879                    
    2880 0003fff0     4d21          move    a9,a1
    2881 00040000     0b22          addi    SCRNBUF,a2
         00040010 01200000  
TMS340 COFF Macro Assembler Version 6.10     Tue Dec 19 01:44:56 2023
 Copyright (c) 1985-1991  Texas Instruments Incorporated 

GSP display processor V 4.3                                          PAGE   62

    2882 00040030     0b23          addi    PALBUF,a3
         00040040 01300000  
    2883 00040060     5708          clr     a8                      ;X 8:8
    2884 00040070           slawcslp
    2885 00040070     8866          move    *a3,*a6                 ;Set pal latch
    2886 00040080     8841          move    *a2,*a1                 ;Copy 2 pixels
    2887 00040090     1201          addk    16,a1
    2888                    
    2889 000400a0     4d00          move    a8,a0
    2890 000400b0     40a8          add     a5,a8
    2891 000400c0     2b00          sra     8,a0
    2892 000400d0     4d0e          move    a8,a14
    2893 000400e0     2b0e          sra     8,a14
    2894 000400f0     440e          sub     a0,a14
    2895                    
    2896 00040100           slawnxtp
    2897 00040100     1203          addk    16,a3
    2898 00040110     1202          addk    16,a2
    2899 00040120     142e          subk    1,a14
    2900 00040130     c7fc          jrgt    slawnxtp
    2901                    
    2902 00040140     4948          cmp     a10,a8
    2903 00040150     c4f1          jrlt    slawcslp
    2904                    
    2905                    
    2906 00040160     0b09          addi    512*8,a9                ;Next line
         00040170     1000  
    2907                    
    2908 00040180     40a7          add     a5,a7
    2909 00040190     0b67          cmpi    254<<8,a7
         000401a0 ffff01ff  
    2910 000401c0     c4de          jrlt    slawlp
    2911                    
    2912                    
    2913 000401d0           slawx   PULL    a4,a14
    2914 000401f0     0960          rets
    2915                    
    2916                    
    2917                    
    2918                    
    2919                    
    2920                            .end

 No Errors,  No Warnings
